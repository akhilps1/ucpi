{
	"id": "a9d62f41a5470012217b3ed09d652eec",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.30",
	"solcLongVersion": "0.8.30+commit.73712a01",
	"input": {
		"language": "Solidity",
		"sources": {
			"contracts/PlatformFeeAndRewardSystem.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\npragma solidity ^0.8.20;\r\n\r\nimport \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\";\r\nimport \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\";\r\nimport \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\";\r\n\r\n\r\ncontract RewardManager is Initializable, OwnableUpgradeable {\r\n    uint256 public platformFee;\r\n    uint256 public maxRewardPoints;\r\n    mapping(address => uint256) public userRewardPoints;\r\n\r\n    event RewardDistributed(address indexed user, uint256 points);\r\n\r\n    function initialize(uint256 _fee, uint256 _maxPoints) public initializer {\r\n        __Ownable_init(msg.sender);\r\n        platformFee = _fee;\r\n        maxRewardPoints = _maxPoints;\r\n    }\r\n\r\n    function distributeReward(address user, uint256 amount) external onlyOwner {\r\n        require(amount > 0, \"Amount must be > 0\");\r\n        uint256 reward = calculateReward(amount);\r\n        userRewardPoints[user] += reward;\r\n        emit RewardDistributed(user, reward);\r\n    }\r\n\r\n    function calculateReward(uint256 amount) public view returns (uint256) {\r\n        uint256 reward = amount * platformFee / 10000;\r\n        return reward > maxRewardPoints ? maxRewardPoints : reward;\r\n    }\r\n}\r\n"
			},
			"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (access/Ownable.sol)\n\npragma solidity ^0.8.20;\n\nimport {ContextUpgradeable} from \"../utils/ContextUpgradeable.sol\";\nimport {Initializable} from \"../proxy/utils/Initializable.sol\";\n\n/**\n * @dev Contract module which provides a basic access control mechanism, where\n * there is an account (an owner) that can be granted exclusive access to\n * specific functions.\n *\n * The initial owner is set to the address provided by the deployer. This can\n * later be changed with {transferOwnership}.\n *\n * This module is used through inheritance. It will make available the modifier\n * `onlyOwner`, which can be applied to your functions to restrict their use to\n * the owner.\n */\nabstract contract OwnableUpgradeable is Initializable, ContextUpgradeable {\n    /// @custom:storage-location erc7201:openzeppelin.storage.Ownable\n    struct OwnableStorage {\n        address _owner;\n    }\n\n    // keccak256(abi.encode(uint256(keccak256(\"openzeppelin.storage.Ownable\")) - 1)) & ~bytes32(uint256(0xff))\n    bytes32 private constant OwnableStorageLocation = 0x9016d09d72d40fdae2fd8ceac6b6234c7706214fd39c1cd1e609a0528c199300;\n\n    function _getOwnableStorage() private pure returns (OwnableStorage storage $) {\n        assembly {\n            $.slot := OwnableStorageLocation\n        }\n    }\n\n    /**\n     * @dev The caller account is not authorized to perform an operation.\n     */\n    error OwnableUnauthorizedAccount(address account);\n\n    /**\n     * @dev The owner is not a valid owner account. (eg. `address(0)`)\n     */\n    error OwnableInvalidOwner(address owner);\n\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\n\n    /**\n     * @dev Initializes the contract setting the address provided by the deployer as the initial owner.\n     */\n    function __Ownable_init(address initialOwner) internal onlyInitializing {\n        __Ownable_init_unchained(initialOwner);\n    }\n\n    function __Ownable_init_unchained(address initialOwner) internal onlyInitializing {\n        if (initialOwner == address(0)) {\n            revert OwnableInvalidOwner(address(0));\n        }\n        _transferOwnership(initialOwner);\n    }\n\n    /**\n     * @dev Throws if called by any account other than the owner.\n     */\n    modifier onlyOwner() {\n        _checkOwner();\n        _;\n    }\n\n    /**\n     * @dev Returns the address of the current owner.\n     */\n    function owner() public view virtual returns (address) {\n        OwnableStorage storage $ = _getOwnableStorage();\n        return $._owner;\n    }\n\n    /**\n     * @dev Throws if the sender is not the owner.\n     */\n    function _checkOwner() internal view virtual {\n        if (owner() != _msgSender()) {\n            revert OwnableUnauthorizedAccount(_msgSender());\n        }\n    }\n\n    /**\n     * @dev Leaves the contract without owner. It will not be possible to call\n     * `onlyOwner` functions. Can only be called by the current owner.\n     *\n     * NOTE: Renouncing ownership will leave the contract without an owner,\n     * thereby disabling any functionality that is only available to the owner.\n     */\n    function renounceOwnership() public virtual onlyOwner {\n        _transferOwnership(address(0));\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Can only be called by the current owner.\n     */\n    function transferOwnership(address newOwner) public virtual onlyOwner {\n        if (newOwner == address(0)) {\n            revert OwnableInvalidOwner(address(0));\n        }\n        _transferOwnership(newOwner);\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Internal function without access restriction.\n     */\n    function _transferOwnership(address newOwner) internal virtual {\n        OwnableStorage storage $ = _getOwnableStorage();\n        address oldOwner = $._owner;\n        $._owner = newOwner;\n        emit OwnershipTransferred(oldOwner, newOwner);\n    }\n}\n"
			},
			"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.3.0) (proxy/utils/Initializable.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev This is a base contract to aid in writing upgradeable contracts, or any kind of contract that will be deployed\n * behind a proxy. Since proxied contracts do not make use of a constructor, it's common to move constructor logic to an\n * external initializer function, usually called `initialize`. It then becomes necessary to protect this initializer\n * function so it can only be called once. The {initializer} modifier provided by this contract will have this effect.\n *\n * The initialization functions use a version number. Once a version number is used, it is consumed and cannot be\n * reused. This mechanism prevents re-execution of each \"step\" but allows the creation of new initialization steps in\n * case an upgrade adds a module that needs to be initialized.\n *\n * For example:\n *\n * [.hljs-theme-light.nopadding]\n * ```solidity\n * contract MyToken is ERC20Upgradeable {\n *     function initialize() initializer public {\n *         __ERC20_init(\"MyToken\", \"MTK\");\n *     }\n * }\n *\n * contract MyTokenV2 is MyToken, ERC20PermitUpgradeable {\n *     function initializeV2() reinitializer(2) public {\n *         __ERC20Permit_init(\"MyToken\");\n *     }\n * }\n * ```\n *\n * TIP: To avoid leaving the proxy in an uninitialized state, the initializer function should be called as early as\n * possible by providing the encoded function call as the `_data` argument to {ERC1967Proxy-constructor}.\n *\n * CAUTION: When used with inheritance, manual care must be taken to not invoke a parent initializer twice, or to ensure\n * that all initializers are idempotent. This is not verified automatically as constructors are by Solidity.\n *\n * [CAUTION]\n * ====\n * Avoid leaving a contract uninitialized.\n *\n * An uninitialized contract can be taken over by an attacker. This applies to both a proxy and its implementation\n * contract, which may impact the proxy. To prevent the implementation contract from being used, you should invoke\n * the {_disableInitializers} function in the constructor to automatically lock it when it is deployed:\n *\n * [.hljs-theme-light.nopadding]\n * ```\n * /// @custom:oz-upgrades-unsafe-allow constructor\n * constructor() {\n *     _disableInitializers();\n * }\n * ```\n * ====\n */\nabstract contract Initializable {\n    /**\n     * @dev Storage of the initializable contract.\n     *\n     * It's implemented on a custom ERC-7201 namespace to reduce the risk of storage collisions\n     * when using with upgradeable contracts.\n     *\n     * @custom:storage-location erc7201:openzeppelin.storage.Initializable\n     */\n    struct InitializableStorage {\n        /**\n         * @dev Indicates that the contract has been initialized.\n         */\n        uint64 _initialized;\n        /**\n         * @dev Indicates that the contract is in the process of being initialized.\n         */\n        bool _initializing;\n    }\n\n    // keccak256(abi.encode(uint256(keccak256(\"openzeppelin.storage.Initializable\")) - 1)) & ~bytes32(uint256(0xff))\n    bytes32 private constant INITIALIZABLE_STORAGE = 0xf0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a00;\n\n    /**\n     * @dev The contract is already initialized.\n     */\n    error InvalidInitialization();\n\n    /**\n     * @dev The contract is not initializing.\n     */\n    error NotInitializing();\n\n    /**\n     * @dev Triggered when the contract has been initialized or reinitialized.\n     */\n    event Initialized(uint64 version);\n\n    /**\n     * @dev A modifier that defines a protected initializer function that can be invoked at most once. In its scope,\n     * `onlyInitializing` functions can be used to initialize parent contracts.\n     *\n     * Similar to `reinitializer(1)`, except that in the context of a constructor an `initializer` may be invoked any\n     * number of times. This behavior in the constructor can be useful during testing and is not expected to be used in\n     * production.\n     *\n     * Emits an {Initialized} event.\n     */\n    modifier initializer() {\n        // solhint-disable-next-line var-name-mixedcase\n        InitializableStorage storage $ = _getInitializableStorage();\n\n        // Cache values to avoid duplicated sloads\n        bool isTopLevelCall = !$._initializing;\n        uint64 initialized = $._initialized;\n\n        // Allowed calls:\n        // - initialSetup: the contract is not in the initializing state and no previous version was\n        //                 initialized\n        // - construction: the contract is initialized at version 1 (no reinitialization) and the\n        //                 current contract is just being deployed\n        bool initialSetup = initialized == 0 && isTopLevelCall;\n        bool construction = initialized == 1 && address(this).code.length == 0;\n\n        if (!initialSetup && !construction) {\n            revert InvalidInitialization();\n        }\n        $._initialized = 1;\n        if (isTopLevelCall) {\n            $._initializing = true;\n        }\n        _;\n        if (isTopLevelCall) {\n            $._initializing = false;\n            emit Initialized(1);\n        }\n    }\n\n    /**\n     * @dev A modifier that defines a protected reinitializer function that can be invoked at most once, and only if the\n     * contract hasn't been initialized to a greater version before. In its scope, `onlyInitializing` functions can be\n     * used to initialize parent contracts.\n     *\n     * A reinitializer may be used after the original initialization step. This is essential to configure modules that\n     * are added through upgrades and that require initialization.\n     *\n     * When `version` is 1, this modifier is similar to `initializer`, except that functions marked with `reinitializer`\n     * cannot be nested. If one is invoked in the context of another, execution will revert.\n     *\n     * Note that versions can jump in increments greater than 1; this implies that if multiple reinitializers coexist in\n     * a contract, executing them in the right order is up to the developer or operator.\n     *\n     * WARNING: Setting the version to 2**64 - 1 will prevent any future reinitialization.\n     *\n     * Emits an {Initialized} event.\n     */\n    modifier reinitializer(uint64 version) {\n        // solhint-disable-next-line var-name-mixedcase\n        InitializableStorage storage $ = _getInitializableStorage();\n\n        if ($._initializing || $._initialized >= version) {\n            revert InvalidInitialization();\n        }\n        $._initialized = version;\n        $._initializing = true;\n        _;\n        $._initializing = false;\n        emit Initialized(version);\n    }\n\n    /**\n     * @dev Modifier to protect an initialization function so that it can only be invoked by functions with the\n     * {initializer} and {reinitializer} modifiers, directly or indirectly.\n     */\n    modifier onlyInitializing() {\n        _checkInitializing();\n        _;\n    }\n\n    /**\n     * @dev Reverts if the contract is not in an initializing state. See {onlyInitializing}.\n     */\n    function _checkInitializing() internal view virtual {\n        if (!_isInitializing()) {\n            revert NotInitializing();\n        }\n    }\n\n    /**\n     * @dev Locks the contract, preventing any future reinitialization. This cannot be part of an initializer call.\n     * Calling this in the constructor of a contract will prevent that contract from being initialized or reinitialized\n     * to any version. It is recommended to use this to lock implementation contracts that are designed to be called\n     * through proxies.\n     *\n     * Emits an {Initialized} event the first time it is successfully executed.\n     */\n    function _disableInitializers() internal virtual {\n        // solhint-disable-next-line var-name-mixedcase\n        InitializableStorage storage $ = _getInitializableStorage();\n\n        if ($._initializing) {\n            revert InvalidInitialization();\n        }\n        if ($._initialized != type(uint64).max) {\n            $._initialized = type(uint64).max;\n            emit Initialized(type(uint64).max);\n        }\n    }\n\n    /**\n     * @dev Returns the highest version that has been initialized. See {reinitializer}.\n     */\n    function _getInitializedVersion() internal view returns (uint64) {\n        return _getInitializableStorage()._initialized;\n    }\n\n    /**\n     * @dev Returns `true` if the contract is currently initializing. See {onlyInitializing}.\n     */\n    function _isInitializing() internal view returns (bool) {\n        return _getInitializableStorage()._initializing;\n    }\n\n    /**\n     * @dev Pointer to storage slot. Allows integrators to override it with a custom storage location.\n     *\n     * NOTE: Consider following the ERC-7201 formula to derive storage locations.\n     */\n    function _initializableStorageSlot() internal pure virtual returns (bytes32) {\n        return INITIALIZABLE_STORAGE;\n    }\n\n    /**\n     * @dev Returns a pointer to the storage namespace.\n     */\n    // solhint-disable-next-line var-name-mixedcase\n    function _getInitializableStorage() private pure returns (InitializableStorage storage $) {\n        bytes32 slot = _initializableStorageSlot();\n        assembly {\n            $.slot := slot\n        }\n    }\n}\n"
			},
			"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.3.0) (proxy/utils/UUPSUpgradeable.sol)\n\npragma solidity ^0.8.22;\n\nimport {IERC1822Proxiable} from \"@openzeppelin/contracts/interfaces/draft-IERC1822.sol\";\nimport {ERC1967Utils} from \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\";\nimport {Initializable} from \"./Initializable.sol\";\n\n/**\n * @dev An upgradeability mechanism designed for UUPS proxies. The functions included here can perform an upgrade of an\n * {ERC1967Proxy}, when this contract is set as the implementation behind such a proxy.\n *\n * A security mechanism ensures that an upgrade does not turn off upgradeability accidentally, although this risk is\n * reinstated if the upgrade retains upgradeability but removes the security mechanism, e.g. by replacing\n * `UUPSUpgradeable` with a custom implementation of upgrades.\n *\n * The {_authorizeUpgrade} function must be overridden to include access restriction to the upgrade mechanism.\n */\nabstract contract UUPSUpgradeable is Initializable, IERC1822Proxiable {\n    /// @custom:oz-upgrades-unsafe-allow state-variable-immutable\n    address private immutable __self = address(this);\n\n    /**\n     * @dev The version of the upgrade interface of the contract. If this getter is missing, both `upgradeTo(address)`\n     * and `upgradeToAndCall(address,bytes)` are present, and `upgradeTo` must be used if no function should be called,\n     * while `upgradeToAndCall` will invoke the `receive` function if the second argument is the empty byte string.\n     * If the getter returns `\"5.0.0\"`, only `upgradeToAndCall(address,bytes)` is present, and the second argument must\n     * be the empty byte string if no function should be called, making it impossible to invoke the `receive` function\n     * during an upgrade.\n     */\n    string public constant UPGRADE_INTERFACE_VERSION = \"5.0.0\";\n\n    /**\n     * @dev The call is from an unauthorized context.\n     */\n    error UUPSUnauthorizedCallContext();\n\n    /**\n     * @dev The storage `slot` is unsupported as a UUID.\n     */\n    error UUPSUnsupportedProxiableUUID(bytes32 slot);\n\n    /**\n     * @dev Check that the execution is being performed through a delegatecall call and that the execution context is\n     * a proxy contract with an implementation (as defined in ERC-1967) pointing to self. This should only be the case\n     * for UUPS and transparent proxies that are using the current contract as their implementation. Execution of a\n     * function through ERC-1167 minimal proxies (clones) would not normally pass this test, but is not guaranteed to\n     * fail.\n     */\n    modifier onlyProxy() {\n        _checkProxy();\n        _;\n    }\n\n    /**\n     * @dev Check that the execution is not being performed through a delegate call. This allows a function to be\n     * callable on the implementing contract but not through proxies.\n     */\n    modifier notDelegated() {\n        _checkNotDelegated();\n        _;\n    }\n\n    function __UUPSUpgradeable_init() internal onlyInitializing {\n    }\n\n    function __UUPSUpgradeable_init_unchained() internal onlyInitializing {\n    }\n    /**\n     * @dev Implementation of the ERC-1822 {proxiableUUID} function. This returns the storage slot used by the\n     * implementation. It is used to validate the implementation's compatibility when performing an upgrade.\n     *\n     * IMPORTANT: A proxy pointing at a proxiable contract should not be considered proxiable itself, because this risks\n     * bricking a proxy that upgrades to it, by delegating to itself until out of gas. Thus it is critical that this\n     * function revert if invoked through a proxy. This is guaranteed by the `notDelegated` modifier.\n     */\n    function proxiableUUID() external view virtual notDelegated returns (bytes32) {\n        return ERC1967Utils.IMPLEMENTATION_SLOT;\n    }\n\n    /**\n     * @dev Upgrade the implementation of the proxy to `newImplementation`, and subsequently execute the function call\n     * encoded in `data`.\n     *\n     * Calls {_authorizeUpgrade}.\n     *\n     * Emits an {Upgraded} event.\n     *\n     * @custom:oz-upgrades-unsafe-allow-reachable delegatecall\n     */\n    function upgradeToAndCall(address newImplementation, bytes memory data) public payable virtual onlyProxy {\n        _authorizeUpgrade(newImplementation);\n        _upgradeToAndCallUUPS(newImplementation, data);\n    }\n\n    /**\n     * @dev Reverts if the execution is not performed via delegatecall or the execution\n     * context is not of a proxy with an ERC-1967 compliant implementation pointing to self.\n     */\n    function _checkProxy() internal view virtual {\n        if (\n            address(this) == __self || // Must be called through delegatecall\n            ERC1967Utils.getImplementation() != __self // Must be called through an active proxy\n        ) {\n            revert UUPSUnauthorizedCallContext();\n        }\n    }\n\n    /**\n     * @dev Reverts if the execution is performed via delegatecall.\n     * See {notDelegated}.\n     */\n    function _checkNotDelegated() internal view virtual {\n        if (address(this) != __self) {\n            // Must not be called through delegatecall\n            revert UUPSUnauthorizedCallContext();\n        }\n    }\n\n    /**\n     * @dev Function that should revert when `msg.sender` is not authorized to upgrade the contract. Called by\n     * {upgradeToAndCall}.\n     *\n     * Normally, this function will use an xref:access.adoc[access control] modifier such as {Ownable-onlyOwner}.\n     *\n     * ```solidity\n     * function _authorizeUpgrade(address) internal onlyOwner {}\n     * ```\n     */\n    function _authorizeUpgrade(address newImplementation) internal virtual;\n\n    /**\n     * @dev Performs an implementation upgrade with a security check for UUPS proxies, and additional setup call.\n     *\n     * As a security check, {proxiableUUID} is invoked in the new implementation, and the return value\n     * is expected to be the implementation slot in ERC-1967.\n     *\n     * Emits an {IERC1967-Upgraded} event.\n     */\n    function _upgradeToAndCallUUPS(address newImplementation, bytes memory data) private {\n        try IERC1822Proxiable(newImplementation).proxiableUUID() returns (bytes32 slot) {\n            if (slot != ERC1967Utils.IMPLEMENTATION_SLOT) {\n                revert UUPSUnsupportedProxiableUUID(slot);\n            }\n            ERC1967Utils.upgradeToAndCall(newImplementation, data);\n        } catch {\n            // The implementation is not UUPS\n            revert ERC1967Utils.ERC1967InvalidImplementation(newImplementation);\n        }\n    }\n}\n"
			},
			"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.2.0) (proxy/ERC1967/ERC1967Utils.sol)\n\npragma solidity ^0.8.22;\n\nimport {IBeacon} from \"../beacon/IBeacon.sol\";\nimport {IERC1967} from \"../../interfaces/IERC1967.sol\";\nimport {Address} from \"../../utils/Address.sol\";\nimport {StorageSlot} from \"../../utils/StorageSlot.sol\";\n\n/**\n * @dev This library provides getters and event emitting update functions for\n * https://eips.ethereum.org/EIPS/eip-1967[ERC-1967] slots.\n */\nlibrary ERC1967Utils {\n    /**\n     * @dev Storage slot with the address of the current implementation.\n     * This is the keccak-256 hash of \"eip1967.proxy.implementation\" subtracted by 1.\n     */\n    // solhint-disable-next-line private-vars-leading-underscore\n    bytes32 internal constant IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc;\n\n    /**\n     * @dev The `implementation` of the proxy is invalid.\n     */\n    error ERC1967InvalidImplementation(address implementation);\n\n    /**\n     * @dev The `admin` of the proxy is invalid.\n     */\n    error ERC1967InvalidAdmin(address admin);\n\n    /**\n     * @dev The `beacon` of the proxy is invalid.\n     */\n    error ERC1967InvalidBeacon(address beacon);\n\n    /**\n     * @dev An upgrade function sees `msg.value > 0` that may be lost.\n     */\n    error ERC1967NonPayable();\n\n    /**\n     * @dev Returns the current implementation address.\n     */\n    function getImplementation() internal view returns (address) {\n        return StorageSlot.getAddressSlot(IMPLEMENTATION_SLOT).value;\n    }\n\n    /**\n     * @dev Stores a new address in the ERC-1967 implementation slot.\n     */\n    function _setImplementation(address newImplementation) private {\n        if (newImplementation.code.length == 0) {\n            revert ERC1967InvalidImplementation(newImplementation);\n        }\n        StorageSlot.getAddressSlot(IMPLEMENTATION_SLOT).value = newImplementation;\n    }\n\n    /**\n     * @dev Performs implementation upgrade with additional setup call if data is nonempty.\n     * This function is payable only if the setup call is performed, otherwise `msg.value` is rejected\n     * to avoid stuck value in the contract.\n     *\n     * Emits an {IERC1967-Upgraded} event.\n     */\n    function upgradeToAndCall(address newImplementation, bytes memory data) internal {\n        _setImplementation(newImplementation);\n        emit IERC1967.Upgraded(newImplementation);\n\n        if (data.length > 0) {\n            Address.functionDelegateCall(newImplementation, data);\n        } else {\n            _checkNonPayable();\n        }\n    }\n\n    /**\n     * @dev Storage slot with the admin of the contract.\n     * This is the keccak-256 hash of \"eip1967.proxy.admin\" subtracted by 1.\n     */\n    // solhint-disable-next-line private-vars-leading-underscore\n    bytes32 internal constant ADMIN_SLOT = 0xb53127684a568b3173ae13b9f8a6016e243e63b6e8ee1178d6a717850b5d6103;\n\n    /**\n     * @dev Returns the current admin.\n     *\n     * TIP: To get this value clients can read directly from the storage slot shown below (specified by ERC-1967) using\n     * the https://eth.wiki/json-rpc/API#eth_getstorageat[`eth_getStorageAt`] RPC call.\n     * `0xb53127684a568b3173ae13b9f8a6016e243e63b6e8ee1178d6a717850b5d6103`\n     */\n    function getAdmin() internal view returns (address) {\n        return StorageSlot.getAddressSlot(ADMIN_SLOT).value;\n    }\n\n    /**\n     * @dev Stores a new address in the ERC-1967 admin slot.\n     */\n    function _setAdmin(address newAdmin) private {\n        if (newAdmin == address(0)) {\n            revert ERC1967InvalidAdmin(address(0));\n        }\n        StorageSlot.getAddressSlot(ADMIN_SLOT).value = newAdmin;\n    }\n\n    /**\n     * @dev Changes the admin of the proxy.\n     *\n     * Emits an {IERC1967-AdminChanged} event.\n     */\n    function changeAdmin(address newAdmin) internal {\n        emit IERC1967.AdminChanged(getAdmin(), newAdmin);\n        _setAdmin(newAdmin);\n    }\n\n    /**\n     * @dev The storage slot of the UpgradeableBeacon contract which defines the implementation for this proxy.\n     * This is the keccak-256 hash of \"eip1967.proxy.beacon\" subtracted by 1.\n     */\n    // solhint-disable-next-line private-vars-leading-underscore\n    bytes32 internal constant BEACON_SLOT = 0xa3f0ad74e5423aebfd80d3ef4346578335a9a72aeaee59ff6cb3582b35133d50;\n\n    /**\n     * @dev Returns the current beacon.\n     */\n    function getBeacon() internal view returns (address) {\n        return StorageSlot.getAddressSlot(BEACON_SLOT).value;\n    }\n\n    /**\n     * @dev Stores a new beacon in the ERC-1967 beacon slot.\n     */\n    function _setBeacon(address newBeacon) private {\n        if (newBeacon.code.length == 0) {\n            revert ERC1967InvalidBeacon(newBeacon);\n        }\n\n        StorageSlot.getAddressSlot(BEACON_SLOT).value = newBeacon;\n\n        address beaconImplementation = IBeacon(newBeacon).implementation();\n        if (beaconImplementation.code.length == 0) {\n            revert ERC1967InvalidImplementation(beaconImplementation);\n        }\n    }\n\n    /**\n     * @dev Change the beacon and trigger a setup call if data is nonempty.\n     * This function is payable only if the setup call is performed, otherwise `msg.value` is rejected\n     * to avoid stuck value in the contract.\n     *\n     * Emits an {IERC1967-BeaconUpgraded} event.\n     *\n     * CAUTION: Invoking this function has no effect on an instance of {BeaconProxy} since v5, since\n     * it uses an immutable beacon without looking at the value of the ERC-1967 beacon slot for\n     * efficiency.\n     */\n    function upgradeBeaconToAndCall(address newBeacon, bytes memory data) internal {\n        _setBeacon(newBeacon);\n        emit IERC1967.BeaconUpgraded(newBeacon);\n\n        if (data.length > 0) {\n            Address.functionDelegateCall(IBeacon(newBeacon).implementation(), data);\n        } else {\n            _checkNonPayable();\n        }\n    }\n\n    /**\n     * @dev Reverts if `msg.value` is not zero. It can be used to avoid `msg.value` stuck in the contract\n     * if an upgrade doesn't perform an initialization call.\n     */\n    function _checkNonPayable() private {\n        if (msg.value > 0) {\n            revert ERC1967NonPayable();\n        }\n    }\n}\n"
			},
			"@openzeppelin/contracts/interfaces/draft-IERC1822.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (interfaces/draft-IERC1822.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev ERC-1822: Universal Upgradeable Proxy Standard (UUPS) documents a method for upgradeability through a simplified\n * proxy whose upgrades are fully controlled by the current implementation.\n */\ninterface IERC1822Proxiable {\n    /**\n     * @dev Returns the storage slot that the proxiable contract assumes is being used to store the implementation\n     * address.\n     *\n     * IMPORTANT: A proxy pointing at a proxiable contract should not be considered proxiable itself, because this risks\n     * bricking a proxy that upgrades to it, by delegating to itself until out of gas. Thus it is critical that this\n     * function revert if invoked through a proxy.\n     */\n    function proxiableUUID() external view returns (bytes32);\n}\n"
			},
			"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.1) (utils/Context.sol)\n\npragma solidity ^0.8.20;\nimport {Initializable} from \"../proxy/utils/Initializable.sol\";\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract ContextUpgradeable is Initializable {\n    function __Context_init() internal onlyInitializing {\n    }\n\n    function __Context_init_unchained() internal onlyInitializing {\n    }\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n\n    function _contextSuffixLength() internal view virtual returns (uint256) {\n        return 0;\n    }\n}\n"
			},
			"@openzeppelin/contracts/utils/StorageSlot.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (utils/StorageSlot.sol)\n// This file was procedurally generated from scripts/generate/templates/StorageSlot.js.\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Library for reading and writing primitive types to specific storage slots.\n *\n * Storage slots are often used to avoid storage conflict when dealing with upgradeable contracts.\n * This library helps with reading and writing to such slots without the need for inline assembly.\n *\n * The functions in this library return Slot structs that contain a `value` member that can be used to read or write.\n *\n * Example usage to set ERC-1967 implementation slot:\n * ```solidity\n * contract ERC1967 {\n *     // Define the slot. Alternatively, use the SlotDerivation library to derive the slot.\n *     bytes32 internal constant _IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc;\n *\n *     function _getImplementation() internal view returns (address) {\n *         return StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value;\n *     }\n *\n *     function _setImplementation(address newImplementation) internal {\n *         require(newImplementation.code.length > 0);\n *         StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value = newImplementation;\n *     }\n * }\n * ```\n *\n * TIP: Consider using this library along with {SlotDerivation}.\n */\nlibrary StorageSlot {\n    struct AddressSlot {\n        address value;\n    }\n\n    struct BooleanSlot {\n        bool value;\n    }\n\n    struct Bytes32Slot {\n        bytes32 value;\n    }\n\n    struct Uint256Slot {\n        uint256 value;\n    }\n\n    struct Int256Slot {\n        int256 value;\n    }\n\n    struct StringSlot {\n        string value;\n    }\n\n    struct BytesSlot {\n        bytes value;\n    }\n\n    /**\n     * @dev Returns an `AddressSlot` with member `value` located at `slot`.\n     */\n    function getAddressSlot(bytes32 slot) internal pure returns (AddressSlot storage r) {\n        assembly (\"memory-safe\") {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns a `BooleanSlot` with member `value` located at `slot`.\n     */\n    function getBooleanSlot(bytes32 slot) internal pure returns (BooleanSlot storage r) {\n        assembly (\"memory-safe\") {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns a `Bytes32Slot` with member `value` located at `slot`.\n     */\n    function getBytes32Slot(bytes32 slot) internal pure returns (Bytes32Slot storage r) {\n        assembly (\"memory-safe\") {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns a `Uint256Slot` with member `value` located at `slot`.\n     */\n    function getUint256Slot(bytes32 slot) internal pure returns (Uint256Slot storage r) {\n        assembly (\"memory-safe\") {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns a `Int256Slot` with member `value` located at `slot`.\n     */\n    function getInt256Slot(bytes32 slot) internal pure returns (Int256Slot storage r) {\n        assembly (\"memory-safe\") {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns a `StringSlot` with member `value` located at `slot`.\n     */\n    function getStringSlot(bytes32 slot) internal pure returns (StringSlot storage r) {\n        assembly (\"memory-safe\") {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns an `StringSlot` representation of the string storage pointer `store`.\n     */\n    function getStringSlot(string storage store) internal pure returns (StringSlot storage r) {\n        assembly (\"memory-safe\") {\n            r.slot := store.slot\n        }\n    }\n\n    /**\n     * @dev Returns a `BytesSlot` with member `value` located at `slot`.\n     */\n    function getBytesSlot(bytes32 slot) internal pure returns (BytesSlot storage r) {\n        assembly (\"memory-safe\") {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns an `BytesSlot` representation of the bytes storage pointer `store`.\n     */\n    function getBytesSlot(bytes storage store) internal pure returns (BytesSlot storage r) {\n        assembly (\"memory-safe\") {\n            r.slot := store.slot\n        }\n    }\n}\n"
			},
			"@openzeppelin/contracts/utils/Address.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.2.0) (utils/Address.sol)\n\npragma solidity ^0.8.20;\n\nimport {Errors} from \"./Errors.sol\";\n\n/**\n * @dev Collection of functions related to the address type\n */\nlibrary Address {\n    /**\n     * @dev There's no code at `target` (it is not a contract).\n     */\n    error AddressEmptyCode(address target);\n\n    /**\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\n     * `recipient`, forwarding all available gas and reverting on errors.\n     *\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\n     * imposed by `transfer`, making them unable to receive funds via\n     * `transfer`. {sendValue} removes this limitation.\n     *\n     * https://consensys.net/diligence/blog/2019/09/stop-using-soliditys-transfer-now/[Learn more].\n     *\n     * IMPORTANT: because control is transferred to `recipient`, care must be\n     * taken to not create reentrancy vulnerabilities. Consider using\n     * {ReentrancyGuard} or the\n     * https://solidity.readthedocs.io/en/v0.8.20/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\n     */\n    function sendValue(address payable recipient, uint256 amount) internal {\n        if (address(this).balance < amount) {\n            revert Errors.InsufficientBalance(address(this).balance, amount);\n        }\n\n        (bool success, bytes memory returndata) = recipient.call{value: amount}(\"\");\n        if (!success) {\n            _revert(returndata);\n        }\n    }\n\n    /**\n     * @dev Performs a Solidity function call using a low level `call`. A\n     * plain `call` is an unsafe replacement for a function call: use this\n     * function instead.\n     *\n     * If `target` reverts with a revert reason or custom error, it is bubbled\n     * up by this function (like regular Solidity function calls). However, if\n     * the call reverted with no returned reason, this function reverts with a\n     * {Errors.FailedCall} error.\n     *\n     * Returns the raw returned data. To convert to the expected return value,\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\n     *\n     * Requirements:\n     *\n     * - `target` must be a contract.\n     * - calling `target` with `data` must not revert.\n     */\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\n        return functionCallWithValue(target, data, 0);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but also transferring `value` wei to `target`.\n     *\n     * Requirements:\n     *\n     * - the calling contract must have an ETH balance of at least `value`.\n     * - the called Solidity function must be `payable`.\n     */\n    function functionCallWithValue(address target, bytes memory data, uint256 value) internal returns (bytes memory) {\n        if (address(this).balance < value) {\n            revert Errors.InsufficientBalance(address(this).balance, value);\n        }\n        (bool success, bytes memory returndata) = target.call{value: value}(data);\n        return verifyCallResultFromTarget(target, success, returndata);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but performing a static call.\n     */\n    function functionStaticCall(address target, bytes memory data) internal view returns (bytes memory) {\n        (bool success, bytes memory returndata) = target.staticcall(data);\n        return verifyCallResultFromTarget(target, success, returndata);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but performing a delegate call.\n     */\n    function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {\n        (bool success, bytes memory returndata) = target.delegatecall(data);\n        return verifyCallResultFromTarget(target, success, returndata);\n    }\n\n    /**\n     * @dev Tool to verify that a low level call to smart-contract was successful, and reverts if the target\n     * was not a contract or bubbling up the revert reason (falling back to {Errors.FailedCall}) in case\n     * of an unsuccessful call.\n     */\n    function verifyCallResultFromTarget(\n        address target,\n        bool success,\n        bytes memory returndata\n    ) internal view returns (bytes memory) {\n        if (!success) {\n            _revert(returndata);\n        } else {\n            // only check if target is a contract if the call was successful and the return data is empty\n            // otherwise we already know that it was a contract\n            if (returndata.length == 0 && target.code.length == 0) {\n                revert AddressEmptyCode(target);\n            }\n            return returndata;\n        }\n    }\n\n    /**\n     * @dev Tool to verify that a low level call was successful, and reverts if it wasn't, either by bubbling the\n     * revert reason or with a default {Errors.FailedCall} error.\n     */\n    function verifyCallResult(bool success, bytes memory returndata) internal pure returns (bytes memory) {\n        if (!success) {\n            _revert(returndata);\n        } else {\n            return returndata;\n        }\n    }\n\n    /**\n     * @dev Reverts with returndata if present. Otherwise reverts with {Errors.FailedCall}.\n     */\n    function _revert(bytes memory returndata) private pure {\n        // Look for revert reason and bubble it up if present\n        if (returndata.length > 0) {\n            // The easiest way to bubble the revert reason is using memory via assembly\n            assembly (\"memory-safe\") {\n                let returndata_size := mload(returndata)\n                revert(add(32, returndata), returndata_size)\n            }\n        } else {\n            revert Errors.FailedCall();\n        }\n    }\n}\n"
			},
			"@openzeppelin/contracts/interfaces/IERC1967.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (interfaces/IERC1967.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev ERC-1967: Proxy Storage Slots. This interface contains the events defined in the ERC.\n */\ninterface IERC1967 {\n    /**\n     * @dev Emitted when the implementation is upgraded.\n     */\n    event Upgraded(address indexed implementation);\n\n    /**\n     * @dev Emitted when the admin account has changed.\n     */\n    event AdminChanged(address previousAdmin, address newAdmin);\n\n    /**\n     * @dev Emitted when the beacon is changed.\n     */\n    event BeaconUpgraded(address indexed beacon);\n}\n"
			},
			"@openzeppelin/contracts/proxy/beacon/IBeacon.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (proxy/beacon/IBeacon.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev This is the interface that {BeaconProxy} expects of its beacon.\n */\ninterface IBeacon {\n    /**\n     * @dev Must return an address that can be used as a delegate call target.\n     *\n     * {UpgradeableBeacon} will check that this address is a contract.\n     */\n    function implementation() external view returns (address);\n}\n"
			},
			"@openzeppelin/contracts/utils/Errors.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (utils/Errors.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Collection of common custom errors used in multiple contracts\n *\n * IMPORTANT: Backwards compatibility is not guaranteed in future versions of the library.\n * It is recommended to avoid relying on the error API for critical functionality.\n *\n * _Available since v5.1._\n */\nlibrary Errors {\n    /**\n     * @dev The ETH balance of the account is not enough to perform the operation.\n     */\n    error InsufficientBalance(uint256 balance, uint256 needed);\n\n    /**\n     * @dev A call to an address target failed. The target may have reverted.\n     */\n    error FailedCall();\n\n    /**\n     * @dev The deployment failed.\n     */\n    error FailedDeployment();\n\n    /**\n     * @dev A necessary precompile is missing.\n     */\n    error MissingPrecompile(address);\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			},
			"remappings": []
		}
	},
	"output": {
		"contracts": {
			"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol": {
				"OwnableUpgradeable": {
					"abi": [
						{
							"inputs": [],
							"name": "InvalidInitialization",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "NotInitializing",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "OwnableInvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "OwnableUnauthorizedAccount",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint64",
									"name": "version",
									"type": "uint64"
								}
							],
							"name": "Initialized",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. The initial owner is set to the address provided by the deployer. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.",
						"errors": {
							"InvalidInitialization()": [
								{
									"details": "The contract is already initialized."
								}
							],
							"NotInitializing()": [
								{
									"details": "The contract is not initializing."
								}
							],
							"OwnableInvalidOwner(address)": [
								{
									"details": "The owner is not a valid owner account. (eg. `address(0)`)"
								}
							],
							"OwnableUnauthorizedAccount(address)": [
								{
									"details": "The caller account is not authorized to perform an operation."
								}
							]
						},
						"events": {
							"Initialized(uint64)": {
								"details": "Triggered when the contract has been initialized or reinitialized."
							}
						},
						"kind": "dev",
						"methods": {
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"owner()": "8da5cb5b",
							"renounceOwnership()": "715018a6",
							"transferOwnership(address)": "f2fde38b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.30+commit.73712a01\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"InvalidInitialization\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NotInitializing\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint64\",\"name\":\"version\",\"type\":\"uint64\"}],\"name\":\"Initialized\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. The initial owner is set to the address provided by the deployer. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.\",\"errors\":{\"InvalidInitialization()\":[{\"details\":\"The contract is already initialized.\"}],\"NotInitializing()\":[{\"details\":\"The contract is not initializing.\"}],\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}]},\"events\":{\"Initialized(uint64)\":{\"details\":\"Triggered when the contract has been initialized or reinitialized.\"}},\"kind\":\"dev\",\"methods\":{\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":\"OwnableUpgradeable\"},\"evmVersion\":\"prague\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":{\"keccak256\":\"0xc163fcf9bb10138631a9ba5564df1fa25db9adff73bd9ee868a8ae1858fe093a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9706d43a0124053d9880f6e31a59f31bc0a6a3dc1acd66ce0a16e1111658c5f6\",\"dweb:/ipfs/QmUFmfowzkRwGtDu36cXV9SPTBHJ3n7dG9xQiK5B28jTf2\"]},\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":{\"keccak256\":\"0xdb4d24ee2c087c391d587cd17adfe5b3f9d93b3110b1388c2ab6c7c0ad1dcd05\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ab7b6d5b9e2b88176312967fe0f0e78f3d9a1422fa5e4b64e2440c35869b5d08\",\"dweb:/ipfs/QmXKYWWyzcLg1B2k7Sb1qkEXgLCYfXecR9wYW5obRzWP1Q\"]},\"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":{\"keccak256\":\"0xdbef5f0c787055227243a7318ef74c8a5a1108ca3a07f2b3a00ef67769e1e397\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://08e39f23d5b4692f9a40803e53a8156b72b4c1f9902a88cd65ba964db103dab9\",\"dweb:/ipfs/QmPKn6EYDgpga7KtpkA8wV2yJCYGMtc9K4LkJfhKX2RVSV\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol": {
				"Initializable": {
					"abi": [
						{
							"inputs": [],
							"name": "InvalidInitialization",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "NotInitializing",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint64",
									"name": "version",
									"type": "uint64"
								}
							],
							"name": "Initialized",
							"type": "event"
						}
					],
					"devdoc": {
						"custom:oz-upgrades-unsafe-allow": "constructor constructor() {     _disableInitializers(); } ``` ====",
						"details": "This is a base contract to aid in writing upgradeable contracts, or any kind of contract that will be deployed behind a proxy. Since proxied contracts do not make use of a constructor, it's common to move constructor logic to an external initializer function, usually called `initialize`. It then becomes necessary to protect this initializer function so it can only be called once. The {initializer} modifier provided by this contract will have this effect. The initialization functions use a version number. Once a version number is used, it is consumed and cannot be reused. This mechanism prevents re-execution of each \"step\" but allows the creation of new initialization steps in case an upgrade adds a module that needs to be initialized. For example: [.hljs-theme-light.nopadding] ```solidity contract MyToken is ERC20Upgradeable {     function initialize() initializer public {         __ERC20_init(\"MyToken\", \"MTK\");     } } contract MyTokenV2 is MyToken, ERC20PermitUpgradeable {     function initializeV2() reinitializer(2) public {         __ERC20Permit_init(\"MyToken\");     } } ``` TIP: To avoid leaving the proxy in an uninitialized state, the initializer function should be called as early as possible by providing the encoded function call as the `_data` argument to {ERC1967Proxy-constructor}. CAUTION: When used with inheritance, manual care must be taken to not invoke a parent initializer twice, or to ensure that all initializers are idempotent. This is not verified automatically as constructors are by Solidity. [CAUTION] ==== Avoid leaving a contract uninitialized. An uninitialized contract can be taken over by an attacker. This applies to both a proxy and its implementation contract, which may impact the proxy. To prevent the implementation contract from being used, you should invoke the {_disableInitializers} function in the constructor to automatically lock it when it is deployed: [.hljs-theme-light.nopadding] ```",
						"errors": {
							"InvalidInitialization()": [
								{
									"details": "The contract is already initialized."
								}
							],
							"NotInitializing()": [
								{
									"details": "The contract is not initializing."
								}
							]
						},
						"events": {
							"Initialized(uint64)": {
								"details": "Triggered when the contract has been initialized or reinitialized."
							}
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.30+commit.73712a01\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"InvalidInitialization\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NotInitializing\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint64\",\"name\":\"version\",\"type\":\"uint64\"}],\"name\":\"Initialized\",\"type\":\"event\"}],\"devdoc\":{\"custom:oz-upgrades-unsafe-allow\":\"constructor constructor() {     _disableInitializers(); } ``` ====\",\"details\":\"This is a base contract to aid in writing upgradeable contracts, or any kind of contract that will be deployed behind a proxy. Since proxied contracts do not make use of a constructor, it's common to move constructor logic to an external initializer function, usually called `initialize`. It then becomes necessary to protect this initializer function so it can only be called once. The {initializer} modifier provided by this contract will have this effect. The initialization functions use a version number. Once a version number is used, it is consumed and cannot be reused. This mechanism prevents re-execution of each \\\"step\\\" but allows the creation of new initialization steps in case an upgrade adds a module that needs to be initialized. For example: [.hljs-theme-light.nopadding] ```solidity contract MyToken is ERC20Upgradeable {     function initialize() initializer public {         __ERC20_init(\\\"MyToken\\\", \\\"MTK\\\");     } } contract MyTokenV2 is MyToken, ERC20PermitUpgradeable {     function initializeV2() reinitializer(2) public {         __ERC20Permit_init(\\\"MyToken\\\");     } } ``` TIP: To avoid leaving the proxy in an uninitialized state, the initializer function should be called as early as possible by providing the encoded function call as the `_data` argument to {ERC1967Proxy-constructor}. CAUTION: When used with inheritance, manual care must be taken to not invoke a parent initializer twice, or to ensure that all initializers are idempotent. This is not verified automatically as constructors are by Solidity. [CAUTION] ==== Avoid leaving a contract uninitialized. An uninitialized contract can be taken over by an attacker. This applies to both a proxy and its implementation contract, which may impact the proxy. To prevent the implementation contract from being used, you should invoke the {_disableInitializers} function in the constructor to automatically lock it when it is deployed: [.hljs-theme-light.nopadding] ```\",\"errors\":{\"InvalidInitialization()\":[{\"details\":\"The contract is already initialized.\"}],\"NotInitializing()\":[{\"details\":\"The contract is not initializing.\"}]},\"events\":{\"Initialized(uint64)\":{\"details\":\"Triggered when the contract has been initialized or reinitialized.\"}},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":\"Initializable\"},\"evmVersion\":\"prague\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":{\"keccak256\":\"0xdb4d24ee2c087c391d587cd17adfe5b3f9d93b3110b1388c2ab6c7c0ad1dcd05\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ab7b6d5b9e2b88176312967fe0f0e78f3d9a1422fa5e4b64e2440c35869b5d08\",\"dweb:/ipfs/QmXKYWWyzcLg1B2k7Sb1qkEXgLCYfXecR9wYW5obRzWP1Q\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol": {
				"UUPSUpgradeable": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "target",
									"type": "address"
								}
							],
							"name": "AddressEmptyCode",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "implementation",
									"type": "address"
								}
							],
							"name": "ERC1967InvalidImplementation",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "ERC1967NonPayable",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "FailedCall",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "InvalidInitialization",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "NotInitializing",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "UUPSUnauthorizedCallContext",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "slot",
									"type": "bytes32"
								}
							],
							"name": "UUPSUnsupportedProxiableUUID",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint64",
									"name": "version",
									"type": "uint64"
								}
							],
							"name": "Initialized",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "implementation",
									"type": "address"
								}
							],
							"name": "Upgraded",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "UPGRADE_INTERFACE_VERSION",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "proxiableUUID",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newImplementation",
									"type": "address"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "upgradeToAndCall",
							"outputs": [],
							"stateMutability": "payable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "An upgradeability mechanism designed for UUPS proxies. The functions included here can perform an upgrade of an {ERC1967Proxy}, when this contract is set as the implementation behind such a proxy. A security mechanism ensures that an upgrade does not turn off upgradeability accidentally, although this risk is reinstated if the upgrade retains upgradeability but removes the security mechanism, e.g. by replacing `UUPSUpgradeable` with a custom implementation of upgrades. The {_authorizeUpgrade} function must be overridden to include access restriction to the upgrade mechanism.",
						"errors": {
							"AddressEmptyCode(address)": [
								{
									"details": "There's no code at `target` (it is not a contract)."
								}
							],
							"ERC1967InvalidImplementation(address)": [
								{
									"details": "The `implementation` of the proxy is invalid."
								}
							],
							"ERC1967NonPayable()": [
								{
									"details": "An upgrade function sees `msg.value > 0` that may be lost."
								}
							],
							"FailedCall()": [
								{
									"details": "A call to an address target failed. The target may have reverted."
								}
							],
							"InvalidInitialization()": [
								{
									"details": "The contract is already initialized."
								}
							],
							"NotInitializing()": [
								{
									"details": "The contract is not initializing."
								}
							],
							"UUPSUnauthorizedCallContext()": [
								{
									"details": "The call is from an unauthorized context."
								}
							],
							"UUPSUnsupportedProxiableUUID(bytes32)": [
								{
									"details": "The storage `slot` is unsupported as a UUID."
								}
							]
						},
						"events": {
							"Initialized(uint64)": {
								"details": "Triggered when the contract has been initialized or reinitialized."
							},
							"Upgraded(address)": {
								"details": "Emitted when the implementation is upgraded."
							}
						},
						"kind": "dev",
						"methods": {
							"proxiableUUID()": {
								"details": "Implementation of the ERC-1822 {proxiableUUID} function. This returns the storage slot used by the implementation. It is used to validate the implementation's compatibility when performing an upgrade. IMPORTANT: A proxy pointing at a proxiable contract should not be considered proxiable itself, because this risks bricking a proxy that upgrades to it, by delegating to itself until out of gas. Thus it is critical that this function revert if invoked through a proxy. This is guaranteed by the `notDelegated` modifier."
							},
							"upgradeToAndCall(address,bytes)": {
								"custom:oz-upgrades-unsafe-allow-reachable": "delegatecall",
								"details": "Upgrade the implementation of the proxy to `newImplementation`, and subsequently execute the function call encoded in `data`. Calls {_authorizeUpgrade}. Emits an {Upgraded} event."
							}
						},
						"stateVariables": {
							"UPGRADE_INTERFACE_VERSION": {
								"details": "The version of the upgrade interface of the contract. If this getter is missing, both `upgradeTo(address)` and `upgradeToAndCall(address,bytes)` are present, and `upgradeTo` must be used if no function should be called, while `upgradeToAndCall` will invoke the `receive` function if the second argument is the empty byte string. If the getter returns `\"5.0.0\"`, only `upgradeToAndCall(address,bytes)` is present, and the second argument must be the empty byte string if no function should be called, making it impossible to invoke the `receive` function during an upgrade."
							},
							"__self": {
								"custom:oz-upgrades-unsafe-allow": "state-variable-immutable"
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"UPGRADE_INTERFACE_VERSION()": "ad3cb1cc",
							"proxiableUUID()": "52d1902d",
							"upgradeToAndCall(address,bytes)": "4f1ef286"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.30+commit.73712a01\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"}],\"name\":\"AddressEmptyCode\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"implementation\",\"type\":\"address\"}],\"name\":\"ERC1967InvalidImplementation\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ERC1967NonPayable\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"FailedCall\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidInitialization\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NotInitializing\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"UUPSUnauthorizedCallContext\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"slot\",\"type\":\"bytes32\"}],\"name\":\"UUPSUnsupportedProxiableUUID\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint64\",\"name\":\"version\",\"type\":\"uint64\"}],\"name\":\"Initialized\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"implementation\",\"type\":\"address\"}],\"name\":\"Upgraded\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"UPGRADE_INTERFACE_VERSION\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"proxiableUUID\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newImplementation\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"upgradeToAndCall\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"An upgradeability mechanism designed for UUPS proxies. The functions included here can perform an upgrade of an {ERC1967Proxy}, when this contract is set as the implementation behind such a proxy. A security mechanism ensures that an upgrade does not turn off upgradeability accidentally, although this risk is reinstated if the upgrade retains upgradeability but removes the security mechanism, e.g. by replacing `UUPSUpgradeable` with a custom implementation of upgrades. The {_authorizeUpgrade} function must be overridden to include access restriction to the upgrade mechanism.\",\"errors\":{\"AddressEmptyCode(address)\":[{\"details\":\"There's no code at `target` (it is not a contract).\"}],\"ERC1967InvalidImplementation(address)\":[{\"details\":\"The `implementation` of the proxy is invalid.\"}],\"ERC1967NonPayable()\":[{\"details\":\"An upgrade function sees `msg.value > 0` that may be lost.\"}],\"FailedCall()\":[{\"details\":\"A call to an address target failed. The target may have reverted.\"}],\"InvalidInitialization()\":[{\"details\":\"The contract is already initialized.\"}],\"NotInitializing()\":[{\"details\":\"The contract is not initializing.\"}],\"UUPSUnauthorizedCallContext()\":[{\"details\":\"The call is from an unauthorized context.\"}],\"UUPSUnsupportedProxiableUUID(bytes32)\":[{\"details\":\"The storage `slot` is unsupported as a UUID.\"}]},\"events\":{\"Initialized(uint64)\":{\"details\":\"Triggered when the contract has been initialized or reinitialized.\"},\"Upgraded(address)\":{\"details\":\"Emitted when the implementation is upgraded.\"}},\"kind\":\"dev\",\"methods\":{\"proxiableUUID()\":{\"details\":\"Implementation of the ERC-1822 {proxiableUUID} function. This returns the storage slot used by the implementation. It is used to validate the implementation's compatibility when performing an upgrade. IMPORTANT: A proxy pointing at a proxiable contract should not be considered proxiable itself, because this risks bricking a proxy that upgrades to it, by delegating to itself until out of gas. Thus it is critical that this function revert if invoked through a proxy. This is guaranteed by the `notDelegated` modifier.\"},\"upgradeToAndCall(address,bytes)\":{\"custom:oz-upgrades-unsafe-allow-reachable\":\"delegatecall\",\"details\":\"Upgrade the implementation of the proxy to `newImplementation`, and subsequently execute the function call encoded in `data`. Calls {_authorizeUpgrade}. Emits an {Upgraded} event.\"}},\"stateVariables\":{\"UPGRADE_INTERFACE_VERSION\":{\"details\":\"The version of the upgrade interface of the contract. If this getter is missing, both `upgradeTo(address)` and `upgradeToAndCall(address,bytes)` are present, and `upgradeTo` must be used if no function should be called, while `upgradeToAndCall` will invoke the `receive` function if the second argument is the empty byte string. If the getter returns `\\\"5.0.0\\\"`, only `upgradeToAndCall(address,bytes)` is present, and the second argument must be the empty byte string if no function should be called, making it impossible to invoke the `receive` function during an upgrade.\"},\"__self\":{\"custom:oz-upgrades-unsafe-allow\":\"state-variable-immutable\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":\"UUPSUpgradeable\"},\"evmVersion\":\"prague\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":{\"keccak256\":\"0xdb4d24ee2c087c391d587cd17adfe5b3f9d93b3110b1388c2ab6c7c0ad1dcd05\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ab7b6d5b9e2b88176312967fe0f0e78f3d9a1422fa5e4b64e2440c35869b5d08\",\"dweb:/ipfs/QmXKYWWyzcLg1B2k7Sb1qkEXgLCYfXecR9wYW5obRzWP1Q\"]},\"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":{\"keccak256\":\"0x574a7451e42724f7de29e2855c392a8a5020acd695169466a18459467d719d63\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5bc189f63b639ee173dd7b6fecc39baf7113bf161776aea22b34c57fdd1872ec\",\"dweb:/ipfs/QmZAf2VtjDLRULqjJkde6LNsxAg12tUqpPqgUQQZbAjgtZ\"]},\"@openzeppelin/contracts/interfaces/IERC1967.sol\":{\"keccak256\":\"0xb25a4f11fa80c702bf5cd85adec90e6f6f507f32f4a8e6f5dbc31e8c10029486\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6917f8a323e7811f041aecd4d9fd6e92455a6fba38a797ac6f6e208c7912b79d\",\"dweb:/ipfs/QmShuYv55wYHGi4EFkDB8QfF7ZCHoKk2efyz3AWY1ExSq7\"]},\"@openzeppelin/contracts/interfaces/draft-IERC1822.sol\":{\"keccak256\":\"0xc42facb5094f2f35f066a7155bda23545e39a3156faef3ddc00185544443ba7d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d3b36282ab029b46bd082619a308a2ea11c309967b9425b7b7a6eb0b0c1c3196\",\"dweb:/ipfs/QmP2YVfDB2FoREax3vJu7QhDnyYRMw52WPrCD4vdT2kuDA\"]},\"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":{\"keccak256\":\"0x8decfa54cec979c824b044b8128cd91d713f72c71fd7dfa54974624d8c949898\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://271f914261a19d87117a777e0924ada545c16191ef9b00cc40b0134fc14ebc70\",\"dweb:/ipfs/QmdvVNWHGHQrGGPonZJs5NuzTevTjZRM2zayKrDJf7WBA2\"]},\"@openzeppelin/contracts/proxy/beacon/IBeacon.sol\":{\"keccak256\":\"0xc59a78b07b44b2cf2e8ab4175fca91e8eca1eee2df7357b8d2a8833e5ea1f64c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5aa4f07e65444784c29cd7bfcc2341b34381e4e5b5da9f0c5bd00d7f430e66fa\",\"dweb:/ipfs/QmWRMh4Q9DpaU9GvsiXmDdoNYMyyece9if7hnfLz7uqzWM\"]},\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0xaaa1d17c1129b127a4a401db2fbd72960e2671474be3d08cae71ccdc42f7624c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://cb2f27cd3952aa667e198fba0d9b7bcec52fbb12c16f013c25fe6fb52b29cc0e\",\"dweb:/ipfs/QmeuohBFoeyDPZA9JNCTEDz3VBfBD4EABWuWXVhHAuEpKR\"]},\"@openzeppelin/contracts/utils/Errors.sol\":{\"keccak256\":\"0x6afa713bfd42cf0f7656efa91201007ac465e42049d7de1d50753a373648c123\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ba1d02f4847670a1b83dec9f7d37f0b0418d6043447b69f3a29a5f9efc547fcf\",\"dweb:/ipfs/QmQ7iH2keLNUKgq2xSWcRmuBE5eZ3F5whYAkAGzCNNoEWB\"]},\"@openzeppelin/contracts/utils/StorageSlot.sol\":{\"keccak256\":\"0xcf74f855663ce2ae00ed8352666b7935f6cddea2932fdf2c3ecd30a9b1cd0e97\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9f660b1f351b757dfe01438e59888f31f33ded3afcf5cb5b0d9bf9aa6f320a8b\",\"dweb:/ipfs/QmarDJ5hZEgBtCmmrVzEZWjub9769eD686jmzb2XpSU1cM\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol": {
				"ContextUpgradeable": {
					"abi": [
						{
							"inputs": [],
							"name": "InvalidInitialization",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "NotInitializing",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint64",
									"name": "version",
									"type": "uint64"
								}
							],
							"name": "Initialized",
							"type": "event"
						}
					],
					"devdoc": {
						"details": "Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.",
						"errors": {
							"InvalidInitialization()": [
								{
									"details": "The contract is already initialized."
								}
							],
							"NotInitializing()": [
								{
									"details": "The contract is not initializing."
								}
							]
						},
						"events": {
							"Initialized(uint64)": {
								"details": "Triggered when the contract has been initialized or reinitialized."
							}
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.30+commit.73712a01\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"InvalidInitialization\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NotInitializing\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint64\",\"name\":\"version\",\"type\":\"uint64\"}],\"name\":\"Initialized\",\"type\":\"event\"}],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"errors\":{\"InvalidInitialization()\":[{\"details\":\"The contract is already initialized.\"}],\"NotInitializing()\":[{\"details\":\"The contract is not initializing.\"}]},\"events\":{\"Initialized(uint64)\":{\"details\":\"Triggered when the contract has been initialized or reinitialized.\"}},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":\"ContextUpgradeable\"},\"evmVersion\":\"prague\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":{\"keccak256\":\"0xdb4d24ee2c087c391d587cd17adfe5b3f9d93b3110b1388c2ab6c7c0ad1dcd05\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ab7b6d5b9e2b88176312967fe0f0e78f3d9a1422fa5e4b64e2440c35869b5d08\",\"dweb:/ipfs/QmXKYWWyzcLg1B2k7Sb1qkEXgLCYfXecR9wYW5obRzWP1Q\"]},\"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":{\"keccak256\":\"0xdbef5f0c787055227243a7318ef74c8a5a1108ca3a07f2b3a00ef67769e1e397\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://08e39f23d5b4692f9a40803e53a8156b72b4c1f9902a88cd65ba964db103dab9\",\"dweb:/ipfs/QmPKn6EYDgpga7KtpkA8wV2yJCYGMtc9K4LkJfhKX2RVSV\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/interfaces/IERC1967.sol": {
				"IERC1967": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "previousAdmin",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "address",
									"name": "newAdmin",
									"type": "address"
								}
							],
							"name": "AdminChanged",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "beacon",
									"type": "address"
								}
							],
							"name": "BeaconUpgraded",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "implementation",
									"type": "address"
								}
							],
							"name": "Upgraded",
							"type": "event"
						}
					],
					"devdoc": {
						"details": "ERC-1967: Proxy Storage Slots. This interface contains the events defined in the ERC.",
						"events": {
							"AdminChanged(address,address)": {
								"details": "Emitted when the admin account has changed."
							},
							"BeaconUpgraded(address)": {
								"details": "Emitted when the beacon is changed."
							},
							"Upgraded(address)": {
								"details": "Emitted when the implementation is upgraded."
							}
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.30+commit.73712a01\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"previousAdmin\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"newAdmin\",\"type\":\"address\"}],\"name\":\"AdminChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"beacon\",\"type\":\"address\"}],\"name\":\"BeaconUpgraded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"implementation\",\"type\":\"address\"}],\"name\":\"Upgraded\",\"type\":\"event\"}],\"devdoc\":{\"details\":\"ERC-1967: Proxy Storage Slots. This interface contains the events defined in the ERC.\",\"events\":{\"AdminChanged(address,address)\":{\"details\":\"Emitted when the admin account has changed.\"},\"BeaconUpgraded(address)\":{\"details\":\"Emitted when the beacon is changed.\"},\"Upgraded(address)\":{\"details\":\"Emitted when the implementation is upgraded.\"}},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/IERC1967.sol\":\"IERC1967\"},\"evmVersion\":\"prague\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/IERC1967.sol\":{\"keccak256\":\"0xb25a4f11fa80c702bf5cd85adec90e6f6f507f32f4a8e6f5dbc31e8c10029486\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6917f8a323e7811f041aecd4d9fd6e92455a6fba38a797ac6f6e208c7912b79d\",\"dweb:/ipfs/QmShuYv55wYHGi4EFkDB8QfF7ZCHoKk2efyz3AWY1ExSq7\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/interfaces/draft-IERC1822.sol": {
				"IERC1822Proxiable": {
					"abi": [
						{
							"inputs": [],
							"name": "proxiableUUID",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "ERC-1822: Universal Upgradeable Proxy Standard (UUPS) documents a method for upgradeability through a simplified proxy whose upgrades are fully controlled by the current implementation.",
						"kind": "dev",
						"methods": {
							"proxiableUUID()": {
								"details": "Returns the storage slot that the proxiable contract assumes is being used to store the implementation address. IMPORTANT: A proxy pointing at a proxiable contract should not be considered proxiable itself, because this risks bricking a proxy that upgrades to it, by delegating to itself until out of gas. Thus it is critical that this function revert if invoked through a proxy."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"proxiableUUID()": "52d1902d"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.30+commit.73712a01\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"proxiableUUID\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"ERC-1822: Universal Upgradeable Proxy Standard (UUPS) documents a method for upgradeability through a simplified proxy whose upgrades are fully controlled by the current implementation.\",\"kind\":\"dev\",\"methods\":{\"proxiableUUID()\":{\"details\":\"Returns the storage slot that the proxiable contract assumes is being used to store the implementation address. IMPORTANT: A proxy pointing at a proxiable contract should not be considered proxiable itself, because this risks bricking a proxy that upgrades to it, by delegating to itself until out of gas. Thus it is critical that this function revert if invoked through a proxy.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC1822.sol\":\"IERC1822Proxiable\"},\"evmVersion\":\"prague\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC1822.sol\":{\"keccak256\":\"0xc42facb5094f2f35f066a7155bda23545e39a3156faef3ddc00185544443ba7d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d3b36282ab029b46bd082619a308a2ea11c309967b9425b7b7a6eb0b0c1c3196\",\"dweb:/ipfs/QmP2YVfDB2FoREax3vJu7QhDnyYRMw52WPrCD4vdT2kuDA\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol": {
				"ERC1967Utils": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "admin",
									"type": "address"
								}
							],
							"name": "ERC1967InvalidAdmin",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "beacon",
									"type": "address"
								}
							],
							"name": "ERC1967InvalidBeacon",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "implementation",
									"type": "address"
								}
							],
							"name": "ERC1967InvalidImplementation",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "ERC1967NonPayable",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "This library provides getters and event emitting update functions for https://eips.ethereum.org/EIPS/eip-1967[ERC-1967] slots.",
						"errors": {
							"ERC1967InvalidAdmin(address)": [
								{
									"details": "The `admin` of the proxy is invalid."
								}
							],
							"ERC1967InvalidBeacon(address)": [
								{
									"details": "The `beacon` of the proxy is invalid."
								}
							],
							"ERC1967InvalidImplementation(address)": [
								{
									"details": "The `implementation` of the proxy is invalid."
								}
							],
							"ERC1967NonPayable()": [
								{
									"details": "An upgrade function sees `msg.value > 0` that may be lost."
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"stateVariables": {
							"ADMIN_SLOT": {
								"details": "Storage slot with the admin of the contract. This is the keccak-256 hash of \"eip1967.proxy.admin\" subtracted by 1."
							},
							"BEACON_SLOT": {
								"details": "The storage slot of the UpgradeableBeacon contract which defines the implementation for this proxy. This is the keccak-256 hash of \"eip1967.proxy.beacon\" subtracted by 1."
							},
							"IMPLEMENTATION_SLOT": {
								"details": "Storage slot with the address of the current implementation. This is the keccak-256 hash of \"eip1967.proxy.implementation\" subtracted by 1."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":496:6237  library ERC1967Utils {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":496:6237  library ERC1967Utils {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      revert(0x00, 0x00)\n\n    auxdata: 0xa2646970667358221220089058072fc6f42f8f62f38fcf5cfc02f77bb71f0e72f0efc0812efd2799168964736f6c634300081e0033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "6055604b600b8282823980515f1a607314603f577f4e487b71000000000000000000000000000000000000000000000000000000005f525f60045260245ffd5b305f52607381538281f3fe730000000000000000000000000000000000000000301460806040525f5ffdfea2646970667358221220089058072fc6f42f8f62f38fcf5cfc02f77bb71f0e72f0efc0812efd2799168964736f6c634300081e0033",
							"opcodes": "PUSH1 0x55 PUSH1 0x4B PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH0 BYTE PUSH1 0x73 EQ PUSH1 0x3F JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST ADDRESS PUSH0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 PUSH0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 ADDMOD SWAP1 PC SMOD 0x2F 0xC6 DELEGATECALL 0x2F DUP16 PUSH3 0xF38FCF TLOAD 0xFC MUL 0xF7 PUSH28 0xB71F0E72F0EFC0812EFD2799168964736F6C634300081E0033000000 ",
							"sourceMap": "496:5741:6:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "730000000000000000000000000000000000000000301460806040525f5ffdfea2646970667358221220089058072fc6f42f8f62f38fcf5cfc02f77bb71f0e72f0efc0812efd2799168964736f6c634300081e0033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 PUSH0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 ADDMOD SWAP1 PC SMOD 0x2F 0xC6 DELEGATECALL 0x2F DUP16 PUSH3 0xF38FCF TLOAD 0xFC MUL 0xF7 PUSH28 0xB71F0E72F0EFC0812EFD2799168964736F6C634300081E0033000000 ",
							"sourceMap": "496:5741:6:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17000",
								"executionCost": "92",
								"totalCost": "17092"
							},
							"internal": {
								"_checkNonPayable()": "infinite",
								"_setAdmin(address)": "infinite",
								"_setBeacon(address)": "infinite",
								"_setImplementation(address)": "infinite",
								"changeAdmin(address)": "infinite",
								"getAdmin()": "infinite",
								"getBeacon()": "infinite",
								"getImplementation()": "infinite",
								"upgradeBeaconToAndCall(address,bytes memory)": "infinite",
								"upgradeToAndCall(address,bytes memory)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 496,
									"end": 6237,
									"name": "PUSH #[$]",
									"source": 6,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 496,
									"end": 6237,
									"name": "PUSH [$]",
									"source": 6,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 496,
									"end": 6237,
									"name": "PUSH",
									"source": 6,
									"value": "B"
								},
								{
									"begin": 496,
									"end": 6237,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 496,
									"end": 6237,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 496,
									"end": 6237,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 496,
									"end": 6237,
									"name": "CODECOPY",
									"source": 6
								},
								{
									"begin": 496,
									"end": 6237,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 496,
									"end": 6237,
									"name": "MLOAD",
									"source": 6
								},
								{
									"begin": 496,
									"end": 6237,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 496,
									"end": 6237,
									"name": "BYTE",
									"source": 6
								},
								{
									"begin": 496,
									"end": 6237,
									"name": "PUSH",
									"source": 6,
									"value": "73"
								},
								{
									"begin": 496,
									"end": 6237,
									"name": "EQ",
									"source": 6
								},
								{
									"begin": 496,
									"end": 6237,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "1"
								},
								{
									"begin": 496,
									"end": 6237,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 496,
									"end": 6237,
									"name": "PUSH",
									"source": 6,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 496,
									"end": 6237,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 496,
									"end": 6237,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 496,
									"end": 6237,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 496,
									"end": 6237,
									"name": "PUSH",
									"source": 6,
									"value": "4"
								},
								{
									"begin": 496,
									"end": 6237,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 496,
									"end": 6237,
									"name": "PUSH",
									"source": 6,
									"value": "24"
								},
								{
									"begin": 496,
									"end": 6237,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 496,
									"end": 6237,
									"name": "REVERT",
									"source": 6
								},
								{
									"begin": 496,
									"end": 6237,
									"name": "tag",
									"source": 6,
									"value": "1"
								},
								{
									"begin": 496,
									"end": 6237,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 496,
									"end": 6237,
									"name": "ADDRESS",
									"source": 6
								},
								{
									"begin": 496,
									"end": 6237,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 496,
									"end": 6237,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 496,
									"end": 6237,
									"name": "PUSH",
									"source": 6,
									"value": "73"
								},
								{
									"begin": 496,
									"end": 6237,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 496,
									"end": 6237,
									"name": "MSTORE8",
									"source": 6
								},
								{
									"begin": 496,
									"end": 6237,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 496,
									"end": 6237,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 496,
									"end": 6237,
									"name": "RETURN",
									"source": 6
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220089058072fc6f42f8f62f38fcf5cfc02f77bb71f0e72f0efc0812efd2799168964736f6c634300081e0033",
									".code": [
										{
											"begin": 496,
											"end": 6237,
											"name": "PUSHDEPLOYADDRESS",
											"source": 6
										},
										{
											"begin": 496,
											"end": 6237,
											"name": "ADDRESS",
											"source": 6
										},
										{
											"begin": 496,
											"end": 6237,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 496,
											"end": 6237,
											"name": "PUSH",
											"source": 6,
											"value": "80"
										},
										{
											"begin": 496,
											"end": 6237,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 496,
											"end": 6237,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 496,
											"end": 6237,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 496,
											"end": 6237,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 496,
											"end": 6237,
											"name": "REVERT",
											"source": 6
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol",
								"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol",
								"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol",
								"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol",
								"@openzeppelin/contracts/interfaces/IERC1967.sol",
								"@openzeppelin/contracts/interfaces/draft-IERC1822.sol",
								"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol",
								"@openzeppelin/contracts/proxy/beacon/IBeacon.sol",
								"@openzeppelin/contracts/utils/Address.sol",
								"@openzeppelin/contracts/utils/Errors.sol",
								"@openzeppelin/contracts/utils/StorageSlot.sol",
								"contracts/PlatformFeeAndRewardSystem.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.30+commit.73712a01\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"admin\",\"type\":\"address\"}],\"name\":\"ERC1967InvalidAdmin\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"beacon\",\"type\":\"address\"}],\"name\":\"ERC1967InvalidBeacon\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"implementation\",\"type\":\"address\"}],\"name\":\"ERC1967InvalidImplementation\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ERC1967NonPayable\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"This library provides getters and event emitting update functions for https://eips.ethereum.org/EIPS/eip-1967[ERC-1967] slots.\",\"errors\":{\"ERC1967InvalidAdmin(address)\":[{\"details\":\"The `admin` of the proxy is invalid.\"}],\"ERC1967InvalidBeacon(address)\":[{\"details\":\"The `beacon` of the proxy is invalid.\"}],\"ERC1967InvalidImplementation(address)\":[{\"details\":\"The `implementation` of the proxy is invalid.\"}],\"ERC1967NonPayable()\":[{\"details\":\"An upgrade function sees `msg.value > 0` that may be lost.\"}]},\"kind\":\"dev\",\"methods\":{},\"stateVariables\":{\"ADMIN_SLOT\":{\"details\":\"Storage slot with the admin of the contract. This is the keccak-256 hash of \\\"eip1967.proxy.admin\\\" subtracted by 1.\"},\"BEACON_SLOT\":{\"details\":\"The storage slot of the UpgradeableBeacon contract which defines the implementation for this proxy. This is the keccak-256 hash of \\\"eip1967.proxy.beacon\\\" subtracted by 1.\"},\"IMPLEMENTATION_SLOT\":{\"details\":\"Storage slot with the address of the current implementation. This is the keccak-256 hash of \\\"eip1967.proxy.implementation\\\" subtracted by 1.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":\"ERC1967Utils\"},\"evmVersion\":\"prague\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/IERC1967.sol\":{\"keccak256\":\"0xb25a4f11fa80c702bf5cd85adec90e6f6f507f32f4a8e6f5dbc31e8c10029486\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6917f8a323e7811f041aecd4d9fd6e92455a6fba38a797ac6f6e208c7912b79d\",\"dweb:/ipfs/QmShuYv55wYHGi4EFkDB8QfF7ZCHoKk2efyz3AWY1ExSq7\"]},\"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":{\"keccak256\":\"0x8decfa54cec979c824b044b8128cd91d713f72c71fd7dfa54974624d8c949898\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://271f914261a19d87117a777e0924ada545c16191ef9b00cc40b0134fc14ebc70\",\"dweb:/ipfs/QmdvVNWHGHQrGGPonZJs5NuzTevTjZRM2zayKrDJf7WBA2\"]},\"@openzeppelin/contracts/proxy/beacon/IBeacon.sol\":{\"keccak256\":\"0xc59a78b07b44b2cf2e8ab4175fca91e8eca1eee2df7357b8d2a8833e5ea1f64c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5aa4f07e65444784c29cd7bfcc2341b34381e4e5b5da9f0c5bd00d7f430e66fa\",\"dweb:/ipfs/QmWRMh4Q9DpaU9GvsiXmDdoNYMyyece9if7hnfLz7uqzWM\"]},\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0xaaa1d17c1129b127a4a401db2fbd72960e2671474be3d08cae71ccdc42f7624c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://cb2f27cd3952aa667e198fba0d9b7bcec52fbb12c16f013c25fe6fb52b29cc0e\",\"dweb:/ipfs/QmeuohBFoeyDPZA9JNCTEDz3VBfBD4EABWuWXVhHAuEpKR\"]},\"@openzeppelin/contracts/utils/Errors.sol\":{\"keccak256\":\"0x6afa713bfd42cf0f7656efa91201007ac465e42049d7de1d50753a373648c123\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ba1d02f4847670a1b83dec9f7d37f0b0418d6043447b69f3a29a5f9efc547fcf\",\"dweb:/ipfs/QmQ7iH2keLNUKgq2xSWcRmuBE5eZ3F5whYAkAGzCNNoEWB\"]},\"@openzeppelin/contracts/utils/StorageSlot.sol\":{\"keccak256\":\"0xcf74f855663ce2ae00ed8352666b7935f6cddea2932fdf2c3ecd30a9b1cd0e97\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9f660b1f351b757dfe01438e59888f31f33ded3afcf5cb5b0d9bf9aa6f320a8b\",\"dweb:/ipfs/QmarDJ5hZEgBtCmmrVzEZWjub9769eD686jmzb2XpSU1cM\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/proxy/beacon/IBeacon.sol": {
				"IBeacon": {
					"abi": [
						{
							"inputs": [],
							"name": "implementation",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "This is the interface that {BeaconProxy} expects of its beacon.",
						"kind": "dev",
						"methods": {
							"implementation()": {
								"details": "Must return an address that can be used as a delegate call target. {UpgradeableBeacon} will check that this address is a contract."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"implementation()": "5c60da1b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.30+commit.73712a01\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"implementation\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"This is the interface that {BeaconProxy} expects of its beacon.\",\"kind\":\"dev\",\"methods\":{\"implementation()\":{\"details\":\"Must return an address that can be used as a delegate call target. {UpgradeableBeacon} will check that this address is a contract.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/proxy/beacon/IBeacon.sol\":\"IBeacon\"},\"evmVersion\":\"prague\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/proxy/beacon/IBeacon.sol\":{\"keccak256\":\"0xc59a78b07b44b2cf2e8ab4175fca91e8eca1eee2df7357b8d2a8833e5ea1f64c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5aa4f07e65444784c29cd7bfcc2341b34381e4e5b5da9f0c5bd00d7f430e66fa\",\"dweb:/ipfs/QmWRMh4Q9DpaU9GvsiXmDdoNYMyyece9if7hnfLz7uqzWM\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/Address.sol": {
				"Address": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "target",
									"type": "address"
								}
							],
							"name": "AddressEmptyCode",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Collection of functions related to the address type",
						"errors": {
							"AddressEmptyCode(address)": [
								{
									"details": "There's no code at `target` (it is not a contract)."
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts/utils/Address.sol\":233:6048  library Address {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts/utils/Address.sol\":233:6048  library Address {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      revert(0x00, 0x00)\n\n    auxdata: 0xa264697066735822122016bd345b94ef3845ef4ed93445c8d5f14e5010d9c744bb2ec9847009404477d664736f6c634300081e0033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "6055604b600b8282823980515f1a607314603f577f4e487b71000000000000000000000000000000000000000000000000000000005f525f60045260245ffd5b305f52607381538281f3fe730000000000000000000000000000000000000000301460806040525f5ffdfea264697066735822122016bd345b94ef3845ef4ed93445c8d5f14e5010d9c744bb2ec9847009404477d664736f6c634300081e0033",
							"opcodes": "PUSH1 0x55 PUSH1 0x4B PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH0 BYTE PUSH1 0x73 EQ PUSH1 0x3F JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST ADDRESS PUSH0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 PUSH0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 AND 0xBD CALLVALUE JUMPDEST SWAP5 0xEF CODESIZE GASLIMIT 0xEF 0x4E 0xD9 CALLVALUE GASLIMIT 0xC8 0xD5 CALL 0x4E POP LT 0xD9 0xC7 PREVRANDAO 0xBB 0x2E 0xC9 DUP5 PUSH17 0x9404477D664736F6C634300081E003300 ",
							"sourceMap": "233:5815:8:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "730000000000000000000000000000000000000000301460806040525f5ffdfea264697066735822122016bd345b94ef3845ef4ed93445c8d5f14e5010d9c744bb2ec9847009404477d664736f6c634300081e0033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 PUSH0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 AND 0xBD CALLVALUE JUMPDEST SWAP5 0xEF CODESIZE GASLIMIT 0xEF 0x4E 0xD9 CALLVALUE GASLIMIT 0xC8 0xD5 CALL 0x4E POP LT 0xD9 0xC7 PREVRANDAO 0xBB 0x2E 0xC9 DUP5 PUSH17 0x9404477D664736F6C634300081E003300 ",
							"sourceMap": "233:5815:8:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17000",
								"executionCost": "92",
								"totalCost": "17092"
							},
							"internal": {
								"_revert(bytes memory)": "infinite",
								"functionCall(address,bytes memory)": "infinite",
								"functionCallWithValue(address,bytes memory,uint256)": "infinite",
								"functionDelegateCall(address,bytes memory)": "infinite",
								"functionStaticCall(address,bytes memory)": "infinite",
								"sendValue(address payable,uint256)": "infinite",
								"verifyCallResult(bool,bytes memory)": "infinite",
								"verifyCallResultFromTarget(address,bool,bytes memory)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 233,
									"end": 6048,
									"name": "PUSH #[$]",
									"source": 8,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 233,
									"end": 6048,
									"name": "PUSH [$]",
									"source": 8,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 233,
									"end": 6048,
									"name": "PUSH",
									"source": 8,
									"value": "B"
								},
								{
									"begin": 233,
									"end": 6048,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 233,
									"end": 6048,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 233,
									"end": 6048,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 233,
									"end": 6048,
									"name": "CODECOPY",
									"source": 8
								},
								{
									"begin": 233,
									"end": 6048,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 233,
									"end": 6048,
									"name": "MLOAD",
									"source": 8
								},
								{
									"begin": 233,
									"end": 6048,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 233,
									"end": 6048,
									"name": "BYTE",
									"source": 8
								},
								{
									"begin": 233,
									"end": 6048,
									"name": "PUSH",
									"source": 8,
									"value": "73"
								},
								{
									"begin": 233,
									"end": 6048,
									"name": "EQ",
									"source": 8
								},
								{
									"begin": 233,
									"end": 6048,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "1"
								},
								{
									"begin": 233,
									"end": 6048,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": 233,
									"end": 6048,
									"name": "PUSH",
									"source": 8,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 233,
									"end": 6048,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 233,
									"end": 6048,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 233,
									"end": 6048,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 233,
									"end": 6048,
									"name": "PUSH",
									"source": 8,
									"value": "4"
								},
								{
									"begin": 233,
									"end": 6048,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 233,
									"end": 6048,
									"name": "PUSH",
									"source": 8,
									"value": "24"
								},
								{
									"begin": 233,
									"end": 6048,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 233,
									"end": 6048,
									"name": "REVERT",
									"source": 8
								},
								{
									"begin": 233,
									"end": 6048,
									"name": "tag",
									"source": 8,
									"value": "1"
								},
								{
									"begin": 233,
									"end": 6048,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 233,
									"end": 6048,
									"name": "ADDRESS",
									"source": 8
								},
								{
									"begin": 233,
									"end": 6048,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 233,
									"end": 6048,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 233,
									"end": 6048,
									"name": "PUSH",
									"source": 8,
									"value": "73"
								},
								{
									"begin": 233,
									"end": 6048,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 233,
									"end": 6048,
									"name": "MSTORE8",
									"source": 8
								},
								{
									"begin": 233,
									"end": 6048,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 233,
									"end": 6048,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 233,
									"end": 6048,
									"name": "RETURN",
									"source": 8
								}
							],
							".data": {
								"0": {
									".auxdata": "a264697066735822122016bd345b94ef3845ef4ed93445c8d5f14e5010d9c744bb2ec9847009404477d664736f6c634300081e0033",
									".code": [
										{
											"begin": 233,
											"end": 6048,
											"name": "PUSHDEPLOYADDRESS",
											"source": 8
										},
										{
											"begin": 233,
											"end": 6048,
											"name": "ADDRESS",
											"source": 8
										},
										{
											"begin": 233,
											"end": 6048,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 233,
											"end": 6048,
											"name": "PUSH",
											"source": 8,
											"value": "80"
										},
										{
											"begin": 233,
											"end": 6048,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 233,
											"end": 6048,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 233,
											"end": 6048,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 233,
											"end": 6048,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 233,
											"end": 6048,
											"name": "REVERT",
											"source": 8
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol",
								"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol",
								"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol",
								"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol",
								"@openzeppelin/contracts/interfaces/IERC1967.sol",
								"@openzeppelin/contracts/interfaces/draft-IERC1822.sol",
								"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol",
								"@openzeppelin/contracts/proxy/beacon/IBeacon.sol",
								"@openzeppelin/contracts/utils/Address.sol",
								"@openzeppelin/contracts/utils/Errors.sol",
								"@openzeppelin/contracts/utils/StorageSlot.sol",
								"contracts/PlatformFeeAndRewardSystem.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.30+commit.73712a01\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"}],\"name\":\"AddressEmptyCode\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Collection of functions related to the address type\",\"errors\":{\"AddressEmptyCode(address)\":[{\"details\":\"There's no code at `target` (it is not a contract).\"}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Address.sol\":\"Address\"},\"evmVersion\":\"prague\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0xaaa1d17c1129b127a4a401db2fbd72960e2671474be3d08cae71ccdc42f7624c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://cb2f27cd3952aa667e198fba0d9b7bcec52fbb12c16f013c25fe6fb52b29cc0e\",\"dweb:/ipfs/QmeuohBFoeyDPZA9JNCTEDz3VBfBD4EABWuWXVhHAuEpKR\"]},\"@openzeppelin/contracts/utils/Errors.sol\":{\"keccak256\":\"0x6afa713bfd42cf0f7656efa91201007ac465e42049d7de1d50753a373648c123\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ba1d02f4847670a1b83dec9f7d37f0b0418d6043447b69f3a29a5f9efc547fcf\",\"dweb:/ipfs/QmQ7iH2keLNUKgq2xSWcRmuBE5eZ3F5whYAkAGzCNNoEWB\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/Errors.sol": {
				"Errors": {
					"abi": [
						{
							"inputs": [],
							"name": "FailedCall",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "FailedDeployment",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"name": "MissingPrecompile",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Collection of common custom errors used in multiple contracts IMPORTANT: Backwards compatibility is not guaranteed in future versions of the library. It is recommended to avoid relying on the error API for critical functionality. _Available since v5.1._",
						"errors": {
							"FailedCall()": [
								{
									"details": "A call to an address target failed. The target may have reverted."
								}
							],
							"FailedDeployment()": [
								{
									"details": "The deployment failed."
								}
							],
							"InsufficientBalance(uint256,uint256)": [
								{
									"details": "The ETH balance of the account is not enough to perform the operation."
								}
							],
							"MissingPrecompile(address)": [
								{
									"details": "A necessary precompile is missing."
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts/utils/Errors.sol\":411:895  library Errors {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts/utils/Errors.sol\":411:895  library Errors {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      revert(0x00, 0x00)\n\n    auxdata: 0xa264697066735822122070b7bdd8bfafafcaf4815a18409339c23cd54fa7ea05f55990da1c7a945d265e64736f6c634300081e0033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "6055604b600b8282823980515f1a607314603f577f4e487b71000000000000000000000000000000000000000000000000000000005f525f60045260245ffd5b305f52607381538281f3fe730000000000000000000000000000000000000000301460806040525f5ffdfea264697066735822122070b7bdd8bfafafcaf4815a18409339c23cd54fa7ea05f55990da1c7a945d265e64736f6c634300081e0033",
							"opcodes": "PUSH1 0x55 PUSH1 0x4B PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH0 BYTE PUSH1 0x73 EQ PUSH1 0x3F JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST ADDRESS PUSH0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 PUSH0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH17 0xB7BDD8BFAFAFCAF4815A18409339C23CD5 0x4F 0xA7 0xEA SDIV CREATE2 MSIZE SWAP1 0xDA SHR PUSH27 0x945D265E64736F6C634300081E0033000000000000000000000000 ",
							"sourceMap": "411:484:9:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "730000000000000000000000000000000000000000301460806040525f5ffdfea264697066735822122070b7bdd8bfafafcaf4815a18409339c23cd54fa7ea05f55990da1c7a945d265e64736f6c634300081e0033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 PUSH0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH17 0xB7BDD8BFAFAFCAF4815A18409339C23CD5 0x4F 0xA7 0xEA SDIV CREATE2 MSIZE SWAP1 0xDA SHR PUSH27 0x945D265E64736F6C634300081E0033000000000000000000000000 ",
							"sourceMap": "411:484:9:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17000",
								"executionCost": "92",
								"totalCost": "17092"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 411,
									"end": 895,
									"name": "PUSH #[$]",
									"source": 9,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 411,
									"end": 895,
									"name": "PUSH [$]",
									"source": 9,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 411,
									"end": 895,
									"name": "PUSH",
									"source": 9,
									"value": "B"
								},
								{
									"begin": 411,
									"end": 895,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 411,
									"end": 895,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 411,
									"end": 895,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 411,
									"end": 895,
									"name": "CODECOPY",
									"source": 9
								},
								{
									"begin": 411,
									"end": 895,
									"name": "DUP1",
									"source": 9
								},
								{
									"begin": 411,
									"end": 895,
									"name": "MLOAD",
									"source": 9
								},
								{
									"begin": 411,
									"end": 895,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 411,
									"end": 895,
									"name": "BYTE",
									"source": 9
								},
								{
									"begin": 411,
									"end": 895,
									"name": "PUSH",
									"source": 9,
									"value": "73"
								},
								{
									"begin": 411,
									"end": 895,
									"name": "EQ",
									"source": 9
								},
								{
									"begin": 411,
									"end": 895,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "1"
								},
								{
									"begin": 411,
									"end": 895,
									"name": "JUMPI",
									"source": 9
								},
								{
									"begin": 411,
									"end": 895,
									"name": "PUSH",
									"source": 9,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 411,
									"end": 895,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 411,
									"end": 895,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 411,
									"end": 895,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 411,
									"end": 895,
									"name": "PUSH",
									"source": 9,
									"value": "4"
								},
								{
									"begin": 411,
									"end": 895,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 411,
									"end": 895,
									"name": "PUSH",
									"source": 9,
									"value": "24"
								},
								{
									"begin": 411,
									"end": 895,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 411,
									"end": 895,
									"name": "REVERT",
									"source": 9
								},
								{
									"begin": 411,
									"end": 895,
									"name": "tag",
									"source": 9,
									"value": "1"
								},
								{
									"begin": 411,
									"end": 895,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 411,
									"end": 895,
									"name": "ADDRESS",
									"source": 9
								},
								{
									"begin": 411,
									"end": 895,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 411,
									"end": 895,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 411,
									"end": 895,
									"name": "PUSH",
									"source": 9,
									"value": "73"
								},
								{
									"begin": 411,
									"end": 895,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 411,
									"end": 895,
									"name": "MSTORE8",
									"source": 9
								},
								{
									"begin": 411,
									"end": 895,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 411,
									"end": 895,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 411,
									"end": 895,
									"name": "RETURN",
									"source": 9
								}
							],
							".data": {
								"0": {
									".auxdata": "a264697066735822122070b7bdd8bfafafcaf4815a18409339c23cd54fa7ea05f55990da1c7a945d265e64736f6c634300081e0033",
									".code": [
										{
											"begin": 411,
											"end": 895,
											"name": "PUSHDEPLOYADDRESS",
											"source": 9
										},
										{
											"begin": 411,
											"end": 895,
											"name": "ADDRESS",
											"source": 9
										},
										{
											"begin": 411,
											"end": 895,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 411,
											"end": 895,
											"name": "PUSH",
											"source": 9,
											"value": "80"
										},
										{
											"begin": 411,
											"end": 895,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 411,
											"end": 895,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 411,
											"end": 895,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 411,
											"end": 895,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 411,
											"end": 895,
											"name": "REVERT",
											"source": 9
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol",
								"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol",
								"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol",
								"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol",
								"@openzeppelin/contracts/interfaces/IERC1967.sol",
								"@openzeppelin/contracts/interfaces/draft-IERC1822.sol",
								"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol",
								"@openzeppelin/contracts/proxy/beacon/IBeacon.sol",
								"@openzeppelin/contracts/utils/Address.sol",
								"@openzeppelin/contracts/utils/Errors.sol",
								"@openzeppelin/contracts/utils/StorageSlot.sol",
								"contracts/PlatformFeeAndRewardSystem.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.30+commit.73712a01\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"FailedCall\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"FailedDeployment\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"MissingPrecompile\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Collection of common custom errors used in multiple contracts IMPORTANT: Backwards compatibility is not guaranteed in future versions of the library. It is recommended to avoid relying on the error API for critical functionality. _Available since v5.1._\",\"errors\":{\"FailedCall()\":[{\"details\":\"A call to an address target failed. The target may have reverted.\"}],\"FailedDeployment()\":[{\"details\":\"The deployment failed.\"}],\"InsufficientBalance(uint256,uint256)\":[{\"details\":\"The ETH balance of the account is not enough to perform the operation.\"}],\"MissingPrecompile(address)\":[{\"details\":\"A necessary precompile is missing.\"}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Errors.sol\":\"Errors\"},\"evmVersion\":\"prague\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Errors.sol\":{\"keccak256\":\"0x6afa713bfd42cf0f7656efa91201007ac465e42049d7de1d50753a373648c123\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ba1d02f4847670a1b83dec9f7d37f0b0418d6043447b69f3a29a5f9efc547fcf\",\"dweb:/ipfs/QmQ7iH2keLNUKgq2xSWcRmuBE5eZ3F5whYAkAGzCNNoEWB\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/StorageSlot.sol": {
				"StorageSlot": {
					"abi": [],
					"devdoc": {
						"details": "Library for reading and writing primitive types to specific storage slots. Storage slots are often used to avoid storage conflict when dealing with upgradeable contracts. This library helps with reading and writing to such slots without the need for inline assembly. The functions in this library return Slot structs that contain a `value` member that can be used to read or write. Example usage to set ERC-1967 implementation slot: ```solidity contract ERC1967 {     // Define the slot. Alternatively, use the SlotDerivation library to derive the slot.     bytes32 internal constant _IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc;     function _getImplementation() internal view returns (address) {         return StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value;     }     function _setImplementation(address newImplementation) internal {         require(newImplementation.code.length > 0);         StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value = newImplementation;     } } ``` TIP: Consider using this library along with {SlotDerivation}.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts/utils/StorageSlot.sol\":1407:4181  library StorageSlot {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts/utils/StorageSlot.sol\":1407:4181  library StorageSlot {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      revert(0x00, 0x00)\n\n    auxdata: 0xa26469706673582212204a25b37743574a9bd3df8f6a8c08ff91930e443dfdca74f77c843cbdc2cbeaf064736f6c634300081e0033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "6055604b600b8282823980515f1a607314603f577f4e487b71000000000000000000000000000000000000000000000000000000005f525f60045260245ffd5b305f52607381538281f3fe730000000000000000000000000000000000000000301460806040525f5ffdfea26469706673582212204a25b37743574a9bd3df8f6a8c08ff91930e443dfdca74f77c843cbdc2cbeaf064736f6c634300081e0033",
							"opcodes": "PUSH1 0x55 PUSH1 0x4B PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH0 BYTE PUSH1 0x73 EQ PUSH1 0x3F JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST ADDRESS PUSH0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 PUSH0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 BLOBBASEFEE 0x25 0xB3 PUSH24 0x43574A9BD3DF8F6A8C08FF91930E443DFDCA74F77C843CBD 0xC2 0xCB 0xEA CREATE PUSH5 0x736F6C6343 STOP ADDMOD 0x1E STOP CALLER ",
							"sourceMap": "1407:2774:10:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "730000000000000000000000000000000000000000301460806040525f5ffdfea26469706673582212204a25b37743574a9bd3df8f6a8c08ff91930e443dfdca74f77c843cbdc2cbeaf064736f6c634300081e0033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 PUSH0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 BLOBBASEFEE 0x25 0xB3 PUSH24 0x43574A9BD3DF8F6A8C08FF91930E443DFDCA74F77C843CBD 0xC2 0xCB 0xEA CREATE PUSH5 0x736F6C6343 STOP ADDMOD 0x1E STOP CALLER ",
							"sourceMap": "1407:2774:10:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17000",
								"executionCost": "92",
								"totalCost": "17092"
							},
							"internal": {
								"getAddressSlot(bytes32)": "infinite",
								"getBooleanSlot(bytes32)": "infinite",
								"getBytes32Slot(bytes32)": "infinite",
								"getBytesSlot(bytes storage pointer)": "infinite",
								"getBytesSlot(bytes32)": "infinite",
								"getInt256Slot(bytes32)": "infinite",
								"getStringSlot(bytes32)": "infinite",
								"getStringSlot(string storage pointer)": "infinite",
								"getUint256Slot(bytes32)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 1407,
									"end": 4181,
									"name": "PUSH #[$]",
									"source": 10,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1407,
									"end": 4181,
									"name": "PUSH [$]",
									"source": 10,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1407,
									"end": 4181,
									"name": "PUSH",
									"source": 10,
									"value": "B"
								},
								{
									"begin": 1407,
									"end": 4181,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 1407,
									"end": 4181,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 1407,
									"end": 4181,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 1407,
									"end": 4181,
									"name": "CODECOPY",
									"source": 10
								},
								{
									"begin": 1407,
									"end": 4181,
									"name": "DUP1",
									"source": 10
								},
								{
									"begin": 1407,
									"end": 4181,
									"name": "MLOAD",
									"source": 10
								},
								{
									"begin": 1407,
									"end": 4181,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 1407,
									"end": 4181,
									"name": "BYTE",
									"source": 10
								},
								{
									"begin": 1407,
									"end": 4181,
									"name": "PUSH",
									"source": 10,
									"value": "73"
								},
								{
									"begin": 1407,
									"end": 4181,
									"name": "EQ",
									"source": 10
								},
								{
									"begin": 1407,
									"end": 4181,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "1"
								},
								{
									"begin": 1407,
									"end": 4181,
									"name": "JUMPI",
									"source": 10
								},
								{
									"begin": 1407,
									"end": 4181,
									"name": "PUSH",
									"source": 10,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1407,
									"end": 4181,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 1407,
									"end": 4181,
									"name": "MSTORE",
									"source": 10
								},
								{
									"begin": 1407,
									"end": 4181,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 1407,
									"end": 4181,
									"name": "PUSH",
									"source": 10,
									"value": "4"
								},
								{
									"begin": 1407,
									"end": 4181,
									"name": "MSTORE",
									"source": 10
								},
								{
									"begin": 1407,
									"end": 4181,
									"name": "PUSH",
									"source": 10,
									"value": "24"
								},
								{
									"begin": 1407,
									"end": 4181,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 1407,
									"end": 4181,
									"name": "REVERT",
									"source": 10
								},
								{
									"begin": 1407,
									"end": 4181,
									"name": "tag",
									"source": 10,
									"value": "1"
								},
								{
									"begin": 1407,
									"end": 4181,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 1407,
									"end": 4181,
									"name": "ADDRESS",
									"source": 10
								},
								{
									"begin": 1407,
									"end": 4181,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 1407,
									"end": 4181,
									"name": "MSTORE",
									"source": 10
								},
								{
									"begin": 1407,
									"end": 4181,
									"name": "PUSH",
									"source": 10,
									"value": "73"
								},
								{
									"begin": 1407,
									"end": 4181,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 1407,
									"end": 4181,
									"name": "MSTORE8",
									"source": 10
								},
								{
									"begin": 1407,
									"end": 4181,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 1407,
									"end": 4181,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 1407,
									"end": 4181,
									"name": "RETURN",
									"source": 10
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212204a25b37743574a9bd3df8f6a8c08ff91930e443dfdca74f77c843cbdc2cbeaf064736f6c634300081e0033",
									".code": [
										{
											"begin": 1407,
											"end": 4181,
											"name": "PUSHDEPLOYADDRESS",
											"source": 10
										},
										{
											"begin": 1407,
											"end": 4181,
											"name": "ADDRESS",
											"source": 10
										},
										{
											"begin": 1407,
											"end": 4181,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 1407,
											"end": 4181,
											"name": "PUSH",
											"source": 10,
											"value": "80"
										},
										{
											"begin": 1407,
											"end": 4181,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 1407,
											"end": 4181,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 1407,
											"end": 4181,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1407,
											"end": 4181,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1407,
											"end": 4181,
											"name": "REVERT",
											"source": 10
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol",
								"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol",
								"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol",
								"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol",
								"@openzeppelin/contracts/interfaces/IERC1967.sol",
								"@openzeppelin/contracts/interfaces/draft-IERC1822.sol",
								"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol",
								"@openzeppelin/contracts/proxy/beacon/IBeacon.sol",
								"@openzeppelin/contracts/utils/Address.sol",
								"@openzeppelin/contracts/utils/Errors.sol",
								"@openzeppelin/contracts/utils/StorageSlot.sol",
								"contracts/PlatformFeeAndRewardSystem.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.30+commit.73712a01\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Library for reading and writing primitive types to specific storage slots. Storage slots are often used to avoid storage conflict when dealing with upgradeable contracts. This library helps with reading and writing to such slots without the need for inline assembly. The functions in this library return Slot structs that contain a `value` member that can be used to read or write. Example usage to set ERC-1967 implementation slot: ```solidity contract ERC1967 {     // Define the slot. Alternatively, use the SlotDerivation library to derive the slot.     bytes32 internal constant _IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc;     function _getImplementation() internal view returns (address) {         return StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value;     }     function _setImplementation(address newImplementation) internal {         require(newImplementation.code.length > 0);         StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value = newImplementation;     } } ``` TIP: Consider using this library along with {SlotDerivation}.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/StorageSlot.sol\":\"StorageSlot\"},\"evmVersion\":\"prague\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/StorageSlot.sol\":{\"keccak256\":\"0xcf74f855663ce2ae00ed8352666b7935f6cddea2932fdf2c3ecd30a9b1cd0e97\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9f660b1f351b757dfe01438e59888f31f33ded3afcf5cb5b0d9bf9aa6f320a8b\",\"dweb:/ipfs/QmarDJ5hZEgBtCmmrVzEZWjub9769eD686jmzb2XpSU1cM\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/PlatformFeeAndRewardSystem.sol": {
				"RewardManager": {
					"abi": [
						{
							"inputs": [],
							"name": "InvalidInitialization",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "NotInitializing",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "OwnableInvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "OwnableUnauthorizedAccount",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint64",
									"name": "version",
									"type": "uint64"
								}
							],
							"name": "Initialized",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "user",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "points",
									"type": "uint256"
								}
							],
							"name": "RewardDistributed",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "calculateReward",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "user",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "distributeReward",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_fee",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "_maxPoints",
									"type": "uint256"
								}
							],
							"name": "initialize",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "maxRewardPoints",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "platformFee",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"name": "userRewardPoints",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"errors": {
							"InvalidInitialization()": [
								{
									"details": "The contract is already initialized."
								}
							],
							"NotInitializing()": [
								{
									"details": "The contract is not initializing."
								}
							],
							"OwnableInvalidOwner(address)": [
								{
									"details": "The owner is not a valid owner account. (eg. `address(0)`)"
								}
							],
							"OwnableUnauthorizedAccount(address)": [
								{
									"details": "The caller account is not authorized to perform an operation."
								}
							]
						},
						"events": {
							"Initialized(uint64)": {
								"details": "Triggered when the contract has been initialized or reinitialized."
							}
						},
						"kind": "dev",
						"methods": {
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/PlatformFeeAndRewardSystem.sol\":298:1250  contract RewardManager is Initializable, OwnableUpgradeable {... */\n  mstore(0x40, 0x80)\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  revert(0x00, 0x00)\ntag_1:\n  pop\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/PlatformFeeAndRewardSystem.sol\":298:1250  contract RewardManager is Initializable, OwnableUpgradeable {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      revert(0x00, 0x00)\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x7ce26644\n      gt\n      tag_12\n      jumpi\n      dup1\n      0x7ce26644\n      eq\n      tag_7\n      jumpi\n      dup1\n      0x8da5cb5b\n      eq\n      tag_8\n      jumpi\n      dup1\n      0xd2d7231f\n      eq\n      tag_9\n      jumpi\n      dup1\n      0xe4a30116\n      eq\n      tag_10\n      jumpi\n      dup1\n      0xf2fde38b\n      eq\n      tag_11\n      jumpi\n      jump(tag_2)\n    tag_12:\n      dup1\n      0x1ec8bb8c\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x26232a2e\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x49880782\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x715018a6\n      eq\n      tag_6\n      jumpi\n    tag_2:\n      revert(0x00, 0x00)\n        /* \"contracts/PlatformFeeAndRewardSystem.sol\":759:1035  function distributeReward(address user, uint256 amount) external onlyOwner {... */\n    tag_3:\n      tag_13\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_14\n      swap2\n      swap1\n      tag_15\n      jump\t// in\n    tag_14:\n      tag_16\n      jump\t// in\n    tag_13:\n      stop\n        /* \"contracts/PlatformFeeAndRewardSystem.sol\":365:391  uint256 public platformFee */\n    tag_4:\n      tag_17\n      tag_18\n      jump\t// in\n    tag_17:\n      mload(0x40)\n      tag_19\n      swap2\n      swap1\n      tag_20\n      jump\t// in\n    tag_19:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/PlatformFeeAndRewardSystem.sol\":398:428  uint256 public maxRewardPoints */\n    tag_5:\n      tag_21\n      tag_22\n      jump\t// in\n    tag_21:\n      mload(0x40)\n      tag_23\n      swap2\n      swap1\n      tag_20\n      jump\t// in\n    tag_23:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3155:3256  function renounceOwnership() public virtual onlyOwner {... */\n    tag_6:\n      tag_24\n      tag_25\n      jump\t// in\n    tag_24:\n      stop\n        /* \"contracts/PlatformFeeAndRewardSystem.sol\":435:486  mapping(address => uint256) public userRewardPoints */\n    tag_7:\n      tag_26\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_27\n      swap2\n      swap1\n      tag_28\n      jump\t// in\n    tag_27:\n      tag_29\n      jump\t// in\n    tag_26:\n      mload(0x40)\n      tag_30\n      swap2\n      swap1\n      tag_20\n      jump\t// in\n    tag_30:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2441:2585  function owner() public view virtual returns (address) {... */\n    tag_8:\n      tag_31\n      tag_32\n      jump\t// in\n    tag_31:\n      mload(0x40)\n      tag_33\n      swap2\n      swap1\n      tag_34\n      jump\t// in\n    tag_33:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/PlatformFeeAndRewardSystem.sol\":1043:1247  function calculateReward(uint256 amount) public view returns (uint256) {... */\n    tag_9:\n      tag_35\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_36\n      swap2\n      swap1\n      tag_37\n      jump\t// in\n    tag_36:\n      tag_38\n      jump\t// in\n    tag_35:\n      mload(0x40)\n      tag_39\n      swap2\n      swap1\n      tag_20\n      jump\t// in\n    tag_39:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/PlatformFeeAndRewardSystem.sol\":565:751  function initialize(uint256 _fee, uint256 _maxPoints) public initializer {... */\n    tag_10:\n      tag_40\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_41\n      swap2\n      swap1\n      tag_42\n      jump\t// in\n    tag_41:\n      tag_43\n      jump\t// in\n    tag_40:\n      stop\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3405:3620  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_11:\n      tag_44\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_45\n      swap2\n      swap1\n      tag_28\n      jump\t// in\n    tag_45:\n      tag_46\n      jump\t// in\n    tag_44:\n      stop\n        /* \"contracts/PlatformFeeAndRewardSystem.sol\":759:1035  function distributeReward(address user, uint256 amount) external onlyOwner {... */\n    tag_16:\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2334:2347  _checkOwner() */\n      tag_48\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2334:2345  _checkOwner */\n      tag_49\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2334:2347  _checkOwner() */\n      jump\t// in\n    tag_48:\n        /* \"contracts/PlatformFeeAndRewardSystem.sol\":862:863  0 */\n      0x00\n        /* \"contracts/PlatformFeeAndRewardSystem.sol\":853:859  amount */\n      dup2\n        /* \"contracts/PlatformFeeAndRewardSystem.sol\":853:863  amount > 0 */\n      gt\n        /* \"contracts/PlatformFeeAndRewardSystem.sol\":845:886  require(amount > 0, \"Amount must be > 0\") */\n      tag_51\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_52\n      swap1\n      tag_53\n      jump\t// in\n    tag_52:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_51:\n        /* \"contracts/PlatformFeeAndRewardSystem.sol\":897:911  uint256 reward */\n      0x00\n        /* \"contracts/PlatformFeeAndRewardSystem.sol\":914:937  calculateReward(amount) */\n      tag_54\n        /* \"contracts/PlatformFeeAndRewardSystem.sol\":930:936  amount */\n      dup3\n        /* \"contracts/PlatformFeeAndRewardSystem.sol\":914:929  calculateReward */\n      tag_38\n        /* \"contracts/PlatformFeeAndRewardSystem.sol\":914:937  calculateReward(amount) */\n      jump\t// in\n    tag_54:\n        /* \"contracts/PlatformFeeAndRewardSystem.sol\":897:937  uint256 reward = calculateReward(amount) */\n      swap1\n      pop\n        /* \"contracts/PlatformFeeAndRewardSystem.sol\":974:980  reward */\n      dup1\n        /* \"contracts/PlatformFeeAndRewardSystem.sol\":948:964  userRewardPoints */\n      0x02\n        /* \"contracts/PlatformFeeAndRewardSystem.sol\":948:970  userRewardPoints[user] */\n      0x00\n        /* \"contracts/PlatformFeeAndRewardSystem.sol\":965:969  user */\n      dup6\n        /* \"contracts/PlatformFeeAndRewardSystem.sol\":948:970  userRewardPoints[user] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"contracts/PlatformFeeAndRewardSystem.sol\":948:980  userRewardPoints[user] += reward */\n      dup3\n      dup3\n      sload\n      tag_55\n      swap2\n      swap1\n      tag_56\n      jump\t// in\n    tag_55:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/PlatformFeeAndRewardSystem.sol\":1014:1018  user */\n      dup3\n        /* \"contracts/PlatformFeeAndRewardSystem.sol\":996:1027  RewardDistributed(user, reward) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xe34918ff1c7084970068b53fd71ad6d8b04e9f15d3886cbf006443e6cdc52ea6\n        /* \"contracts/PlatformFeeAndRewardSystem.sol\":1020:1026  reward */\n      dup3\n        /* \"contracts/PlatformFeeAndRewardSystem.sol\":996:1027  RewardDistributed(user, reward) */\n      mload(0x40)\n      tag_57\n      swap2\n      swap1\n      tag_20\n      jump\t// in\n    tag_57:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log2\n        /* \"contracts/PlatformFeeAndRewardSystem.sol\":834:1035  {... */\n      pop\n        /* \"contracts/PlatformFeeAndRewardSystem.sol\":759:1035  function distributeReward(address user, uint256 amount) external onlyOwner {... */\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/PlatformFeeAndRewardSystem.sol\":365:391  uint256 public platformFee */\n    tag_18:\n      sload(0x00)\n      dup2\n      jump\t// out\n        /* \"contracts/PlatformFeeAndRewardSystem.sol\":398:428  uint256 public maxRewardPoints */\n    tag_22:\n      sload(0x01)\n      dup2\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3155:3256  function renounceOwnership() public virtual onlyOwner {... */\n    tag_25:\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2334:2347  _checkOwner() */\n      tag_59\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2334:2345  _checkOwner */\n      tag_49\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2334:2347  _checkOwner() */\n      jump\t// in\n    tag_59:\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3219:3249  _transferOwnership(address(0)) */\n      tag_61\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3246:3247  0 */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3219:3237  _transferOwnership */\n      tag_62\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3219:3249  _transferOwnership(address(0)) */\n      jump\t// in\n    tag_61:\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3155:3256  function renounceOwnership() public virtual onlyOwner {... */\n      jump\t// out\n        /* \"contracts/PlatformFeeAndRewardSystem.sol\":435:486  mapping(address => uint256) public userRewardPoints */\n    tag_29:\n      mstore(0x20, 0x02)\n      dup1\n      0x00\n      mstore\n      keccak256(0x00, 0x40)\n      0x00\n      swap2\n      pop\n      swap1\n      pop\n      sload\n      dup2\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2441:2585  function owner() public view virtual returns (address) {... */\n    tag_32:\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2487:2494  address */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2506:2530  OwnableStorage storage $ */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2533:2553  _getOwnableStorage() */\n      tag_64\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2533:2551  _getOwnableStorage */\n      tag_65\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2533:2553  _getOwnableStorage() */\n      jump\t// in\n    tag_64:\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2506:2553  OwnableStorage storage $ = _getOwnableStorage() */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2570:2571  $ */\n      dup1\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2570:2578  $._owner */\n      0x00\n      add\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2563:2578  return $._owner */\n      swap2\n      pop\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2441:2585  function owner() public view virtual returns (address) {... */\n      swap1\n      jump\t// out\n        /* \"contracts/PlatformFeeAndRewardSystem.sol\":1043:1247  function calculateReward(uint256 amount) public view returns (uint256) {... */\n    tag_38:\n        /* \"contracts/PlatformFeeAndRewardSystem.sol\":1105:1112  uint256 */\n      0x00\n        /* \"contracts/PlatformFeeAndRewardSystem.sol\":1125:1139  uint256 reward */\n      0x00\n        /* \"contracts/PlatformFeeAndRewardSystem.sol\":1165:1170  10000 */\n      0x2710\n        /* \"contracts/PlatformFeeAndRewardSystem.sol\":1151:1162  platformFee */\n      sload(0x00)\n        /* \"contracts/PlatformFeeAndRewardSystem.sol\":1142:1148  amount */\n      dup5\n        /* \"contracts/PlatformFeeAndRewardSystem.sol\":1142:1162  amount * platformFee */\n      tag_67\n      swap2\n      swap1\n      tag_68\n      jump\t// in\n    tag_67:\n        /* \"contracts/PlatformFeeAndRewardSystem.sol\":1142:1170  amount * platformFee / 10000 */\n      tag_69\n      swap2\n      swap1\n      tag_70\n      jump\t// in\n    tag_69:\n        /* \"contracts/PlatformFeeAndRewardSystem.sol\":1125:1170  uint256 reward = amount * platformFee / 10000 */\n      swap1\n      pop\n        /* \"contracts/PlatformFeeAndRewardSystem.sol\":1197:1212  maxRewardPoints */\n      sload(0x01)\n        /* \"contracts/PlatformFeeAndRewardSystem.sol\":1188:1194  reward */\n      dup2\n        /* \"contracts/PlatformFeeAndRewardSystem.sol\":1188:1212  reward > maxRewardPoints */\n      gt\n        /* \"contracts/PlatformFeeAndRewardSystem.sol\":1188:1239  reward > maxRewardPoints ? maxRewardPoints : reward */\n      tag_71\n      jumpi\n        /* \"contracts/PlatformFeeAndRewardSystem.sol\":1233:1239  reward */\n      dup1\n        /* \"contracts/PlatformFeeAndRewardSystem.sol\":1188:1239  reward > maxRewardPoints ? maxRewardPoints : reward */\n      jump(tag_72)\n    tag_71:\n        /* \"contracts/PlatformFeeAndRewardSystem.sol\":1215:1230  maxRewardPoints */\n      sload(0x01)\n        /* \"contracts/PlatformFeeAndRewardSystem.sol\":1188:1239  reward > maxRewardPoints ? maxRewardPoints : reward */\n    tag_72:\n        /* \"contracts/PlatformFeeAndRewardSystem.sol\":1181:1239  return reward > maxRewardPoints ? maxRewardPoints : reward */\n      swap2\n      pop\n      pop\n        /* \"contracts/PlatformFeeAndRewardSystem.sol\":1043:1247  function calculateReward(uint256 amount) public view returns (uint256) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"contracts/PlatformFeeAndRewardSystem.sol\":565:751  function initialize(uint256 _fee, uint256 _maxPoints) public initializer {... */\n    tag_43:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4158:4188  InitializableStorage storage $ */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4191:4217  _getInitializableStorage() */\n      tag_74\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4191:4215  _getInitializableStorage */\n      tag_75\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4191:4217  _getInitializableStorage() */\n      jump\t// in\n    tag_74:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4158:4217  InitializableStorage storage $ = _getInitializableStorage() */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4279:4298  bool isTopLevelCall */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4302:4303  $ */\n      dup2\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4302:4317  $._initializing */\n      0x00\n      add\n      0x08\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4301:4317  !$._initializing */\n      iszero\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4279:4317  bool isTopLevelCall = !$._initializing */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4327:4345  uint64 initialized */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4348:4349  $ */\n      dup3\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4348:4362  $._initialized */\n      0x00\n      add\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4327:4362  uint64 initialized = $._initialized */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4704:4721  bool initialSetup */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4739:4740  0 */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4724:4735  initialized */\n      dup3\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4724:4740  initialized == 0 */\n      0xffffffffffffffff\n      and\n      eq\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4724:4758  initialized == 0 && isTopLevelCall */\n      dup1\n      iszero\n      tag_76\n      jumpi\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4744:4758  isTopLevelCall */\n      dup3\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4724:4758  initialized == 0 && isTopLevelCall */\n    tag_76:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4704:4758  bool initialSetup = initialized == 0 && isTopLevelCall */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4768:4785  bool construction */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4803:4804  1 */\n      0x01\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4788:4799  initialized */\n      dup4\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4788:4804  initialized == 1 */\n      0xffffffffffffffff\n      and\n      eq\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4788:4838  initialized == 1 && address(this).code.length == 0 */\n      dup1\n      iszero\n      tag_77\n      jumpi\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4837:4838  0 */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4816:4820  this */\n      address\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4808:4833  address(this).code.length */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      extcodesize\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4808:4838  address(this).code.length == 0 */\n      eq\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4788:4838  initialized == 1 && address(this).code.length == 0 */\n    tag_77:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4768:4838  bool construction = initialized == 1 && address(this).code.length == 0 */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4854:4866  initialSetup */\n      dup2\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4853:4866  !initialSetup */\n      iszero\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4853:4883  !initialSetup && !construction */\n      dup1\n      iszero\n      tag_78\n      jumpi\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4871:4883  construction */\n      dup1\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4870:4883  !construction */\n      iszero\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4853:4883  !initialSetup && !construction */\n    tag_78:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4849:4940  if (!initialSetup && !construction) {... */\n      iszero\n      tag_79\n      jumpi\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4906:4929  InvalidInitialization() */\n      mload(0x40)\n      0xf92ee8a900000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4849:4940  if (!initialSetup && !construction) {... */\n    tag_79:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4966:4967  1 */\n      0x01\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4949:4950  $ */\n      dup6\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4949:4963  $._initialized */\n      0x00\n      add\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4949:4967  $._initialized = 1 */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4981:4995  isTopLevelCall */\n      dup4\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4977:5044  if (isTopLevelCall) {... */\n      iszero\n      tag_80\n      jumpi\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":5029:5033  true */\n      0x01\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":5011:5012  $ */\n      dup6\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":5011:5026  $._initializing */\n      0x00\n      add\n      0x08\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":5011:5033  $._initializing = true */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      iszero\n      iszero\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4977:5044  if (isTopLevelCall) {... */\n    tag_80:\n        /* \"contracts/PlatformFeeAndRewardSystem.sol\":649:675  __Ownable_init(msg.sender) */\n      tag_82\n        /* \"contracts/PlatformFeeAndRewardSystem.sol\":664:674  msg.sender */\n      caller\n        /* \"contracts/PlatformFeeAndRewardSystem.sol\":649:663  __Ownable_init */\n      tag_83\n        /* \"contracts/PlatformFeeAndRewardSystem.sol\":649:675  __Ownable_init(msg.sender) */\n      jump\t// in\n    tag_82:\n        /* \"contracts/PlatformFeeAndRewardSystem.sol\":700:704  _fee */\n      dup7\n        /* \"contracts/PlatformFeeAndRewardSystem.sol\":686:697  platformFee */\n      0x00\n        /* \"contracts/PlatformFeeAndRewardSystem.sol\":686:704  platformFee = _fee */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/PlatformFeeAndRewardSystem.sol\":733:743  _maxPoints */\n      dup6\n        /* \"contracts/PlatformFeeAndRewardSystem.sol\":715:730  maxRewardPoints */\n      0x01\n        /* \"contracts/PlatformFeeAndRewardSystem.sol\":715:743  maxRewardPoints = _maxPoints */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":5068:5082  isTopLevelCall */\n      dup4\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":5064:5165  if (isTopLevelCall) {... */\n      iszero\n      tag_84\n      jumpi\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":5116:5121  false */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":5098:5099  $ */\n      dup6\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":5098:5113  $._initializing */\n      0x00\n      add\n      0x08\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":5098:5121  $._initializing = false */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      iszero\n      iszero\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":5140:5154  Initialized(1) */\n      0xc7f505b2f371ae2175ee4913f4499e1f2633a7b5936321eed1cdaeb6115181d2\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":5152:5153  1 */\n      0x01\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":5140:5154  Initialized(1) */\n      mload(0x40)\n      tag_85\n      swap2\n      swap1\n      tag_86\n      jump\t// in\n    tag_85:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log1\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":5064:5165  if (isTopLevelCall) {... */\n    tag_84:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4092:5171  {... */\n      pop\n      pop\n      pop\n      pop\n      pop\n        /* \"contracts/PlatformFeeAndRewardSystem.sol\":565:751  function initialize(uint256 _fee, uint256 _maxPoints) public initializer {... */\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3405:3620  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_46:\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2334:2347  _checkOwner() */\n      tag_88\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2334:2345  _checkOwner */\n      tag_49\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2334:2347  _checkOwner() */\n      jump\t// in\n    tag_88:\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3509:3510  0 */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3489:3511  newOwner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3489:3497  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3489:3511  newOwner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3485:3576  if (newOwner == address(0)) {... */\n      tag_90\n      jumpi\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3562:3563  0 */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3534:3565  OwnableInvalidOwner(address(0)) */\n      mload(0x40)\n      0x1e4fbdf700000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_91\n      swap2\n      swap1\n      tag_34\n      jump\t// in\n    tag_91:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3485:3576  if (newOwner == address(0)) {... */\n    tag_90:\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3585:3613  _transferOwnership(newOwner) */\n      tag_92\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3604:3612  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3585:3603  _transferOwnership */\n      tag_62\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3585:3613  _transferOwnership(newOwner) */\n      jump\t// in\n    tag_92:\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3405:3620  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2658:2820  function _checkOwner() internal view virtual {... */\n    tag_49:\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2728:2740  _msgSender() */\n      tag_94\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2728:2738  _msgSender */\n      tag_95\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2728:2740  _msgSender() */\n      jump\t// in\n    tag_94:\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2717:2740  owner() != _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2717:2724  owner() */\n      tag_96\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2717:2722  owner */\n      tag_32\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2717:2724  owner() */\n      jump\t// in\n    tag_96:\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2717:2740  owner() != _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2713:2814  if (owner() != _msgSender()) {... */\n      tag_97\n      jumpi\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2790:2802  _msgSender() */\n      tag_98\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2790:2800  _msgSender */\n      tag_95\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2790:2802  _msgSender() */\n      jump\t// in\n    tag_98:\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2763:2803  OwnableUnauthorizedAccount(_msgSender()) */\n      mload(0x40)\n      0x118cdaa700000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_99\n      swap2\n      swap1\n      tag_34\n      jump\t// in\n    tag_99:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2713:2814  if (owner() != _msgSender()) {... */\n    tag_97:\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2658:2820  function _checkOwner() internal view virtual {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3774:4022  function _transferOwnership(address newOwner) internal virtual {... */\n    tag_62:\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3847:3871  OwnableStorage storage $ */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3874:3894  _getOwnableStorage() */\n      tag_101\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3874:3892  _getOwnableStorage */\n      tag_65\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3874:3894  _getOwnableStorage() */\n      jump\t// in\n    tag_101:\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3847:3894  OwnableStorage storage $ = _getOwnableStorage() */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3904:3920  address oldOwner */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3923:3924  $ */\n      dup2\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3923:3931  $._owner */\n      0x00\n      add\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3904:3931  address oldOwner = $._owner */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3952:3960  newOwner */\n      dup3\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3941:3942  $ */\n      dup3\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3941:3949  $._owner */\n      0x00\n      add\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3941:3960  $._owner = newOwner */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":4006:4014  newOwner */\n      dup3\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3975:4015  OwnershipTransferred(oldOwner, newOwner) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3996:4004  oldOwner */\n      dup2\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3975:4015  OwnershipTransferred(oldOwner, newOwner) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3837:4022  {... */\n      pop\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3774:4022  function _transferOwnership(address newOwner) internal virtual {... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1192:1351  function _getOwnableStorage() private pure returns (OwnableStorage storage $) {... */\n    tag_65:\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1244:1268  OwnableStorage storage $ */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1313:1335  OwnableStorageLocation */\n      0x9016d09d72d40fdae2fd8ceac6b6234c7706214fd39c1cd1e609a0528c199300\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1303:1335  $.slot := OwnableStorageLocation */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1192:1351  function _getOwnableStorage() private pure returns (OwnableStorage storage $) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":9071:9276  function _getInitializableStorage() private pure returns (InitializableStorage storage $) {... */\n    tag_75:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":9129:9159  InitializableStorage storage $ */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":9171:9183  bytes32 slot */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":9186:9213  _initializableStorageSlot() */\n      tag_104\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":9186:9211  _initializableStorageSlot */\n      tag_105\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":9186:9213  _initializableStorageSlot() */\n      jump\t// in\n    tag_104:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":9171:9213  bytes32 slot = _initializableStorageSlot() */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":9256:9260  slot */\n      dup1\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":9246:9260  $.slot := slot */\n      swap2\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":9232:9270  {... */\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":9071:9276  function _getInitializableStorage() private pure returns (InitializableStorage storage $) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1847:1974  function __Ownable_init(address initialOwner) internal onlyInitializing {... */\n    tag_83:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":6929:6949  _checkInitializing() */\n      tag_107\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":6929:6947  _checkInitializing */\n      tag_108\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":6929:6949  _checkInitializing() */\n      jump\t// in\n    tag_107:\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1929:1967  __Ownable_init_unchained(initialOwner) */\n      tag_110\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1954:1966  initialOwner */\n      dup2\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1929:1953  __Ownable_init_unchained */\n      tag_111\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1929:1967  __Ownable_init_unchained(initialOwner) */\n      jump\t// in\n    tag_110:\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1847:1974  function __Ownable_init(address initialOwner) internal onlyInitializing {... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":887:983  function _msgSender() internal view virtual returns (address) {... */\n    tag_95:\n        /* \"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":940:947  address */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":966:976  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":959:976  return msg.sender */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":887:983  function _msgSender() internal view virtual returns (address) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":8819:8941  function _initializableStorageSlot() internal pure virtual returns (bytes32) {... */\n    tag_105:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":8887:8894  bytes32 */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":3147:3213  0xf0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a00 */\n      0xf0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a00\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":8913:8934  INITIALIZABLE_STORAGE */\n      0x00\n      shl\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":8906:8934  return INITIALIZABLE_STORAGE */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":8819:8941  function _initializableStorageSlot() internal pure virtual returns (bytes32) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":7082:7223  function _checkInitializing() internal view virtual {... */\n    tag_108:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":7149:7166  _isInitializing() */\n      tag_115\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":7149:7164  _isInitializing */\n      tag_116\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":7149:7166  _isInitializing() */\n      jump\t// in\n    tag_115:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":7144:7217  if (!_isInitializing()) {... */\n      tag_117\n      jumpi\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":7189:7206  NotInitializing() */\n      mload(0x40)\n      0xd7e6bcf800000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":7144:7217  if (!_isInitializing()) {... */\n    tag_117:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":7082:7223  function _checkInitializing() internal view virtual {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1980:2215  function __Ownable_init_unchained(address initialOwner) internal onlyInitializing {... */\n    tag_111:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":6929:6949  _checkInitializing() */\n      tag_119\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":6929:6947  _checkInitializing */\n      tag_108\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":6929:6949  _checkInitializing() */\n      jump\t// in\n    tag_119:\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2100:2101  0 */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2076:2102  initialOwner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2076:2088  initialOwner */\n      dup2\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2076:2102  initialOwner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2072:2167  if (initialOwner == address(0)) {... */\n      tag_121\n      jumpi\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2153:2154  0 */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2125:2156  OwnableInvalidOwner(address(0)) */\n      mload(0x40)\n      0x1e4fbdf700000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_122\n      swap2\n      swap1\n      tag_34\n      jump\t// in\n    tag_122:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2072:2167  if (initialOwner == address(0)) {... */\n    tag_121:\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2176:2208  _transferOwnership(initialOwner) */\n      tag_123\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2195:2207  initialOwner */\n      dup2\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2176:2194  _transferOwnership */\n      tag_62\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2176:2208  _transferOwnership(initialOwner) */\n      jump\t// in\n    tag_123:\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1980:2215  function __Ownable_init_unchained(address initialOwner) internal onlyInitializing {... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":8485:8605  function _isInitializing() internal view returns (bool) {... */\n    tag_116:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":8535:8539  bool */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":8558:8584  _getInitializableStorage() */\n      tag_125\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":8558:8582  _getInitializableStorage */\n      tag_75\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":8558:8584  _getInitializableStorage() */\n      jump\t// in\n    tag_125:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":8558:8598  _getInitializableStorage()._initializing */\n      0x00\n      add\n      0x08\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":8551:8598  return _getInitializableStorage()._initializing */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":8485:8605  function _isInitializing() internal view returns (bool) {... */\n      swap1\n      jump\t// out\n        /* \"#utility.yul\":88:205   */\n    tag_127:\n        /* \"#utility.yul\":197:198   */\n      0x00\n        /* \"#utility.yul\":194:195   */\n      0x00\n        /* \"#utility.yul\":187:199   */\n      revert\n        /* \"#utility.yul\":334:460   */\n    tag_129:\n        /* \"#utility.yul\":371:378   */\n      0x00\n        /* \"#utility.yul\":411:453   */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":404:409   */\n      dup3\n        /* \"#utility.yul\":400:454   */\n      and\n        /* \"#utility.yul\":389:454   */\n      swap1\n      pop\n        /* \"#utility.yul\":334:460   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":466:562   */\n    tag_130:\n        /* \"#utility.yul\":503:510   */\n      0x00\n        /* \"#utility.yul\":532:556   */\n      tag_154\n        /* \"#utility.yul\":550:555   */\n      dup3\n        /* \"#utility.yul\":532:556   */\n      tag_129\n      jump\t// in\n    tag_154:\n        /* \"#utility.yul\":521:556   */\n      swap1\n      pop\n        /* \"#utility.yul\":466:562   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":568:690   */\n    tag_131:\n        /* \"#utility.yul\":641:665   */\n      tag_156\n        /* \"#utility.yul\":659:664   */\n      dup2\n        /* \"#utility.yul\":641:665   */\n      tag_130\n      jump\t// in\n    tag_156:\n        /* \"#utility.yul\":634:639   */\n      dup2\n        /* \"#utility.yul\":631:666   */\n      eq\n        /* \"#utility.yul\":621:684   */\n      tag_157\n      jumpi\n        /* \"#utility.yul\":680:681   */\n      0x00\n        /* \"#utility.yul\":677:678   */\n      0x00\n        /* \"#utility.yul\":670:682   */\n      revert\n        /* \"#utility.yul\":621:684   */\n    tag_157:\n        /* \"#utility.yul\":568:690   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":696:835   */\n    tag_132:\n        /* \"#utility.yul\":742:747   */\n      0x00\n        /* \"#utility.yul\":780:786   */\n      dup2\n        /* \"#utility.yul\":767:787   */\n      calldataload\n        /* \"#utility.yul\":758:787   */\n      swap1\n      pop\n        /* \"#utility.yul\":796:829   */\n      tag_159\n        /* \"#utility.yul\":823:828   */\n      dup2\n        /* \"#utility.yul\":796:829   */\n      tag_131\n      jump\t// in\n    tag_159:\n        /* \"#utility.yul\":696:835   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":841:918   */\n    tag_133:\n        /* \"#utility.yul\":878:885   */\n      0x00\n        /* \"#utility.yul\":907:912   */\n      dup2\n        /* \"#utility.yul\":896:912   */\n      swap1\n      pop\n        /* \"#utility.yul\":841:918   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":924:1046   */\n    tag_134:\n        /* \"#utility.yul\":997:1021   */\n      tag_162\n        /* \"#utility.yul\":1015:1020   */\n      dup2\n        /* \"#utility.yul\":997:1021   */\n      tag_133\n      jump\t// in\n    tag_162:\n        /* \"#utility.yul\":990:995   */\n      dup2\n        /* \"#utility.yul\":987:1022   */\n      eq\n        /* \"#utility.yul\":977:1040   */\n      tag_163\n      jumpi\n        /* \"#utility.yul\":1036:1037   */\n      0x00\n        /* \"#utility.yul\":1033:1034   */\n      0x00\n        /* \"#utility.yul\":1026:1038   */\n      revert\n        /* \"#utility.yul\":977:1040   */\n    tag_163:\n        /* \"#utility.yul\":924:1046   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1052:1191   */\n    tag_135:\n        /* \"#utility.yul\":1098:1103   */\n      0x00\n        /* \"#utility.yul\":1136:1142   */\n      dup2\n        /* \"#utility.yul\":1123:1143   */\n      calldataload\n        /* \"#utility.yul\":1114:1143   */\n      swap1\n      pop\n        /* \"#utility.yul\":1152:1185   */\n      tag_165\n        /* \"#utility.yul\":1179:1184   */\n      dup2\n        /* \"#utility.yul\":1152:1185   */\n      tag_134\n      jump\t// in\n    tag_165:\n        /* \"#utility.yul\":1052:1191   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1197:1671   */\n    tag_15:\n        /* \"#utility.yul\":1265:1271   */\n      0x00\n        /* \"#utility.yul\":1273:1279   */\n      0x00\n        /* \"#utility.yul\":1322:1324   */\n      0x40\n        /* \"#utility.yul\":1310:1319   */\n      dup4\n        /* \"#utility.yul\":1301:1308   */\n      dup6\n        /* \"#utility.yul\":1297:1320   */\n      sub\n        /* \"#utility.yul\":1293:1325   */\n      slt\n        /* \"#utility.yul\":1290:1409   */\n      iszero\n      tag_167\n      jumpi\n        /* \"#utility.yul\":1328:1407   */\n      tag_168\n      tag_127\n      jump\t// in\n    tag_168:\n        /* \"#utility.yul\":1290:1409   */\n    tag_167:\n        /* \"#utility.yul\":1448:1449   */\n      0x00\n        /* \"#utility.yul\":1473:1526   */\n      tag_169\n        /* \"#utility.yul\":1518:1525   */\n      dup6\n        /* \"#utility.yul\":1509:1515   */\n      dup3\n        /* \"#utility.yul\":1498:1507   */\n      dup7\n        /* \"#utility.yul\":1494:1516   */\n      add\n        /* \"#utility.yul\":1473:1526   */\n      tag_132\n      jump\t// in\n    tag_169:\n        /* \"#utility.yul\":1463:1526   */\n      swap3\n      pop\n        /* \"#utility.yul\":1419:1536   */\n      pop\n        /* \"#utility.yul\":1575:1577   */\n      0x20\n        /* \"#utility.yul\":1601:1654   */\n      tag_170\n        /* \"#utility.yul\":1646:1653   */\n      dup6\n        /* \"#utility.yul\":1637:1643   */\n      dup3\n        /* \"#utility.yul\":1626:1635   */\n      dup7\n        /* \"#utility.yul\":1622:1644   */\n      add\n        /* \"#utility.yul\":1601:1654   */\n      tag_135\n      jump\t// in\n    tag_170:\n        /* \"#utility.yul\":1591:1654   */\n      swap2\n      pop\n        /* \"#utility.yul\":1546:1664   */\n      pop\n        /* \"#utility.yul\":1197:1671   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1677:1795   */\n    tag_136:\n        /* \"#utility.yul\":1764:1788   */\n      tag_172\n        /* \"#utility.yul\":1782:1787   */\n      dup2\n        /* \"#utility.yul\":1764:1788   */\n      tag_133\n      jump\t// in\n    tag_172:\n        /* \"#utility.yul\":1759:1762   */\n      dup3\n        /* \"#utility.yul\":1752:1789   */\n      mstore\n        /* \"#utility.yul\":1677:1795   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1801:2023   */\n    tag_20:\n        /* \"#utility.yul\":1894:1898   */\n      0x00\n        /* \"#utility.yul\":1932:1934   */\n      0x20\n        /* \"#utility.yul\":1921:1930   */\n      dup3\n        /* \"#utility.yul\":1917:1935   */\n      add\n        /* \"#utility.yul\":1909:1935   */\n      swap1\n      pop\n        /* \"#utility.yul\":1945:2016   */\n      tag_174\n        /* \"#utility.yul\":2013:2014   */\n      0x00\n        /* \"#utility.yul\":2002:2011   */\n      dup4\n        /* \"#utility.yul\":1998:2015   */\n      add\n        /* \"#utility.yul\":1989:1995   */\n      dup5\n        /* \"#utility.yul\":1945:2016   */\n      tag_136\n      jump\t// in\n    tag_174:\n        /* \"#utility.yul\":1801:2023   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2029:2358   */\n    tag_28:\n        /* \"#utility.yul\":2088:2094   */\n      0x00\n        /* \"#utility.yul\":2137:2139   */\n      0x20\n        /* \"#utility.yul\":2125:2134   */\n      dup3\n        /* \"#utility.yul\":2116:2123   */\n      dup5\n        /* \"#utility.yul\":2112:2135   */\n      sub\n        /* \"#utility.yul\":2108:2140   */\n      slt\n        /* \"#utility.yul\":2105:2224   */\n      iszero\n      tag_176\n      jumpi\n        /* \"#utility.yul\":2143:2222   */\n      tag_177\n      tag_127\n      jump\t// in\n    tag_177:\n        /* \"#utility.yul\":2105:2224   */\n    tag_176:\n        /* \"#utility.yul\":2263:2264   */\n      0x00\n        /* \"#utility.yul\":2288:2341   */\n      tag_178\n        /* \"#utility.yul\":2333:2340   */\n      dup5\n        /* \"#utility.yul\":2324:2330   */\n      dup3\n        /* \"#utility.yul\":2313:2322   */\n      dup6\n        /* \"#utility.yul\":2309:2331   */\n      add\n        /* \"#utility.yul\":2288:2341   */\n      tag_132\n      jump\t// in\n    tag_178:\n        /* \"#utility.yul\":2278:2341   */\n      swap2\n      pop\n        /* \"#utility.yul\":2234:2351   */\n      pop\n        /* \"#utility.yul\":2029:2358   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2364:2482   */\n    tag_137:\n        /* \"#utility.yul\":2451:2475   */\n      tag_180\n        /* \"#utility.yul\":2469:2474   */\n      dup2\n        /* \"#utility.yul\":2451:2475   */\n      tag_130\n      jump\t// in\n    tag_180:\n        /* \"#utility.yul\":2446:2449   */\n      dup3\n        /* \"#utility.yul\":2439:2476   */\n      mstore\n        /* \"#utility.yul\":2364:2482   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2488:2710   */\n    tag_34:\n        /* \"#utility.yul\":2581:2585   */\n      0x00\n        /* \"#utility.yul\":2619:2621   */\n      0x20\n        /* \"#utility.yul\":2608:2617   */\n      dup3\n        /* \"#utility.yul\":2604:2622   */\n      add\n        /* \"#utility.yul\":2596:2622   */\n      swap1\n      pop\n        /* \"#utility.yul\":2632:2703   */\n      tag_182\n        /* \"#utility.yul\":2700:2701   */\n      0x00\n        /* \"#utility.yul\":2689:2698   */\n      dup4\n        /* \"#utility.yul\":2685:2702   */\n      add\n        /* \"#utility.yul\":2676:2682   */\n      dup5\n        /* \"#utility.yul\":2632:2703   */\n      tag_137\n      jump\t// in\n    tag_182:\n        /* \"#utility.yul\":2488:2710   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2716:3045   */\n    tag_37:\n        /* \"#utility.yul\":2775:2781   */\n      0x00\n        /* \"#utility.yul\":2824:2826   */\n      0x20\n        /* \"#utility.yul\":2812:2821   */\n      dup3\n        /* \"#utility.yul\":2803:2810   */\n      dup5\n        /* \"#utility.yul\":2799:2822   */\n      sub\n        /* \"#utility.yul\":2795:2827   */\n      slt\n        /* \"#utility.yul\":2792:2911   */\n      iszero\n      tag_184\n      jumpi\n        /* \"#utility.yul\":2830:2909   */\n      tag_185\n      tag_127\n      jump\t// in\n    tag_185:\n        /* \"#utility.yul\":2792:2911   */\n    tag_184:\n        /* \"#utility.yul\":2950:2951   */\n      0x00\n        /* \"#utility.yul\":2975:3028   */\n      tag_186\n        /* \"#utility.yul\":3020:3027   */\n      dup5\n        /* \"#utility.yul\":3011:3017   */\n      dup3\n        /* \"#utility.yul\":3000:3009   */\n      dup6\n        /* \"#utility.yul\":2996:3018   */\n      add\n        /* \"#utility.yul\":2975:3028   */\n      tag_135\n      jump\t// in\n    tag_186:\n        /* \"#utility.yul\":2965:3028   */\n      swap2\n      pop\n        /* \"#utility.yul\":2921:3038   */\n      pop\n        /* \"#utility.yul\":2716:3045   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3051:3525   */\n    tag_42:\n        /* \"#utility.yul\":3119:3125   */\n      0x00\n        /* \"#utility.yul\":3127:3133   */\n      0x00\n        /* \"#utility.yul\":3176:3178   */\n      0x40\n        /* \"#utility.yul\":3164:3173   */\n      dup4\n        /* \"#utility.yul\":3155:3162   */\n      dup6\n        /* \"#utility.yul\":3151:3174   */\n      sub\n        /* \"#utility.yul\":3147:3179   */\n      slt\n        /* \"#utility.yul\":3144:3263   */\n      iszero\n      tag_188\n      jumpi\n        /* \"#utility.yul\":3182:3261   */\n      tag_189\n      tag_127\n      jump\t// in\n    tag_189:\n        /* \"#utility.yul\":3144:3263   */\n    tag_188:\n        /* \"#utility.yul\":3302:3303   */\n      0x00\n        /* \"#utility.yul\":3327:3380   */\n      tag_190\n        /* \"#utility.yul\":3372:3379   */\n      dup6\n        /* \"#utility.yul\":3363:3369   */\n      dup3\n        /* \"#utility.yul\":3352:3361   */\n      dup7\n        /* \"#utility.yul\":3348:3370   */\n      add\n        /* \"#utility.yul\":3327:3380   */\n      tag_135\n      jump\t// in\n    tag_190:\n        /* \"#utility.yul\":3317:3380   */\n      swap3\n      pop\n        /* \"#utility.yul\":3273:3390   */\n      pop\n        /* \"#utility.yul\":3429:3431   */\n      0x20\n        /* \"#utility.yul\":3455:3508   */\n      tag_191\n        /* \"#utility.yul\":3500:3507   */\n      dup6\n        /* \"#utility.yul\":3491:3497   */\n      dup3\n        /* \"#utility.yul\":3480:3489   */\n      dup7\n        /* \"#utility.yul\":3476:3498   */\n      add\n        /* \"#utility.yul\":3455:3508   */\n      tag_135\n      jump\t// in\n    tag_191:\n        /* \"#utility.yul\":3445:3508   */\n      swap2\n      pop\n        /* \"#utility.yul\":3400:3518   */\n      pop\n        /* \"#utility.yul\":3051:3525   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3531:3700   */\n    tag_138:\n        /* \"#utility.yul\":3615:3626   */\n      0x00\n        /* \"#utility.yul\":3649:3655   */\n      dup3\n        /* \"#utility.yul\":3644:3647   */\n      dup3\n        /* \"#utility.yul\":3637:3656   */\n      mstore\n        /* \"#utility.yul\":3689:3693   */\n      0x20\n        /* \"#utility.yul\":3684:3687   */\n      dup3\n        /* \"#utility.yul\":3680:3694   */\n      add\n        /* \"#utility.yul\":3665:3694   */\n      swap1\n      pop\n        /* \"#utility.yul\":3531:3700   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3706:3874   */\n    tag_139:\n        /* \"#utility.yul\":3846:3866   */\n      0x416d6f756e74206d757374206265203e20300000000000000000000000000000\n        /* \"#utility.yul\":3842:3843   */\n      0x00\n        /* \"#utility.yul\":3834:3840   */\n      dup3\n        /* \"#utility.yul\":3830:3844   */\n      add\n        /* \"#utility.yul\":3823:3867   */\n      mstore\n        /* \"#utility.yul\":3706:3874   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3880:4246   */\n    tag_140:\n        /* \"#utility.yul\":4022:4025   */\n      0x00\n        /* \"#utility.yul\":4043:4110   */\n      tag_195\n        /* \"#utility.yul\":4107:4109   */\n      0x12\n        /* \"#utility.yul\":4102:4105   */\n      dup4\n        /* \"#utility.yul\":4043:4110   */\n      tag_138\n      jump\t// in\n    tag_195:\n        /* \"#utility.yul\":4036:4110   */\n      swap2\n      pop\n        /* \"#utility.yul\":4119:4212   */\n      tag_196\n        /* \"#utility.yul\":4208:4211   */\n      dup3\n        /* \"#utility.yul\":4119:4212   */\n      tag_139\n      jump\t// in\n    tag_196:\n        /* \"#utility.yul\":4237:4239   */\n      0x20\n        /* \"#utility.yul\":4232:4235   */\n      dup3\n        /* \"#utility.yul\":4228:4240   */\n      add\n        /* \"#utility.yul\":4221:4240   */\n      swap1\n      pop\n        /* \"#utility.yul\":3880:4246   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4252:4671   */\n    tag_53:\n        /* \"#utility.yul\":4418:4422   */\n      0x00\n        /* \"#utility.yul\":4456:4458   */\n      0x20\n        /* \"#utility.yul\":4445:4454   */\n      dup3\n        /* \"#utility.yul\":4441:4459   */\n      add\n        /* \"#utility.yul\":4433:4459   */\n      swap1\n      pop\n        /* \"#utility.yul\":4505:4514   */\n      dup2\n        /* \"#utility.yul\":4499:4503   */\n      dup2\n        /* \"#utility.yul\":4495:4515   */\n      sub\n        /* \"#utility.yul\":4491:4492   */\n      0x00\n        /* \"#utility.yul\":4480:4489   */\n      dup4\n        /* \"#utility.yul\":4476:4493   */\n      add\n        /* \"#utility.yul\":4469:4516   */\n      mstore\n        /* \"#utility.yul\":4533:4664   */\n      tag_198\n        /* \"#utility.yul\":4659:4663   */\n      dup2\n        /* \"#utility.yul\":4533:4664   */\n      tag_140\n      jump\t// in\n    tag_198:\n        /* \"#utility.yul\":4525:4664   */\n      swap1\n      pop\n        /* \"#utility.yul\":4252:4671   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4677:4857   */\n    tag_141:\n        /* \"#utility.yul\":4725:4802   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":4722:4723   */\n      0x00\n        /* \"#utility.yul\":4715:4803   */\n      mstore\n        /* \"#utility.yul\":4822:4826   */\n      0x11\n        /* \"#utility.yul\":4819:4820   */\n      0x04\n        /* \"#utility.yul\":4812:4827   */\n      mstore\n        /* \"#utility.yul\":4846:4850   */\n      0x24\n        /* \"#utility.yul\":4843:4844   */\n      0x00\n        /* \"#utility.yul\":4836:4851   */\n      revert\n        /* \"#utility.yul\":4863:5054   */\n    tag_56:\n        /* \"#utility.yul\":4903:4906   */\n      0x00\n        /* \"#utility.yul\":4922:4942   */\n      tag_201\n        /* \"#utility.yul\":4940:4941   */\n      dup3\n        /* \"#utility.yul\":4922:4942   */\n      tag_133\n      jump\t// in\n    tag_201:\n        /* \"#utility.yul\":4917:4942   */\n      swap2\n      pop\n        /* \"#utility.yul\":4956:4976   */\n      tag_202\n        /* \"#utility.yul\":4974:4975   */\n      dup4\n        /* \"#utility.yul\":4956:4976   */\n      tag_133\n      jump\t// in\n    tag_202:\n        /* \"#utility.yul\":4951:4976   */\n      swap3\n      pop\n        /* \"#utility.yul\":4999:5000   */\n      dup3\n        /* \"#utility.yul\":4996:4997   */\n      dup3\n        /* \"#utility.yul\":4992:5001   */\n      add\n        /* \"#utility.yul\":4985:5001   */\n      swap1\n      pop\n        /* \"#utility.yul\":5020:5023   */\n      dup1\n        /* \"#utility.yul\":5017:5018   */\n      dup3\n        /* \"#utility.yul\":5014:5024   */\n      gt\n        /* \"#utility.yul\":5011:5047   */\n      iszero\n      tag_203\n      jumpi\n        /* \"#utility.yul\":5027:5045   */\n      tag_204\n      tag_141\n      jump\t// in\n    tag_204:\n        /* \"#utility.yul\":5011:5047   */\n    tag_203:\n        /* \"#utility.yul\":4863:5054   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5060:5470   */\n    tag_68:\n        /* \"#utility.yul\":5100:5107   */\n      0x00\n        /* \"#utility.yul\":5123:5143   */\n      tag_206\n        /* \"#utility.yul\":5141:5142   */\n      dup3\n        /* \"#utility.yul\":5123:5143   */\n      tag_133\n      jump\t// in\n    tag_206:\n        /* \"#utility.yul\":5118:5143   */\n      swap2\n      pop\n        /* \"#utility.yul\":5157:5177   */\n      tag_207\n        /* \"#utility.yul\":5175:5176   */\n      dup4\n        /* \"#utility.yul\":5157:5177   */\n      tag_133\n      jump\t// in\n    tag_207:\n        /* \"#utility.yul\":5152:5177   */\n      swap3\n      pop\n        /* \"#utility.yul\":5212:5213   */\n      dup3\n        /* \"#utility.yul\":5209:5210   */\n      dup3\n        /* \"#utility.yul\":5205:5214   */\n      mul\n        /* \"#utility.yul\":5234:5264   */\n      tag_208\n        /* \"#utility.yul\":5252:5263   */\n      dup2\n        /* \"#utility.yul\":5234:5264   */\n      tag_133\n      jump\t// in\n    tag_208:\n        /* \"#utility.yul\":5223:5264   */\n      swap2\n      pop\n        /* \"#utility.yul\":5413:5414   */\n      dup3\n        /* \"#utility.yul\":5404:5411   */\n      dup3\n        /* \"#utility.yul\":5400:5415   */\n      div\n        /* \"#utility.yul\":5397:5398   */\n      dup5\n        /* \"#utility.yul\":5394:5416   */\n      eq\n        /* \"#utility.yul\":5374:5375   */\n      dup4\n        /* \"#utility.yul\":5367:5376   */\n      iszero\n        /* \"#utility.yul\":5347:5430   */\n      or\n        /* \"#utility.yul\":5324:5463   */\n      tag_209\n      jumpi\n        /* \"#utility.yul\":5443:5461   */\n      tag_210\n      tag_141\n      jump\t// in\n    tag_210:\n        /* \"#utility.yul\":5324:5463   */\n    tag_209:\n        /* \"#utility.yul\":5108:5470   */\n      pop\n        /* \"#utility.yul\":5060:5470   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5476:5656   */\n    tag_142:\n        /* \"#utility.yul\":5524:5601   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":5521:5522   */\n      0x00\n        /* \"#utility.yul\":5514:5602   */\n      mstore\n        /* \"#utility.yul\":5621:5625   */\n      0x12\n        /* \"#utility.yul\":5618:5619   */\n      0x04\n        /* \"#utility.yul\":5611:5626   */\n      mstore\n        /* \"#utility.yul\":5645:5649   */\n      0x24\n        /* \"#utility.yul\":5642:5643   */\n      0x00\n        /* \"#utility.yul\":5635:5650   */\n      revert\n        /* \"#utility.yul\":5662:5847   */\n    tag_70:\n        /* \"#utility.yul\":5702:5703   */\n      0x00\n        /* \"#utility.yul\":5719:5739   */\n      tag_213\n        /* \"#utility.yul\":5737:5738   */\n      dup3\n        /* \"#utility.yul\":5719:5739   */\n      tag_133\n      jump\t// in\n    tag_213:\n        /* \"#utility.yul\":5714:5739   */\n      swap2\n      pop\n        /* \"#utility.yul\":5753:5773   */\n      tag_214\n        /* \"#utility.yul\":5771:5772   */\n      dup4\n        /* \"#utility.yul\":5753:5773   */\n      tag_133\n      jump\t// in\n    tag_214:\n        /* \"#utility.yul\":5748:5773   */\n      swap3\n      pop\n        /* \"#utility.yul\":5792:5793   */\n      dup3\n        /* \"#utility.yul\":5782:5817   */\n      tag_215\n      jumpi\n        /* \"#utility.yul\":5797:5815   */\n      tag_216\n      tag_142\n      jump\t// in\n    tag_216:\n        /* \"#utility.yul\":5782:5817   */\n    tag_215:\n        /* \"#utility.yul\":5839:5840   */\n      dup3\n        /* \"#utility.yul\":5836:5837   */\n      dup3\n        /* \"#utility.yul\":5832:5841   */\n      div\n        /* \"#utility.yul\":5827:5841   */\n      swap1\n      pop\n        /* \"#utility.yul\":5662:5847   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5853:5938   */\n    tag_143:\n        /* \"#utility.yul\":5898:5905   */\n      0x00\n        /* \"#utility.yul\":5927:5932   */\n      dup2\n        /* \"#utility.yul\":5916:5932   */\n      swap1\n      pop\n        /* \"#utility.yul\":5853:5938   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5944:6045   */\n    tag_144:\n        /* \"#utility.yul\":5980:5987   */\n      0x00\n        /* \"#utility.yul\":6020:6038   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":6013:6018   */\n      dup3\n        /* \"#utility.yul\":6009:6039   */\n      and\n        /* \"#utility.yul\":5998:6039   */\n      swap1\n      pop\n        /* \"#utility.yul\":5944:6045   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6051:6111   */\n    tag_145:\n        /* \"#utility.yul\":6079:6082   */\n      0x00\n        /* \"#utility.yul\":6100:6105   */\n      dup2\n        /* \"#utility.yul\":6093:6105   */\n      swap1\n      pop\n        /* \"#utility.yul\":6051:6111   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6117:6273   */\n    tag_146:\n        /* \"#utility.yul\":6174:6183   */\n      0x00\n        /* \"#utility.yul\":6207:6267   */\n      tag_221\n        /* \"#utility.yul\":6224:6266   */\n      tag_222\n        /* \"#utility.yul\":6233:6265   */\n      tag_223\n        /* \"#utility.yul\":6259:6264   */\n      dup5\n        /* \"#utility.yul\":6233:6265   */\n      tag_143\n      jump\t// in\n    tag_223:\n        /* \"#utility.yul\":6224:6266   */\n      tag_145\n      jump\t// in\n    tag_222:\n        /* \"#utility.yul\":6207:6267   */\n      tag_144\n      jump\t// in\n    tag_221:\n        /* \"#utility.yul\":6194:6267   */\n      swap1\n      pop\n        /* \"#utility.yul\":6117:6273   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6279:6424   */\n    tag_147:\n        /* \"#utility.yul\":6373:6417   */\n      tag_225\n        /* \"#utility.yul\":6411:6416   */\n      dup2\n        /* \"#utility.yul\":6373:6417   */\n      tag_146\n      jump\t// in\n    tag_225:\n        /* \"#utility.yul\":6368:6371   */\n      dup3\n        /* \"#utility.yul\":6361:6418   */\n      mstore\n        /* \"#utility.yul\":6279:6424   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6430:6666   */\n    tag_86:\n        /* \"#utility.yul\":6530:6534   */\n      0x00\n        /* \"#utility.yul\":6568:6570   */\n      0x20\n        /* \"#utility.yul\":6557:6566   */\n      dup3\n        /* \"#utility.yul\":6553:6571   */\n      add\n        /* \"#utility.yul\":6545:6571   */\n      swap1\n      pop\n        /* \"#utility.yul\":6581:6659   */\n      tag_227\n        /* \"#utility.yul\":6656:6657   */\n      0x00\n        /* \"#utility.yul\":6645:6654   */\n      dup4\n        /* \"#utility.yul\":6641:6658   */\n      add\n        /* \"#utility.yul\":6632:6638   */\n      dup5\n        /* \"#utility.yul\":6581:6659   */\n      tag_147\n      jump\t// in\n    tag_227:\n        /* \"#utility.yul\":6430:6666   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n\n    auxdata: 0xa26469706673582212204cf1ae2f73c645687dfb9ec84958e9f765e2648f31dfa33a1692ea3ba6eb519d64736f6c634300081e0033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "6080604052348015600e575f5ffd5b50610be28061001c5f395ff3fe608060405234801561000f575f5ffd5b5060043610610091575f3560e01c80637ce26644116100645780637ce26644146100f75780638da5cb5b14610127578063d2d7231f14610145578063e4a3011614610175578063f2fde38b1461019157610091565b80631ec8bb8c1461009557806326232a2e146100b157806349880782146100cf578063715018a6146100ed575b5f5ffd5b6100af60048036038101906100aa91906108a6565b6101ad565b005b6100b96102a9565b6040516100c691906108f3565b60405180910390f35b6100d76102ae565b6040516100e491906108f3565b60405180910390f35b6100f56102b4565b005b610111600480360381019061010c919061090c565b6102c7565b60405161011e91906108f3565b60405180910390f35b61012f6102dc565b60405161013c9190610946565b60405180910390f35b61015f600480360381019061015a919061095f565b610311565b60405161016c91906108f3565b60405180910390f35b61018f600480360381019061018a919061098a565b61034a565b005b6101ab60048036038101906101a6919061090c565b6104d9565b005b6101b561055d565b5f81116101f7576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016101ee90610a22565b60405180910390fd5b5f61020182610311565b90508060025f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f82825461024f9190610a6d565b925050819055508273ffffffffffffffffffffffffffffffffffffffff167fe34918ff1c7084970068b53fd71ad6d8b04e9f15d3886cbf006443e6cdc52ea68260405161029c91906108f3565b60405180910390a2505050565b5f5481565b60015481565b6102bc61055d565b6102c55f6105e4565b565b6002602052805f5260405f205f915090505481565b5f5f6102e66106b5565b9050805f015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1691505090565b5f5f6127105f54846103239190610aa0565b61032d9190610b0e565b9050600154811161033e5780610342565b6001545b915050919050565b5f6103536106dc565b90505f815f0160089054906101000a900460ff161590505f825f015f9054906101000a900467ffffffffffffffff1690505f5f8267ffffffffffffffff1614801561039b5750825b90505f60018367ffffffffffffffff161480156103ce57505f3073ffffffffffffffffffffffffffffffffffffffff163b145b9050811580156103dc575080155b15610413576040517ff92ee8a900000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6001855f015f6101000a81548167ffffffffffffffff021916908367ffffffffffffffff1602179055508315610460576001855f0160086101000a81548160ff0219169083151502179055505b610469336106ef565b865f819055508560018190555083156104d0575f855f0160086101000a81548160ff0219169083151502179055507fc7f505b2f371ae2175ee4913f4499e1f2633a7b5936321eed1cdaeb6115181d260016040516104c79190610b93565b60405180910390a15b50505050505050565b6104e161055d565b5f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603610551575f6040517f1e4fbdf70000000000000000000000000000000000000000000000000000000081526004016105489190610946565b60405180910390fd5b61055a816105e4565b50565b610565610703565b73ffffffffffffffffffffffffffffffffffffffff166105836102dc565b73ffffffffffffffffffffffffffffffffffffffff16146105e2576105a6610703565b6040517f118cdaa70000000000000000000000000000000000000000000000000000000081526004016105d99190610946565b60405180910390fd5b565b5f6105ed6106b5565b90505f815f015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905082825f015f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508273ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a3505050565b5f7f9016d09d72d40fdae2fd8ceac6b6234c7706214fd39c1cd1e609a0528c199300905090565b5f5f6106e661070a565b90508091505090565b6106f7610733565b61070081610773565b50565b5f33905090565b5f7ff0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a005f1b905090565b61073b6107f7565b610771576040517fd7e6bcf800000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b565b61077b610733565b5f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16036107eb575f6040517f1e4fbdf70000000000000000000000000000000000000000000000000000000081526004016107e29190610946565b60405180910390fd5b6107f4816105e4565b50565b5f6108006106dc565b5f0160089054906101000a900460ff16905090565b5f5ffd5b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f61084282610819565b9050919050565b61085281610838565b811461085c575f5ffd5b50565b5f8135905061086d81610849565b92915050565b5f819050919050565b61088581610873565b811461088f575f5ffd5b50565b5f813590506108a08161087c565b92915050565b5f5f604083850312156108bc576108bb610815565b5b5f6108c98582860161085f565b92505060206108da85828601610892565b9150509250929050565b6108ed81610873565b82525050565b5f6020820190506109065f8301846108e4565b92915050565b5f6020828403121561092157610920610815565b5b5f61092e8482850161085f565b91505092915050565b61094081610838565b82525050565b5f6020820190506109595f830184610937565b92915050565b5f6020828403121561097457610973610815565b5b5f61098184828501610892565b91505092915050565b5f5f604083850312156109a05761099f610815565b5b5f6109ad85828601610892565b92505060206109be85828601610892565b9150509250929050565b5f82825260208201905092915050565b7f416d6f756e74206d757374206265203e203000000000000000000000000000005f82015250565b5f610a0c6012836109c8565b9150610a17826109d8565b602082019050919050565b5f6020820190508181035f830152610a3981610a00565b9050919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b5f610a7782610873565b9150610a8283610873565b9250828201905080821115610a9a57610a99610a40565b5b92915050565b5f610aaa82610873565b9150610ab583610873565b9250828202610ac381610873565b91508282048414831517610ada57610ad9610a40565b5b5092915050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601260045260245ffd5b5f610b1882610873565b9150610b2383610873565b925082610b3357610b32610ae1565b5b828204905092915050565b5f819050919050565b5f67ffffffffffffffff82169050919050565b5f819050919050565b5f610b7d610b78610b7384610b3e565b610b5a565b610b47565b9050919050565b610b8d81610b63565b82525050565b5f602082019050610ba65f830184610b84565b9291505056fea26469706673582212204cf1ae2f73c645687dfb9ec84958e9f765e2648f31dfa33a1692ea3ba6eb519d64736f6c634300081e0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH1 0xE JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0xBE2 DUP1 PUSH2 0x1C PUSH0 CODECOPY PUSH0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x91 JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x7CE26644 GT PUSH2 0x64 JUMPI DUP1 PUSH4 0x7CE26644 EQ PUSH2 0xF7 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x127 JUMPI DUP1 PUSH4 0xD2D7231F EQ PUSH2 0x145 JUMPI DUP1 PUSH4 0xE4A30116 EQ PUSH2 0x175 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x191 JUMPI PUSH2 0x91 JUMP JUMPDEST DUP1 PUSH4 0x1EC8BB8C EQ PUSH2 0x95 JUMPI DUP1 PUSH4 0x26232A2E EQ PUSH2 0xB1 JUMPI DUP1 PUSH4 0x49880782 EQ PUSH2 0xCF JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0xED JUMPI JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH2 0xAF PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xAA SWAP2 SWAP1 PUSH2 0x8A6 JUMP JUMPDEST PUSH2 0x1AD JUMP JUMPDEST STOP JUMPDEST PUSH2 0xB9 PUSH2 0x2A9 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xC6 SWAP2 SWAP1 PUSH2 0x8F3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xD7 PUSH2 0x2AE JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xE4 SWAP2 SWAP1 PUSH2 0x8F3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xF5 PUSH2 0x2B4 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x111 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x10C SWAP2 SWAP1 PUSH2 0x90C JUMP JUMPDEST PUSH2 0x2C7 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x11E SWAP2 SWAP1 PUSH2 0x8F3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x12F PUSH2 0x2DC JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x13C SWAP2 SWAP1 PUSH2 0x946 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x15F PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x15A SWAP2 SWAP1 PUSH2 0x95F JUMP JUMPDEST PUSH2 0x311 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x16C SWAP2 SWAP1 PUSH2 0x8F3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x18F PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x18A SWAP2 SWAP1 PUSH2 0x98A JUMP JUMPDEST PUSH2 0x34A JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1AB PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1A6 SWAP2 SWAP1 PUSH2 0x90C JUMP JUMPDEST PUSH2 0x4D9 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1B5 PUSH2 0x55D JUMP JUMPDEST PUSH0 DUP2 GT PUSH2 0x1F7 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1EE SWAP1 PUSH2 0xA22 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH2 0x201 DUP3 PUSH2 0x311 JUMP JUMPDEST SWAP1 POP DUP1 PUSH1 0x2 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x24F SWAP2 SWAP1 PUSH2 0xA6D JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xE34918FF1C7084970068B53FD71AD6D8B04E9F15D3886CBF006443E6CDC52EA6 DUP3 PUSH1 0x40 MLOAD PUSH2 0x29C SWAP2 SWAP1 PUSH2 0x8F3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP POP JUMP JUMPDEST PUSH0 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x1 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x2BC PUSH2 0x55D JUMP JUMPDEST PUSH2 0x2C5 PUSH0 PUSH2 0x5E4 JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x2 PUSH1 0x20 MSTORE DUP1 PUSH0 MSTORE PUSH1 0x40 PUSH0 KECCAK256 PUSH0 SWAP2 POP SWAP1 POP SLOAD DUP2 JUMP JUMPDEST PUSH0 PUSH0 PUSH2 0x2E6 PUSH2 0x6B5 JUMP JUMPDEST SWAP1 POP DUP1 PUSH0 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP2 POP POP SWAP1 JUMP JUMPDEST PUSH0 PUSH0 PUSH2 0x2710 PUSH0 SLOAD DUP5 PUSH2 0x323 SWAP2 SWAP1 PUSH2 0xAA0 JUMP JUMPDEST PUSH2 0x32D SWAP2 SWAP1 PUSH2 0xB0E JUMP JUMPDEST SWAP1 POP PUSH1 0x1 SLOAD DUP2 GT PUSH2 0x33E JUMPI DUP1 PUSH2 0x342 JUMP JUMPDEST PUSH1 0x1 SLOAD JUMPDEST SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x353 PUSH2 0x6DC JUMP JUMPDEST SWAP1 POP PUSH0 DUP2 PUSH0 ADD PUSH1 0x8 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO SWAP1 POP PUSH0 DUP3 PUSH0 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH8 0xFFFFFFFFFFFFFFFF AND SWAP1 POP PUSH0 PUSH0 DUP3 PUSH8 0xFFFFFFFFFFFFFFFF AND EQ DUP1 ISZERO PUSH2 0x39B JUMPI POP DUP3 JUMPDEST SWAP1 POP PUSH0 PUSH1 0x1 DUP4 PUSH8 0xFFFFFFFFFFFFFFFF AND EQ DUP1 ISZERO PUSH2 0x3CE JUMPI POP PUSH0 ADDRESS PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EXTCODESIZE EQ JUMPDEST SWAP1 POP DUP2 ISZERO DUP1 ISZERO PUSH2 0x3DC JUMPI POP DUP1 ISZERO JUMPDEST ISZERO PUSH2 0x413 JUMPI PUSH1 0x40 MLOAD PUSH32 0xF92EE8A900000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 DUP6 PUSH0 ADD PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH8 0xFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH8 0xFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP4 ISZERO PUSH2 0x460 JUMPI PUSH1 0x1 DUP6 PUSH0 ADD PUSH1 0x8 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP JUMPDEST PUSH2 0x469 CALLER PUSH2 0x6EF JUMP JUMPDEST DUP7 PUSH0 DUP2 SWAP1 SSTORE POP DUP6 PUSH1 0x1 DUP2 SWAP1 SSTORE POP DUP4 ISZERO PUSH2 0x4D0 JUMPI PUSH0 DUP6 PUSH0 ADD PUSH1 0x8 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH32 0xC7F505B2F371AE2175EE4913F4499E1F2633A7B5936321EED1CDAEB6115181D2 PUSH1 0x1 PUSH1 0x40 MLOAD PUSH2 0x4C7 SWAP2 SWAP1 PUSH2 0xB93 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 JUMPDEST POP POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0x4E1 PUSH2 0x55D JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x551 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x1E4FBDF700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x548 SWAP2 SWAP1 PUSH2 0x946 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x55A DUP2 PUSH2 0x5E4 JUMP JUMPDEST POP JUMP JUMPDEST PUSH2 0x565 PUSH2 0x703 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x583 PUSH2 0x2DC JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x5E2 JUMPI PUSH2 0x5A6 PUSH2 0x703 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x118CDAA700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x5D9 SWAP2 SWAP1 PUSH2 0x946 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH0 PUSH2 0x5ED PUSH2 0x6B5 JUMP JUMPDEST SWAP1 POP PUSH0 DUP2 PUSH0 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP3 DUP3 PUSH0 ADD PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH0 PUSH32 0x9016D09D72D40FDAE2FD8CEAC6B6234C7706214FD39C1CD1E609A0528C199300 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH0 PUSH2 0x6E6 PUSH2 0x70A JUMP JUMPDEST SWAP1 POP DUP1 SWAP2 POP POP SWAP1 JUMP JUMPDEST PUSH2 0x6F7 PUSH2 0x733 JUMP JUMPDEST PUSH2 0x700 DUP2 PUSH2 0x773 JUMP JUMPDEST POP JUMP JUMPDEST PUSH0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH32 0xF0C57E16840DF040F15088DC2F81FE391C3923BEC73E23A9662EFC9C229C6A00 PUSH0 SHL SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x73B PUSH2 0x7F7 JUMP JUMPDEST PUSH2 0x771 JUMPI PUSH1 0x40 MLOAD PUSH32 0xD7E6BCF800000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH2 0x77B PUSH2 0x733 JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x7EB JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x1E4FBDF700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x7E2 SWAP2 SWAP1 PUSH2 0x946 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x7F4 DUP2 PUSH2 0x5E4 JUMP JUMPDEST POP JUMP JUMPDEST PUSH0 PUSH2 0x800 PUSH2 0x6DC JUMP JUMPDEST PUSH0 ADD PUSH1 0x8 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x842 DUP3 PUSH2 0x819 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x852 DUP2 PUSH2 0x838 JUMP JUMPDEST DUP2 EQ PUSH2 0x85C JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x86D DUP2 PUSH2 0x849 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x885 DUP2 PUSH2 0x873 JUMP JUMPDEST DUP2 EQ PUSH2 0x88F JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x8A0 DUP2 PUSH2 0x87C JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x8BC JUMPI PUSH2 0x8BB PUSH2 0x815 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x8C9 DUP6 DUP3 DUP7 ADD PUSH2 0x85F JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x8DA DUP6 DUP3 DUP7 ADD PUSH2 0x892 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH2 0x8ED DUP2 PUSH2 0x873 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x906 PUSH0 DUP4 ADD DUP5 PUSH2 0x8E4 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x921 JUMPI PUSH2 0x920 PUSH2 0x815 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x92E DUP5 DUP3 DUP6 ADD PUSH2 0x85F JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x940 DUP2 PUSH2 0x838 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x959 PUSH0 DUP4 ADD DUP5 PUSH2 0x937 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x974 JUMPI PUSH2 0x973 PUSH2 0x815 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x981 DUP5 DUP3 DUP6 ADD PUSH2 0x892 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x9A0 JUMPI PUSH2 0x99F PUSH2 0x815 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x9AD DUP6 DUP3 DUP7 ADD PUSH2 0x892 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x9BE DUP6 DUP3 DUP7 ADD PUSH2 0x892 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x416D6F756E74206D757374206265203E20300000000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0xA0C PUSH1 0x12 DUP4 PUSH2 0x9C8 JUMP JUMPDEST SWAP2 POP PUSH2 0xA17 DUP3 PUSH2 0x9D8 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0xA39 DUP2 PUSH2 0xA00 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0xA77 DUP3 PUSH2 0x873 JUMP JUMPDEST SWAP2 POP PUSH2 0xA82 DUP4 PUSH2 0x873 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0xA9A JUMPI PUSH2 0xA99 PUSH2 0xA40 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0xAAA DUP3 PUSH2 0x873 JUMP JUMPDEST SWAP2 POP PUSH2 0xAB5 DUP4 PUSH2 0x873 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 MUL PUSH2 0xAC3 DUP2 PUSH2 0x873 JUMP JUMPDEST SWAP2 POP DUP3 DUP3 DIV DUP5 EQ DUP4 ISZERO OR PUSH2 0xADA JUMPI PUSH2 0xAD9 PUSH2 0xA40 JUMP JUMPDEST JUMPDEST POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0xB18 DUP3 PUSH2 0x873 JUMP JUMPDEST SWAP2 POP PUSH2 0xB23 DUP4 PUSH2 0x873 JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0xB33 JUMPI PUSH2 0xB32 PUSH2 0xAE1 JUMP JUMPDEST JUMPDEST DUP3 DUP3 DIV SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0xB7D PUSH2 0xB78 PUSH2 0xB73 DUP5 PUSH2 0xB3E JUMP JUMPDEST PUSH2 0xB5A JUMP JUMPDEST PUSH2 0xB47 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xB8D DUP2 PUSH2 0xB63 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xBA6 PUSH0 DUP4 ADD DUP5 PUSH2 0xB84 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x4C CALL 0xAE 0x2F PUSH20 0xC645687DFB9EC84958E9F765E2648F31DFA33A16 SWAP3 0xEA EXTCODESIZE 0xA6 0xEB MLOAD SWAP14 PUSH5 0x736F6C6343 STOP ADDMOD 0x1E STOP CALLER ",
							"sourceMap": "298:952:11:-:0;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@__Ownable_init_54": {
									"entryPoint": 1775,
									"id": 54,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@__Ownable_init_unchained_81": {
									"entryPoint": 1907,
									"id": 81,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_checkInitializing_370": {
									"entryPoint": 1843,
									"id": 370,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_checkOwner_122": {
									"entryPoint": 1373,
									"id": 122,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_getInitializableStorage_461": {
									"entryPoint": 1756,
									"id": 461,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_getOwnableStorage_25": {
									"entryPoint": 1717,
									"id": 25,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_initializableStorageSlot_447": {
									"entryPoint": 1802,
									"id": 447,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_isInitializing_438": {
									"entryPoint": 2039,
									"id": 438,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_msgSender_672": {
									"entryPoint": 1795,
									"id": 672,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_transferOwnership_193": {
									"entryPoint": 1508,
									"id": 193,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@calculateReward_1534": {
									"entryPoint": 785,
									"id": 1534,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@distributeReward_1511": {
									"entryPoint": 429,
									"id": 1511,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@initialize_1477": {
									"entryPoint": 842,
									"id": 1477,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@maxRewardPoints_1444": {
									"entryPoint": 686,
									"id": 1444,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@owner_105": {
									"entryPoint": 732,
									"id": 105,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@platformFee_1442": {
									"entryPoint": 681,
									"id": 1442,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@renounceOwnership_136": {
									"entryPoint": 692,
									"id": 136,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@transferOwnership_164": {
									"entryPoint": 1241,
									"id": 164,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@userRewardPoints_1448": {
									"entryPoint": 711,
									"id": 1448,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"abi_decode_t_address": {
									"entryPoint": 2143,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint256": {
									"entryPoint": 2194,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 2316,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_uint256": {
									"entryPoint": 2214,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_uint256": {
									"entryPoint": 2399,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256t_uint256": {
									"entryPoint": 2442,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_encode_t_address_to_t_address_fromStack": {
									"entryPoint": 2359,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_rational_1_by_1_to_t_uint64_fromStack": {
									"entryPoint": 2948,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_stringliteral_01c242f1c806840acb94ec05d87d4647010419c53a053a581e0026b3f6467dbb_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 2560,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_uint256_to_t_uint256_fromStack": {
									"entryPoint": 2276,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": 2374,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_rational_1_by_1__to_t_uint64__fromStack_reversed": {
									"entryPoint": 2963,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_01c242f1c806840acb94ec05d87d4647010419c53a053a581e0026b3f6467dbb__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 2594,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": 2291,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_string_memory_ptr_fromStack": {
									"entryPoint": 2504,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 2669,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_div_t_uint256": {
									"entryPoint": 2830,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_mul_t_uint256": {
									"entryPoint": 2720,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 2104,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_rational_1_by_1": {
									"entryPoint": 2878,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 2073,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 2163,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint64": {
									"entryPoint": 2887,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"convert_t_rational_1_by_1_to_t_uint64": {
									"entryPoint": 2915,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"identity": {
									"entryPoint": 2906,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 2624,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x12": {
									"entryPoint": 2785,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 2069,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"store_literal_in_memory_01c242f1c806840acb94ec05d87d4647010419c53a053a581e0026b3f6467dbb": {
									"entryPoint": 2520,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_address": {
									"entryPoint": 2121,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_uint256": {
									"entryPoint": 2172,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:6669:12",
										"nodeType": "YulBlock",
										"src": "0:6669:12",
										"statements": [
											{
												"body": {
													"nativeSrc": "47:35:12",
													"nodeType": "YulBlock",
													"src": "47:35:12",
													"statements": [
														{
															"nativeSrc": "57:19:12",
															"nodeType": "YulAssignment",
															"src": "57:19:12",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "73:2:12",
																		"nodeType": "YulLiteral",
																		"src": "73:2:12",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "67:5:12",
																	"nodeType": "YulIdentifier",
																	"src": "67:5:12"
																},
																"nativeSrc": "67:9:12",
																"nodeType": "YulFunctionCall",
																"src": "67:9:12"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nativeSrc": "57:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "57:6:12"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nativeSrc": "7:75:12",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nativeSrc": "40:6:12",
														"nodeType": "YulTypedName",
														"src": "40:6:12",
														"type": ""
													}
												],
												"src": "7:75:12"
											},
											{
												"body": {
													"nativeSrc": "177:28:12",
													"nodeType": "YulBlock",
													"src": "177:28:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "194:1:12",
																		"nodeType": "YulLiteral",
																		"src": "194:1:12",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "197:1:12",
																		"nodeType": "YulLiteral",
																		"src": "197:1:12",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "187:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "187:6:12"
																},
																"nativeSrc": "187:12:12",
																"nodeType": "YulFunctionCall",
																"src": "187:12:12"
															},
															"nativeSrc": "187:12:12",
															"nodeType": "YulExpressionStatement",
															"src": "187:12:12"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nativeSrc": "88:117:12",
												"nodeType": "YulFunctionDefinition",
												"src": "88:117:12"
											},
											{
												"body": {
													"nativeSrc": "300:28:12",
													"nodeType": "YulBlock",
													"src": "300:28:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "317:1:12",
																		"nodeType": "YulLiteral",
																		"src": "317:1:12",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "320:1:12",
																		"nodeType": "YulLiteral",
																		"src": "320:1:12",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "310:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "310:6:12"
																},
																"nativeSrc": "310:12:12",
																"nodeType": "YulFunctionCall",
																"src": "310:12:12"
															},
															"nativeSrc": "310:12:12",
															"nodeType": "YulExpressionStatement",
															"src": "310:12:12"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nativeSrc": "211:117:12",
												"nodeType": "YulFunctionDefinition",
												"src": "211:117:12"
											},
											{
												"body": {
													"nativeSrc": "379:81:12",
													"nodeType": "YulBlock",
													"src": "379:81:12",
													"statements": [
														{
															"nativeSrc": "389:65:12",
															"nodeType": "YulAssignment",
															"src": "389:65:12",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "404:5:12",
																		"nodeType": "YulIdentifier",
																		"src": "404:5:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "411:42:12",
																		"nodeType": "YulLiteral",
																		"src": "411:42:12",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "400:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "400:3:12"
																},
																"nativeSrc": "400:54:12",
																"nodeType": "YulFunctionCall",
																"src": "400:54:12"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "389:7:12",
																	"nodeType": "YulIdentifier",
																	"src": "389:7:12"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nativeSrc": "334:126:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "361:5:12",
														"nodeType": "YulTypedName",
														"src": "361:5:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "371:7:12",
														"nodeType": "YulTypedName",
														"src": "371:7:12",
														"type": ""
													}
												],
												"src": "334:126:12"
											},
											{
												"body": {
													"nativeSrc": "511:51:12",
													"nodeType": "YulBlock",
													"src": "511:51:12",
													"statements": [
														{
															"nativeSrc": "521:35:12",
															"nodeType": "YulAssignment",
															"src": "521:35:12",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "550:5:12",
																		"nodeType": "YulIdentifier",
																		"src": "550:5:12"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nativeSrc": "532:17:12",
																	"nodeType": "YulIdentifier",
																	"src": "532:17:12"
																},
																"nativeSrc": "532:24:12",
																"nodeType": "YulFunctionCall",
																"src": "532:24:12"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "521:7:12",
																	"nodeType": "YulIdentifier",
																	"src": "521:7:12"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nativeSrc": "466:96:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "493:5:12",
														"nodeType": "YulTypedName",
														"src": "493:5:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "503:7:12",
														"nodeType": "YulTypedName",
														"src": "503:7:12",
														"type": ""
													}
												],
												"src": "466:96:12"
											},
											{
												"body": {
													"nativeSrc": "611:79:12",
													"nodeType": "YulBlock",
													"src": "611:79:12",
													"statements": [
														{
															"body": {
																"nativeSrc": "668:16:12",
																"nodeType": "YulBlock",
																"src": "668:16:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "677:1:12",
																					"nodeType": "YulLiteral",
																					"src": "677:1:12",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "680:1:12",
																					"nodeType": "YulLiteral",
																					"src": "680:1:12",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "670:6:12",
																				"nodeType": "YulIdentifier",
																				"src": "670:6:12"
																			},
																			"nativeSrc": "670:12:12",
																			"nodeType": "YulFunctionCall",
																			"src": "670:12:12"
																		},
																		"nativeSrc": "670:12:12",
																		"nodeType": "YulExpressionStatement",
																		"src": "670:12:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "634:5:12",
																				"nodeType": "YulIdentifier",
																				"src": "634:5:12"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "659:5:12",
																						"nodeType": "YulIdentifier",
																						"src": "659:5:12"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nativeSrc": "641:17:12",
																					"nodeType": "YulIdentifier",
																					"src": "641:17:12"
																				},
																				"nativeSrc": "641:24:12",
																				"nodeType": "YulFunctionCall",
																				"src": "641:24:12"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "631:2:12",
																			"nodeType": "YulIdentifier",
																			"src": "631:2:12"
																		},
																		"nativeSrc": "631:35:12",
																		"nodeType": "YulFunctionCall",
																		"src": "631:35:12"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "624:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "624:6:12"
																},
																"nativeSrc": "624:43:12",
																"nodeType": "YulFunctionCall",
																"src": "624:43:12"
															},
															"nativeSrc": "621:63:12",
															"nodeType": "YulIf",
															"src": "621:63:12"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nativeSrc": "568:122:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "604:5:12",
														"nodeType": "YulTypedName",
														"src": "604:5:12",
														"type": ""
													}
												],
												"src": "568:122:12"
											},
											{
												"body": {
													"nativeSrc": "748:87:12",
													"nodeType": "YulBlock",
													"src": "748:87:12",
													"statements": [
														{
															"nativeSrc": "758:29:12",
															"nodeType": "YulAssignment",
															"src": "758:29:12",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "780:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "780:6:12"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "767:12:12",
																	"nodeType": "YulIdentifier",
																	"src": "767:12:12"
																},
																"nativeSrc": "767:20:12",
																"nodeType": "YulFunctionCall",
																"src": "767:20:12"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "758:5:12",
																	"nodeType": "YulIdentifier",
																	"src": "758:5:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "823:5:12",
																		"nodeType": "YulIdentifier",
																		"src": "823:5:12"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nativeSrc": "796:26:12",
																	"nodeType": "YulIdentifier",
																	"src": "796:26:12"
																},
																"nativeSrc": "796:33:12",
																"nodeType": "YulFunctionCall",
																"src": "796:33:12"
															},
															"nativeSrc": "796:33:12",
															"nodeType": "YulExpressionStatement",
															"src": "796:33:12"
														}
													]
												},
												"name": "abi_decode_t_address",
												"nativeSrc": "696:139:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "726:6:12",
														"nodeType": "YulTypedName",
														"src": "726:6:12",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "734:3:12",
														"nodeType": "YulTypedName",
														"src": "734:3:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "742:5:12",
														"nodeType": "YulTypedName",
														"src": "742:5:12",
														"type": ""
													}
												],
												"src": "696:139:12"
											},
											{
												"body": {
													"nativeSrc": "886:32:12",
													"nodeType": "YulBlock",
													"src": "886:32:12",
													"statements": [
														{
															"nativeSrc": "896:16:12",
															"nodeType": "YulAssignment",
															"src": "896:16:12",
															"value": {
																"name": "value",
																"nativeSrc": "907:5:12",
																"nodeType": "YulIdentifier",
																"src": "907:5:12"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "896:7:12",
																	"nodeType": "YulIdentifier",
																	"src": "896:7:12"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nativeSrc": "841:77:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "868:5:12",
														"nodeType": "YulTypedName",
														"src": "868:5:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "878:7:12",
														"nodeType": "YulTypedName",
														"src": "878:7:12",
														"type": ""
													}
												],
												"src": "841:77:12"
											},
											{
												"body": {
													"nativeSrc": "967:79:12",
													"nodeType": "YulBlock",
													"src": "967:79:12",
													"statements": [
														{
															"body": {
																"nativeSrc": "1024:16:12",
																"nodeType": "YulBlock",
																"src": "1024:16:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "1033:1:12",
																					"nodeType": "YulLiteral",
																					"src": "1033:1:12",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1036:1:12",
																					"nodeType": "YulLiteral",
																					"src": "1036:1:12",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "1026:6:12",
																				"nodeType": "YulIdentifier",
																				"src": "1026:6:12"
																			},
																			"nativeSrc": "1026:12:12",
																			"nodeType": "YulFunctionCall",
																			"src": "1026:12:12"
																		},
																		"nativeSrc": "1026:12:12",
																		"nodeType": "YulExpressionStatement",
																		"src": "1026:12:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "990:5:12",
																				"nodeType": "YulIdentifier",
																				"src": "990:5:12"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "1015:5:12",
																						"nodeType": "YulIdentifier",
																						"src": "1015:5:12"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nativeSrc": "997:17:12",
																					"nodeType": "YulIdentifier",
																					"src": "997:17:12"
																				},
																				"nativeSrc": "997:24:12",
																				"nodeType": "YulFunctionCall",
																				"src": "997:24:12"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "987:2:12",
																			"nodeType": "YulIdentifier",
																			"src": "987:2:12"
																		},
																		"nativeSrc": "987:35:12",
																		"nodeType": "YulFunctionCall",
																		"src": "987:35:12"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "980:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "980:6:12"
																},
																"nativeSrc": "980:43:12",
																"nodeType": "YulFunctionCall",
																"src": "980:43:12"
															},
															"nativeSrc": "977:63:12",
															"nodeType": "YulIf",
															"src": "977:63:12"
														}
													]
												},
												"name": "validator_revert_t_uint256",
												"nativeSrc": "924:122:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "960:5:12",
														"nodeType": "YulTypedName",
														"src": "960:5:12",
														"type": ""
													}
												],
												"src": "924:122:12"
											},
											{
												"body": {
													"nativeSrc": "1104:87:12",
													"nodeType": "YulBlock",
													"src": "1104:87:12",
													"statements": [
														{
															"nativeSrc": "1114:29:12",
															"nodeType": "YulAssignment",
															"src": "1114:29:12",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "1136:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "1136:6:12"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "1123:12:12",
																	"nodeType": "YulIdentifier",
																	"src": "1123:12:12"
																},
																"nativeSrc": "1123:20:12",
																"nodeType": "YulFunctionCall",
																"src": "1123:20:12"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "1114:5:12",
																	"nodeType": "YulIdentifier",
																	"src": "1114:5:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "1179:5:12",
																		"nodeType": "YulIdentifier",
																		"src": "1179:5:12"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nativeSrc": "1152:26:12",
																	"nodeType": "YulIdentifier",
																	"src": "1152:26:12"
																},
																"nativeSrc": "1152:33:12",
																"nodeType": "YulFunctionCall",
																"src": "1152:33:12"
															},
															"nativeSrc": "1152:33:12",
															"nodeType": "YulExpressionStatement",
															"src": "1152:33:12"
														}
													]
												},
												"name": "abi_decode_t_uint256",
												"nativeSrc": "1052:139:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "1082:6:12",
														"nodeType": "YulTypedName",
														"src": "1082:6:12",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "1090:3:12",
														"nodeType": "YulTypedName",
														"src": "1090:3:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "1098:5:12",
														"nodeType": "YulTypedName",
														"src": "1098:5:12",
														"type": ""
													}
												],
												"src": "1052:139:12"
											},
											{
												"body": {
													"nativeSrc": "1280:391:12",
													"nodeType": "YulBlock",
													"src": "1280:391:12",
													"statements": [
														{
															"body": {
																"nativeSrc": "1326:83:12",
																"nodeType": "YulBlock",
																"src": "1326:83:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "1328:77:12",
																				"nodeType": "YulIdentifier",
																				"src": "1328:77:12"
																			},
																			"nativeSrc": "1328:79:12",
																			"nodeType": "YulFunctionCall",
																			"src": "1328:79:12"
																		},
																		"nativeSrc": "1328:79:12",
																		"nodeType": "YulExpressionStatement",
																		"src": "1328:79:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1301:7:12",
																				"nodeType": "YulIdentifier",
																				"src": "1301:7:12"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "1310:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "1310:9:12"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "1297:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "1297:3:12"
																		},
																		"nativeSrc": "1297:23:12",
																		"nodeType": "YulFunctionCall",
																		"src": "1297:23:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1322:2:12",
																		"nodeType": "YulLiteral",
																		"src": "1322:2:12",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "1293:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "1293:3:12"
																},
																"nativeSrc": "1293:32:12",
																"nodeType": "YulFunctionCall",
																"src": "1293:32:12"
															},
															"nativeSrc": "1290:119:12",
															"nodeType": "YulIf",
															"src": "1290:119:12"
														},
														{
															"nativeSrc": "1419:117:12",
															"nodeType": "YulBlock",
															"src": "1419:117:12",
															"statements": [
																{
																	"nativeSrc": "1434:15:12",
																	"nodeType": "YulVariableDeclaration",
																	"src": "1434:15:12",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "1448:1:12",
																		"nodeType": "YulLiteral",
																		"src": "1448:1:12",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "1438:6:12",
																			"nodeType": "YulTypedName",
																			"src": "1438:6:12",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "1463:63:12",
																	"nodeType": "YulAssignment",
																	"src": "1463:63:12",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "1498:9:12",
																						"nodeType": "YulIdentifier",
																						"src": "1498:9:12"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "1509:6:12",
																						"nodeType": "YulIdentifier",
																						"src": "1509:6:12"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "1494:3:12",
																					"nodeType": "YulIdentifier",
																					"src": "1494:3:12"
																				},
																				"nativeSrc": "1494:22:12",
																				"nodeType": "YulFunctionCall",
																				"src": "1494:22:12"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1518:7:12",
																				"nodeType": "YulIdentifier",
																				"src": "1518:7:12"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "1473:20:12",
																			"nodeType": "YulIdentifier",
																			"src": "1473:20:12"
																		},
																		"nativeSrc": "1473:53:12",
																		"nodeType": "YulFunctionCall",
																		"src": "1473:53:12"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "1463:6:12",
																			"nodeType": "YulIdentifier",
																			"src": "1463:6:12"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "1546:118:12",
															"nodeType": "YulBlock",
															"src": "1546:118:12",
															"statements": [
																{
																	"nativeSrc": "1561:16:12",
																	"nodeType": "YulVariableDeclaration",
																	"src": "1561:16:12",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "1575:2:12",
																		"nodeType": "YulLiteral",
																		"src": "1575:2:12",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "1565:6:12",
																			"nodeType": "YulTypedName",
																			"src": "1565:6:12",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "1591:63:12",
																	"nodeType": "YulAssignment",
																	"src": "1591:63:12",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "1626:9:12",
																						"nodeType": "YulIdentifier",
																						"src": "1626:9:12"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "1637:6:12",
																						"nodeType": "YulIdentifier",
																						"src": "1637:6:12"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "1622:3:12",
																					"nodeType": "YulIdentifier",
																					"src": "1622:3:12"
																				},
																				"nativeSrc": "1622:22:12",
																				"nodeType": "YulFunctionCall",
																				"src": "1622:22:12"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1646:7:12",
																				"nodeType": "YulIdentifier",
																				"src": "1646:7:12"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "1601:20:12",
																			"nodeType": "YulIdentifier",
																			"src": "1601:20:12"
																		},
																		"nativeSrc": "1601:53:12",
																		"nodeType": "YulFunctionCall",
																		"src": "1601:53:12"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "1591:6:12",
																			"nodeType": "YulIdentifier",
																			"src": "1591:6:12"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_uint256",
												"nativeSrc": "1197:474:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1242:9:12",
														"nodeType": "YulTypedName",
														"src": "1242:9:12",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "1253:7:12",
														"nodeType": "YulTypedName",
														"src": "1253:7:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "1265:6:12",
														"nodeType": "YulTypedName",
														"src": "1265:6:12",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "1273:6:12",
														"nodeType": "YulTypedName",
														"src": "1273:6:12",
														"type": ""
													}
												],
												"src": "1197:474:12"
											},
											{
												"body": {
													"nativeSrc": "1742:53:12",
													"nodeType": "YulBlock",
													"src": "1742:53:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "1759:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "1759:3:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "1782:5:12",
																				"nodeType": "YulIdentifier",
																				"src": "1782:5:12"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nativeSrc": "1764:17:12",
																			"nodeType": "YulIdentifier",
																			"src": "1764:17:12"
																		},
																		"nativeSrc": "1764:24:12",
																		"nodeType": "YulFunctionCall",
																		"src": "1764:24:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1752:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "1752:6:12"
																},
																"nativeSrc": "1752:37:12",
																"nodeType": "YulFunctionCall",
																"src": "1752:37:12"
															},
															"nativeSrc": "1752:37:12",
															"nodeType": "YulExpressionStatement",
															"src": "1752:37:12"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
												"nativeSrc": "1677:118:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1730:5:12",
														"nodeType": "YulTypedName",
														"src": "1730:5:12",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "1737:3:12",
														"nodeType": "YulTypedName",
														"src": "1737:3:12",
														"type": ""
													}
												],
												"src": "1677:118:12"
											},
											{
												"body": {
													"nativeSrc": "1899:124:12",
													"nodeType": "YulBlock",
													"src": "1899:124:12",
													"statements": [
														{
															"nativeSrc": "1909:26:12",
															"nodeType": "YulAssignment",
															"src": "1909:26:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1921:9:12",
																		"nodeType": "YulIdentifier",
																		"src": "1921:9:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1932:2:12",
																		"nodeType": "YulLiteral",
																		"src": "1932:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1917:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "1917:3:12"
																},
																"nativeSrc": "1917:18:12",
																"nodeType": "YulFunctionCall",
																"src": "1917:18:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "1909:4:12",
																	"nodeType": "YulIdentifier",
																	"src": "1909:4:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "1989:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "1989:6:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "2002:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "2002:9:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2013:1:12",
																				"nodeType": "YulLiteral",
																				"src": "2013:1:12",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1998:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "1998:3:12"
																		},
																		"nativeSrc": "1998:17:12",
																		"nodeType": "YulFunctionCall",
																		"src": "1998:17:12"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "1945:43:12",
																	"nodeType": "YulIdentifier",
																	"src": "1945:43:12"
																},
																"nativeSrc": "1945:71:12",
																"nodeType": "YulFunctionCall",
																"src": "1945:71:12"
															},
															"nativeSrc": "1945:71:12",
															"nodeType": "YulExpressionStatement",
															"src": "1945:71:12"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nativeSrc": "1801:222:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1871:9:12",
														"nodeType": "YulTypedName",
														"src": "1871:9:12",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "1883:6:12",
														"nodeType": "YulTypedName",
														"src": "1883:6:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "1894:4:12",
														"nodeType": "YulTypedName",
														"src": "1894:4:12",
														"type": ""
													}
												],
												"src": "1801:222:12"
											},
											{
												"body": {
													"nativeSrc": "2095:263:12",
													"nodeType": "YulBlock",
													"src": "2095:263:12",
													"statements": [
														{
															"body": {
																"nativeSrc": "2141:83:12",
																"nodeType": "YulBlock",
																"src": "2141:83:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "2143:77:12",
																				"nodeType": "YulIdentifier",
																				"src": "2143:77:12"
																			},
																			"nativeSrc": "2143:79:12",
																			"nodeType": "YulFunctionCall",
																			"src": "2143:79:12"
																		},
																		"nativeSrc": "2143:79:12",
																		"nodeType": "YulExpressionStatement",
																		"src": "2143:79:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2116:7:12",
																				"nodeType": "YulIdentifier",
																				"src": "2116:7:12"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "2125:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "2125:9:12"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "2112:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "2112:3:12"
																		},
																		"nativeSrc": "2112:23:12",
																		"nodeType": "YulFunctionCall",
																		"src": "2112:23:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2137:2:12",
																		"nodeType": "YulLiteral",
																		"src": "2137:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "2108:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "2108:3:12"
																},
																"nativeSrc": "2108:32:12",
																"nodeType": "YulFunctionCall",
																"src": "2108:32:12"
															},
															"nativeSrc": "2105:119:12",
															"nodeType": "YulIf",
															"src": "2105:119:12"
														},
														{
															"nativeSrc": "2234:117:12",
															"nodeType": "YulBlock",
															"src": "2234:117:12",
															"statements": [
																{
																	"nativeSrc": "2249:15:12",
																	"nodeType": "YulVariableDeclaration",
																	"src": "2249:15:12",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "2263:1:12",
																		"nodeType": "YulLiteral",
																		"src": "2263:1:12",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "2253:6:12",
																			"nodeType": "YulTypedName",
																			"src": "2253:6:12",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "2278:63:12",
																	"nodeType": "YulAssignment",
																	"src": "2278:63:12",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "2313:9:12",
																						"nodeType": "YulIdentifier",
																						"src": "2313:9:12"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "2324:6:12",
																						"nodeType": "YulIdentifier",
																						"src": "2324:6:12"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "2309:3:12",
																					"nodeType": "YulIdentifier",
																					"src": "2309:3:12"
																				},
																				"nativeSrc": "2309:22:12",
																				"nodeType": "YulFunctionCall",
																				"src": "2309:22:12"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2333:7:12",
																				"nodeType": "YulIdentifier",
																				"src": "2333:7:12"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "2288:20:12",
																			"nodeType": "YulIdentifier",
																			"src": "2288:20:12"
																		},
																		"nativeSrc": "2288:53:12",
																		"nodeType": "YulFunctionCall",
																		"src": "2288:53:12"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "2278:6:12",
																			"nodeType": "YulIdentifier",
																			"src": "2278:6:12"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nativeSrc": "2029:329:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2065:9:12",
														"nodeType": "YulTypedName",
														"src": "2065:9:12",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "2076:7:12",
														"nodeType": "YulTypedName",
														"src": "2076:7:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "2088:6:12",
														"nodeType": "YulTypedName",
														"src": "2088:6:12",
														"type": ""
													}
												],
												"src": "2029:329:12"
											},
											{
												"body": {
													"nativeSrc": "2429:53:12",
													"nodeType": "YulBlock",
													"src": "2429:53:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "2446:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "2446:3:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "2469:5:12",
																				"nodeType": "YulIdentifier",
																				"src": "2469:5:12"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nativeSrc": "2451:17:12",
																			"nodeType": "YulIdentifier",
																			"src": "2451:17:12"
																		},
																		"nativeSrc": "2451:24:12",
																		"nodeType": "YulFunctionCall",
																		"src": "2451:24:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2439:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "2439:6:12"
																},
																"nativeSrc": "2439:37:12",
																"nodeType": "YulFunctionCall",
																"src": "2439:37:12"
															},
															"nativeSrc": "2439:37:12",
															"nodeType": "YulExpressionStatement",
															"src": "2439:37:12"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nativeSrc": "2364:118:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2417:5:12",
														"nodeType": "YulTypedName",
														"src": "2417:5:12",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "2424:3:12",
														"nodeType": "YulTypedName",
														"src": "2424:3:12",
														"type": ""
													}
												],
												"src": "2364:118:12"
											},
											{
												"body": {
													"nativeSrc": "2586:124:12",
													"nodeType": "YulBlock",
													"src": "2586:124:12",
													"statements": [
														{
															"nativeSrc": "2596:26:12",
															"nodeType": "YulAssignment",
															"src": "2596:26:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "2608:9:12",
																		"nodeType": "YulIdentifier",
																		"src": "2608:9:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2619:2:12",
																		"nodeType": "YulLiteral",
																		"src": "2619:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "2604:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "2604:3:12"
																},
																"nativeSrc": "2604:18:12",
																"nodeType": "YulFunctionCall",
																"src": "2604:18:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "2596:4:12",
																	"nodeType": "YulIdentifier",
																	"src": "2596:4:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "2676:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "2676:6:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "2689:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "2689:9:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2700:1:12",
																				"nodeType": "YulLiteral",
																				"src": "2700:1:12",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2685:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "2685:3:12"
																		},
																		"nativeSrc": "2685:17:12",
																		"nodeType": "YulFunctionCall",
																		"src": "2685:17:12"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "2632:43:12",
																	"nodeType": "YulIdentifier",
																	"src": "2632:43:12"
																},
																"nativeSrc": "2632:71:12",
																"nodeType": "YulFunctionCall",
																"src": "2632:71:12"
															},
															"nativeSrc": "2632:71:12",
															"nodeType": "YulExpressionStatement",
															"src": "2632:71:12"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nativeSrc": "2488:222:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2558:9:12",
														"nodeType": "YulTypedName",
														"src": "2558:9:12",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "2570:6:12",
														"nodeType": "YulTypedName",
														"src": "2570:6:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "2581:4:12",
														"nodeType": "YulTypedName",
														"src": "2581:4:12",
														"type": ""
													}
												],
												"src": "2488:222:12"
											},
											{
												"body": {
													"nativeSrc": "2782:263:12",
													"nodeType": "YulBlock",
													"src": "2782:263:12",
													"statements": [
														{
															"body": {
																"nativeSrc": "2828:83:12",
																"nodeType": "YulBlock",
																"src": "2828:83:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "2830:77:12",
																				"nodeType": "YulIdentifier",
																				"src": "2830:77:12"
																			},
																			"nativeSrc": "2830:79:12",
																			"nodeType": "YulFunctionCall",
																			"src": "2830:79:12"
																		},
																		"nativeSrc": "2830:79:12",
																		"nodeType": "YulExpressionStatement",
																		"src": "2830:79:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2803:7:12",
																				"nodeType": "YulIdentifier",
																				"src": "2803:7:12"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "2812:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "2812:9:12"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "2799:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "2799:3:12"
																		},
																		"nativeSrc": "2799:23:12",
																		"nodeType": "YulFunctionCall",
																		"src": "2799:23:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2824:2:12",
																		"nodeType": "YulLiteral",
																		"src": "2824:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "2795:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "2795:3:12"
																},
																"nativeSrc": "2795:32:12",
																"nodeType": "YulFunctionCall",
																"src": "2795:32:12"
															},
															"nativeSrc": "2792:119:12",
															"nodeType": "YulIf",
															"src": "2792:119:12"
														},
														{
															"nativeSrc": "2921:117:12",
															"nodeType": "YulBlock",
															"src": "2921:117:12",
															"statements": [
																{
																	"nativeSrc": "2936:15:12",
																	"nodeType": "YulVariableDeclaration",
																	"src": "2936:15:12",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "2950:1:12",
																		"nodeType": "YulLiteral",
																		"src": "2950:1:12",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "2940:6:12",
																			"nodeType": "YulTypedName",
																			"src": "2940:6:12",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "2965:63:12",
																	"nodeType": "YulAssignment",
																	"src": "2965:63:12",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "3000:9:12",
																						"nodeType": "YulIdentifier",
																						"src": "3000:9:12"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "3011:6:12",
																						"nodeType": "YulIdentifier",
																						"src": "3011:6:12"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "2996:3:12",
																					"nodeType": "YulIdentifier",
																					"src": "2996:3:12"
																				},
																				"nativeSrc": "2996:22:12",
																				"nodeType": "YulFunctionCall",
																				"src": "2996:22:12"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "3020:7:12",
																				"nodeType": "YulIdentifier",
																				"src": "3020:7:12"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "2975:20:12",
																			"nodeType": "YulIdentifier",
																			"src": "2975:20:12"
																		},
																		"nativeSrc": "2975:53:12",
																		"nodeType": "YulFunctionCall",
																		"src": "2975:53:12"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "2965:6:12",
																			"nodeType": "YulIdentifier",
																			"src": "2965:6:12"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256",
												"nativeSrc": "2716:329:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2752:9:12",
														"nodeType": "YulTypedName",
														"src": "2752:9:12",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "2763:7:12",
														"nodeType": "YulTypedName",
														"src": "2763:7:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "2775:6:12",
														"nodeType": "YulTypedName",
														"src": "2775:6:12",
														"type": ""
													}
												],
												"src": "2716:329:12"
											},
											{
												"body": {
													"nativeSrc": "3134:391:12",
													"nodeType": "YulBlock",
													"src": "3134:391:12",
													"statements": [
														{
															"body": {
																"nativeSrc": "3180:83:12",
																"nodeType": "YulBlock",
																"src": "3180:83:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "3182:77:12",
																				"nodeType": "YulIdentifier",
																				"src": "3182:77:12"
																			},
																			"nativeSrc": "3182:79:12",
																			"nodeType": "YulFunctionCall",
																			"src": "3182:79:12"
																		},
																		"nativeSrc": "3182:79:12",
																		"nodeType": "YulExpressionStatement",
																		"src": "3182:79:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "3155:7:12",
																				"nodeType": "YulIdentifier",
																				"src": "3155:7:12"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "3164:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "3164:9:12"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "3151:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "3151:3:12"
																		},
																		"nativeSrc": "3151:23:12",
																		"nodeType": "YulFunctionCall",
																		"src": "3151:23:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3176:2:12",
																		"nodeType": "YulLiteral",
																		"src": "3176:2:12",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "3147:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "3147:3:12"
																},
																"nativeSrc": "3147:32:12",
																"nodeType": "YulFunctionCall",
																"src": "3147:32:12"
															},
															"nativeSrc": "3144:119:12",
															"nodeType": "YulIf",
															"src": "3144:119:12"
														},
														{
															"nativeSrc": "3273:117:12",
															"nodeType": "YulBlock",
															"src": "3273:117:12",
															"statements": [
																{
																	"nativeSrc": "3288:15:12",
																	"nodeType": "YulVariableDeclaration",
																	"src": "3288:15:12",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "3302:1:12",
																		"nodeType": "YulLiteral",
																		"src": "3302:1:12",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "3292:6:12",
																			"nodeType": "YulTypedName",
																			"src": "3292:6:12",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "3317:63:12",
																	"nodeType": "YulAssignment",
																	"src": "3317:63:12",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "3352:9:12",
																						"nodeType": "YulIdentifier",
																						"src": "3352:9:12"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "3363:6:12",
																						"nodeType": "YulIdentifier",
																						"src": "3363:6:12"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "3348:3:12",
																					"nodeType": "YulIdentifier",
																					"src": "3348:3:12"
																				},
																				"nativeSrc": "3348:22:12",
																				"nodeType": "YulFunctionCall",
																				"src": "3348:22:12"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "3372:7:12",
																				"nodeType": "YulIdentifier",
																				"src": "3372:7:12"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "3327:20:12",
																			"nodeType": "YulIdentifier",
																			"src": "3327:20:12"
																		},
																		"nativeSrc": "3327:53:12",
																		"nodeType": "YulFunctionCall",
																		"src": "3327:53:12"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "3317:6:12",
																			"nodeType": "YulIdentifier",
																			"src": "3317:6:12"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "3400:118:12",
															"nodeType": "YulBlock",
															"src": "3400:118:12",
															"statements": [
																{
																	"nativeSrc": "3415:16:12",
																	"nodeType": "YulVariableDeclaration",
																	"src": "3415:16:12",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "3429:2:12",
																		"nodeType": "YulLiteral",
																		"src": "3429:2:12",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "3419:6:12",
																			"nodeType": "YulTypedName",
																			"src": "3419:6:12",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "3445:63:12",
																	"nodeType": "YulAssignment",
																	"src": "3445:63:12",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "3480:9:12",
																						"nodeType": "YulIdentifier",
																						"src": "3480:9:12"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "3491:6:12",
																						"nodeType": "YulIdentifier",
																						"src": "3491:6:12"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "3476:3:12",
																					"nodeType": "YulIdentifier",
																					"src": "3476:3:12"
																				},
																				"nativeSrc": "3476:22:12",
																				"nodeType": "YulFunctionCall",
																				"src": "3476:22:12"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "3500:7:12",
																				"nodeType": "YulIdentifier",
																				"src": "3500:7:12"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "3455:20:12",
																			"nodeType": "YulIdentifier",
																			"src": "3455:20:12"
																		},
																		"nativeSrc": "3455:53:12",
																		"nodeType": "YulFunctionCall",
																		"src": "3455:53:12"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "3445:6:12",
																			"nodeType": "YulIdentifier",
																			"src": "3445:6:12"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256t_uint256",
												"nativeSrc": "3051:474:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3096:9:12",
														"nodeType": "YulTypedName",
														"src": "3096:9:12",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "3107:7:12",
														"nodeType": "YulTypedName",
														"src": "3107:7:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "3119:6:12",
														"nodeType": "YulTypedName",
														"src": "3119:6:12",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "3127:6:12",
														"nodeType": "YulTypedName",
														"src": "3127:6:12",
														"type": ""
													}
												],
												"src": "3051:474:12"
											},
											{
												"body": {
													"nativeSrc": "3627:73:12",
													"nodeType": "YulBlock",
													"src": "3627:73:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "3644:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "3644:3:12"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "3649:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "3649:6:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3637:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "3637:6:12"
																},
																"nativeSrc": "3637:19:12",
																"nodeType": "YulFunctionCall",
																"src": "3637:19:12"
															},
															"nativeSrc": "3637:19:12",
															"nodeType": "YulExpressionStatement",
															"src": "3637:19:12"
														},
														{
															"nativeSrc": "3665:29:12",
															"nodeType": "YulAssignment",
															"src": "3665:29:12",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "3684:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "3684:3:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3689:4:12",
																		"nodeType": "YulLiteral",
																		"src": "3689:4:12",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "3680:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "3680:3:12"
																},
																"nativeSrc": "3680:14:12",
																"nodeType": "YulFunctionCall",
																"src": "3680:14:12"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nativeSrc": "3665:11:12",
																	"nodeType": "YulIdentifier",
																	"src": "3665:11:12"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
												"nativeSrc": "3531:169:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "3599:3:12",
														"nodeType": "YulTypedName",
														"src": "3599:3:12",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "3604:6:12",
														"nodeType": "YulTypedName",
														"src": "3604:6:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nativeSrc": "3615:11:12",
														"nodeType": "YulTypedName",
														"src": "3615:11:12",
														"type": ""
													}
												],
												"src": "3531:169:12"
											},
											{
												"body": {
													"nativeSrc": "3812:62:12",
													"nodeType": "YulBlock",
													"src": "3812:62:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "3834:6:12",
																				"nodeType": "YulIdentifier",
																				"src": "3834:6:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3842:1:12",
																				"nodeType": "YulLiteral",
																				"src": "3842:1:12",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3830:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "3830:3:12"
																		},
																		"nativeSrc": "3830:14:12",
																		"nodeType": "YulFunctionCall",
																		"src": "3830:14:12"
																	},
																	{
																		"hexValue": "416d6f756e74206d757374206265203e2030",
																		"kind": "string",
																		"nativeSrc": "3846:20:12",
																		"nodeType": "YulLiteral",
																		"src": "3846:20:12",
																		"type": "",
																		"value": "Amount must be > 0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3823:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "3823:6:12"
																},
																"nativeSrc": "3823:44:12",
																"nodeType": "YulFunctionCall",
																"src": "3823:44:12"
															},
															"nativeSrc": "3823:44:12",
															"nodeType": "YulExpressionStatement",
															"src": "3823:44:12"
														}
													]
												},
												"name": "store_literal_in_memory_01c242f1c806840acb94ec05d87d4647010419c53a053a581e0026b3f6467dbb",
												"nativeSrc": "3706:168:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "3804:6:12",
														"nodeType": "YulTypedName",
														"src": "3804:6:12",
														"type": ""
													}
												],
												"src": "3706:168:12"
											},
											{
												"body": {
													"nativeSrc": "4026:220:12",
													"nodeType": "YulBlock",
													"src": "4026:220:12",
													"statements": [
														{
															"nativeSrc": "4036:74:12",
															"nodeType": "YulAssignment",
															"src": "4036:74:12",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "4102:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "4102:3:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4107:2:12",
																		"nodeType": "YulLiteral",
																		"src": "4107:2:12",
																		"type": "",
																		"value": "18"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "4043:58:12",
																	"nodeType": "YulIdentifier",
																	"src": "4043:58:12"
																},
																"nativeSrc": "4043:67:12",
																"nodeType": "YulFunctionCall",
																"src": "4043:67:12"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "4036:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "4036:3:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "4208:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "4208:3:12"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_01c242f1c806840acb94ec05d87d4647010419c53a053a581e0026b3f6467dbb",
																	"nativeSrc": "4119:88:12",
																	"nodeType": "YulIdentifier",
																	"src": "4119:88:12"
																},
																"nativeSrc": "4119:93:12",
																"nodeType": "YulFunctionCall",
																"src": "4119:93:12"
															},
															"nativeSrc": "4119:93:12",
															"nodeType": "YulExpressionStatement",
															"src": "4119:93:12"
														},
														{
															"nativeSrc": "4221:19:12",
															"nodeType": "YulAssignment",
															"src": "4221:19:12",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "4232:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "4232:3:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4237:2:12",
																		"nodeType": "YulLiteral",
																		"src": "4237:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "4228:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "4228:3:12"
																},
																"nativeSrc": "4228:12:12",
																"nodeType": "YulFunctionCall",
																"src": "4228:12:12"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "4221:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "4221:3:12"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_01c242f1c806840acb94ec05d87d4647010419c53a053a581e0026b3f6467dbb_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "3880:366:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "4014:3:12",
														"nodeType": "YulTypedName",
														"src": "4014:3:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "4022:3:12",
														"nodeType": "YulTypedName",
														"src": "4022:3:12",
														"type": ""
													}
												],
												"src": "3880:366:12"
											},
											{
												"body": {
													"nativeSrc": "4423:248:12",
													"nodeType": "YulBlock",
													"src": "4423:248:12",
													"statements": [
														{
															"nativeSrc": "4433:26:12",
															"nodeType": "YulAssignment",
															"src": "4433:26:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "4445:9:12",
																		"nodeType": "YulIdentifier",
																		"src": "4445:9:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4456:2:12",
																		"nodeType": "YulLiteral",
																		"src": "4456:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "4441:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "4441:3:12"
																},
																"nativeSrc": "4441:18:12",
																"nodeType": "YulFunctionCall",
																"src": "4441:18:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "4433:4:12",
																	"nodeType": "YulIdentifier",
																	"src": "4433:4:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "4480:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "4480:9:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4491:1:12",
																				"nodeType": "YulLiteral",
																				"src": "4491:1:12",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4476:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "4476:3:12"
																		},
																		"nativeSrc": "4476:17:12",
																		"nodeType": "YulFunctionCall",
																		"src": "4476:17:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "4499:4:12",
																				"nodeType": "YulIdentifier",
																				"src": "4499:4:12"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "4505:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "4505:9:12"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "4495:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "4495:3:12"
																		},
																		"nativeSrc": "4495:20:12",
																		"nodeType": "YulFunctionCall",
																		"src": "4495:20:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4469:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "4469:6:12"
																},
																"nativeSrc": "4469:47:12",
																"nodeType": "YulFunctionCall",
																"src": "4469:47:12"
															},
															"nativeSrc": "4469:47:12",
															"nodeType": "YulExpressionStatement",
															"src": "4469:47:12"
														},
														{
															"nativeSrc": "4525:139:12",
															"nodeType": "YulAssignment",
															"src": "4525:139:12",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "4659:4:12",
																		"nodeType": "YulIdentifier",
																		"src": "4659:4:12"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_01c242f1c806840acb94ec05d87d4647010419c53a053a581e0026b3f6467dbb_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "4533:124:12",
																	"nodeType": "YulIdentifier",
																	"src": "4533:124:12"
																},
																"nativeSrc": "4533:131:12",
																"nodeType": "YulFunctionCall",
																"src": "4533:131:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "4525:4:12",
																	"nodeType": "YulIdentifier",
																	"src": "4525:4:12"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_01c242f1c806840acb94ec05d87d4647010419c53a053a581e0026b3f6467dbb__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "4252:419:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "4403:9:12",
														"nodeType": "YulTypedName",
														"src": "4403:9:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "4418:4:12",
														"nodeType": "YulTypedName",
														"src": "4418:4:12",
														"type": ""
													}
												],
												"src": "4252:419:12"
											},
											{
												"body": {
													"nativeSrc": "4705:152:12",
													"nodeType": "YulBlock",
													"src": "4705:152:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "4722:1:12",
																		"nodeType": "YulLiteral",
																		"src": "4722:1:12",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4725:77:12",
																		"nodeType": "YulLiteral",
																		"src": "4725:77:12",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4715:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "4715:6:12"
																},
																"nativeSrc": "4715:88:12",
																"nodeType": "YulFunctionCall",
																"src": "4715:88:12"
															},
															"nativeSrc": "4715:88:12",
															"nodeType": "YulExpressionStatement",
															"src": "4715:88:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "4819:1:12",
																		"nodeType": "YulLiteral",
																		"src": "4819:1:12",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4822:4:12",
																		"nodeType": "YulLiteral",
																		"src": "4822:4:12",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4812:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "4812:6:12"
																},
																"nativeSrc": "4812:15:12",
																"nodeType": "YulFunctionCall",
																"src": "4812:15:12"
															},
															"nativeSrc": "4812:15:12",
															"nodeType": "YulExpressionStatement",
															"src": "4812:15:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "4843:1:12",
																		"nodeType": "YulLiteral",
																		"src": "4843:1:12",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4846:4:12",
																		"nodeType": "YulLiteral",
																		"src": "4846:4:12",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "4836:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "4836:6:12"
																},
																"nativeSrc": "4836:15:12",
																"nodeType": "YulFunctionCall",
																"src": "4836:15:12"
															},
															"nativeSrc": "4836:15:12",
															"nodeType": "YulExpressionStatement",
															"src": "4836:15:12"
														}
													]
												},
												"name": "panic_error_0x11",
												"nativeSrc": "4677:180:12",
												"nodeType": "YulFunctionDefinition",
												"src": "4677:180:12"
											},
											{
												"body": {
													"nativeSrc": "4907:147:12",
													"nodeType": "YulBlock",
													"src": "4907:147:12",
													"statements": [
														{
															"nativeSrc": "4917:25:12",
															"nodeType": "YulAssignment",
															"src": "4917:25:12",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "4940:1:12",
																		"nodeType": "YulIdentifier",
																		"src": "4940:1:12"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "4922:17:12",
																	"nodeType": "YulIdentifier",
																	"src": "4922:17:12"
																},
																"nativeSrc": "4922:20:12",
																"nodeType": "YulFunctionCall",
																"src": "4922:20:12"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "4917:1:12",
																	"nodeType": "YulIdentifier",
																	"src": "4917:1:12"
																}
															]
														},
														{
															"nativeSrc": "4951:25:12",
															"nodeType": "YulAssignment",
															"src": "4951:25:12",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "4974:1:12",
																		"nodeType": "YulIdentifier",
																		"src": "4974:1:12"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "4956:17:12",
																	"nodeType": "YulIdentifier",
																	"src": "4956:17:12"
																},
																"nativeSrc": "4956:20:12",
																"nodeType": "YulFunctionCall",
																"src": "4956:20:12"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "4951:1:12",
																	"nodeType": "YulIdentifier",
																	"src": "4951:1:12"
																}
															]
														},
														{
															"nativeSrc": "4985:16:12",
															"nodeType": "YulAssignment",
															"src": "4985:16:12",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "4996:1:12",
																		"nodeType": "YulIdentifier",
																		"src": "4996:1:12"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "4999:1:12",
																		"nodeType": "YulIdentifier",
																		"src": "4999:1:12"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "4992:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "4992:3:12"
																},
																"nativeSrc": "4992:9:12",
																"nodeType": "YulFunctionCall",
																"src": "4992:9:12"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nativeSrc": "4985:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "4985:3:12"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "5025:22:12",
																"nodeType": "YulBlock",
																"src": "5025:22:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "5027:16:12",
																				"nodeType": "YulIdentifier",
																				"src": "5027:16:12"
																			},
																			"nativeSrc": "5027:18:12",
																			"nodeType": "YulFunctionCall",
																			"src": "5027:18:12"
																		},
																		"nativeSrc": "5027:18:12",
																		"nodeType": "YulExpressionStatement",
																		"src": "5027:18:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "5017:1:12",
																		"nodeType": "YulIdentifier",
																		"src": "5017:1:12"
																	},
																	{
																		"name": "sum",
																		"nativeSrc": "5020:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "5020:3:12"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "5014:2:12",
																	"nodeType": "YulIdentifier",
																	"src": "5014:2:12"
																},
																"nativeSrc": "5014:10:12",
																"nodeType": "YulFunctionCall",
																"src": "5014:10:12"
															},
															"nativeSrc": "5011:36:12",
															"nodeType": "YulIf",
															"src": "5011:36:12"
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nativeSrc": "4863:191:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "4894:1:12",
														"nodeType": "YulTypedName",
														"src": "4894:1:12",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "4897:1:12",
														"nodeType": "YulTypedName",
														"src": "4897:1:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nativeSrc": "4903:3:12",
														"nodeType": "YulTypedName",
														"src": "4903:3:12",
														"type": ""
													}
												],
												"src": "4863:191:12"
											},
											{
												"body": {
													"nativeSrc": "5108:362:12",
													"nodeType": "YulBlock",
													"src": "5108:362:12",
													"statements": [
														{
															"nativeSrc": "5118:25:12",
															"nodeType": "YulAssignment",
															"src": "5118:25:12",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "5141:1:12",
																		"nodeType": "YulIdentifier",
																		"src": "5141:1:12"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "5123:17:12",
																	"nodeType": "YulIdentifier",
																	"src": "5123:17:12"
																},
																"nativeSrc": "5123:20:12",
																"nodeType": "YulFunctionCall",
																"src": "5123:20:12"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "5118:1:12",
																	"nodeType": "YulIdentifier",
																	"src": "5118:1:12"
																}
															]
														},
														{
															"nativeSrc": "5152:25:12",
															"nodeType": "YulAssignment",
															"src": "5152:25:12",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "5175:1:12",
																		"nodeType": "YulIdentifier",
																		"src": "5175:1:12"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "5157:17:12",
																	"nodeType": "YulIdentifier",
																	"src": "5157:17:12"
																},
																"nativeSrc": "5157:20:12",
																"nodeType": "YulFunctionCall",
																"src": "5157:20:12"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "5152:1:12",
																	"nodeType": "YulIdentifier",
																	"src": "5152:1:12"
																}
															]
														},
														{
															"nativeSrc": "5186:28:12",
															"nodeType": "YulVariableDeclaration",
															"src": "5186:28:12",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "5209:1:12",
																		"nodeType": "YulIdentifier",
																		"src": "5209:1:12"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "5212:1:12",
																		"nodeType": "YulIdentifier",
																		"src": "5212:1:12"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nativeSrc": "5205:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "5205:3:12"
																},
																"nativeSrc": "5205:9:12",
																"nodeType": "YulFunctionCall",
																"src": "5205:9:12"
															},
															"variables": [
																{
																	"name": "product_raw",
																	"nativeSrc": "5190:11:12",
																	"nodeType": "YulTypedName",
																	"src": "5190:11:12",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "5223:41:12",
															"nodeType": "YulAssignment",
															"src": "5223:41:12",
															"value": {
																"arguments": [
																	{
																		"name": "product_raw",
																		"nativeSrc": "5252:11:12",
																		"nodeType": "YulIdentifier",
																		"src": "5252:11:12"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "5234:17:12",
																	"nodeType": "YulIdentifier",
																	"src": "5234:17:12"
																},
																"nativeSrc": "5234:30:12",
																"nodeType": "YulFunctionCall",
																"src": "5234:30:12"
															},
															"variableNames": [
																{
																	"name": "product",
																	"nativeSrc": "5223:7:12",
																	"nodeType": "YulIdentifier",
																	"src": "5223:7:12"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "5441:22:12",
																"nodeType": "YulBlock",
																"src": "5441:22:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "5443:16:12",
																				"nodeType": "YulIdentifier",
																				"src": "5443:16:12"
																			},
																			"nativeSrc": "5443:18:12",
																			"nodeType": "YulFunctionCall",
																			"src": "5443:18:12"
																		},
																		"nativeSrc": "5443:18:12",
																		"nodeType": "YulExpressionStatement",
																		"src": "5443:18:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "x",
																						"nativeSrc": "5374:1:12",
																						"nodeType": "YulIdentifier",
																						"src": "5374:1:12"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nativeSrc": "5367:6:12",
																					"nodeType": "YulIdentifier",
																					"src": "5367:6:12"
																				},
																				"nativeSrc": "5367:9:12",
																				"nodeType": "YulFunctionCall",
																				"src": "5367:9:12"
																			},
																			{
																				"arguments": [
																					{
																						"name": "y",
																						"nativeSrc": "5397:1:12",
																						"nodeType": "YulIdentifier",
																						"src": "5397:1:12"
																					},
																					{
																						"arguments": [
																							{
																								"name": "product",
																								"nativeSrc": "5404:7:12",
																								"nodeType": "YulIdentifier",
																								"src": "5404:7:12"
																							},
																							{
																								"name": "x",
																								"nativeSrc": "5413:1:12",
																								"nodeType": "YulIdentifier",
																								"src": "5413:1:12"
																							}
																						],
																						"functionName": {
																							"name": "div",
																							"nativeSrc": "5400:3:12",
																							"nodeType": "YulIdentifier",
																							"src": "5400:3:12"
																						},
																						"nativeSrc": "5400:15:12",
																						"nodeType": "YulFunctionCall",
																						"src": "5400:15:12"
																					}
																				],
																				"functionName": {
																					"name": "eq",
																					"nativeSrc": "5394:2:12",
																					"nodeType": "YulIdentifier",
																					"src": "5394:2:12"
																				},
																				"nativeSrc": "5394:22:12",
																				"nodeType": "YulFunctionCall",
																				"src": "5394:22:12"
																			}
																		],
																		"functionName": {
																			"name": "or",
																			"nativeSrc": "5347:2:12",
																			"nodeType": "YulIdentifier",
																			"src": "5347:2:12"
																		},
																		"nativeSrc": "5347:83:12",
																		"nodeType": "YulFunctionCall",
																		"src": "5347:83:12"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "5327:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "5327:6:12"
																},
																"nativeSrc": "5327:113:12",
																"nodeType": "YulFunctionCall",
																"src": "5327:113:12"
															},
															"nativeSrc": "5324:139:12",
															"nodeType": "YulIf",
															"src": "5324:139:12"
														}
													]
												},
												"name": "checked_mul_t_uint256",
												"nativeSrc": "5060:410:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "5091:1:12",
														"nodeType": "YulTypedName",
														"src": "5091:1:12",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "5094:1:12",
														"nodeType": "YulTypedName",
														"src": "5094:1:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "product",
														"nativeSrc": "5100:7:12",
														"nodeType": "YulTypedName",
														"src": "5100:7:12",
														"type": ""
													}
												],
												"src": "5060:410:12"
											},
											{
												"body": {
													"nativeSrc": "5504:152:12",
													"nodeType": "YulBlock",
													"src": "5504:152:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "5521:1:12",
																		"nodeType": "YulLiteral",
																		"src": "5521:1:12",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5524:77:12",
																		"nodeType": "YulLiteral",
																		"src": "5524:77:12",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5514:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "5514:6:12"
																},
																"nativeSrc": "5514:88:12",
																"nodeType": "YulFunctionCall",
																"src": "5514:88:12"
															},
															"nativeSrc": "5514:88:12",
															"nodeType": "YulExpressionStatement",
															"src": "5514:88:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "5618:1:12",
																		"nodeType": "YulLiteral",
																		"src": "5618:1:12",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5621:4:12",
																		"nodeType": "YulLiteral",
																		"src": "5621:4:12",
																		"type": "",
																		"value": "0x12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5611:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "5611:6:12"
																},
																"nativeSrc": "5611:15:12",
																"nodeType": "YulFunctionCall",
																"src": "5611:15:12"
															},
															"nativeSrc": "5611:15:12",
															"nodeType": "YulExpressionStatement",
															"src": "5611:15:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "5642:1:12",
																		"nodeType": "YulLiteral",
																		"src": "5642:1:12",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5645:4:12",
																		"nodeType": "YulLiteral",
																		"src": "5645:4:12",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "5635:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "5635:6:12"
																},
																"nativeSrc": "5635:15:12",
																"nodeType": "YulFunctionCall",
																"src": "5635:15:12"
															},
															"nativeSrc": "5635:15:12",
															"nodeType": "YulExpressionStatement",
															"src": "5635:15:12"
														}
													]
												},
												"name": "panic_error_0x12",
												"nativeSrc": "5476:180:12",
												"nodeType": "YulFunctionDefinition",
												"src": "5476:180:12"
											},
											{
												"body": {
													"nativeSrc": "5704:143:12",
													"nodeType": "YulBlock",
													"src": "5704:143:12",
													"statements": [
														{
															"nativeSrc": "5714:25:12",
															"nodeType": "YulAssignment",
															"src": "5714:25:12",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "5737:1:12",
																		"nodeType": "YulIdentifier",
																		"src": "5737:1:12"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "5719:17:12",
																	"nodeType": "YulIdentifier",
																	"src": "5719:17:12"
																},
																"nativeSrc": "5719:20:12",
																"nodeType": "YulFunctionCall",
																"src": "5719:20:12"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "5714:1:12",
																	"nodeType": "YulIdentifier",
																	"src": "5714:1:12"
																}
															]
														},
														{
															"nativeSrc": "5748:25:12",
															"nodeType": "YulAssignment",
															"src": "5748:25:12",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "5771:1:12",
																		"nodeType": "YulIdentifier",
																		"src": "5771:1:12"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "5753:17:12",
																	"nodeType": "YulIdentifier",
																	"src": "5753:17:12"
																},
																"nativeSrc": "5753:20:12",
																"nodeType": "YulFunctionCall",
																"src": "5753:20:12"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "5748:1:12",
																	"nodeType": "YulIdentifier",
																	"src": "5748:1:12"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "5795:22:12",
																"nodeType": "YulBlock",
																"src": "5795:22:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x12",
																				"nativeSrc": "5797:16:12",
																				"nodeType": "YulIdentifier",
																				"src": "5797:16:12"
																			},
																			"nativeSrc": "5797:18:12",
																			"nodeType": "YulFunctionCall",
																			"src": "5797:18:12"
																		},
																		"nativeSrc": "5797:18:12",
																		"nodeType": "YulExpressionStatement",
																		"src": "5797:18:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "5792:1:12",
																		"nodeType": "YulIdentifier",
																		"src": "5792:1:12"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "5785:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "5785:6:12"
																},
																"nativeSrc": "5785:9:12",
																"nodeType": "YulFunctionCall",
																"src": "5785:9:12"
															},
															"nativeSrc": "5782:35:12",
															"nodeType": "YulIf",
															"src": "5782:35:12"
														},
														{
															"nativeSrc": "5827:14:12",
															"nodeType": "YulAssignment",
															"src": "5827:14:12",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "5836:1:12",
																		"nodeType": "YulIdentifier",
																		"src": "5836:1:12"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "5839:1:12",
																		"nodeType": "YulIdentifier",
																		"src": "5839:1:12"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nativeSrc": "5832:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "5832:3:12"
																},
																"nativeSrc": "5832:9:12",
																"nodeType": "YulFunctionCall",
																"src": "5832:9:12"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nativeSrc": "5827:1:12",
																	"nodeType": "YulIdentifier",
																	"src": "5827:1:12"
																}
															]
														}
													]
												},
												"name": "checked_div_t_uint256",
												"nativeSrc": "5662:185:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "5693:1:12",
														"nodeType": "YulTypedName",
														"src": "5693:1:12",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "5696:1:12",
														"nodeType": "YulTypedName",
														"src": "5696:1:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "r",
														"nativeSrc": "5702:1:12",
														"nodeType": "YulTypedName",
														"src": "5702:1:12",
														"type": ""
													}
												],
												"src": "5662:185:12"
											},
											{
												"body": {
													"nativeSrc": "5906:32:12",
													"nodeType": "YulBlock",
													"src": "5906:32:12",
													"statements": [
														{
															"nativeSrc": "5916:16:12",
															"nodeType": "YulAssignment",
															"src": "5916:16:12",
															"value": {
																"name": "value",
																"nativeSrc": "5927:5:12",
																"nodeType": "YulIdentifier",
																"src": "5927:5:12"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "5916:7:12",
																	"nodeType": "YulIdentifier",
																	"src": "5916:7:12"
																}
															]
														}
													]
												},
												"name": "cleanup_t_rational_1_by_1",
												"nativeSrc": "5853:85:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "5888:5:12",
														"nodeType": "YulTypedName",
														"src": "5888:5:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "5898:7:12",
														"nodeType": "YulTypedName",
														"src": "5898:7:12",
														"type": ""
													}
												],
												"src": "5853:85:12"
											},
											{
												"body": {
													"nativeSrc": "5988:57:12",
													"nodeType": "YulBlock",
													"src": "5988:57:12",
													"statements": [
														{
															"nativeSrc": "5998:41:12",
															"nodeType": "YulAssignment",
															"src": "5998:41:12",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "6013:5:12",
																		"nodeType": "YulIdentifier",
																		"src": "6013:5:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6020:18:12",
																		"nodeType": "YulLiteral",
																		"src": "6020:18:12",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "6009:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "6009:3:12"
																},
																"nativeSrc": "6009:30:12",
																"nodeType": "YulFunctionCall",
																"src": "6009:30:12"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "5998:7:12",
																	"nodeType": "YulIdentifier",
																	"src": "5998:7:12"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint64",
												"nativeSrc": "5944:101:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "5970:5:12",
														"nodeType": "YulTypedName",
														"src": "5970:5:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "5980:7:12",
														"nodeType": "YulTypedName",
														"src": "5980:7:12",
														"type": ""
													}
												],
												"src": "5944:101:12"
											},
											{
												"body": {
													"nativeSrc": "6083:28:12",
													"nodeType": "YulBlock",
													"src": "6083:28:12",
													"statements": [
														{
															"nativeSrc": "6093:12:12",
															"nodeType": "YulAssignment",
															"src": "6093:12:12",
															"value": {
																"name": "value",
																"nativeSrc": "6100:5:12",
																"nodeType": "YulIdentifier",
																"src": "6100:5:12"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nativeSrc": "6093:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "6093:3:12"
																}
															]
														}
													]
												},
												"name": "identity",
												"nativeSrc": "6051:60:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "6069:5:12",
														"nodeType": "YulTypedName",
														"src": "6069:5:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "6079:3:12",
														"nodeType": "YulTypedName",
														"src": "6079:3:12",
														"type": ""
													}
												],
												"src": "6051:60:12"
											},
											{
												"body": {
													"nativeSrc": "6184:89:12",
													"nodeType": "YulBlock",
													"src": "6184:89:12",
													"statements": [
														{
															"nativeSrc": "6194:73:12",
															"nodeType": "YulAssignment",
															"src": "6194:73:12",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "6259:5:12",
																						"nodeType": "YulIdentifier",
																						"src": "6259:5:12"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_rational_1_by_1",
																					"nativeSrc": "6233:25:12",
																					"nodeType": "YulIdentifier",
																					"src": "6233:25:12"
																				},
																				"nativeSrc": "6233:32:12",
																				"nodeType": "YulFunctionCall",
																				"src": "6233:32:12"
																			}
																		],
																		"functionName": {
																			"name": "identity",
																			"nativeSrc": "6224:8:12",
																			"nodeType": "YulIdentifier",
																			"src": "6224:8:12"
																		},
																		"nativeSrc": "6224:42:12",
																		"nodeType": "YulFunctionCall",
																		"src": "6224:42:12"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint64",
																	"nativeSrc": "6207:16:12",
																	"nodeType": "YulIdentifier",
																	"src": "6207:16:12"
																},
																"nativeSrc": "6207:60:12",
																"nodeType": "YulFunctionCall",
																"src": "6207:60:12"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nativeSrc": "6194:9:12",
																	"nodeType": "YulIdentifier",
																	"src": "6194:9:12"
																}
															]
														}
													]
												},
												"name": "convert_t_rational_1_by_1_to_t_uint64",
												"nativeSrc": "6117:156:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "6164:5:12",
														"nodeType": "YulTypedName",
														"src": "6164:5:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nativeSrc": "6174:9:12",
														"nodeType": "YulTypedName",
														"src": "6174:9:12",
														"type": ""
													}
												],
												"src": "6117:156:12"
											},
											{
												"body": {
													"nativeSrc": "6351:73:12",
													"nodeType": "YulBlock",
													"src": "6351:73:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "6368:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "6368:3:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "6411:5:12",
																				"nodeType": "YulIdentifier",
																				"src": "6411:5:12"
																			}
																		],
																		"functionName": {
																			"name": "convert_t_rational_1_by_1_to_t_uint64",
																			"nativeSrc": "6373:37:12",
																			"nodeType": "YulIdentifier",
																			"src": "6373:37:12"
																		},
																		"nativeSrc": "6373:44:12",
																		"nodeType": "YulFunctionCall",
																		"src": "6373:44:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6361:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "6361:6:12"
																},
																"nativeSrc": "6361:57:12",
																"nodeType": "YulFunctionCall",
																"src": "6361:57:12"
															},
															"nativeSrc": "6361:57:12",
															"nodeType": "YulExpressionStatement",
															"src": "6361:57:12"
														}
													]
												},
												"name": "abi_encode_t_rational_1_by_1_to_t_uint64_fromStack",
												"nativeSrc": "6279:145:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "6339:5:12",
														"nodeType": "YulTypedName",
														"src": "6339:5:12",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "6346:3:12",
														"nodeType": "YulTypedName",
														"src": "6346:3:12",
														"type": ""
													}
												],
												"src": "6279:145:12"
											},
											{
												"body": {
													"nativeSrc": "6535:131:12",
													"nodeType": "YulBlock",
													"src": "6535:131:12",
													"statements": [
														{
															"nativeSrc": "6545:26:12",
															"nodeType": "YulAssignment",
															"src": "6545:26:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "6557:9:12",
																		"nodeType": "YulIdentifier",
																		"src": "6557:9:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6568:2:12",
																		"nodeType": "YulLiteral",
																		"src": "6568:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "6553:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "6553:3:12"
																},
																"nativeSrc": "6553:18:12",
																"nodeType": "YulFunctionCall",
																"src": "6553:18:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "6545:4:12",
																	"nodeType": "YulIdentifier",
																	"src": "6545:4:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "6632:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "6632:6:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "6645:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "6645:9:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6656:1:12",
																				"nodeType": "YulLiteral",
																				"src": "6656:1:12",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6641:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "6641:3:12"
																		},
																		"nativeSrc": "6641:17:12",
																		"nodeType": "YulFunctionCall",
																		"src": "6641:17:12"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_rational_1_by_1_to_t_uint64_fromStack",
																	"nativeSrc": "6581:50:12",
																	"nodeType": "YulIdentifier",
																	"src": "6581:50:12"
																},
																"nativeSrc": "6581:78:12",
																"nodeType": "YulFunctionCall",
																"src": "6581:78:12"
															},
															"nativeSrc": "6581:78:12",
															"nodeType": "YulExpressionStatement",
															"src": "6581:78:12"
														}
													]
												},
												"name": "abi_encode_tuple_t_rational_1_by_1__to_t_uint64__fromStack_reversed",
												"nativeSrc": "6430:236:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "6507:9:12",
														"nodeType": "YulTypedName",
														"src": "6507:9:12",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "6519:6:12",
														"nodeType": "YulTypedName",
														"src": "6519:6:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "6530:4:12",
														"nodeType": "YulTypedName",
														"src": "6530:4:12",
														"type": ""
													}
												],
												"src": "6430:236:12"
											}
										]
									},
									"contents": "{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_uint256t_uint256(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function store_literal_in_memory_01c242f1c806840acb94ec05d87d4647010419c53a053a581e0026b3f6467dbb(memPtr) {\n\n        mstore(add(memPtr, 0), \"Amount must be > 0\")\n\n    }\n\n    function abi_encode_t_stringliteral_01c242f1c806840acb94ec05d87d4647010419c53a053a581e0026b3f6467dbb_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 18)\n        store_literal_in_memory_01c242f1c806840acb94ec05d87d4647010419c53a053a581e0026b3f6467dbb(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_01c242f1c806840acb94ec05d87d4647010419c53a053a581e0026b3f6467dbb__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_01c242f1c806840acb94ec05d87d4647010419c53a053a581e0026b3f6467dbb_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function checked_add_t_uint256(x, y) -> sum {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        sum := add(x, y)\n\n        if gt(x, sum) { panic_error_0x11() }\n\n    }\n\n    function checked_mul_t_uint256(x, y) -> product {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        let product_raw := mul(x, y)\n        product := cleanup_t_uint256(product_raw)\n\n        // overflow, if x != 0 and y != product/x\n        if iszero(\n            or(\n                iszero(x),\n                eq(y, div(product, x))\n            )\n        ) { panic_error_0x11() }\n\n    }\n\n    function panic_error_0x12() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x12)\n        revert(0, 0x24)\n    }\n\n    function checked_div_t_uint256(x, y) -> r {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        if iszero(y) { panic_error_0x12() }\n\n        r := div(x, y)\n    }\n\n    function cleanup_t_rational_1_by_1(value) -> cleaned {\n        cleaned := value\n    }\n\n    function cleanup_t_uint64(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffff)\n    }\n\n    function identity(value) -> ret {\n        ret := value\n    }\n\n    function convert_t_rational_1_by_1_to_t_uint64(value) -> converted {\n        converted := cleanup_t_uint64(identity(cleanup_t_rational_1_by_1(value)))\n    }\n\n    function abi_encode_t_rational_1_by_1_to_t_uint64_fromStack(value, pos) {\n        mstore(pos, convert_t_rational_1_by_1_to_t_uint64(value))\n    }\n\n    function abi_encode_tuple_t_rational_1_by_1__to_t_uint64__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_rational_1_by_1_to_t_uint64_fromStack(value0,  add(headStart, 0))\n\n    }\n\n}\n",
									"id": 12,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561000f575f5ffd5b5060043610610091575f3560e01c80637ce26644116100645780637ce26644146100f75780638da5cb5b14610127578063d2d7231f14610145578063e4a3011614610175578063f2fde38b1461019157610091565b80631ec8bb8c1461009557806326232a2e146100b157806349880782146100cf578063715018a6146100ed575b5f5ffd5b6100af60048036038101906100aa91906108a6565b6101ad565b005b6100b96102a9565b6040516100c691906108f3565b60405180910390f35b6100d76102ae565b6040516100e491906108f3565b60405180910390f35b6100f56102b4565b005b610111600480360381019061010c919061090c565b6102c7565b60405161011e91906108f3565b60405180910390f35b61012f6102dc565b60405161013c9190610946565b60405180910390f35b61015f600480360381019061015a919061095f565b610311565b60405161016c91906108f3565b60405180910390f35b61018f600480360381019061018a919061098a565b61034a565b005b6101ab60048036038101906101a6919061090c565b6104d9565b005b6101b561055d565b5f81116101f7576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016101ee90610a22565b60405180910390fd5b5f61020182610311565b90508060025f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f82825461024f9190610a6d565b925050819055508273ffffffffffffffffffffffffffffffffffffffff167fe34918ff1c7084970068b53fd71ad6d8b04e9f15d3886cbf006443e6cdc52ea68260405161029c91906108f3565b60405180910390a2505050565b5f5481565b60015481565b6102bc61055d565b6102c55f6105e4565b565b6002602052805f5260405f205f915090505481565b5f5f6102e66106b5565b9050805f015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1691505090565b5f5f6127105f54846103239190610aa0565b61032d9190610b0e565b9050600154811161033e5780610342565b6001545b915050919050565b5f6103536106dc565b90505f815f0160089054906101000a900460ff161590505f825f015f9054906101000a900467ffffffffffffffff1690505f5f8267ffffffffffffffff1614801561039b5750825b90505f60018367ffffffffffffffff161480156103ce57505f3073ffffffffffffffffffffffffffffffffffffffff163b145b9050811580156103dc575080155b15610413576040517ff92ee8a900000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6001855f015f6101000a81548167ffffffffffffffff021916908367ffffffffffffffff1602179055508315610460576001855f0160086101000a81548160ff0219169083151502179055505b610469336106ef565b865f819055508560018190555083156104d0575f855f0160086101000a81548160ff0219169083151502179055507fc7f505b2f371ae2175ee4913f4499e1f2633a7b5936321eed1cdaeb6115181d260016040516104c79190610b93565b60405180910390a15b50505050505050565b6104e161055d565b5f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603610551575f6040517f1e4fbdf70000000000000000000000000000000000000000000000000000000081526004016105489190610946565b60405180910390fd5b61055a816105e4565b50565b610565610703565b73ffffffffffffffffffffffffffffffffffffffff166105836102dc565b73ffffffffffffffffffffffffffffffffffffffff16146105e2576105a6610703565b6040517f118cdaa70000000000000000000000000000000000000000000000000000000081526004016105d99190610946565b60405180910390fd5b565b5f6105ed6106b5565b90505f815f015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905082825f015f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508273ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a3505050565b5f7f9016d09d72d40fdae2fd8ceac6b6234c7706214fd39c1cd1e609a0528c199300905090565b5f5f6106e661070a565b90508091505090565b6106f7610733565b61070081610773565b50565b5f33905090565b5f7ff0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a005f1b905090565b61073b6107f7565b610771576040517fd7e6bcf800000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b565b61077b610733565b5f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16036107eb575f6040517f1e4fbdf70000000000000000000000000000000000000000000000000000000081526004016107e29190610946565b60405180910390fd5b6107f4816105e4565b50565b5f6108006106dc565b5f0160089054906101000a900460ff16905090565b5f5ffd5b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f61084282610819565b9050919050565b61085281610838565b811461085c575f5ffd5b50565b5f8135905061086d81610849565b92915050565b5f819050919050565b61088581610873565b811461088f575f5ffd5b50565b5f813590506108a08161087c565b92915050565b5f5f604083850312156108bc576108bb610815565b5b5f6108c98582860161085f565b92505060206108da85828601610892565b9150509250929050565b6108ed81610873565b82525050565b5f6020820190506109065f8301846108e4565b92915050565b5f6020828403121561092157610920610815565b5b5f61092e8482850161085f565b91505092915050565b61094081610838565b82525050565b5f6020820190506109595f830184610937565b92915050565b5f6020828403121561097457610973610815565b5b5f61098184828501610892565b91505092915050565b5f5f604083850312156109a05761099f610815565b5b5f6109ad85828601610892565b92505060206109be85828601610892565b9150509250929050565b5f82825260208201905092915050565b7f416d6f756e74206d757374206265203e203000000000000000000000000000005f82015250565b5f610a0c6012836109c8565b9150610a17826109d8565b602082019050919050565b5f6020820190508181035f830152610a3981610a00565b9050919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b5f610a7782610873565b9150610a8283610873565b9250828201905080821115610a9a57610a99610a40565b5b92915050565b5f610aaa82610873565b9150610ab583610873565b9250828202610ac381610873565b91508282048414831517610ada57610ad9610a40565b5b5092915050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601260045260245ffd5b5f610b1882610873565b9150610b2383610873565b925082610b3357610b32610ae1565b5b828204905092915050565b5f819050919050565b5f67ffffffffffffffff82169050919050565b5f819050919050565b5f610b7d610b78610b7384610b3e565b610b5a565b610b47565b9050919050565b610b8d81610b63565b82525050565b5f602082019050610ba65f830184610b84565b9291505056fea26469706673582212204cf1ae2f73c645687dfb9ec84958e9f765e2648f31dfa33a1692ea3ba6eb519d64736f6c634300081e0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x91 JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x7CE26644 GT PUSH2 0x64 JUMPI DUP1 PUSH4 0x7CE26644 EQ PUSH2 0xF7 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x127 JUMPI DUP1 PUSH4 0xD2D7231F EQ PUSH2 0x145 JUMPI DUP1 PUSH4 0xE4A30116 EQ PUSH2 0x175 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x191 JUMPI PUSH2 0x91 JUMP JUMPDEST DUP1 PUSH4 0x1EC8BB8C EQ PUSH2 0x95 JUMPI DUP1 PUSH4 0x26232A2E EQ PUSH2 0xB1 JUMPI DUP1 PUSH4 0x49880782 EQ PUSH2 0xCF JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0xED JUMPI JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH2 0xAF PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xAA SWAP2 SWAP1 PUSH2 0x8A6 JUMP JUMPDEST PUSH2 0x1AD JUMP JUMPDEST STOP JUMPDEST PUSH2 0xB9 PUSH2 0x2A9 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xC6 SWAP2 SWAP1 PUSH2 0x8F3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xD7 PUSH2 0x2AE JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xE4 SWAP2 SWAP1 PUSH2 0x8F3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xF5 PUSH2 0x2B4 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x111 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x10C SWAP2 SWAP1 PUSH2 0x90C JUMP JUMPDEST PUSH2 0x2C7 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x11E SWAP2 SWAP1 PUSH2 0x8F3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x12F PUSH2 0x2DC JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x13C SWAP2 SWAP1 PUSH2 0x946 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x15F PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x15A SWAP2 SWAP1 PUSH2 0x95F JUMP JUMPDEST PUSH2 0x311 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x16C SWAP2 SWAP1 PUSH2 0x8F3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x18F PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x18A SWAP2 SWAP1 PUSH2 0x98A JUMP JUMPDEST PUSH2 0x34A JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1AB PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1A6 SWAP2 SWAP1 PUSH2 0x90C JUMP JUMPDEST PUSH2 0x4D9 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1B5 PUSH2 0x55D JUMP JUMPDEST PUSH0 DUP2 GT PUSH2 0x1F7 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1EE SWAP1 PUSH2 0xA22 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH2 0x201 DUP3 PUSH2 0x311 JUMP JUMPDEST SWAP1 POP DUP1 PUSH1 0x2 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x24F SWAP2 SWAP1 PUSH2 0xA6D JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xE34918FF1C7084970068B53FD71AD6D8B04E9F15D3886CBF006443E6CDC52EA6 DUP3 PUSH1 0x40 MLOAD PUSH2 0x29C SWAP2 SWAP1 PUSH2 0x8F3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP POP JUMP JUMPDEST PUSH0 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x1 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x2BC PUSH2 0x55D JUMP JUMPDEST PUSH2 0x2C5 PUSH0 PUSH2 0x5E4 JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x2 PUSH1 0x20 MSTORE DUP1 PUSH0 MSTORE PUSH1 0x40 PUSH0 KECCAK256 PUSH0 SWAP2 POP SWAP1 POP SLOAD DUP2 JUMP JUMPDEST PUSH0 PUSH0 PUSH2 0x2E6 PUSH2 0x6B5 JUMP JUMPDEST SWAP1 POP DUP1 PUSH0 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP2 POP POP SWAP1 JUMP JUMPDEST PUSH0 PUSH0 PUSH2 0x2710 PUSH0 SLOAD DUP5 PUSH2 0x323 SWAP2 SWAP1 PUSH2 0xAA0 JUMP JUMPDEST PUSH2 0x32D SWAP2 SWAP1 PUSH2 0xB0E JUMP JUMPDEST SWAP1 POP PUSH1 0x1 SLOAD DUP2 GT PUSH2 0x33E JUMPI DUP1 PUSH2 0x342 JUMP JUMPDEST PUSH1 0x1 SLOAD JUMPDEST SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x353 PUSH2 0x6DC JUMP JUMPDEST SWAP1 POP PUSH0 DUP2 PUSH0 ADD PUSH1 0x8 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO SWAP1 POP PUSH0 DUP3 PUSH0 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH8 0xFFFFFFFFFFFFFFFF AND SWAP1 POP PUSH0 PUSH0 DUP3 PUSH8 0xFFFFFFFFFFFFFFFF AND EQ DUP1 ISZERO PUSH2 0x39B JUMPI POP DUP3 JUMPDEST SWAP1 POP PUSH0 PUSH1 0x1 DUP4 PUSH8 0xFFFFFFFFFFFFFFFF AND EQ DUP1 ISZERO PUSH2 0x3CE JUMPI POP PUSH0 ADDRESS PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EXTCODESIZE EQ JUMPDEST SWAP1 POP DUP2 ISZERO DUP1 ISZERO PUSH2 0x3DC JUMPI POP DUP1 ISZERO JUMPDEST ISZERO PUSH2 0x413 JUMPI PUSH1 0x40 MLOAD PUSH32 0xF92EE8A900000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 DUP6 PUSH0 ADD PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH8 0xFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH8 0xFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP4 ISZERO PUSH2 0x460 JUMPI PUSH1 0x1 DUP6 PUSH0 ADD PUSH1 0x8 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP JUMPDEST PUSH2 0x469 CALLER PUSH2 0x6EF JUMP JUMPDEST DUP7 PUSH0 DUP2 SWAP1 SSTORE POP DUP6 PUSH1 0x1 DUP2 SWAP1 SSTORE POP DUP4 ISZERO PUSH2 0x4D0 JUMPI PUSH0 DUP6 PUSH0 ADD PUSH1 0x8 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH32 0xC7F505B2F371AE2175EE4913F4499E1F2633A7B5936321EED1CDAEB6115181D2 PUSH1 0x1 PUSH1 0x40 MLOAD PUSH2 0x4C7 SWAP2 SWAP1 PUSH2 0xB93 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 JUMPDEST POP POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0x4E1 PUSH2 0x55D JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x551 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x1E4FBDF700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x548 SWAP2 SWAP1 PUSH2 0x946 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x55A DUP2 PUSH2 0x5E4 JUMP JUMPDEST POP JUMP JUMPDEST PUSH2 0x565 PUSH2 0x703 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x583 PUSH2 0x2DC JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x5E2 JUMPI PUSH2 0x5A6 PUSH2 0x703 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x118CDAA700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x5D9 SWAP2 SWAP1 PUSH2 0x946 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH0 PUSH2 0x5ED PUSH2 0x6B5 JUMP JUMPDEST SWAP1 POP PUSH0 DUP2 PUSH0 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP3 DUP3 PUSH0 ADD PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH0 PUSH32 0x9016D09D72D40FDAE2FD8CEAC6B6234C7706214FD39C1CD1E609A0528C199300 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH0 PUSH2 0x6E6 PUSH2 0x70A JUMP JUMPDEST SWAP1 POP DUP1 SWAP2 POP POP SWAP1 JUMP JUMPDEST PUSH2 0x6F7 PUSH2 0x733 JUMP JUMPDEST PUSH2 0x700 DUP2 PUSH2 0x773 JUMP JUMPDEST POP JUMP JUMPDEST PUSH0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH32 0xF0C57E16840DF040F15088DC2F81FE391C3923BEC73E23A9662EFC9C229C6A00 PUSH0 SHL SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x73B PUSH2 0x7F7 JUMP JUMPDEST PUSH2 0x771 JUMPI PUSH1 0x40 MLOAD PUSH32 0xD7E6BCF800000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH2 0x77B PUSH2 0x733 JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x7EB JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x1E4FBDF700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x7E2 SWAP2 SWAP1 PUSH2 0x946 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x7F4 DUP2 PUSH2 0x5E4 JUMP JUMPDEST POP JUMP JUMPDEST PUSH0 PUSH2 0x800 PUSH2 0x6DC JUMP JUMPDEST PUSH0 ADD PUSH1 0x8 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x842 DUP3 PUSH2 0x819 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x852 DUP2 PUSH2 0x838 JUMP JUMPDEST DUP2 EQ PUSH2 0x85C JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x86D DUP2 PUSH2 0x849 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x885 DUP2 PUSH2 0x873 JUMP JUMPDEST DUP2 EQ PUSH2 0x88F JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x8A0 DUP2 PUSH2 0x87C JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x8BC JUMPI PUSH2 0x8BB PUSH2 0x815 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x8C9 DUP6 DUP3 DUP7 ADD PUSH2 0x85F JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x8DA DUP6 DUP3 DUP7 ADD PUSH2 0x892 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH2 0x8ED DUP2 PUSH2 0x873 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x906 PUSH0 DUP4 ADD DUP5 PUSH2 0x8E4 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x921 JUMPI PUSH2 0x920 PUSH2 0x815 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x92E DUP5 DUP3 DUP6 ADD PUSH2 0x85F JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x940 DUP2 PUSH2 0x838 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x959 PUSH0 DUP4 ADD DUP5 PUSH2 0x937 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x974 JUMPI PUSH2 0x973 PUSH2 0x815 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x981 DUP5 DUP3 DUP6 ADD PUSH2 0x892 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x9A0 JUMPI PUSH2 0x99F PUSH2 0x815 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x9AD DUP6 DUP3 DUP7 ADD PUSH2 0x892 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x9BE DUP6 DUP3 DUP7 ADD PUSH2 0x892 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x416D6F756E74206D757374206265203E20300000000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0xA0C PUSH1 0x12 DUP4 PUSH2 0x9C8 JUMP JUMPDEST SWAP2 POP PUSH2 0xA17 DUP3 PUSH2 0x9D8 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0xA39 DUP2 PUSH2 0xA00 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0xA77 DUP3 PUSH2 0x873 JUMP JUMPDEST SWAP2 POP PUSH2 0xA82 DUP4 PUSH2 0x873 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0xA9A JUMPI PUSH2 0xA99 PUSH2 0xA40 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0xAAA DUP3 PUSH2 0x873 JUMP JUMPDEST SWAP2 POP PUSH2 0xAB5 DUP4 PUSH2 0x873 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 MUL PUSH2 0xAC3 DUP2 PUSH2 0x873 JUMP JUMPDEST SWAP2 POP DUP3 DUP3 DIV DUP5 EQ DUP4 ISZERO OR PUSH2 0xADA JUMPI PUSH2 0xAD9 PUSH2 0xA40 JUMP JUMPDEST JUMPDEST POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0xB18 DUP3 PUSH2 0x873 JUMP JUMPDEST SWAP2 POP PUSH2 0xB23 DUP4 PUSH2 0x873 JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0xB33 JUMPI PUSH2 0xB32 PUSH2 0xAE1 JUMP JUMPDEST JUMPDEST DUP3 DUP3 DIV SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0xB7D PUSH2 0xB78 PUSH2 0xB73 DUP5 PUSH2 0xB3E JUMP JUMPDEST PUSH2 0xB5A JUMP JUMPDEST PUSH2 0xB47 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xB8D DUP2 PUSH2 0xB63 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xBA6 PUSH0 DUP4 ADD DUP5 PUSH2 0xB84 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x4C CALL 0xAE 0x2F PUSH20 0xC645687DFB9EC84958E9F765E2648F31DFA33A16 SWAP3 0xEA EXTCODESIZE 0xA6 0xEB MLOAD SWAP14 PUSH5 0x736F6C6343 STOP ADDMOD 0x1E STOP CALLER ",
							"sourceMap": "298:952:11:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;759:276;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;365:26;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;398:30;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3155:101:0;;;:::i;:::-;;435:51:11;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2441:144:0;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1043:204:11;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;565:186;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;3405:215:0;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;759:276:11;2334:13:0;:11;:13::i;:::-;862:1:11::1;853:6;:10;845:41;;;;;;;;;;;;:::i;:::-;;;;;;;;;897:14;914:23;930:6;914:15;:23::i;:::-;897:40;;974:6;948:16;:22;965:4;948:22;;;;;;;;;;;;;;;;:32;;;;;;;:::i;:::-;;;;;;;;1014:4;996:31;;;1020:6;996:31;;;;;;:::i;:::-;;;;;;;;834:201;759:276:::0;;:::o;365:26::-;;;;:::o;398:30::-;;;;:::o;3155:101:0:-;2334:13;:11;:13::i;:::-;3219:30:::1;3246:1;3219:18;:30::i;:::-;3155:101::o:0;435:51:11:-;;;;;;;;;;;;;;;;;:::o;2441:144:0:-;2487:7;2506:24;2533:20;:18;:20::i;:::-;2506:47;;2570:1;:8;;;;;;;;;;;;2563:15;;;2441:144;:::o;1043:204:11:-;1105:7;1125:14;1165:5;1151:11;;1142:6;:20;;;;:::i;:::-;:28;;;;:::i;:::-;1125:45;;1197:15;;1188:6;:24;:51;;1233:6;1188:51;;;1215:15;;1188:51;1181:58;;;1043:204;;;:::o;565:186::-;4158:30:1;4191:26;:24;:26::i;:::-;4158:59;;4279:19;4302:1;:15;;;;;;;;;;;;4301:16;4279:38;;4327:18;4348:1;:14;;;;;;;;;;;;4327:35;;4704:17;4739:1;4724:11;:16;;;:34;;;;;4744:14;4724:34;4704:54;;4768:17;4803:1;4788:11;:16;;;:50;;;;;4837:1;4816:4;4808:25;;;:30;4788:50;4768:70;;4854:12;4853:13;:30;;;;;4871:12;4870:13;4853:30;4849:91;;;4906:23;;;;;;;;;;;;;;4849:91;4966:1;4949;:14;;;:18;;;;;;;;;;;;;;;;;;4981:14;4977:67;;;5029:4;5011:1;:15;;;:22;;;;;;;;;;;;;;;;;;4977:67;649:26:11::1;664:10;649:14;:26::i;:::-;700:4;686:11;:18;;;;733:10;715:15;:28;;;;5068:14:1::0;5064:101;;;5116:5;5098:1;:15;;;:23;;;;;;;;;;;;;;;;;;5140:14;5152:1;5140:14;;;;;;:::i;:::-;;;;;;;;5064:101;4092:1079;;;;;565:186:11;;:::o;3405:215:0:-;2334:13;:11;:13::i;:::-;3509:1:::1;3489:22;;:8;:22;;::::0;3485:91:::1;;3562:1;3534:31;;;;;;;;;;;:::i;:::-;;;;;;;;3485:91;3585:28;3604:8;3585:18;:28::i;:::-;3405:215:::0;:::o;2658:162::-;2728:12;:10;:12::i;:::-;2717:23;;:7;:5;:7::i;:::-;:23;;;2713:101;;2790:12;:10;:12::i;:::-;2763:40;;;;;;;;;;;:::i;:::-;;;;;;;;2713:101;2658:162::o;3774:248::-;3847:24;3874:20;:18;:20::i;:::-;3847:47;;3904:16;3923:1;:8;;;;;;;;;;;;3904:27;;3952:8;3941:1;:8;;;:19;;;;;;;;;;;;;;;;;;4006:8;3975:40;;3996:8;3975:40;;;;;;;;;;;;3837:185;;3774:248;:::o;1192:159::-;1244:24;1313:22;1303:32;;1192:159;:::o;9071:205:1:-;9129:30;9171:12;9186:27;:25;:27::i;:::-;9171:42;;9256:4;9246:14;;9232:38;9071:205;:::o;1847:127:0:-;6929:20:1;:18;:20::i;:::-;1929:38:0::1;1954:12;1929:24;:38::i;:::-;1847:127:::0;:::o;887:96:3:-;940:7;966:10;959:17;;887:96;:::o;8819:122:1:-;8887:7;3147:66;8913:21;;8906:28;;8819:122;:::o;7082:141::-;7149:17;:15;:17::i;:::-;7144:73;;7189:17;;;;;;;;;;;;;;7144:73;7082:141::o;1980:235:0:-;6929:20:1;:18;:20::i;:::-;2100:1:0::1;2076:26;;:12;:26;;::::0;2072:95:::1;;2153:1;2125:31;;;;;;;;;;;:::i;:::-;;;;;;;;2072:95;2176:32;2195:12;2176:18;:32::i;:::-;1980:235:::0;:::o;8485:120:1:-;8535:4;8558:26;:24;:26::i;:::-;:40;;;;;;;;;;;;8551:47;;8485:120;:::o;88:117:12:-;197:1;194;187:12;334:126;371:7;411:42;404:5;400:54;389:65;;334:126;;;:::o;466:96::-;503:7;532:24;550:5;532:24;:::i;:::-;521:35;;466:96;;;:::o;568:122::-;641:24;659:5;641:24;:::i;:::-;634:5;631:35;621:63;;680:1;677;670:12;621:63;568:122;:::o;696:139::-;742:5;780:6;767:20;758:29;;796:33;823:5;796:33;:::i;:::-;696:139;;;;:::o;841:77::-;878:7;907:5;896:16;;841:77;;;:::o;924:122::-;997:24;1015:5;997:24;:::i;:::-;990:5;987:35;977:63;;1036:1;1033;1026:12;977:63;924:122;:::o;1052:139::-;1098:5;1136:6;1123:20;1114:29;;1152:33;1179:5;1152:33;:::i;:::-;1052:139;;;;:::o;1197:474::-;1265:6;1273;1322:2;1310:9;1301:7;1297:23;1293:32;1290:119;;;1328:79;;:::i;:::-;1290:119;1448:1;1473:53;1518:7;1509:6;1498:9;1494:22;1473:53;:::i;:::-;1463:63;;1419:117;1575:2;1601:53;1646:7;1637:6;1626:9;1622:22;1601:53;:::i;:::-;1591:63;;1546:118;1197:474;;;;;:::o;1677:118::-;1764:24;1782:5;1764:24;:::i;:::-;1759:3;1752:37;1677:118;;:::o;1801:222::-;1894:4;1932:2;1921:9;1917:18;1909:26;;1945:71;2013:1;2002:9;1998:17;1989:6;1945:71;:::i;:::-;1801:222;;;;:::o;2029:329::-;2088:6;2137:2;2125:9;2116:7;2112:23;2108:32;2105:119;;;2143:79;;:::i;:::-;2105:119;2263:1;2288:53;2333:7;2324:6;2313:9;2309:22;2288:53;:::i;:::-;2278:63;;2234:117;2029:329;;;;:::o;2364:118::-;2451:24;2469:5;2451:24;:::i;:::-;2446:3;2439:37;2364:118;;:::o;2488:222::-;2581:4;2619:2;2608:9;2604:18;2596:26;;2632:71;2700:1;2689:9;2685:17;2676:6;2632:71;:::i;:::-;2488:222;;;;:::o;2716:329::-;2775:6;2824:2;2812:9;2803:7;2799:23;2795:32;2792:119;;;2830:79;;:::i;:::-;2792:119;2950:1;2975:53;3020:7;3011:6;3000:9;2996:22;2975:53;:::i;:::-;2965:63;;2921:117;2716:329;;;;:::o;3051:474::-;3119:6;3127;3176:2;3164:9;3155:7;3151:23;3147:32;3144:119;;;3182:79;;:::i;:::-;3144:119;3302:1;3327:53;3372:7;3363:6;3352:9;3348:22;3327:53;:::i;:::-;3317:63;;3273:117;3429:2;3455:53;3500:7;3491:6;3480:9;3476:22;3455:53;:::i;:::-;3445:63;;3400:118;3051:474;;;;;:::o;3531:169::-;3615:11;3649:6;3644:3;3637:19;3689:4;3684:3;3680:14;3665:29;;3531:169;;;;:::o;3706:168::-;3846:20;3842:1;3834:6;3830:14;3823:44;3706:168;:::o;3880:366::-;4022:3;4043:67;4107:2;4102:3;4043:67;:::i;:::-;4036:74;;4119:93;4208:3;4119:93;:::i;:::-;4237:2;4232:3;4228:12;4221:19;;3880:366;;;:::o;4252:419::-;4418:4;4456:2;4445:9;4441:18;4433:26;;4505:9;4499:4;4495:20;4491:1;4480:9;4476:17;4469:47;4533:131;4659:4;4533:131;:::i;:::-;4525:139;;4252:419;;;:::o;4677:180::-;4725:77;4722:1;4715:88;4822:4;4819:1;4812:15;4846:4;4843:1;4836:15;4863:191;4903:3;4922:20;4940:1;4922:20;:::i;:::-;4917:25;;4956:20;4974:1;4956:20;:::i;:::-;4951:25;;4999:1;4996;4992:9;4985:16;;5020:3;5017:1;5014:10;5011:36;;;5027:18;;:::i;:::-;5011:36;4863:191;;;;:::o;5060:410::-;5100:7;5123:20;5141:1;5123:20;:::i;:::-;5118:25;;5157:20;5175:1;5157:20;:::i;:::-;5152:25;;5212:1;5209;5205:9;5234:30;5252:11;5234:30;:::i;:::-;5223:41;;5413:1;5404:7;5400:15;5397:1;5394:22;5374:1;5367:9;5347:83;5324:139;;5443:18;;:::i;:::-;5324:139;5108:362;5060:410;;;;:::o;5476:180::-;5524:77;5521:1;5514:88;5621:4;5618:1;5611:15;5645:4;5642:1;5635:15;5662:185;5702:1;5719:20;5737:1;5719:20;:::i;:::-;5714:25;;5753:20;5771:1;5753:20;:::i;:::-;5748:25;;5792:1;5782:35;;5797:18;;:::i;:::-;5782:35;5839:1;5836;5832:9;5827:14;;5662:185;;;;:::o;5853:85::-;5898:7;5927:5;5916:16;;5853:85;;;:::o;5944:101::-;5980:7;6020:18;6013:5;6009:30;5998:41;;5944:101;;;:::o;6051:60::-;6079:3;6100:5;6093:12;;6051:60;;;:::o;6117:156::-;6174:9;6207:60;6224:42;6233:32;6259:5;6233:32;:::i;:::-;6224:42;:::i;:::-;6207:60;:::i;:::-;6194:73;;6117:156;;;:::o;6279:145::-;6373:44;6411:5;6373:44;:::i;:::-;6368:3;6361:57;6279:145;;:::o;6430:236::-;6530:4;6568:2;6557:9;6553:18;6545:26;;6581:78;6656:1;6645:9;6641:17;6632:6;6581:78;:::i;:::-;6430:236;;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "608400",
								"executionCost": "643",
								"totalCost": "609043"
							},
							"external": {
								"calculateReward(uint256)": "infinite",
								"distributeReward(address,uint256)": "infinite",
								"initialize(uint256,uint256)": "infinite",
								"maxRewardPoints()": "2470",
								"owner()": "2588",
								"platformFee()": "2447",
								"renounceOwnership()": "infinite",
								"transferOwnership(address)": "infinite",
								"userRewardPoints(address)": "2802"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 298,
									"end": 1250,
									"name": "PUSH",
									"source": 11,
									"value": "80"
								},
								{
									"begin": 298,
									"end": 1250,
									"name": "PUSH",
									"source": 11,
									"value": "40"
								},
								{
									"begin": 298,
									"end": 1250,
									"name": "MSTORE",
									"source": 11
								},
								{
									"begin": 298,
									"end": 1250,
									"name": "CALLVALUE",
									"source": 11
								},
								{
									"begin": 298,
									"end": 1250,
									"name": "DUP1",
									"source": 11
								},
								{
									"begin": 298,
									"end": 1250,
									"name": "ISZERO",
									"source": 11
								},
								{
									"begin": 298,
									"end": 1250,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "1"
								},
								{
									"begin": 298,
									"end": 1250,
									"name": "JUMPI",
									"source": 11
								},
								{
									"begin": 298,
									"end": 1250,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 298,
									"end": 1250,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 298,
									"end": 1250,
									"name": "REVERT",
									"source": 11
								},
								{
									"begin": 298,
									"end": 1250,
									"name": "tag",
									"source": 11,
									"value": "1"
								},
								{
									"begin": 298,
									"end": 1250,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 298,
									"end": 1250,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 298,
									"end": 1250,
									"name": "PUSH #[$]",
									"source": 11,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 298,
									"end": 1250,
									"name": "DUP1",
									"source": 11
								},
								{
									"begin": 298,
									"end": 1250,
									"name": "PUSH [$]",
									"source": 11,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 298,
									"end": 1250,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 298,
									"end": 1250,
									"name": "CODECOPY",
									"source": 11
								},
								{
									"begin": 298,
									"end": 1250,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 298,
									"end": 1250,
									"name": "RETURN",
									"source": 11
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212204cf1ae2f73c645687dfb9ec84958e9f765e2648f31dfa33a1692ea3ba6eb519d64736f6c634300081e0033",
									".code": [
										{
											"begin": 298,
											"end": 1250,
											"name": "PUSH",
											"source": 11,
											"value": "80"
										},
										{
											"begin": 298,
											"end": 1250,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 298,
											"end": 1250,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 298,
											"end": 1250,
											"name": "CALLVALUE",
											"source": 11
										},
										{
											"begin": 298,
											"end": 1250,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 298,
											"end": 1250,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 298,
											"end": 1250,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "1"
										},
										{
											"begin": 298,
											"end": 1250,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 298,
											"end": 1250,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 298,
											"end": 1250,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 298,
											"end": 1250,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 298,
											"end": 1250,
											"name": "tag",
											"source": 11,
											"value": "1"
										},
										{
											"begin": 298,
											"end": 1250,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 298,
											"end": 1250,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 298,
											"end": 1250,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 298,
											"end": 1250,
											"name": "CALLDATASIZE",
											"source": 11
										},
										{
											"begin": 298,
											"end": 1250,
											"name": "LT",
											"source": 11
										},
										{
											"begin": 298,
											"end": 1250,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "2"
										},
										{
											"begin": 298,
											"end": 1250,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 298,
											"end": 1250,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 298,
											"end": 1250,
											"name": "CALLDATALOAD",
											"source": 11
										},
										{
											"begin": 298,
											"end": 1250,
											"name": "PUSH",
											"source": 11,
											"value": "E0"
										},
										{
											"begin": 298,
											"end": 1250,
											"name": "SHR",
											"source": 11
										},
										{
											"begin": 298,
											"end": 1250,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 298,
											"end": 1250,
											"name": "PUSH",
											"source": 11,
											"value": "7CE26644"
										},
										{
											"begin": 298,
											"end": 1250,
											"name": "GT",
											"source": 11
										},
										{
											"begin": 298,
											"end": 1250,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "12"
										},
										{
											"begin": 298,
											"end": 1250,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 298,
											"end": 1250,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 298,
											"end": 1250,
											"name": "PUSH",
											"source": 11,
											"value": "7CE26644"
										},
										{
											"begin": 298,
											"end": 1250,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 298,
											"end": 1250,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "7"
										},
										{
											"begin": 298,
											"end": 1250,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 298,
											"end": 1250,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 298,
											"end": 1250,
											"name": "PUSH",
											"source": 11,
											"value": "8DA5CB5B"
										},
										{
											"begin": 298,
											"end": 1250,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 298,
											"end": 1250,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "8"
										},
										{
											"begin": 298,
											"end": 1250,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 298,
											"end": 1250,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 298,
											"end": 1250,
											"name": "PUSH",
											"source": 11,
											"value": "D2D7231F"
										},
										{
											"begin": 298,
											"end": 1250,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 298,
											"end": 1250,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "9"
										},
										{
											"begin": 298,
											"end": 1250,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 298,
											"end": 1250,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 298,
											"end": 1250,
											"name": "PUSH",
											"source": 11,
											"value": "E4A30116"
										},
										{
											"begin": 298,
											"end": 1250,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 298,
											"end": 1250,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "10"
										},
										{
											"begin": 298,
											"end": 1250,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 298,
											"end": 1250,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 298,
											"end": 1250,
											"name": "PUSH",
											"source": 11,
											"value": "F2FDE38B"
										},
										{
											"begin": 298,
											"end": 1250,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 298,
											"end": 1250,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "11"
										},
										{
											"begin": 298,
											"end": 1250,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 298,
											"end": 1250,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "2"
										},
										{
											"begin": 298,
											"end": 1250,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 298,
											"end": 1250,
											"name": "tag",
											"source": 11,
											"value": "12"
										},
										{
											"begin": 298,
											"end": 1250,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 298,
											"end": 1250,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 298,
											"end": 1250,
											"name": "PUSH",
											"source": 11,
											"value": "1EC8BB8C"
										},
										{
											"begin": 298,
											"end": 1250,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 298,
											"end": 1250,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "3"
										},
										{
											"begin": 298,
											"end": 1250,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 298,
											"end": 1250,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 298,
											"end": 1250,
											"name": "PUSH",
											"source": 11,
											"value": "26232A2E"
										},
										{
											"begin": 298,
											"end": 1250,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 298,
											"end": 1250,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 298,
											"end": 1250,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 298,
											"end": 1250,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 298,
											"end": 1250,
											"name": "PUSH",
											"source": 11,
											"value": "49880782"
										},
										{
											"begin": 298,
											"end": 1250,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 298,
											"end": 1250,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "5"
										},
										{
											"begin": 298,
											"end": 1250,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 298,
											"end": 1250,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 298,
											"end": 1250,
											"name": "PUSH",
											"source": 11,
											"value": "715018A6"
										},
										{
											"begin": 298,
											"end": 1250,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 298,
											"end": 1250,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "6"
										},
										{
											"begin": 298,
											"end": 1250,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 298,
											"end": 1250,
											"name": "tag",
											"source": 11,
											"value": "2"
										},
										{
											"begin": 298,
											"end": 1250,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 298,
											"end": 1250,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 298,
											"end": 1250,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 298,
											"end": 1250,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 759,
											"end": 1035,
											"name": "tag",
											"source": 11,
											"value": "3"
										},
										{
											"begin": 759,
											"end": 1035,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 759,
											"end": 1035,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "13"
										},
										{
											"begin": 759,
											"end": 1035,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 759,
											"end": 1035,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 759,
											"end": 1035,
											"name": "CALLDATASIZE",
											"source": 11
										},
										{
											"begin": 759,
											"end": 1035,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 759,
											"end": 1035,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 759,
											"end": 1035,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 759,
											"end": 1035,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 759,
											"end": 1035,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "14"
										},
										{
											"begin": 759,
											"end": 1035,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 759,
											"end": 1035,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 759,
											"end": 1035,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "15"
										},
										{
											"begin": 759,
											"end": 1035,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 759,
											"end": 1035,
											"name": "tag",
											"source": 11,
											"value": "14"
										},
										{
											"begin": 759,
											"end": 1035,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 759,
											"end": 1035,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "16"
										},
										{
											"begin": 759,
											"end": 1035,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 759,
											"end": 1035,
											"name": "tag",
											"source": 11,
											"value": "13"
										},
										{
											"begin": 759,
											"end": 1035,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 759,
											"end": 1035,
											"name": "STOP",
											"source": 11
										},
										{
											"begin": 365,
											"end": 391,
											"name": "tag",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 365,
											"end": 391,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 365,
											"end": 391,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "17"
										},
										{
											"begin": 365,
											"end": 391,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "18"
										},
										{
											"begin": 365,
											"end": 391,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 365,
											"end": 391,
											"name": "tag",
											"source": 11,
											"value": "17"
										},
										{
											"begin": 365,
											"end": 391,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 365,
											"end": 391,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 365,
											"end": 391,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 365,
											"end": 391,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "19"
										},
										{
											"begin": 365,
											"end": 391,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 365,
											"end": 391,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 365,
											"end": 391,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 365,
											"end": 391,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 365,
											"end": 391,
											"name": "tag",
											"source": 11,
											"value": "19"
										},
										{
											"begin": 365,
											"end": 391,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 365,
											"end": 391,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 365,
											"end": 391,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 365,
											"end": 391,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 365,
											"end": 391,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 365,
											"end": 391,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 365,
											"end": 391,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 365,
											"end": 391,
											"name": "RETURN",
											"source": 11
										},
										{
											"begin": 398,
											"end": 428,
											"name": "tag",
											"source": 11,
											"value": "5"
										},
										{
											"begin": 398,
											"end": 428,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 398,
											"end": 428,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "21"
										},
										{
											"begin": 398,
											"end": 428,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "22"
										},
										{
											"begin": 398,
											"end": 428,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 398,
											"end": 428,
											"name": "tag",
											"source": 11,
											"value": "21"
										},
										{
											"begin": 398,
											"end": 428,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 398,
											"end": 428,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 398,
											"end": 428,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 398,
											"end": 428,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "23"
										},
										{
											"begin": 398,
											"end": 428,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 398,
											"end": 428,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 398,
											"end": 428,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 398,
											"end": 428,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 398,
											"end": 428,
											"name": "tag",
											"source": 11,
											"value": "23"
										},
										{
											"begin": 398,
											"end": 428,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 398,
											"end": 428,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 398,
											"end": 428,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 398,
											"end": 428,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 398,
											"end": 428,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 398,
											"end": 428,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 398,
											"end": 428,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 398,
											"end": 428,
											"name": "RETURN",
											"source": 11
										},
										{
											"begin": 3155,
											"end": 3256,
											"name": "tag",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 3155,
											"end": 3256,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3155,
											"end": 3256,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 3155,
											"end": 3256,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 3155,
											"end": 3256,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3155,
											"end": 3256,
											"name": "tag",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 3155,
											"end": 3256,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3155,
											"end": 3256,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 435,
											"end": 486,
											"name": "tag",
											"source": 11,
											"value": "7"
										},
										{
											"begin": 435,
											"end": 486,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 435,
											"end": 486,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "26"
										},
										{
											"begin": 435,
											"end": 486,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 435,
											"end": 486,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 435,
											"end": 486,
											"name": "CALLDATASIZE",
											"source": 11
										},
										{
											"begin": 435,
											"end": 486,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 435,
											"end": 486,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 435,
											"end": 486,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 435,
											"end": 486,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 435,
											"end": 486,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "27"
										},
										{
											"begin": 435,
											"end": 486,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 435,
											"end": 486,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 435,
											"end": 486,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "28"
										},
										{
											"begin": 435,
											"end": 486,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 435,
											"end": 486,
											"name": "tag",
											"source": 11,
											"value": "27"
										},
										{
											"begin": 435,
											"end": 486,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 435,
											"end": 486,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "29"
										},
										{
											"begin": 435,
											"end": 486,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 435,
											"end": 486,
											"name": "tag",
											"source": 11,
											"value": "26"
										},
										{
											"begin": 435,
											"end": 486,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 435,
											"end": 486,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 435,
											"end": 486,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 435,
											"end": 486,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "30"
										},
										{
											"begin": 435,
											"end": 486,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 435,
											"end": 486,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 435,
											"end": 486,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 435,
											"end": 486,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 435,
											"end": 486,
											"name": "tag",
											"source": 11,
											"value": "30"
										},
										{
											"begin": 435,
											"end": 486,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 435,
											"end": 486,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 435,
											"end": 486,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 435,
											"end": 486,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 435,
											"end": 486,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 435,
											"end": 486,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 435,
											"end": 486,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 435,
											"end": 486,
											"name": "RETURN",
											"source": 11
										},
										{
											"begin": 2441,
											"end": 2585,
											"name": "tag",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 2441,
											"end": 2585,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2441,
											"end": 2585,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "31"
										},
										{
											"begin": 2441,
											"end": 2585,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "32"
										},
										{
											"begin": 2441,
											"end": 2585,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2441,
											"end": 2585,
											"name": "tag",
											"source": 0,
											"value": "31"
										},
										{
											"begin": 2441,
											"end": 2585,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2441,
											"end": 2585,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2441,
											"end": 2585,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2441,
											"end": 2585,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "33"
										},
										{
											"begin": 2441,
											"end": 2585,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2441,
											"end": 2585,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2441,
											"end": 2585,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "34"
										},
										{
											"begin": 2441,
											"end": 2585,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2441,
											"end": 2585,
											"name": "tag",
											"source": 0,
											"value": "33"
										},
										{
											"begin": 2441,
											"end": 2585,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2441,
											"end": 2585,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2441,
											"end": 2585,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2441,
											"end": 2585,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2441,
											"end": 2585,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2441,
											"end": 2585,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2441,
											"end": 2585,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2441,
											"end": 2585,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 1043,
											"end": 1247,
											"name": "tag",
											"source": 11,
											"value": "9"
										},
										{
											"begin": 1043,
											"end": 1247,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1043,
											"end": 1247,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "35"
										},
										{
											"begin": 1043,
											"end": 1247,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 1043,
											"end": 1247,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 1043,
											"end": 1247,
											"name": "CALLDATASIZE",
											"source": 11
										},
										{
											"begin": 1043,
											"end": 1247,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 1043,
											"end": 1247,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 1043,
											"end": 1247,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 1043,
											"end": 1247,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 1043,
											"end": 1247,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "36"
										},
										{
											"begin": 1043,
											"end": 1247,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 1043,
											"end": 1247,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 1043,
											"end": 1247,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "37"
										},
										{
											"begin": 1043,
											"end": 1247,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 1043,
											"end": 1247,
											"name": "tag",
											"source": 11,
											"value": "36"
										},
										{
											"begin": 1043,
											"end": 1247,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1043,
											"end": 1247,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "38"
										},
										{
											"begin": 1043,
											"end": 1247,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 1043,
											"end": 1247,
											"name": "tag",
											"source": 11,
											"value": "35"
										},
										{
											"begin": 1043,
											"end": 1247,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1043,
											"end": 1247,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 1043,
											"end": 1247,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 1043,
											"end": 1247,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "39"
										},
										{
											"begin": 1043,
											"end": 1247,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 1043,
											"end": 1247,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 1043,
											"end": 1247,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 1043,
											"end": 1247,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 1043,
											"end": 1247,
											"name": "tag",
											"source": 11,
											"value": "39"
										},
										{
											"begin": 1043,
											"end": 1247,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1043,
											"end": 1247,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 1043,
											"end": 1247,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 1043,
											"end": 1247,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 1043,
											"end": 1247,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 1043,
											"end": 1247,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 1043,
											"end": 1247,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 1043,
											"end": 1247,
											"name": "RETURN",
											"source": 11
										},
										{
											"begin": 565,
											"end": 751,
											"name": "tag",
											"source": 11,
											"value": "10"
										},
										{
											"begin": 565,
											"end": 751,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 565,
											"end": 751,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 565,
											"end": 751,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 565,
											"end": 751,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 565,
											"end": 751,
											"name": "CALLDATASIZE",
											"source": 11
										},
										{
											"begin": 565,
											"end": 751,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 565,
											"end": 751,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 565,
											"end": 751,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 565,
											"end": 751,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 565,
											"end": 751,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "41"
										},
										{
											"begin": 565,
											"end": 751,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 565,
											"end": 751,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 565,
											"end": 751,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "42"
										},
										{
											"begin": 565,
											"end": 751,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 565,
											"end": 751,
											"name": "tag",
											"source": 11,
											"value": "41"
										},
										{
											"begin": 565,
											"end": 751,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 565,
											"end": 751,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "43"
										},
										{
											"begin": 565,
											"end": 751,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 565,
											"end": 751,
											"name": "tag",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 565,
											"end": 751,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 565,
											"end": 751,
											"name": "STOP",
											"source": 11
										},
										{
											"begin": 3405,
											"end": 3620,
											"name": "tag",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 3405,
											"end": 3620,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3405,
											"end": 3620,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "44"
										},
										{
											"begin": 3405,
											"end": 3620,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 3405,
											"end": 3620,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3405,
											"end": 3620,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 3405,
											"end": 3620,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 3405,
											"end": 3620,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3405,
											"end": 3620,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3405,
											"end": 3620,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3405,
											"end": 3620,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "45"
										},
										{
											"begin": 3405,
											"end": 3620,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3405,
											"end": 3620,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3405,
											"end": 3620,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "28"
										},
										{
											"begin": 3405,
											"end": 3620,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3405,
											"end": 3620,
											"name": "tag",
											"source": 0,
											"value": "45"
										},
										{
											"begin": 3405,
											"end": 3620,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3405,
											"end": 3620,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "46"
										},
										{
											"begin": 3405,
											"end": 3620,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3405,
											"end": 3620,
											"name": "tag",
											"source": 0,
											"value": "44"
										},
										{
											"begin": 3405,
											"end": 3620,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3405,
											"end": 3620,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 759,
											"end": 1035,
											"name": "tag",
											"source": 11,
											"value": "16"
										},
										{
											"begin": 759,
											"end": 1035,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2334,
											"end": 2347,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "48"
										},
										{
											"begin": 2334,
											"end": 2345,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "49"
										},
										{
											"begin": 2334,
											"end": 2347,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2334,
											"end": 2347,
											"name": "tag",
											"source": 0,
											"value": "48"
										},
										{
											"begin": 2334,
											"end": 2347,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 862,
											"end": 863,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 853,
											"end": 859,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 853,
											"end": 863,
											"modifierDepth": 1,
											"name": "GT",
											"source": 11
										},
										{
											"begin": 845,
											"end": 886,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "51"
										},
										{
											"begin": 845,
											"end": 886,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 845,
											"end": 886,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 845,
											"end": 886,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 845,
											"end": 886,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 845,
											"end": 886,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 845,
											"end": 886,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 845,
											"end": 886,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 845,
											"end": 886,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 845,
											"end": 886,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "52"
										},
										{
											"begin": 845,
											"end": 886,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 845,
											"end": 886,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "53"
										},
										{
											"begin": 845,
											"end": 886,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 845,
											"end": 886,
											"modifierDepth": 1,
											"name": "tag",
											"source": 11,
											"value": "52"
										},
										{
											"begin": 845,
											"end": 886,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 845,
											"end": 886,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 845,
											"end": 886,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 845,
											"end": 886,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 845,
											"end": 886,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 845,
											"end": 886,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 845,
											"end": 886,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 845,
											"end": 886,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 845,
											"end": 886,
											"modifierDepth": 1,
											"name": "tag",
											"source": 11,
											"value": "51"
										},
										{
											"begin": 845,
											"end": 886,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 897,
											"end": 911,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 914,
											"end": 937,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "54"
										},
										{
											"begin": 930,
											"end": 936,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 914,
											"end": 929,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "38"
										},
										{
											"begin": 914,
											"end": 937,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 914,
											"end": 937,
											"modifierDepth": 1,
											"name": "tag",
											"source": 11,
											"value": "54"
										},
										{
											"begin": 914,
											"end": 937,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 897,
											"end": 937,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 897,
											"end": 937,
											"modifierDepth": 1,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 974,
											"end": 980,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 948,
											"end": 964,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "2"
										},
										{
											"begin": 948,
											"end": 970,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 965,
											"end": 969,
											"modifierDepth": 1,
											"name": "DUP6",
											"source": 11
										},
										{
											"begin": 948,
											"end": 970,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 948,
											"end": 970,
											"modifierDepth": 1,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 948,
											"end": 970,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 948,
											"end": 970,
											"modifierDepth": 1,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 948,
											"end": 970,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 948,
											"end": 970,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 948,
											"end": 970,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 948,
											"end": 970,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 948,
											"end": 970,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 948,
											"end": 970,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 948,
											"end": 970,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 948,
											"end": 970,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 948,
											"end": 970,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 948,
											"end": 970,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 948,
											"end": 970,
											"modifierDepth": 1,
											"name": "KECCAK256",
											"source": 11
										},
										{
											"begin": 948,
											"end": 970,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 948,
											"end": 980,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 948,
											"end": 980,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 948,
											"end": 980,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 948,
											"end": 980,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "55"
										},
										{
											"begin": 948,
											"end": 980,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 948,
											"end": 980,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 948,
											"end": 980,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "56"
										},
										{
											"begin": 948,
											"end": 980,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 948,
											"end": 980,
											"modifierDepth": 1,
											"name": "tag",
											"source": 11,
											"value": "55"
										},
										{
											"begin": 948,
											"end": 980,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 948,
											"end": 980,
											"modifierDepth": 1,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 948,
											"end": 980,
											"modifierDepth": 1,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 948,
											"end": 980,
											"modifierDepth": 1,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 948,
											"end": 980,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 948,
											"end": 980,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 948,
											"end": 980,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 11
										},
										{
											"begin": 948,
											"end": 980,
											"modifierDepth": 1,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 1014,
											"end": 1018,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 996,
											"end": 1027,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 996,
											"end": 1027,
											"modifierDepth": 1,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 996,
											"end": 1027,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "E34918FF1C7084970068B53FD71AD6D8B04E9F15D3886CBF006443E6CDC52EA6"
										},
										{
											"begin": 1020,
											"end": 1026,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 996,
											"end": 1027,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 996,
											"end": 1027,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 996,
											"end": 1027,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "57"
										},
										{
											"begin": 996,
											"end": 1027,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 996,
											"end": 1027,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 996,
											"end": 1027,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 996,
											"end": 1027,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 996,
											"end": 1027,
											"modifierDepth": 1,
											"name": "tag",
											"source": 11,
											"value": "57"
										},
										{
											"begin": 996,
											"end": 1027,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 996,
											"end": 1027,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 996,
											"end": 1027,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 996,
											"end": 1027,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 996,
											"end": 1027,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 996,
											"end": 1027,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 996,
											"end": 1027,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 996,
											"end": 1027,
											"modifierDepth": 1,
											"name": "LOG2",
											"source": 11
										},
										{
											"begin": 834,
											"end": 1035,
											"modifierDepth": 1,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 759,
											"end": 1035,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 759,
											"end": 1035,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 759,
											"end": 1035,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 365,
											"end": 391,
											"name": "tag",
											"source": 11,
											"value": "18"
										},
										{
											"begin": 365,
											"end": 391,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 365,
											"end": 391,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 365,
											"end": 391,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 365,
											"end": 391,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 365,
											"end": 391,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 398,
											"end": 428,
											"name": "tag",
											"source": 11,
											"value": "22"
										},
										{
											"begin": 398,
											"end": 428,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 398,
											"end": 428,
											"name": "PUSH",
											"source": 11,
											"value": "1"
										},
										{
											"begin": 398,
											"end": 428,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 398,
											"end": 428,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 398,
											"end": 428,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 3155,
											"end": 3256,
											"name": "tag",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 3155,
											"end": 3256,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2334,
											"end": 2347,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "59"
										},
										{
											"begin": 2334,
											"end": 2345,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "49"
										},
										{
											"begin": 2334,
											"end": 2347,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2334,
											"end": 2347,
											"name": "tag",
											"source": 0,
											"value": "59"
										},
										{
											"begin": 2334,
											"end": 2347,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3219,
											"end": 3249,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "61"
										},
										{
											"begin": 3246,
											"end": 3247,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3219,
											"end": 3237,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "62"
										},
										{
											"begin": 3219,
											"end": 3249,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3219,
											"end": 3249,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "61"
										},
										{
											"begin": 3219,
											"end": 3249,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3155,
											"end": 3256,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 435,
											"end": 486,
											"name": "tag",
											"source": 11,
											"value": "29"
										},
										{
											"begin": 435,
											"end": 486,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 435,
											"end": 486,
											"name": "PUSH",
											"source": 11,
											"value": "2"
										},
										{
											"begin": 435,
											"end": 486,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 435,
											"end": 486,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 435,
											"end": 486,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 435,
											"end": 486,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 435,
											"end": 486,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 435,
											"end": 486,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 435,
											"end": 486,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 435,
											"end": 486,
											"name": "KECCAK256",
											"source": 11
										},
										{
											"begin": 435,
											"end": 486,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 435,
											"end": 486,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 435,
											"end": 486,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 435,
											"end": 486,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 435,
											"end": 486,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 435,
											"end": 486,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 435,
											"end": 486,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 435,
											"end": 486,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 2441,
											"end": 2585,
											"name": "tag",
											"source": 0,
											"value": "32"
										},
										{
											"begin": 2441,
											"end": 2585,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2487,
											"end": 2494,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2506,
											"end": 2530,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2533,
											"end": 2553,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 2533,
											"end": 2551,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "65"
										},
										{
											"begin": 2533,
											"end": 2553,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2533,
											"end": 2553,
											"name": "tag",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 2533,
											"end": 2553,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2506,
											"end": 2553,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2506,
											"end": 2553,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2570,
											"end": 2571,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2570,
											"end": 2578,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2570,
											"end": 2578,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2570,
											"end": 2578,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2570,
											"end": 2578,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2570,
											"end": 2578,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 2570,
											"end": 2578,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2570,
											"end": 2578,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 2570,
											"end": 2578,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 2570,
											"end": 2578,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2570,
											"end": 2578,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 2570,
											"end": 2578,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2570,
											"end": 2578,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2563,
											"end": 2578,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2563,
											"end": 2578,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2563,
											"end": 2578,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2441,
											"end": 2585,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2441,
											"end": 2585,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1043,
											"end": 1247,
											"name": "tag",
											"source": 11,
											"value": "38"
										},
										{
											"begin": 1043,
											"end": 1247,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1105,
											"end": 1112,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 1125,
											"end": 1139,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 1165,
											"end": 1170,
											"name": "PUSH",
											"source": 11,
											"value": "2710"
										},
										{
											"begin": 1151,
											"end": 1162,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 1151,
											"end": 1162,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 1142,
											"end": 1148,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 1142,
											"end": 1162,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "67"
										},
										{
											"begin": 1142,
											"end": 1162,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 1142,
											"end": 1162,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 1142,
											"end": 1162,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "68"
										},
										{
											"begin": 1142,
											"end": 1162,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 1142,
											"end": 1162,
											"name": "tag",
											"source": 11,
											"value": "67"
										},
										{
											"begin": 1142,
											"end": 1162,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1142,
											"end": 1170,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "69"
										},
										{
											"begin": 1142,
											"end": 1170,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 1142,
											"end": 1170,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 1142,
											"end": 1170,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "70"
										},
										{
											"begin": 1142,
											"end": 1170,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 1142,
											"end": 1170,
											"name": "tag",
											"source": 11,
											"value": "69"
										},
										{
											"begin": 1142,
											"end": 1170,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1125,
											"end": 1170,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 1125,
											"end": 1170,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 1197,
											"end": 1212,
											"name": "PUSH",
											"source": 11,
											"value": "1"
										},
										{
											"begin": 1197,
											"end": 1212,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 1188,
											"end": 1194,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 1188,
											"end": 1212,
											"name": "GT",
											"source": 11
										},
										{
											"begin": 1188,
											"end": 1239,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "71"
										},
										{
											"begin": 1188,
											"end": 1239,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 1233,
											"end": 1239,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 1188,
											"end": 1239,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "72"
										},
										{
											"begin": 1188,
											"end": 1239,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 1188,
											"end": 1239,
											"name": "tag",
											"source": 11,
											"value": "71"
										},
										{
											"begin": 1188,
											"end": 1239,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1215,
											"end": 1230,
											"name": "PUSH",
											"source": 11,
											"value": "1"
										},
										{
											"begin": 1215,
											"end": 1230,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 1188,
											"end": 1239,
											"name": "tag",
											"source": 11,
											"value": "72"
										},
										{
											"begin": 1188,
											"end": 1239,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1181,
											"end": 1239,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 1181,
											"end": 1239,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 1181,
											"end": 1239,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 1043,
											"end": 1247,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 1043,
											"end": 1247,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 1043,
											"end": 1247,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 1043,
											"end": 1247,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 565,
											"end": 751,
											"name": "tag",
											"source": 11,
											"value": "43"
										},
										{
											"begin": 565,
											"end": 751,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 4158,
											"end": 4188,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4191,
											"end": 4217,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "74"
										},
										{
											"begin": 4191,
											"end": 4215,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "75"
										},
										{
											"begin": 4191,
											"end": 4217,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4191,
											"end": 4217,
											"name": "tag",
											"source": 1,
											"value": "74"
										},
										{
											"begin": 4191,
											"end": 4217,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4158,
											"end": 4217,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4158,
											"end": 4217,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4279,
											"end": 4298,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4302,
											"end": 4303,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4302,
											"end": 4317,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4302,
											"end": 4317,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4302,
											"end": 4317,
											"name": "PUSH",
											"source": 1,
											"value": "8"
										},
										{
											"begin": 4302,
											"end": 4317,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4302,
											"end": 4317,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 4302,
											"end": 4317,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4302,
											"end": 4317,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 4302,
											"end": 4317,
											"name": "EXP",
											"source": 1
										},
										{
											"begin": 4302,
											"end": 4317,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4302,
											"end": 4317,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 4302,
											"end": 4317,
											"name": "PUSH",
											"source": 1,
											"value": "FF"
										},
										{
											"begin": 4302,
											"end": 4317,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 4301,
											"end": 4317,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 4279,
											"end": 4317,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4279,
											"end": 4317,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4327,
											"end": 4345,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4348,
											"end": 4349,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4348,
											"end": 4362,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4348,
											"end": 4362,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4348,
											"end": 4362,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4348,
											"end": 4362,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4348,
											"end": 4362,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 4348,
											"end": 4362,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4348,
											"end": 4362,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 4348,
											"end": 4362,
											"name": "EXP",
											"source": 1
										},
										{
											"begin": 4348,
											"end": 4362,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4348,
											"end": 4362,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 4348,
											"end": 4362,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4348,
											"end": 4362,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 4327,
											"end": 4362,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4327,
											"end": 4362,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4704,
											"end": 4721,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4739,
											"end": 4740,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4724,
											"end": 4735,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4724,
											"end": 4740,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4724,
											"end": 4740,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 4724,
											"end": 4740,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 4724,
											"end": 4758,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4724,
											"end": 4758,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 4724,
											"end": 4758,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "76"
										},
										{
											"begin": 4724,
											"end": 4758,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 4724,
											"end": 4758,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4744,
											"end": 4758,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4724,
											"end": 4758,
											"name": "tag",
											"source": 1,
											"value": "76"
										},
										{
											"begin": 4724,
											"end": 4758,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4704,
											"end": 4758,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4704,
											"end": 4758,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4768,
											"end": 4785,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4803,
											"end": 4804,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 4788,
											"end": 4799,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 4788,
											"end": 4804,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4788,
											"end": 4804,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 4788,
											"end": 4804,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 4788,
											"end": 4838,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4788,
											"end": 4838,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 4788,
											"end": 4838,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "77"
										},
										{
											"begin": 4788,
											"end": 4838,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 4788,
											"end": 4838,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4837,
											"end": 4838,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4816,
											"end": 4820,
											"name": "ADDRESS",
											"source": 1
										},
										{
											"begin": 4808,
											"end": 4833,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4808,
											"end": 4833,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 4808,
											"end": 4833,
											"name": "EXTCODESIZE",
											"source": 1
										},
										{
											"begin": 4808,
											"end": 4838,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 4788,
											"end": 4838,
											"name": "tag",
											"source": 1,
											"value": "77"
										},
										{
											"begin": 4788,
											"end": 4838,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4768,
											"end": 4838,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4768,
											"end": 4838,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4854,
											"end": 4866,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4853,
											"end": 4866,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 4853,
											"end": 4883,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4853,
											"end": 4883,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 4853,
											"end": 4883,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "78"
										},
										{
											"begin": 4853,
											"end": 4883,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 4853,
											"end": 4883,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4871,
											"end": 4883,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4870,
											"end": 4883,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 4853,
											"end": 4883,
											"name": "tag",
											"source": 1,
											"value": "78"
										},
										{
											"begin": 4853,
											"end": 4883,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4849,
											"end": 4940,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 4849,
											"end": 4940,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "79"
										},
										{
											"begin": 4849,
											"end": 4940,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 4906,
											"end": 4929,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 4906,
											"end": 4929,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 4906,
											"end": 4929,
											"name": "PUSH",
											"source": 1,
											"value": "F92EE8A900000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 4906,
											"end": 4929,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4906,
											"end": 4929,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4906,
											"end": 4929,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 4906,
											"end": 4929,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4906,
											"end": 4929,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 4906,
											"end": 4929,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 4906,
											"end": 4929,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4906,
											"end": 4929,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4906,
											"end": 4929,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 4906,
											"end": 4929,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4906,
											"end": 4929,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 4849,
											"end": 4940,
											"name": "tag",
											"source": 1,
											"value": "79"
										},
										{
											"begin": 4849,
											"end": 4940,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4966,
											"end": 4967,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 4949,
											"end": 4950,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 4949,
											"end": 4963,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4949,
											"end": 4963,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4949,
											"end": 4963,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4949,
											"end": 4967,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 4949,
											"end": 4967,
											"name": "EXP",
											"source": 1
										},
										{
											"begin": 4949,
											"end": 4967,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4949,
											"end": 4967,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 4949,
											"end": 4967,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4949,
											"end": 4967,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4949,
											"end": 4967,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 4949,
											"end": 4967,
											"name": "NOT",
											"source": 1
										},
										{
											"begin": 4949,
											"end": 4967,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 4949,
											"end": 4967,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4949,
											"end": 4967,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 4949,
											"end": 4967,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4949,
											"end": 4967,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 4949,
											"end": 4967,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 4949,
											"end": 4967,
											"name": "OR",
											"source": 1
										},
										{
											"begin": 4949,
											"end": 4967,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4949,
											"end": 4967,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 4949,
											"end": 4967,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4981,
											"end": 4995,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 4977,
											"end": 5044,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 4977,
											"end": 5044,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "80"
										},
										{
											"begin": 4977,
											"end": 5044,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 5029,
											"end": 5033,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 5011,
											"end": 5012,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 5011,
											"end": 5026,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5011,
											"end": 5026,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5011,
											"end": 5026,
											"name": "PUSH",
											"source": 1,
											"value": "8"
										},
										{
											"begin": 5011,
											"end": 5033,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 5011,
											"end": 5033,
											"name": "EXP",
											"source": 1
										},
										{
											"begin": 5011,
											"end": 5033,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5011,
											"end": 5033,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 5011,
											"end": 5033,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5011,
											"end": 5033,
											"name": "PUSH",
											"source": 1,
											"value": "FF"
										},
										{
											"begin": 5011,
											"end": 5033,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 5011,
											"end": 5033,
											"name": "NOT",
											"source": 1
										},
										{
											"begin": 5011,
											"end": 5033,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 5011,
											"end": 5033,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5011,
											"end": 5033,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 5011,
											"end": 5033,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 5011,
											"end": 5033,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 5011,
											"end": 5033,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 5011,
											"end": 5033,
											"name": "OR",
											"source": 1
										},
										{
											"begin": 5011,
											"end": 5033,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5011,
											"end": 5033,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 5011,
											"end": 5033,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4977,
											"end": 5044,
											"name": "tag",
											"source": 1,
											"value": "80"
										},
										{
											"begin": 4977,
											"end": 5044,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 649,
											"end": 675,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "82"
										},
										{
											"begin": 664,
											"end": 674,
											"modifierDepth": 1,
											"name": "CALLER",
											"source": 11
										},
										{
											"begin": 649,
											"end": 663,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "83"
										},
										{
											"begin": 649,
											"end": 675,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 649,
											"end": 675,
											"modifierDepth": 1,
											"name": "tag",
											"source": 11,
											"value": "82"
										},
										{
											"begin": 649,
											"end": 675,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 700,
											"end": 704,
											"modifierDepth": 1,
											"name": "DUP7",
											"source": 11
										},
										{
											"begin": 686,
											"end": 697,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 686,
											"end": 704,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 686,
											"end": 704,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 686,
											"end": 704,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 11
										},
										{
											"begin": 686,
											"end": 704,
											"modifierDepth": 1,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 733,
											"end": 743,
											"modifierDepth": 1,
											"name": "DUP6",
											"source": 11
										},
										{
											"begin": 715,
											"end": 730,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "1"
										},
										{
											"begin": 715,
											"end": 743,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 715,
											"end": 743,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 715,
											"end": 743,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 11
										},
										{
											"begin": 715,
											"end": 743,
											"modifierDepth": 1,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 5068,
											"end": 5082,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 5064,
											"end": 5165,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 5064,
											"end": 5165,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "84"
										},
										{
											"begin": 5064,
											"end": 5165,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 5116,
											"end": 5121,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5098,
											"end": 5099,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 5098,
											"end": 5113,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5098,
											"end": 5113,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5098,
											"end": 5113,
											"name": "PUSH",
											"source": 1,
											"value": "8"
										},
										{
											"begin": 5098,
											"end": 5121,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 5098,
											"end": 5121,
											"name": "EXP",
											"source": 1
										},
										{
											"begin": 5098,
											"end": 5121,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5098,
											"end": 5121,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 5098,
											"end": 5121,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5098,
											"end": 5121,
											"name": "PUSH",
											"source": 1,
											"value": "FF"
										},
										{
											"begin": 5098,
											"end": 5121,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 5098,
											"end": 5121,
											"name": "NOT",
											"source": 1
										},
										{
											"begin": 5098,
											"end": 5121,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 5098,
											"end": 5121,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5098,
											"end": 5121,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 5098,
											"end": 5121,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 5098,
											"end": 5121,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 5098,
											"end": 5121,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 5098,
											"end": 5121,
											"name": "OR",
											"source": 1
										},
										{
											"begin": 5098,
											"end": 5121,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5098,
											"end": 5121,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 5098,
											"end": 5121,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5140,
											"end": 5154,
											"name": "PUSH",
											"source": 1,
											"value": "C7F505B2F371AE2175EE4913F4499E1F2633A7B5936321EED1CDAEB6115181D2"
										},
										{
											"begin": 5152,
											"end": 5153,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 5140,
											"end": 5154,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 5140,
											"end": 5154,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 5140,
											"end": 5154,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "85"
										},
										{
											"begin": 5140,
											"end": 5154,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 5140,
											"end": 5154,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5140,
											"end": 5154,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "86"
										},
										{
											"begin": 5140,
											"end": 5154,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5140,
											"end": 5154,
											"name": "tag",
											"source": 1,
											"value": "85"
										},
										{
											"begin": 5140,
											"end": 5154,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5140,
											"end": 5154,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 5140,
											"end": 5154,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 5140,
											"end": 5154,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 5140,
											"end": 5154,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 5140,
											"end": 5154,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 5140,
											"end": 5154,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5140,
											"end": 5154,
											"name": "LOG1",
											"source": 1
										},
										{
											"begin": 5064,
											"end": 5165,
											"name": "tag",
											"source": 1,
											"value": "84"
										},
										{
											"begin": 5064,
											"end": 5165,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4092,
											"end": 5171,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4092,
											"end": 5171,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4092,
											"end": 5171,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4092,
											"end": 5171,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4092,
											"end": 5171,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 565,
											"end": 751,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 565,
											"end": 751,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 565,
											"end": 751,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 3405,
											"end": 3620,
											"name": "tag",
											"source": 0,
											"value": "46"
										},
										{
											"begin": 3405,
											"end": 3620,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2334,
											"end": 2347,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "88"
										},
										{
											"begin": 2334,
											"end": 2345,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "49"
										},
										{
											"begin": 2334,
											"end": 2347,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2334,
											"end": 2347,
											"name": "tag",
											"source": 0,
											"value": "88"
										},
										{
											"begin": 2334,
											"end": 2347,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3509,
											"end": 3510,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3489,
											"end": 3511,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3489,
											"end": 3511,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3489,
											"end": 3497,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3489,
											"end": 3511,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3489,
											"end": 3511,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3489,
											"end": 3511,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 3485,
											"end": 3576,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "90"
										},
										{
											"begin": 3485,
											"end": 3576,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 3562,
											"end": 3563,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3534,
											"end": 3565,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3534,
											"end": 3565,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3534,
											"end": 3565,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "1E4FBDF700000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 3534,
											"end": 3565,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3534,
											"end": 3565,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3534,
											"end": 3565,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 3534,
											"end": 3565,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3534,
											"end": 3565,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "91"
										},
										{
											"begin": 3534,
											"end": 3565,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3534,
											"end": 3565,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3534,
											"end": 3565,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "34"
										},
										{
											"begin": 3534,
											"end": 3565,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3534,
											"end": 3565,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "91"
										},
										{
											"begin": 3534,
											"end": 3565,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3534,
											"end": 3565,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3534,
											"end": 3565,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3534,
											"end": 3565,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3534,
											"end": 3565,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3534,
											"end": 3565,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 3534,
											"end": 3565,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3534,
											"end": 3565,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 3485,
											"end": 3576,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "90"
										},
										{
											"begin": 3485,
											"end": 3576,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3585,
											"end": 3613,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "92"
										},
										{
											"begin": 3604,
											"end": 3612,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3585,
											"end": 3603,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "62"
										},
										{
											"begin": 3585,
											"end": 3613,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3585,
											"end": 3613,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "92"
										},
										{
											"begin": 3585,
											"end": 3613,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3405,
											"end": 3620,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3405,
											"end": 3620,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2658,
											"end": 2820,
											"name": "tag",
											"source": 0,
											"value": "49"
										},
										{
											"begin": 2658,
											"end": 2820,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2728,
											"end": 2740,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "94"
										},
										{
											"begin": 2728,
											"end": 2738,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "95"
										},
										{
											"begin": 2728,
											"end": 2740,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2728,
											"end": 2740,
											"name": "tag",
											"source": 0,
											"value": "94"
										},
										{
											"begin": 2728,
											"end": 2740,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2717,
											"end": 2740,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2717,
											"end": 2740,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2717,
											"end": 2724,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "96"
										},
										{
											"begin": 2717,
											"end": 2722,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "32"
										},
										{
											"begin": 2717,
											"end": 2724,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2717,
											"end": 2724,
											"name": "tag",
											"source": 0,
											"value": "96"
										},
										{
											"begin": 2717,
											"end": 2724,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2717,
											"end": 2740,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2717,
											"end": 2740,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2717,
											"end": 2740,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 2713,
											"end": 2814,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "97"
										},
										{
											"begin": 2713,
											"end": 2814,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2790,
											"end": 2802,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "98"
										},
										{
											"begin": 2790,
											"end": 2800,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "95"
										},
										{
											"begin": 2790,
											"end": 2802,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2790,
											"end": 2802,
											"name": "tag",
											"source": 0,
											"value": "98"
										},
										{
											"begin": 2790,
											"end": 2802,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2763,
											"end": 2803,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2763,
											"end": 2803,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2763,
											"end": 2803,
											"name": "PUSH",
											"source": 0,
											"value": "118CDAA700000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2763,
											"end": 2803,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2763,
											"end": 2803,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2763,
											"end": 2803,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2763,
											"end": 2803,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2763,
											"end": 2803,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "99"
										},
										{
											"begin": 2763,
											"end": 2803,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2763,
											"end": 2803,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2763,
											"end": 2803,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "34"
										},
										{
											"begin": 2763,
											"end": 2803,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2763,
											"end": 2803,
											"name": "tag",
											"source": 0,
											"value": "99"
										},
										{
											"begin": 2763,
											"end": 2803,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2763,
											"end": 2803,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2763,
											"end": 2803,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2763,
											"end": 2803,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2763,
											"end": 2803,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2763,
											"end": 2803,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2763,
											"end": 2803,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2763,
											"end": 2803,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 2713,
											"end": 2814,
											"name": "tag",
											"source": 0,
											"value": "97"
										},
										{
											"begin": 2713,
											"end": 2814,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2658,
											"end": 2820,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3774,
											"end": 4022,
											"name": "tag",
											"source": 0,
											"value": "62"
										},
										{
											"begin": 3774,
											"end": 4022,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3847,
											"end": 3871,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3874,
											"end": 3894,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "101"
										},
										{
											"begin": 3874,
											"end": 3892,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "65"
										},
										{
											"begin": 3874,
											"end": 3894,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3874,
											"end": 3894,
											"name": "tag",
											"source": 0,
											"value": "101"
										},
										{
											"begin": 3874,
											"end": 3894,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3847,
											"end": 3894,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3847,
											"end": 3894,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3904,
											"end": 3920,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3923,
											"end": 3924,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3923,
											"end": 3931,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3923,
											"end": 3931,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3923,
											"end": 3931,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3923,
											"end": 3931,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3923,
											"end": 3931,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 3923,
											"end": 3931,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3923,
											"end": 3931,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 3923,
											"end": 3931,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 3923,
											"end": 3931,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3923,
											"end": 3931,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 3923,
											"end": 3931,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3923,
											"end": 3931,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3904,
											"end": 3931,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3904,
											"end": 3931,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3952,
											"end": 3960,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 3941,
											"end": 3942,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 3941,
											"end": 3949,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3941,
											"end": 3949,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3941,
											"end": 3949,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3941,
											"end": 3960,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 3941,
											"end": 3960,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 3941,
											"end": 3960,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3941,
											"end": 3960,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 3941,
											"end": 3960,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3941,
											"end": 3960,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3941,
											"end": 3960,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 3941,
											"end": 3960,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 3941,
											"end": 3960,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3941,
											"end": 3960,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3941,
											"end": 3960,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 3941,
											"end": 3960,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3941,
											"end": 3960,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3941,
											"end": 3960,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 3941,
											"end": 3960,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 3941,
											"end": 3960,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3941,
											"end": 3960,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 3941,
											"end": 3960,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4006,
											"end": 4014,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 3975,
											"end": 4015,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3975,
											"end": 4015,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3996,
											"end": 4004,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3975,
											"end": 4015,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3975,
											"end": 4015,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3975,
											"end": 4015,
											"name": "PUSH",
											"source": 0,
											"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
										},
										{
											"begin": 3975,
											"end": 4015,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3975,
											"end": 4015,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3975,
											"end": 4015,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3975,
											"end": 4015,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3975,
											"end": 4015,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3975,
											"end": 4015,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3975,
											"end": 4015,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 3975,
											"end": 4015,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3975,
											"end": 4015,
											"name": "LOG3",
											"source": 0
										},
										{
											"begin": 3837,
											"end": 4022,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3837,
											"end": 4022,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3774,
											"end": 4022,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3774,
											"end": 4022,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1192,
											"end": 1351,
											"name": "tag",
											"source": 0,
											"value": "65"
										},
										{
											"begin": 1192,
											"end": 1351,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1244,
											"end": 1268,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1313,
											"end": 1335,
											"name": "PUSH",
											"source": 0,
											"value": "9016D09D72D40FDAE2FD8CEAC6B6234C7706214FD39C1CD1E609A0528C199300"
										},
										{
											"begin": 1303,
											"end": 1335,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1303,
											"end": 1335,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1192,
											"end": 1351,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1192,
											"end": 1351,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 9071,
											"end": 9276,
											"name": "tag",
											"source": 1,
											"value": "75"
										},
										{
											"begin": 9071,
											"end": 9276,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 9129,
											"end": 9159,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 9171,
											"end": 9183,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 9186,
											"end": 9213,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "104"
										},
										{
											"begin": 9186,
											"end": 9211,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "105"
										},
										{
											"begin": 9186,
											"end": 9213,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 9186,
											"end": 9213,
											"name": "tag",
											"source": 1,
											"value": "104"
										},
										{
											"begin": 9186,
											"end": 9213,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 9171,
											"end": 9213,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 9171,
											"end": 9213,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 9256,
											"end": 9260,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 9246,
											"end": 9260,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 9246,
											"end": 9260,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 9232,
											"end": 9270,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 9071,
											"end": 9276,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 9071,
											"end": 9276,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1847,
											"end": 1974,
											"name": "tag",
											"source": 0,
											"value": "83"
										},
										{
											"begin": 1847,
											"end": 1974,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6929,
											"end": 6949,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "107"
										},
										{
											"begin": 6929,
											"end": 6947,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "108"
										},
										{
											"begin": 6929,
											"end": 6949,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6929,
											"end": 6949,
											"name": "tag",
											"source": 1,
											"value": "107"
										},
										{
											"begin": 6929,
											"end": 6949,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1929,
											"end": 1967,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "110"
										},
										{
											"begin": 1954,
											"end": 1966,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1929,
											"end": 1953,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "111"
										},
										{
											"begin": 1929,
											"end": 1967,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1929,
											"end": 1967,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "110"
										},
										{
											"begin": 1929,
											"end": 1967,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1847,
											"end": 1974,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1847,
											"end": 1974,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 887,
											"end": 983,
											"name": "tag",
											"source": 3,
											"value": "95"
										},
										{
											"begin": 887,
											"end": 983,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 940,
											"end": 947,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 966,
											"end": 976,
											"name": "CALLER",
											"source": 3
										},
										{
											"begin": 959,
											"end": 976,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 959,
											"end": 976,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 887,
											"end": 983,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 887,
											"end": 983,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 8819,
											"end": 8941,
											"name": "tag",
											"source": 1,
											"value": "105"
										},
										{
											"begin": 8819,
											"end": 8941,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8887,
											"end": 8894,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3147,
											"end": 3213,
											"name": "PUSH",
											"source": 1,
											"value": "F0C57E16840DF040F15088DC2F81FE391C3923BEC73E23A9662EFC9C229C6A00"
										},
										{
											"begin": 8913,
											"end": 8934,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 8913,
											"end": 8934,
											"name": "SHL",
											"source": 1
										},
										{
											"begin": 8906,
											"end": 8934,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 8906,
											"end": 8934,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 8819,
											"end": 8941,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 8819,
											"end": 8941,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 7082,
											"end": 7223,
											"name": "tag",
											"source": 1,
											"value": "108"
										},
										{
											"begin": 7082,
											"end": 7223,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7149,
											"end": 7166,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "115"
										},
										{
											"begin": 7149,
											"end": 7164,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "116"
										},
										{
											"begin": 7149,
											"end": 7166,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 7149,
											"end": 7166,
											"name": "tag",
											"source": 1,
											"value": "115"
										},
										{
											"begin": 7149,
											"end": 7166,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7144,
											"end": 7217,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "117"
										},
										{
											"begin": 7144,
											"end": 7217,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 7189,
											"end": 7206,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 7189,
											"end": 7206,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 7189,
											"end": 7206,
											"name": "PUSH",
											"source": 1,
											"value": "D7E6BCF800000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 7189,
											"end": 7206,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7189,
											"end": 7206,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 7189,
											"end": 7206,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 7189,
											"end": 7206,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7189,
											"end": 7206,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 7189,
											"end": 7206,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 7189,
											"end": 7206,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 7189,
											"end": 7206,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 7189,
											"end": 7206,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 7189,
											"end": 7206,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7189,
											"end": 7206,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 7144,
											"end": 7217,
											"name": "tag",
											"source": 1,
											"value": "117"
										},
										{
											"begin": 7144,
											"end": 7217,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7082,
											"end": 7223,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1980,
											"end": 2215,
											"name": "tag",
											"source": 0,
											"value": "111"
										},
										{
											"begin": 1980,
											"end": 2215,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6929,
											"end": 6949,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "119"
										},
										{
											"begin": 6929,
											"end": 6947,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "108"
										},
										{
											"begin": 6929,
											"end": 6949,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6929,
											"end": 6949,
											"name": "tag",
											"source": 1,
											"value": "119"
										},
										{
											"begin": 6929,
											"end": 6949,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2100,
											"end": 2101,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2076,
											"end": 2102,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2076,
											"end": 2102,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2076,
											"end": 2088,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2076,
											"end": 2102,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2076,
											"end": 2102,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2076,
											"end": 2102,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2072,
											"end": 2167,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "121"
										},
										{
											"begin": 2072,
											"end": 2167,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2153,
											"end": 2154,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2125,
											"end": 2156,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2125,
											"end": 2156,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2125,
											"end": 2156,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "1E4FBDF700000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2125,
											"end": 2156,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2125,
											"end": 2156,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2125,
											"end": 2156,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2125,
											"end": 2156,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2125,
											"end": 2156,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "122"
										},
										{
											"begin": 2125,
											"end": 2156,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2125,
											"end": 2156,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2125,
											"end": 2156,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "34"
										},
										{
											"begin": 2125,
											"end": 2156,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2125,
											"end": 2156,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "122"
										},
										{
											"begin": 2125,
											"end": 2156,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2125,
											"end": 2156,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2125,
											"end": 2156,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2125,
											"end": 2156,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2125,
											"end": 2156,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2125,
											"end": 2156,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2125,
											"end": 2156,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2125,
											"end": 2156,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 2072,
											"end": 2167,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "121"
										},
										{
											"begin": 2072,
											"end": 2167,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2176,
											"end": 2208,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "123"
										},
										{
											"begin": 2195,
											"end": 2207,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2176,
											"end": 2194,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "62"
										},
										{
											"begin": 2176,
											"end": 2208,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2176,
											"end": 2208,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "123"
										},
										{
											"begin": 2176,
											"end": 2208,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1980,
											"end": 2215,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1980,
											"end": 2215,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 8485,
											"end": 8605,
											"name": "tag",
											"source": 1,
											"value": "116"
										},
										{
											"begin": 8485,
											"end": 8605,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8535,
											"end": 8539,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 8558,
											"end": 8584,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "125"
										},
										{
											"begin": 8558,
											"end": 8582,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "75"
										},
										{
											"begin": 8558,
											"end": 8584,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 8558,
											"end": 8584,
											"name": "tag",
											"source": 1,
											"value": "125"
										},
										{
											"begin": 8558,
											"end": 8584,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8558,
											"end": 8598,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 8558,
											"end": 8598,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 8558,
											"end": 8598,
											"name": "PUSH",
											"source": 1,
											"value": "8"
										},
										{
											"begin": 8558,
											"end": 8598,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 8558,
											"end": 8598,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 8558,
											"end": 8598,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 8558,
											"end": 8598,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 8558,
											"end": 8598,
											"name": "EXP",
											"source": 1
										},
										{
											"begin": 8558,
											"end": 8598,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 8558,
											"end": 8598,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 8558,
											"end": 8598,
											"name": "PUSH",
											"source": 1,
											"value": "FF"
										},
										{
											"begin": 8558,
											"end": 8598,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 8551,
											"end": 8598,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 8551,
											"end": 8598,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 8485,
											"end": 8605,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 8485,
											"end": 8605,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 88,
											"end": 205,
											"name": "tag",
											"source": 12,
											"value": "127"
										},
										{
											"begin": 88,
											"end": 205,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 197,
											"end": 198,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 194,
											"end": 195,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 187,
											"end": 199,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 334,
											"end": 460,
											"name": "tag",
											"source": 12,
											"value": "129"
										},
										{
											"begin": 334,
											"end": 460,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 371,
											"end": 378,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 411,
											"end": 453,
											"name": "PUSH",
											"source": 12,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 404,
											"end": 409,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 400,
											"end": 454,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 389,
											"end": 454,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 389,
											"end": 454,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 334,
											"end": 460,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 334,
											"end": 460,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 334,
											"end": 460,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 334,
											"end": 460,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 466,
											"end": 562,
											"name": "tag",
											"source": 12,
											"value": "130"
										},
										{
											"begin": 466,
											"end": 562,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 503,
											"end": 510,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 532,
											"end": 556,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "154"
										},
										{
											"begin": 550,
											"end": 555,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 532,
											"end": 556,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "129"
										},
										{
											"begin": 532,
											"end": 556,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 532,
											"end": 556,
											"name": "tag",
											"source": 12,
											"value": "154"
										},
										{
											"begin": 532,
											"end": 556,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 521,
											"end": 556,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 521,
											"end": 556,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 466,
											"end": 562,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 466,
											"end": 562,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 466,
											"end": 562,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 466,
											"end": 562,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 568,
											"end": 690,
											"name": "tag",
											"source": 12,
											"value": "131"
										},
										{
											"begin": 568,
											"end": 690,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 641,
											"end": 665,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "156"
										},
										{
											"begin": 659,
											"end": 664,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 641,
											"end": 665,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "130"
										},
										{
											"begin": 641,
											"end": 665,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 641,
											"end": 665,
											"name": "tag",
											"source": 12,
											"value": "156"
										},
										{
											"begin": 641,
											"end": 665,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 634,
											"end": 639,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 631,
											"end": 666,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 621,
											"end": 684,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "157"
										},
										{
											"begin": 621,
											"end": 684,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 680,
											"end": 681,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 677,
											"end": 678,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 670,
											"end": 682,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 621,
											"end": 684,
											"name": "tag",
											"source": 12,
											"value": "157"
										},
										{
											"begin": 621,
											"end": 684,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 568,
											"end": 690,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 568,
											"end": 690,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 696,
											"end": 835,
											"name": "tag",
											"source": 12,
											"value": "132"
										},
										{
											"begin": 696,
											"end": 835,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 742,
											"end": 747,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 780,
											"end": 786,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 767,
											"end": 787,
											"name": "CALLDATALOAD",
											"source": 12
										},
										{
											"begin": 758,
											"end": 787,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 758,
											"end": 787,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 796,
											"end": 829,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "159"
										},
										{
											"begin": 823,
											"end": 828,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 796,
											"end": 829,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "131"
										},
										{
											"begin": 796,
											"end": 829,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 796,
											"end": 829,
											"name": "tag",
											"source": 12,
											"value": "159"
										},
										{
											"begin": 796,
											"end": 829,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 696,
											"end": 835,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 696,
											"end": 835,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 696,
											"end": 835,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 696,
											"end": 835,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 696,
											"end": 835,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 841,
											"end": 918,
											"name": "tag",
											"source": 12,
											"value": "133"
										},
										{
											"begin": 841,
											"end": 918,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 878,
											"end": 885,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 907,
											"end": 912,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 896,
											"end": 912,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 896,
											"end": 912,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 841,
											"end": 918,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 841,
											"end": 918,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 841,
											"end": 918,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 841,
											"end": 918,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 924,
											"end": 1046,
											"name": "tag",
											"source": 12,
											"value": "134"
										},
										{
											"begin": 924,
											"end": 1046,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 997,
											"end": 1021,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "162"
										},
										{
											"begin": 1015,
											"end": 1020,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 997,
											"end": 1021,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "133"
										},
										{
											"begin": 997,
											"end": 1021,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 997,
											"end": 1021,
											"name": "tag",
											"source": 12,
											"value": "162"
										},
										{
											"begin": 997,
											"end": 1021,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 990,
											"end": 995,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 987,
											"end": 1022,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 977,
											"end": 1040,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "163"
										},
										{
											"begin": 977,
											"end": 1040,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 1036,
											"end": 1037,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 1033,
											"end": 1034,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 1026,
											"end": 1038,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 977,
											"end": 1040,
											"name": "tag",
											"source": 12,
											"value": "163"
										},
										{
											"begin": 977,
											"end": 1040,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 924,
											"end": 1046,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 924,
											"end": 1046,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 1052,
											"end": 1191,
											"name": "tag",
											"source": 12,
											"value": "135"
										},
										{
											"begin": 1052,
											"end": 1191,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1098,
											"end": 1103,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 1136,
											"end": 1142,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 1123,
											"end": 1143,
											"name": "CALLDATALOAD",
											"source": 12
										},
										{
											"begin": 1114,
											"end": 1143,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1114,
											"end": 1143,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1152,
											"end": 1185,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "165"
										},
										{
											"begin": 1179,
											"end": 1184,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 1152,
											"end": 1185,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "134"
										},
										{
											"begin": 1152,
											"end": 1185,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 1152,
											"end": 1185,
											"name": "tag",
											"source": 12,
											"value": "165"
										},
										{
											"begin": 1152,
											"end": 1185,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1052,
											"end": 1191,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 1052,
											"end": 1191,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 1052,
											"end": 1191,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1052,
											"end": 1191,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1052,
											"end": 1191,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 1197,
											"end": 1671,
											"name": "tag",
											"source": 12,
											"value": "15"
										},
										{
											"begin": 1197,
											"end": 1671,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1265,
											"end": 1271,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 1273,
											"end": 1279,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 1322,
											"end": 1324,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 1310,
											"end": 1319,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 1301,
											"end": 1308,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 1297,
											"end": 1320,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 1293,
											"end": 1325,
											"name": "SLT",
											"source": 12
										},
										{
											"begin": 1290,
											"end": 1409,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 1290,
											"end": 1409,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "167"
										},
										{
											"begin": 1290,
											"end": 1409,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 1328,
											"end": 1407,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "168"
										},
										{
											"begin": 1328,
											"end": 1407,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "127"
										},
										{
											"begin": 1328,
											"end": 1407,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 1328,
											"end": 1407,
											"name": "tag",
											"source": 12,
											"value": "168"
										},
										{
											"begin": 1328,
											"end": 1407,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1290,
											"end": 1409,
											"name": "tag",
											"source": 12,
											"value": "167"
										},
										{
											"begin": 1290,
											"end": 1409,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1448,
											"end": 1449,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 1473,
											"end": 1526,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "169"
										},
										{
											"begin": 1518,
											"end": 1525,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 1509,
											"end": 1515,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 1498,
											"end": 1507,
											"name": "DUP7",
											"source": 12
										},
										{
											"begin": 1494,
											"end": 1516,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 1473,
											"end": 1526,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "132"
										},
										{
											"begin": 1473,
											"end": 1526,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 1473,
											"end": 1526,
											"name": "tag",
											"source": 12,
											"value": "169"
										},
										{
											"begin": 1473,
											"end": 1526,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1463,
											"end": 1526,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 1463,
											"end": 1526,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1419,
											"end": 1536,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1575,
											"end": 1577,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 1601,
											"end": 1654,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "170"
										},
										{
											"begin": 1646,
											"end": 1653,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 1637,
											"end": 1643,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 1626,
											"end": 1635,
											"name": "DUP7",
											"source": 12
										},
										{
											"begin": 1622,
											"end": 1644,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 1601,
											"end": 1654,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "135"
										},
										{
											"begin": 1601,
											"end": 1654,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 1601,
											"end": 1654,
											"name": "tag",
											"source": 12,
											"value": "170"
										},
										{
											"begin": 1601,
											"end": 1654,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1591,
											"end": 1654,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 1591,
											"end": 1654,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1546,
											"end": 1664,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1197,
											"end": 1671,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 1197,
											"end": 1671,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1197,
											"end": 1671,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 1197,
											"end": 1671,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1197,
											"end": 1671,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1197,
											"end": 1671,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 1677,
											"end": 1795,
											"name": "tag",
											"source": 12,
											"value": "136"
										},
										{
											"begin": 1677,
											"end": 1795,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1764,
											"end": 1788,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "172"
										},
										{
											"begin": 1782,
											"end": 1787,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 1764,
											"end": 1788,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "133"
										},
										{
											"begin": 1764,
											"end": 1788,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 1764,
											"end": 1788,
											"name": "tag",
											"source": 12,
											"value": "172"
										},
										{
											"begin": 1764,
											"end": 1788,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1759,
											"end": 1762,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 1752,
											"end": 1789,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 1677,
											"end": 1795,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1677,
											"end": 1795,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1677,
											"end": 1795,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 1801,
											"end": 2023,
											"name": "tag",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 1801,
											"end": 2023,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1894,
											"end": 1898,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 1932,
											"end": 1934,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 1921,
											"end": 1930,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 1917,
											"end": 1935,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 1909,
											"end": 1935,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1909,
											"end": 1935,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1945,
											"end": 2016,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "174"
										},
										{
											"begin": 2013,
											"end": 2014,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 2002,
											"end": 2011,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 1998,
											"end": 2015,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 1989,
											"end": 1995,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 1945,
											"end": 2016,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "136"
										},
										{
											"begin": 1945,
											"end": 2016,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 1945,
											"end": 2016,
											"name": "tag",
											"source": 12,
											"value": "174"
										},
										{
											"begin": 1945,
											"end": 2016,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1801,
											"end": 2023,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 1801,
											"end": 2023,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 1801,
											"end": 2023,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1801,
											"end": 2023,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1801,
											"end": 2023,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 2029,
											"end": 2358,
											"name": "tag",
											"source": 12,
											"value": "28"
										},
										{
											"begin": 2029,
											"end": 2358,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2088,
											"end": 2094,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 2137,
											"end": 2139,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 2125,
											"end": 2134,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 2116,
											"end": 2123,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 2112,
											"end": 2135,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 2108,
											"end": 2140,
											"name": "SLT",
											"source": 12
										},
										{
											"begin": 2105,
											"end": 2224,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 2105,
											"end": 2224,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "176"
										},
										{
											"begin": 2105,
											"end": 2224,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 2143,
											"end": 2222,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "177"
										},
										{
											"begin": 2143,
											"end": 2222,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "127"
										},
										{
											"begin": 2143,
											"end": 2222,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 2143,
											"end": 2222,
											"name": "tag",
											"source": 12,
											"value": "177"
										},
										{
											"begin": 2143,
											"end": 2222,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2105,
											"end": 2224,
											"name": "tag",
											"source": 12,
											"value": "176"
										},
										{
											"begin": 2105,
											"end": 2224,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2263,
											"end": 2264,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 2288,
											"end": 2341,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "178"
										},
										{
											"begin": 2333,
											"end": 2340,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 2324,
											"end": 2330,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 2313,
											"end": 2322,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 2309,
											"end": 2331,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 2288,
											"end": 2341,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "132"
										},
										{
											"begin": 2288,
											"end": 2341,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 2288,
											"end": 2341,
											"name": "tag",
											"source": 12,
											"value": "178"
										},
										{
											"begin": 2288,
											"end": 2341,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2278,
											"end": 2341,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 2278,
											"end": 2341,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 2234,
											"end": 2351,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 2029,
											"end": 2358,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 2029,
											"end": 2358,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 2029,
											"end": 2358,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 2029,
											"end": 2358,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 2029,
											"end": 2358,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 2364,
											"end": 2482,
											"name": "tag",
											"source": 12,
											"value": "137"
										},
										{
											"begin": 2364,
											"end": 2482,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2451,
											"end": 2475,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "180"
										},
										{
											"begin": 2469,
											"end": 2474,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 2451,
											"end": 2475,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "130"
										},
										{
											"begin": 2451,
											"end": 2475,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 2451,
											"end": 2475,
											"name": "tag",
											"source": 12,
											"value": "180"
										},
										{
											"begin": 2451,
											"end": 2475,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2446,
											"end": 2449,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 2439,
											"end": 2476,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 2364,
											"end": 2482,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 2364,
											"end": 2482,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 2364,
											"end": 2482,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 2488,
											"end": 2710,
											"name": "tag",
											"source": 12,
											"value": "34"
										},
										{
											"begin": 2488,
											"end": 2710,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2581,
											"end": 2585,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 2619,
											"end": 2621,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 2608,
											"end": 2617,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 2604,
											"end": 2622,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 2596,
											"end": 2622,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 2596,
											"end": 2622,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 2632,
											"end": 2703,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "182"
										},
										{
											"begin": 2700,
											"end": 2701,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 2689,
											"end": 2698,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 2685,
											"end": 2702,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 2676,
											"end": 2682,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 2632,
											"end": 2703,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "137"
										},
										{
											"begin": 2632,
											"end": 2703,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 2632,
											"end": 2703,
											"name": "tag",
											"source": 12,
											"value": "182"
										},
										{
											"begin": 2632,
											"end": 2703,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2488,
											"end": 2710,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 2488,
											"end": 2710,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 2488,
											"end": 2710,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 2488,
											"end": 2710,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 2488,
											"end": 2710,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 2716,
											"end": 3045,
											"name": "tag",
											"source": 12,
											"value": "37"
										},
										{
											"begin": 2716,
											"end": 3045,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2775,
											"end": 2781,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 2824,
											"end": 2826,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 2812,
											"end": 2821,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 2803,
											"end": 2810,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 2799,
											"end": 2822,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 2795,
											"end": 2827,
											"name": "SLT",
											"source": 12
										},
										{
											"begin": 2792,
											"end": 2911,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 2792,
											"end": 2911,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "184"
										},
										{
											"begin": 2792,
											"end": 2911,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 2830,
											"end": 2909,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "185"
										},
										{
											"begin": 2830,
											"end": 2909,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "127"
										},
										{
											"begin": 2830,
											"end": 2909,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 2830,
											"end": 2909,
											"name": "tag",
											"source": 12,
											"value": "185"
										},
										{
											"begin": 2830,
											"end": 2909,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2792,
											"end": 2911,
											"name": "tag",
											"source": 12,
											"value": "184"
										},
										{
											"begin": 2792,
											"end": 2911,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2950,
											"end": 2951,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 2975,
											"end": 3028,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "186"
										},
										{
											"begin": 3020,
											"end": 3027,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 3011,
											"end": 3017,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 3000,
											"end": 3009,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 2996,
											"end": 3018,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 2975,
											"end": 3028,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "135"
										},
										{
											"begin": 2975,
											"end": 3028,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 2975,
											"end": 3028,
											"name": "tag",
											"source": 12,
											"value": "186"
										},
										{
											"begin": 2975,
											"end": 3028,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2965,
											"end": 3028,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 2965,
											"end": 3028,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 2921,
											"end": 3038,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 2716,
											"end": 3045,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 2716,
											"end": 3045,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 2716,
											"end": 3045,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 2716,
											"end": 3045,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 2716,
											"end": 3045,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 3051,
											"end": 3525,
											"name": "tag",
											"source": 12,
											"value": "42"
										},
										{
											"begin": 3051,
											"end": 3525,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 3119,
											"end": 3125,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 3127,
											"end": 3133,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 3176,
											"end": 3178,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 3164,
											"end": 3173,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 3155,
											"end": 3162,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 3151,
											"end": 3174,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 3147,
											"end": 3179,
											"name": "SLT",
											"source": 12
										},
										{
											"begin": 3144,
											"end": 3263,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 3144,
											"end": 3263,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "188"
										},
										{
											"begin": 3144,
											"end": 3263,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 3182,
											"end": 3261,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "189"
										},
										{
											"begin": 3182,
											"end": 3261,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "127"
										},
										{
											"begin": 3182,
											"end": 3261,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 3182,
											"end": 3261,
											"name": "tag",
											"source": 12,
											"value": "189"
										},
										{
											"begin": 3182,
											"end": 3261,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 3144,
											"end": 3263,
											"name": "tag",
											"source": 12,
											"value": "188"
										},
										{
											"begin": 3144,
											"end": 3263,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 3302,
											"end": 3303,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 3327,
											"end": 3380,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "190"
										},
										{
											"begin": 3372,
											"end": 3379,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 3363,
											"end": 3369,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 3352,
											"end": 3361,
											"name": "DUP7",
											"source": 12
										},
										{
											"begin": 3348,
											"end": 3370,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 3327,
											"end": 3380,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "135"
										},
										{
											"begin": 3327,
											"end": 3380,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 3327,
											"end": 3380,
											"name": "tag",
											"source": 12,
											"value": "190"
										},
										{
											"begin": 3327,
											"end": 3380,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 3317,
											"end": 3380,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 3317,
											"end": 3380,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 3273,
											"end": 3390,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 3429,
											"end": 3431,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 3455,
											"end": 3508,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "191"
										},
										{
											"begin": 3500,
											"end": 3507,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 3491,
											"end": 3497,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 3480,
											"end": 3489,
											"name": "DUP7",
											"source": 12
										},
										{
											"begin": 3476,
											"end": 3498,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 3455,
											"end": 3508,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "135"
										},
										{
											"begin": 3455,
											"end": 3508,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 3455,
											"end": 3508,
											"name": "tag",
											"source": 12,
											"value": "191"
										},
										{
											"begin": 3455,
											"end": 3508,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 3445,
											"end": 3508,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 3445,
											"end": 3508,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 3400,
											"end": 3518,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 3051,
											"end": 3525,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 3051,
											"end": 3525,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 3051,
											"end": 3525,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 3051,
											"end": 3525,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 3051,
											"end": 3525,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 3051,
											"end": 3525,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 3531,
											"end": 3700,
											"name": "tag",
											"source": 12,
											"value": "138"
										},
										{
											"begin": 3531,
											"end": 3700,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 3615,
											"end": 3626,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 3649,
											"end": 3655,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 3644,
											"end": 3647,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 3637,
											"end": 3656,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 3689,
											"end": 3693,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 3684,
											"end": 3687,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 3680,
											"end": 3694,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 3665,
											"end": 3694,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 3665,
											"end": 3694,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 3531,
											"end": 3700,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 3531,
											"end": 3700,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 3531,
											"end": 3700,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 3531,
											"end": 3700,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 3531,
											"end": 3700,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 3706,
											"end": 3874,
											"name": "tag",
											"source": 12,
											"value": "139"
										},
										{
											"begin": 3706,
											"end": 3874,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 3846,
											"end": 3866,
											"name": "PUSH",
											"source": 12,
											"value": "416D6F756E74206D757374206265203E20300000000000000000000000000000"
										},
										{
											"begin": 3842,
											"end": 3843,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 3834,
											"end": 3840,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 3830,
											"end": 3844,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 3823,
											"end": 3867,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 3706,
											"end": 3874,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 3706,
											"end": 3874,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 3880,
											"end": 4246,
											"name": "tag",
											"source": 12,
											"value": "140"
										},
										{
											"begin": 3880,
											"end": 4246,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 4022,
											"end": 4025,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 4043,
											"end": 4110,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "195"
										},
										{
											"begin": 4107,
											"end": 4109,
											"name": "PUSH",
											"source": 12,
											"value": "12"
										},
										{
											"begin": 4102,
											"end": 4105,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 4043,
											"end": 4110,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "138"
										},
										{
											"begin": 4043,
											"end": 4110,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 4043,
											"end": 4110,
											"name": "tag",
											"source": 12,
											"value": "195"
										},
										{
											"begin": 4043,
											"end": 4110,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 4036,
											"end": 4110,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 4036,
											"end": 4110,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 4119,
											"end": 4212,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "196"
										},
										{
											"begin": 4208,
											"end": 4211,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 4119,
											"end": 4212,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "139"
										},
										{
											"begin": 4119,
											"end": 4212,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 4119,
											"end": 4212,
											"name": "tag",
											"source": 12,
											"value": "196"
										},
										{
											"begin": 4119,
											"end": 4212,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 4237,
											"end": 4239,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 4232,
											"end": 4235,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 4228,
											"end": 4240,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 4221,
											"end": 4240,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 4221,
											"end": 4240,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 3880,
											"end": 4246,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 3880,
											"end": 4246,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 3880,
											"end": 4246,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 3880,
											"end": 4246,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 4252,
											"end": 4671,
											"name": "tag",
											"source": 12,
											"value": "53"
										},
										{
											"begin": 4252,
											"end": 4671,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 4418,
											"end": 4422,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 4456,
											"end": 4458,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 4445,
											"end": 4454,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 4441,
											"end": 4459,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 4433,
											"end": 4459,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 4433,
											"end": 4459,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 4505,
											"end": 4514,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 4499,
											"end": 4503,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 4495,
											"end": 4515,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 4491,
											"end": 4492,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 4480,
											"end": 4489,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 4476,
											"end": 4493,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 4469,
											"end": 4516,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 4533,
											"end": 4664,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "198"
										},
										{
											"begin": 4659,
											"end": 4663,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 4533,
											"end": 4664,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "140"
										},
										{
											"begin": 4533,
											"end": 4664,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 4533,
											"end": 4664,
											"name": "tag",
											"source": 12,
											"value": "198"
										},
										{
											"begin": 4533,
											"end": 4664,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 4525,
											"end": 4664,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 4525,
											"end": 4664,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 4252,
											"end": 4671,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 4252,
											"end": 4671,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 4252,
											"end": 4671,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 4252,
											"end": 4671,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 4677,
											"end": 4857,
											"name": "tag",
											"source": 12,
											"value": "141"
										},
										{
											"begin": 4677,
											"end": 4857,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 4725,
											"end": 4802,
											"name": "PUSH",
											"source": 12,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 4722,
											"end": 4723,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 4715,
											"end": 4803,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 4822,
											"end": 4826,
											"name": "PUSH",
											"source": 12,
											"value": "11"
										},
										{
											"begin": 4819,
											"end": 4820,
											"name": "PUSH",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 4812,
											"end": 4827,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 4846,
											"end": 4850,
											"name": "PUSH",
											"source": 12,
											"value": "24"
										},
										{
											"begin": 4843,
											"end": 4844,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 4836,
											"end": 4851,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 4863,
											"end": 5054,
											"name": "tag",
											"source": 12,
											"value": "56"
										},
										{
											"begin": 4863,
											"end": 5054,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 4903,
											"end": 4906,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 4922,
											"end": 4942,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "201"
										},
										{
											"begin": 4940,
											"end": 4941,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 4922,
											"end": 4942,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "133"
										},
										{
											"begin": 4922,
											"end": 4942,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 4922,
											"end": 4942,
											"name": "tag",
											"source": 12,
											"value": "201"
										},
										{
											"begin": 4922,
											"end": 4942,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 4917,
											"end": 4942,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 4917,
											"end": 4942,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 4956,
											"end": 4976,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "202"
										},
										{
											"begin": 4974,
											"end": 4975,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 4956,
											"end": 4976,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "133"
										},
										{
											"begin": 4956,
											"end": 4976,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 4956,
											"end": 4976,
											"name": "tag",
											"source": 12,
											"value": "202"
										},
										{
											"begin": 4956,
											"end": 4976,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 4951,
											"end": 4976,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 4951,
											"end": 4976,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 4999,
											"end": 5000,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 4996,
											"end": 4997,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 4992,
											"end": 5001,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 4985,
											"end": 5001,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 4985,
											"end": 5001,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 5020,
											"end": 5023,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 5017,
											"end": 5018,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 5014,
											"end": 5024,
											"name": "GT",
											"source": 12
										},
										{
											"begin": 5011,
											"end": 5047,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 5011,
											"end": 5047,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "203"
										},
										{
											"begin": 5011,
											"end": 5047,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 5027,
											"end": 5045,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "204"
										},
										{
											"begin": 5027,
											"end": 5045,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "141"
										},
										{
											"begin": 5027,
											"end": 5045,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 5027,
											"end": 5045,
											"name": "tag",
											"source": 12,
											"value": "204"
										},
										{
											"begin": 5027,
											"end": 5045,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 5011,
											"end": 5047,
											"name": "tag",
											"source": 12,
											"value": "203"
										},
										{
											"begin": 5011,
											"end": 5047,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 4863,
											"end": 5054,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 4863,
											"end": 5054,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 4863,
											"end": 5054,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 4863,
											"end": 5054,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 4863,
											"end": 5054,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 5060,
											"end": 5470,
											"name": "tag",
											"source": 12,
											"value": "68"
										},
										{
											"begin": 5060,
											"end": 5470,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 5100,
											"end": 5107,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 5123,
											"end": 5143,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "206"
										},
										{
											"begin": 5141,
											"end": 5142,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 5123,
											"end": 5143,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "133"
										},
										{
											"begin": 5123,
											"end": 5143,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 5123,
											"end": 5143,
											"name": "tag",
											"source": 12,
											"value": "206"
										},
										{
											"begin": 5123,
											"end": 5143,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 5118,
											"end": 5143,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 5118,
											"end": 5143,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 5157,
											"end": 5177,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "207"
										},
										{
											"begin": 5175,
											"end": 5176,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 5157,
											"end": 5177,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "133"
										},
										{
											"begin": 5157,
											"end": 5177,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 5157,
											"end": 5177,
											"name": "tag",
											"source": 12,
											"value": "207"
										},
										{
											"begin": 5157,
											"end": 5177,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 5152,
											"end": 5177,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 5152,
											"end": 5177,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 5212,
											"end": 5213,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 5209,
											"end": 5210,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 5205,
											"end": 5214,
											"name": "MUL",
											"source": 12
										},
										{
											"begin": 5234,
											"end": 5264,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "208"
										},
										{
											"begin": 5252,
											"end": 5263,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 5234,
											"end": 5264,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "133"
										},
										{
											"begin": 5234,
											"end": 5264,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 5234,
											"end": 5264,
											"name": "tag",
											"source": 12,
											"value": "208"
										},
										{
											"begin": 5234,
											"end": 5264,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 5223,
											"end": 5264,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 5223,
											"end": 5264,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 5413,
											"end": 5414,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 5404,
											"end": 5411,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 5400,
											"end": 5415,
											"name": "DIV",
											"source": 12
										},
										{
											"begin": 5397,
											"end": 5398,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 5394,
											"end": 5416,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 5374,
											"end": 5375,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 5367,
											"end": 5376,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 5347,
											"end": 5430,
											"name": "OR",
											"source": 12
										},
										{
											"begin": 5324,
											"end": 5463,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "209"
										},
										{
											"begin": 5324,
											"end": 5463,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 5443,
											"end": 5461,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "210"
										},
										{
											"begin": 5443,
											"end": 5461,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "141"
										},
										{
											"begin": 5443,
											"end": 5461,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 5443,
											"end": 5461,
											"name": "tag",
											"source": 12,
											"value": "210"
										},
										{
											"begin": 5443,
											"end": 5461,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 5324,
											"end": 5463,
											"name": "tag",
											"source": 12,
											"value": "209"
										},
										{
											"begin": 5324,
											"end": 5463,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 5108,
											"end": 5470,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 5060,
											"end": 5470,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 5060,
											"end": 5470,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 5060,
											"end": 5470,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 5060,
											"end": 5470,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 5060,
											"end": 5470,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 5476,
											"end": 5656,
											"name": "tag",
											"source": 12,
											"value": "142"
										},
										{
											"begin": 5476,
											"end": 5656,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 5524,
											"end": 5601,
											"name": "PUSH",
											"source": 12,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 5521,
											"end": 5522,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 5514,
											"end": 5602,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 5621,
											"end": 5625,
											"name": "PUSH",
											"source": 12,
											"value": "12"
										},
										{
											"begin": 5618,
											"end": 5619,
											"name": "PUSH",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 5611,
											"end": 5626,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 5645,
											"end": 5649,
											"name": "PUSH",
											"source": 12,
											"value": "24"
										},
										{
											"begin": 5642,
											"end": 5643,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 5635,
											"end": 5650,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 5662,
											"end": 5847,
											"name": "tag",
											"source": 12,
											"value": "70"
										},
										{
											"begin": 5662,
											"end": 5847,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 5702,
											"end": 5703,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 5719,
											"end": 5739,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "213"
										},
										{
											"begin": 5737,
											"end": 5738,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 5719,
											"end": 5739,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "133"
										},
										{
											"begin": 5719,
											"end": 5739,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 5719,
											"end": 5739,
											"name": "tag",
											"source": 12,
											"value": "213"
										},
										{
											"begin": 5719,
											"end": 5739,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 5714,
											"end": 5739,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 5714,
											"end": 5739,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 5753,
											"end": 5773,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "214"
										},
										{
											"begin": 5771,
											"end": 5772,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 5753,
											"end": 5773,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "133"
										},
										{
											"begin": 5753,
											"end": 5773,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 5753,
											"end": 5773,
											"name": "tag",
											"source": 12,
											"value": "214"
										},
										{
											"begin": 5753,
											"end": 5773,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 5748,
											"end": 5773,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 5748,
											"end": 5773,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 5792,
											"end": 5793,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 5782,
											"end": 5817,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "215"
										},
										{
											"begin": 5782,
											"end": 5817,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 5797,
											"end": 5815,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "216"
										},
										{
											"begin": 5797,
											"end": 5815,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "142"
										},
										{
											"begin": 5797,
											"end": 5815,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 5797,
											"end": 5815,
											"name": "tag",
											"source": 12,
											"value": "216"
										},
										{
											"begin": 5797,
											"end": 5815,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 5782,
											"end": 5817,
											"name": "tag",
											"source": 12,
											"value": "215"
										},
										{
											"begin": 5782,
											"end": 5817,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 5839,
											"end": 5840,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 5836,
											"end": 5837,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 5832,
											"end": 5841,
											"name": "DIV",
											"source": 12
										},
										{
											"begin": 5827,
											"end": 5841,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 5827,
											"end": 5841,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 5662,
											"end": 5847,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 5662,
											"end": 5847,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 5662,
											"end": 5847,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 5662,
											"end": 5847,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 5662,
											"end": 5847,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 5853,
											"end": 5938,
											"name": "tag",
											"source": 12,
											"value": "143"
										},
										{
											"begin": 5853,
											"end": 5938,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 5898,
											"end": 5905,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 5927,
											"end": 5932,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 5916,
											"end": 5932,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 5916,
											"end": 5932,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 5853,
											"end": 5938,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 5853,
											"end": 5938,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 5853,
											"end": 5938,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 5853,
											"end": 5938,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 5944,
											"end": 6045,
											"name": "tag",
											"source": 12,
											"value": "144"
										},
										{
											"begin": 5944,
											"end": 6045,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 5980,
											"end": 5987,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 6020,
											"end": 6038,
											"name": "PUSH",
											"source": 12,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6013,
											"end": 6018,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 6009,
											"end": 6039,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 5998,
											"end": 6039,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 5998,
											"end": 6039,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 5944,
											"end": 6045,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 5944,
											"end": 6045,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 5944,
											"end": 6045,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 5944,
											"end": 6045,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 6051,
											"end": 6111,
											"name": "tag",
											"source": 12,
											"value": "145"
										},
										{
											"begin": 6051,
											"end": 6111,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 6079,
											"end": 6082,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 6100,
											"end": 6105,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 6093,
											"end": 6105,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 6093,
											"end": 6105,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 6051,
											"end": 6111,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 6051,
											"end": 6111,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 6051,
											"end": 6111,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 6051,
											"end": 6111,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 6117,
											"end": 6273,
											"name": "tag",
											"source": 12,
											"value": "146"
										},
										{
											"begin": 6117,
											"end": 6273,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 6174,
											"end": 6183,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 6207,
											"end": 6267,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "221"
										},
										{
											"begin": 6224,
											"end": 6266,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "222"
										},
										{
											"begin": 6233,
											"end": 6265,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "223"
										},
										{
											"begin": 6259,
											"end": 6264,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 6233,
											"end": 6265,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "143"
										},
										{
											"begin": 6233,
											"end": 6265,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 6233,
											"end": 6265,
											"name": "tag",
											"source": 12,
											"value": "223"
										},
										{
											"begin": 6233,
											"end": 6265,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 6224,
											"end": 6266,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "145"
										},
										{
											"begin": 6224,
											"end": 6266,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 6224,
											"end": 6266,
											"name": "tag",
											"source": 12,
											"value": "222"
										},
										{
											"begin": 6224,
											"end": 6266,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 6207,
											"end": 6267,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "144"
										},
										{
											"begin": 6207,
											"end": 6267,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 6207,
											"end": 6267,
											"name": "tag",
											"source": 12,
											"value": "221"
										},
										{
											"begin": 6207,
											"end": 6267,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 6194,
											"end": 6267,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 6194,
											"end": 6267,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 6117,
											"end": 6273,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 6117,
											"end": 6273,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 6117,
											"end": 6273,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 6117,
											"end": 6273,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 6279,
											"end": 6424,
											"name": "tag",
											"source": 12,
											"value": "147"
										},
										{
											"begin": 6279,
											"end": 6424,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 6373,
											"end": 6417,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "225"
										},
										{
											"begin": 6411,
											"end": 6416,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 6373,
											"end": 6417,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "146"
										},
										{
											"begin": 6373,
											"end": 6417,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 6373,
											"end": 6417,
											"name": "tag",
											"source": 12,
											"value": "225"
										},
										{
											"begin": 6373,
											"end": 6417,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 6368,
											"end": 6371,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 6361,
											"end": 6418,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 6279,
											"end": 6424,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 6279,
											"end": 6424,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 6279,
											"end": 6424,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 6430,
											"end": 6666,
											"name": "tag",
											"source": 12,
											"value": "86"
										},
										{
											"begin": 6430,
											"end": 6666,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 6530,
											"end": 6534,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 6568,
											"end": 6570,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 6557,
											"end": 6566,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 6553,
											"end": 6571,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 6545,
											"end": 6571,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 6545,
											"end": 6571,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 6581,
											"end": 6659,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "227"
										},
										{
											"begin": 6656,
											"end": 6657,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 6645,
											"end": 6654,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 6641,
											"end": 6658,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 6632,
											"end": 6638,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 6581,
											"end": 6659,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "147"
										},
										{
											"begin": 6581,
											"end": 6659,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 6581,
											"end": 6659,
											"name": "tag",
											"source": 12,
											"value": "227"
										},
										{
											"begin": 6581,
											"end": 6659,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 6430,
											"end": 6666,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 6430,
											"end": 6666,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 6430,
											"end": 6666,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 6430,
											"end": 6666,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 6430,
											"end": 6666,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol",
								"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol",
								"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol",
								"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol",
								"@openzeppelin/contracts/interfaces/IERC1967.sol",
								"@openzeppelin/contracts/interfaces/draft-IERC1822.sol",
								"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol",
								"@openzeppelin/contracts/proxy/beacon/IBeacon.sol",
								"@openzeppelin/contracts/utils/Address.sol",
								"@openzeppelin/contracts/utils/Errors.sol",
								"@openzeppelin/contracts/utils/StorageSlot.sol",
								"contracts/PlatformFeeAndRewardSystem.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"calculateReward(uint256)": "d2d7231f",
							"distributeReward(address,uint256)": "1ec8bb8c",
							"initialize(uint256,uint256)": "e4a30116",
							"maxRewardPoints()": "49880782",
							"owner()": "8da5cb5b",
							"platformFee()": "26232a2e",
							"renounceOwnership()": "715018a6",
							"transferOwnership(address)": "f2fde38b",
							"userRewardPoints(address)": "7ce26644"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.30+commit.73712a01\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"InvalidInitialization\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NotInitializing\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint64\",\"name\":\"version\",\"type\":\"uint64\"}],\"name\":\"Initialized\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"points\",\"type\":\"uint256\"}],\"name\":\"RewardDistributed\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"calculateReward\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"distributeReward\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_fee\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_maxPoints\",\"type\":\"uint256\"}],\"name\":\"initialize\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"maxRewardPoints\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"platformFee\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"userRewardPoints\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"errors\":{\"InvalidInitialization()\":[{\"details\":\"The contract is already initialized.\"}],\"NotInitializing()\":[{\"details\":\"The contract is not initializing.\"}],\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}]},\"events\":{\"Initialized(uint64)\":{\"details\":\"Triggered when the contract has been initialized or reinitialized.\"}},\"kind\":\"dev\",\"methods\":{\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/PlatformFeeAndRewardSystem.sol\":\"RewardManager\"},\"evmVersion\":\"prague\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":{\"keccak256\":\"0xc163fcf9bb10138631a9ba5564df1fa25db9adff73bd9ee868a8ae1858fe093a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9706d43a0124053d9880f6e31a59f31bc0a6a3dc1acd66ce0a16e1111658c5f6\",\"dweb:/ipfs/QmUFmfowzkRwGtDu36cXV9SPTBHJ3n7dG9xQiK5B28jTf2\"]},\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":{\"keccak256\":\"0xdb4d24ee2c087c391d587cd17adfe5b3f9d93b3110b1388c2ab6c7c0ad1dcd05\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ab7b6d5b9e2b88176312967fe0f0e78f3d9a1422fa5e4b64e2440c35869b5d08\",\"dweb:/ipfs/QmXKYWWyzcLg1B2k7Sb1qkEXgLCYfXecR9wYW5obRzWP1Q\"]},\"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":{\"keccak256\":\"0x574a7451e42724f7de29e2855c392a8a5020acd695169466a18459467d719d63\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5bc189f63b639ee173dd7b6fecc39baf7113bf161776aea22b34c57fdd1872ec\",\"dweb:/ipfs/QmZAf2VtjDLRULqjJkde6LNsxAg12tUqpPqgUQQZbAjgtZ\"]},\"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":{\"keccak256\":\"0xdbef5f0c787055227243a7318ef74c8a5a1108ca3a07f2b3a00ef67769e1e397\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://08e39f23d5b4692f9a40803e53a8156b72b4c1f9902a88cd65ba964db103dab9\",\"dweb:/ipfs/QmPKn6EYDgpga7KtpkA8wV2yJCYGMtc9K4LkJfhKX2RVSV\"]},\"@openzeppelin/contracts/interfaces/IERC1967.sol\":{\"keccak256\":\"0xb25a4f11fa80c702bf5cd85adec90e6f6f507f32f4a8e6f5dbc31e8c10029486\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6917f8a323e7811f041aecd4d9fd6e92455a6fba38a797ac6f6e208c7912b79d\",\"dweb:/ipfs/QmShuYv55wYHGi4EFkDB8QfF7ZCHoKk2efyz3AWY1ExSq7\"]},\"@openzeppelin/contracts/interfaces/draft-IERC1822.sol\":{\"keccak256\":\"0xc42facb5094f2f35f066a7155bda23545e39a3156faef3ddc00185544443ba7d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d3b36282ab029b46bd082619a308a2ea11c309967b9425b7b7a6eb0b0c1c3196\",\"dweb:/ipfs/QmP2YVfDB2FoREax3vJu7QhDnyYRMw52WPrCD4vdT2kuDA\"]},\"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":{\"keccak256\":\"0x8decfa54cec979c824b044b8128cd91d713f72c71fd7dfa54974624d8c949898\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://271f914261a19d87117a777e0924ada545c16191ef9b00cc40b0134fc14ebc70\",\"dweb:/ipfs/QmdvVNWHGHQrGGPonZJs5NuzTevTjZRM2zayKrDJf7WBA2\"]},\"@openzeppelin/contracts/proxy/beacon/IBeacon.sol\":{\"keccak256\":\"0xc59a78b07b44b2cf2e8ab4175fca91e8eca1eee2df7357b8d2a8833e5ea1f64c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5aa4f07e65444784c29cd7bfcc2341b34381e4e5b5da9f0c5bd00d7f430e66fa\",\"dweb:/ipfs/QmWRMh4Q9DpaU9GvsiXmDdoNYMyyece9if7hnfLz7uqzWM\"]},\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0xaaa1d17c1129b127a4a401db2fbd72960e2671474be3d08cae71ccdc42f7624c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://cb2f27cd3952aa667e198fba0d9b7bcec52fbb12c16f013c25fe6fb52b29cc0e\",\"dweb:/ipfs/QmeuohBFoeyDPZA9JNCTEDz3VBfBD4EABWuWXVhHAuEpKR\"]},\"@openzeppelin/contracts/utils/Errors.sol\":{\"keccak256\":\"0x6afa713bfd42cf0f7656efa91201007ac465e42049d7de1d50753a373648c123\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ba1d02f4847670a1b83dec9f7d37f0b0418d6043447b69f3a29a5f9efc547fcf\",\"dweb:/ipfs/QmQ7iH2keLNUKgq2xSWcRmuBE5eZ3F5whYAkAGzCNNoEWB\"]},\"@openzeppelin/contracts/utils/StorageSlot.sol\":{\"keccak256\":\"0xcf74f855663ce2ae00ed8352666b7935f6cddea2932fdf2c3ecd30a9b1cd0e97\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9f660b1f351b757dfe01438e59888f31f33ded3afcf5cb5b0d9bf9aa6f320a8b\",\"dweb:/ipfs/QmarDJ5hZEgBtCmmrVzEZWjub9769eD686jmzb2XpSU1cM\"]},\"contracts/PlatformFeeAndRewardSystem.sol\":{\"keccak256\":\"0xdddb841eab2097fad2d4cde28980336ecdd2de1e5fa048cdf1a0f994d7de35f1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9648bbf1a7c69caff288da3167bceaff208b6f66180347d2eaf4adccbcadee96\",\"dweb:/ipfs/QmQxHKWgL6ukkFxhn8Kr6ffux21kQdUgakWcCcpQmxqoSP\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 1442,
								"contract": "contracts/PlatformFeeAndRewardSystem.sol:RewardManager",
								"label": "platformFee",
								"offset": 0,
								"slot": "0",
								"type": "t_uint256"
							},
							{
								"astId": 1444,
								"contract": "contracts/PlatformFeeAndRewardSystem.sol:RewardManager",
								"label": "maxRewardPoints",
								"offset": 0,
								"slot": "1",
								"type": "t_uint256"
							},
							{
								"astId": 1448,
								"contract": "contracts/PlatformFeeAndRewardSystem.sol:RewardManager",
								"label": "userRewardPoints",
								"offset": 0,
								"slot": "2",
								"type": "t_mapping(t_address,t_uint256)"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol",
					"exportedSymbols": {
						"ContextUpgradeable": [
							690
						],
						"Initializable": [
							462
						],
						"OwnableUpgradeable": [
							194
						]
					},
					"id": 195,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "102:24:0"
						},
						{
							"absolutePath": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol",
							"file": "../utils/ContextUpgradeable.sol",
							"id": 3,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 195,
							"sourceUnit": 691,
							"src": "128:67:0",
							"symbolAliases": [
								{
									"foreign": {
										"id": 2,
										"name": "ContextUpgradeable",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 690,
										"src": "136:18:0",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol",
							"file": "../proxy/utils/Initializable.sol",
							"id": 5,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 195,
							"sourceUnit": 463,
							"src": "196:63:0",
							"symbolAliases": [
								{
									"foreign": {
										"id": 4,
										"name": "Initializable",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 462,
										"src": "204:13:0",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 7,
										"name": "Initializable",
										"nameLocations": [
											"789:13:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 462,
										"src": "789:13:0"
									},
									"id": 8,
									"nodeType": "InheritanceSpecifier",
									"src": "789:13:0"
								},
								{
									"baseName": {
										"id": 9,
										"name": "ContextUpgradeable",
										"nameLocations": [
											"804:18:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 690,
										"src": "804:18:0"
									},
									"id": 10,
									"nodeType": "InheritanceSpecifier",
									"src": "804:18:0"
								}
							],
							"canonicalName": "OwnableUpgradeable",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 6,
								"nodeType": "StructuredDocumentation",
								"src": "261:487:0",
								"text": " @dev Contract module which provides a basic access control mechanism, where\n there is an account (an owner) that can be granted exclusive access to\n specific functions.\n The initial owner is set to the address provided by the deployer. This can\n later be changed with {transferOwnership}.\n This module is used through inheritance. It will make available the modifier\n `onlyOwner`, which can be applied to your functions to restrict their use to\n the owner."
							},
							"fullyImplemented": true,
							"id": 194,
							"linearizedBaseContracts": [
								194,
								690,
								462
							],
							"name": "OwnableUpgradeable",
							"nameLocation": "767:18:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"canonicalName": "OwnableUpgradeable.OwnableStorage",
									"documentation": {
										"id": 11,
										"nodeType": "StructuredDocumentation",
										"src": "829:65:0",
										"text": "@custom:storage-location erc7201:openzeppelin.storage.Ownable"
									},
									"id": 14,
									"members": [
										{
											"constant": false,
											"id": 13,
											"mutability": "mutable",
											"name": "_owner",
											"nameLocation": "939:6:0",
											"nodeType": "VariableDeclaration",
											"scope": 14,
											"src": "931:14:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 12,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "931:7:0",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "OwnableStorage",
									"nameLocation": "906:14:0",
									"nodeType": "StructDefinition",
									"scope": 194,
									"src": "899:53:0",
									"visibility": "public"
								},
								{
									"constant": true,
									"id": 17,
									"mutability": "constant",
									"name": "OwnableStorageLocation",
									"nameLocation": "1094:22:0",
									"nodeType": "VariableDeclaration",
									"scope": 194,
									"src": "1069:116:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes32",
										"typeString": "bytes32"
									},
									"typeName": {
										"id": 15,
										"name": "bytes32",
										"nodeType": "ElementaryTypeName",
										"src": "1069:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"value": {
										"hexValue": "307839303136643039643732643430666461653266643863656163366236323334633737303632313466643339633163643165363039613035323863313939333030",
										"id": 16,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1119:66:0",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_65173360639460082030725920392146925864023520599682862633725751242436743107328_by_1",
											"typeString": "int_const 6517...(69 digits omitted)...7328"
										},
										"value": "0x9016d09d72d40fdae2fd8ceac6b6234c7706214fd39c1cd1e609a0528c199300"
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 24,
										"nodeType": "Block",
										"src": "1270:81:0",
										"statements": [
											{
												"AST": {
													"nativeSrc": "1289:56:0",
													"nodeType": "YulBlock",
													"src": "1289:56:0",
													"statements": [
														{
															"nativeSrc": "1303:32:0",
															"nodeType": "YulAssignment",
															"src": "1303:32:0",
															"value": {
																"name": "OwnableStorageLocation",
																"nativeSrc": "1313:22:0",
																"nodeType": "YulIdentifier",
																"src": "1313:22:0"
															},
															"variableNames": [
																{
																	"name": "$.slot",
																	"nativeSrc": "1303:6:0",
																	"nodeType": "YulIdentifier",
																	"src": "1303:6:0"
																}
															]
														}
													]
												},
												"evmVersion": "prague",
												"externalReferences": [
													{
														"declaration": 21,
														"isOffset": false,
														"isSlot": true,
														"src": "1303:6:0",
														"suffix": "slot",
														"valueSize": 1
													},
													{
														"declaration": 17,
														"isOffset": false,
														"isSlot": false,
														"src": "1313:22:0",
														"valueSize": 1
													}
												],
												"id": 23,
												"nodeType": "InlineAssembly",
												"src": "1280:65:0"
											}
										]
									},
									"id": 25,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_getOwnableStorage",
									"nameLocation": "1201:18:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 18,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1219:2:0"
									},
									"returnParameters": {
										"id": 22,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 21,
												"mutability": "mutable",
												"name": "$",
												"nameLocation": "1267:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 25,
												"src": "1244:24:0",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_OwnableStorage_$14_storage_ptr",
													"typeString": "struct OwnableUpgradeable.OwnableStorage"
												},
												"typeName": {
													"id": 20,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 19,
														"name": "OwnableStorage",
														"nameLocations": [
															"1244:14:0"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 14,
														"src": "1244:14:0"
													},
													"referencedDeclaration": 14,
													"src": "1244:14:0",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_OwnableStorage_$14_storage_ptr",
														"typeString": "struct OwnableUpgradeable.OwnableStorage"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1243:26:0"
									},
									"scope": 194,
									"src": "1192:159:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "private"
								},
								{
									"documentation": {
										"id": 26,
										"nodeType": "StructuredDocumentation",
										"src": "1357:85:0",
										"text": " @dev The caller account is not authorized to perform an operation."
									},
									"errorSelector": "118cdaa7",
									"id": 30,
									"name": "OwnableUnauthorizedAccount",
									"nameLocation": "1453:26:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 29,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 28,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "1488:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 30,
												"src": "1480:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 27,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1480:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1479:17:0"
									},
									"src": "1447:50:0"
								},
								{
									"documentation": {
										"id": 31,
										"nodeType": "StructuredDocumentation",
										"src": "1503:82:0",
										"text": " @dev The owner is not a valid owner account. (eg. `address(0)`)"
									},
									"errorSelector": "1e4fbdf7",
									"id": 35,
									"name": "OwnableInvalidOwner",
									"nameLocation": "1596:19:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 34,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 33,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1624:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 35,
												"src": "1616:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 32,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1616:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1615:15:0"
									},
									"src": "1590:41:0"
								},
								{
									"anonymous": false,
									"eventSelector": "8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0",
									"id": 41,
									"name": "OwnershipTransferred",
									"nameLocation": "1643:20:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 40,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 37,
												"indexed": true,
												"mutability": "mutable",
												"name": "previousOwner",
												"nameLocation": "1680:13:0",
												"nodeType": "VariableDeclaration",
												"scope": 41,
												"src": "1664:29:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 36,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1664:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 39,
												"indexed": true,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "1711:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 41,
												"src": "1695:24:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 38,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1695:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1663:57:0"
									},
									"src": "1637:84:0"
								},
								{
									"body": {
										"id": 53,
										"nodeType": "Block",
										"src": "1919:55:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 50,
															"name": "initialOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 44,
															"src": "1954:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 49,
														"name": "__Ownable_init_unchained",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 81,
														"src": "1929:24:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 51,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1929:38:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 52,
												"nodeType": "ExpressionStatement",
												"src": "1929:38:0"
											}
										]
									},
									"documentation": {
										"id": 42,
										"nodeType": "StructuredDocumentation",
										"src": "1727:115:0",
										"text": " @dev Initializes the contract setting the address provided by the deployer as the initial owner."
									},
									"id": 54,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 47,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 46,
												"name": "onlyInitializing",
												"nameLocations": [
													"1902:16:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 357,
												"src": "1902:16:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "1902:16:0"
										}
									],
									"name": "__Ownable_init",
									"nameLocation": "1856:14:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 45,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 44,
												"mutability": "mutable",
												"name": "initialOwner",
												"nameLocation": "1879:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 54,
												"src": "1871:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 43,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1871:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1870:22:0"
									},
									"returnParameters": {
										"id": 48,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1919:0:0"
									},
									"scope": 194,
									"src": "1847:127:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 80,
										"nodeType": "Block",
										"src": "2062:153:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 66,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 61,
														"name": "initialOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 56,
														"src": "2076:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 64,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2100:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 63,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "2092:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 62,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "2092:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 65,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2092:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "2076:26:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 75,
												"nodeType": "IfStatement",
												"src": "2072:95:0",
												"trueBody": {
													"id": 74,
													"nodeType": "Block",
													"src": "2104:63:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 70,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "2153:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 69,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "2145:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 68,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "2145:7:0",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 71,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "2145:10:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 67,
																	"name": "OwnableInvalidOwner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 35,
																	"src": "2125:19:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 72,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2125:31:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 73,
															"nodeType": "RevertStatement",
															"src": "2118:38:0"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 77,
															"name": "initialOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 56,
															"src": "2195:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 76,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 193,
														"src": "2176:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 78,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2176:32:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 79,
												"nodeType": "ExpressionStatement",
												"src": "2176:32:0"
											}
										]
									},
									"id": 81,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 59,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 58,
												"name": "onlyInitializing",
												"nameLocations": [
													"2045:16:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 357,
												"src": "2045:16:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "2045:16:0"
										}
									],
									"name": "__Ownable_init_unchained",
									"nameLocation": "1989:24:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 57,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 56,
												"mutability": "mutable",
												"name": "initialOwner",
												"nameLocation": "2022:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 81,
												"src": "2014:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 55,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2014:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2013:22:0"
									},
									"returnParameters": {
										"id": 60,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2062:0:0"
									},
									"scope": 194,
									"src": "1980:235:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 88,
										"nodeType": "Block",
										"src": "2324:41:0",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 84,
														"name": "_checkOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 122,
														"src": "2334:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$__$",
															"typeString": "function () view"
														}
													},
													"id": 85,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2334:13:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 86,
												"nodeType": "ExpressionStatement",
												"src": "2334:13:0"
											},
											{
												"id": 87,
												"nodeType": "PlaceholderStatement",
												"src": "2357:1:0"
											}
										]
									},
									"documentation": {
										"id": 82,
										"nodeType": "StructuredDocumentation",
										"src": "2221:77:0",
										"text": " @dev Throws if called by any account other than the owner."
									},
									"id": 89,
									"name": "onlyOwner",
									"nameLocation": "2312:9:0",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 83,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2321:2:0"
									},
									"src": "2303:62:0",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 104,
										"nodeType": "Block",
										"src": "2496:89:0",
										"statements": [
											{
												"assignments": [
													97
												],
												"declarations": [
													{
														"constant": false,
														"id": 97,
														"mutability": "mutable",
														"name": "$",
														"nameLocation": "2529:1:0",
														"nodeType": "VariableDeclaration",
														"scope": 104,
														"src": "2506:24:0",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_OwnableStorage_$14_storage_ptr",
															"typeString": "struct OwnableUpgradeable.OwnableStorage"
														},
														"typeName": {
															"id": 96,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 95,
																"name": "OwnableStorage",
																"nameLocations": [
																	"2506:14:0"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 14,
																"src": "2506:14:0"
															},
															"referencedDeclaration": 14,
															"src": "2506:14:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_OwnableStorage_$14_storage_ptr",
																"typeString": "struct OwnableUpgradeable.OwnableStorage"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 100,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 98,
														"name": "_getOwnableStorage",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 25,
														"src": "2533:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$__$returns$_t_struct$_OwnableStorage_$14_storage_ptr_$",
															"typeString": "function () pure returns (struct OwnableUpgradeable.OwnableStorage storage pointer)"
														}
													},
													"id": 99,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2533:20:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_OwnableStorage_$14_storage_ptr",
														"typeString": "struct OwnableUpgradeable.OwnableStorage storage pointer"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2506:47:0"
											},
											{
												"expression": {
													"expression": {
														"id": 101,
														"name": "$",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 97,
														"src": "2570:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_OwnableStorage_$14_storage_ptr",
															"typeString": "struct OwnableUpgradeable.OwnableStorage storage pointer"
														}
													},
													"id": 102,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "2572:6:0",
													"memberName": "_owner",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 13,
													"src": "2570:8:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 94,
												"id": 103,
												"nodeType": "Return",
												"src": "2563:15:0"
											}
										]
									},
									"documentation": {
										"id": 90,
										"nodeType": "StructuredDocumentation",
										"src": "2371:65:0",
										"text": " @dev Returns the address of the current owner."
									},
									"functionSelector": "8da5cb5b",
									"id": 105,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "owner",
									"nameLocation": "2450:5:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 91,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2455:2:0"
									},
									"returnParameters": {
										"id": 94,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 93,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 105,
												"src": "2487:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 92,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2487:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2486:9:0"
									},
									"scope": 194,
									"src": "2441:144:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 121,
										"nodeType": "Block",
										"src": "2703:117:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 113,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 109,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 105,
															"src": "2717:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																"typeString": "function () view returns (address)"
															}
														},
														"id": 110,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2717:7:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 111,
															"name": "_msgSender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 672,
															"src": "2728:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																"typeString": "function () view returns (address)"
															}
														},
														"id": 112,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2728:12:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "2717:23:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 120,
												"nodeType": "IfStatement",
												"src": "2713:101:0",
												"trueBody": {
													"id": 119,
													"nodeType": "Block",
													"src": "2742:72:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 115,
																			"name": "_msgSender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 672,
																			"src": "2790:10:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																				"typeString": "function () view returns (address)"
																			}
																		},
																		"id": 116,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "2790:12:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 114,
																	"name": "OwnableUnauthorizedAccount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 30,
																	"src": "2763:26:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 117,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2763:40:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 118,
															"nodeType": "RevertStatement",
															"src": "2756:47:0"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 106,
										"nodeType": "StructuredDocumentation",
										"src": "2591:62:0",
										"text": " @dev Throws if the sender is not the owner."
									},
									"id": 122,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_checkOwner",
									"nameLocation": "2667:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 107,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2678:2:0"
									},
									"returnParameters": {
										"id": 108,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2703:0:0"
									},
									"scope": 194,
									"src": "2658:162:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 135,
										"nodeType": "Block",
										"src": "3209:47:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 131,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "3246:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 130,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "3238:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 129,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "3238:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 132,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3238:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 128,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 193,
														"src": "3219:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 133,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3219:30:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 134,
												"nodeType": "ExpressionStatement",
												"src": "3219:30:0"
											}
										]
									},
									"documentation": {
										"id": 123,
										"nodeType": "StructuredDocumentation",
										"src": "2826:324:0",
										"text": " @dev Leaves the contract without owner. It will not be possible to call\n `onlyOwner` functions. Can only be called by the current owner.\n NOTE: Renouncing ownership will leave the contract without an owner,\n thereby disabling any functionality that is only available to the owner."
									},
									"functionSelector": "715018a6",
									"id": 136,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 126,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 125,
												"name": "onlyOwner",
												"nameLocations": [
													"3199:9:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 89,
												"src": "3199:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "3199:9:0"
										}
									],
									"name": "renounceOwnership",
									"nameLocation": "3164:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 124,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3181:2:0"
									},
									"returnParameters": {
										"id": 127,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3209:0:0"
									},
									"scope": 194,
									"src": "3155:101:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 163,
										"nodeType": "Block",
										"src": "3475:145:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 149,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 144,
														"name": "newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 139,
														"src": "3489:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 147,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "3509:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 146,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "3501:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 145,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "3501:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 148,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "3501:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "3489:22:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 158,
												"nodeType": "IfStatement",
												"src": "3485:91:0",
												"trueBody": {
													"id": 157,
													"nodeType": "Block",
													"src": "3513:63:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 153,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "3562:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 152,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "3554:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 151,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "3554:7:0",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 154,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "3554:10:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 150,
																	"name": "OwnableInvalidOwner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 35,
																	"src": "3534:19:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 155,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3534:31:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 156,
															"nodeType": "RevertStatement",
															"src": "3527:38:0"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 160,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 139,
															"src": "3604:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 159,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 193,
														"src": "3585:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 161,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3585:28:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 162,
												"nodeType": "ExpressionStatement",
												"src": "3585:28:0"
											}
										]
									},
									"documentation": {
										"id": 137,
										"nodeType": "StructuredDocumentation",
										"src": "3262:138:0",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Can only be called by the current owner."
									},
									"functionSelector": "f2fde38b",
									"id": 164,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 142,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 141,
												"name": "onlyOwner",
												"nameLocations": [
													"3465:9:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 89,
												"src": "3465:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "3465:9:0"
										}
									],
									"name": "transferOwnership",
									"nameLocation": "3414:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 140,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 139,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "3440:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 164,
												"src": "3432:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 138,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3432:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3431:18:0"
									},
									"returnParameters": {
										"id": 143,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3475:0:0"
									},
									"scope": 194,
									"src": "3405:215:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 192,
										"nodeType": "Block",
										"src": "3837:185:0",
										"statements": [
											{
												"assignments": [
													172
												],
												"declarations": [
													{
														"constant": false,
														"id": 172,
														"mutability": "mutable",
														"name": "$",
														"nameLocation": "3870:1:0",
														"nodeType": "VariableDeclaration",
														"scope": 192,
														"src": "3847:24:0",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_OwnableStorage_$14_storage_ptr",
															"typeString": "struct OwnableUpgradeable.OwnableStorage"
														},
														"typeName": {
															"id": 171,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 170,
																"name": "OwnableStorage",
																"nameLocations": [
																	"3847:14:0"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 14,
																"src": "3847:14:0"
															},
															"referencedDeclaration": 14,
															"src": "3847:14:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_OwnableStorage_$14_storage_ptr",
																"typeString": "struct OwnableUpgradeable.OwnableStorage"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 175,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 173,
														"name": "_getOwnableStorage",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 25,
														"src": "3874:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$__$returns$_t_struct$_OwnableStorage_$14_storage_ptr_$",
															"typeString": "function () pure returns (struct OwnableUpgradeable.OwnableStorage storage pointer)"
														}
													},
													"id": 174,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3874:20:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_OwnableStorage_$14_storage_ptr",
														"typeString": "struct OwnableUpgradeable.OwnableStorage storage pointer"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3847:47:0"
											},
											{
												"assignments": [
													177
												],
												"declarations": [
													{
														"constant": false,
														"id": 177,
														"mutability": "mutable",
														"name": "oldOwner",
														"nameLocation": "3912:8:0",
														"nodeType": "VariableDeclaration",
														"scope": 192,
														"src": "3904:16:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 176,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "3904:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 180,
												"initialValue": {
													"expression": {
														"id": 178,
														"name": "$",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 172,
														"src": "3923:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_OwnableStorage_$14_storage_ptr",
															"typeString": "struct OwnableUpgradeable.OwnableStorage storage pointer"
														}
													},
													"id": 179,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "3925:6:0",
													"memberName": "_owner",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 13,
													"src": "3923:8:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3904:27:0"
											},
											{
												"expression": {
													"id": 185,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 181,
															"name": "$",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 172,
															"src": "3941:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_OwnableStorage_$14_storage_ptr",
																"typeString": "struct OwnableUpgradeable.OwnableStorage storage pointer"
															}
														},
														"id": 183,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "3943:6:0",
														"memberName": "_owner",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 13,
														"src": "3941:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 184,
														"name": "newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 167,
														"src": "3952:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "3941:19:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 186,
												"nodeType": "ExpressionStatement",
												"src": "3941:19:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 188,
															"name": "oldOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 177,
															"src": "3996:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 189,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 167,
															"src": "4006:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 187,
														"name": "OwnershipTransferred",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 41,
														"src": "3975:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 190,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3975:40:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 191,
												"nodeType": "EmitStatement",
												"src": "3970:45:0"
											}
										]
									},
									"documentation": {
										"id": 165,
										"nodeType": "StructuredDocumentation",
										"src": "3626:143:0",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Internal function without access restriction."
									},
									"id": 193,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transferOwnership",
									"nameLocation": "3783:18:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 168,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 167,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "3810:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 193,
												"src": "3802:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 166,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3802:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3801:18:0"
									},
									"returnParameters": {
										"id": 169,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3837:0:0"
									},
									"scope": 194,
									"src": "3774:248:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 195,
							"src": "749:3275:0",
							"usedErrors": [
								30,
								35,
								211,
								214
							],
							"usedEvents": [
								41,
								219
							]
						}
					],
					"src": "102:3923:0"
				},
				"id": 0
			},
			"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol",
					"exportedSymbols": {
						"Initializable": [
							462
						]
					},
					"id": 463,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 196,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "113:24:1"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"canonicalName": "Initializable",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 197,
								"nodeType": "StructuredDocumentation",
								"src": "139:2209:1",
								"text": " @dev This is a base contract to aid in writing upgradeable contracts, or any kind of contract that will be deployed\n behind a proxy. Since proxied contracts do not make use of a constructor, it's common to move constructor logic to an\n external initializer function, usually called `initialize`. It then becomes necessary to protect this initializer\n function so it can only be called once. The {initializer} modifier provided by this contract will have this effect.\n The initialization functions use a version number. Once a version number is used, it is consumed and cannot be\n reused. This mechanism prevents re-execution of each \"step\" but allows the creation of new initialization steps in\n case an upgrade adds a module that needs to be initialized.\n For example:\n [.hljs-theme-light.nopadding]\n ```solidity\n contract MyToken is ERC20Upgradeable {\n     function initialize() initializer public {\n         __ERC20_init(\"MyToken\", \"MTK\");\n     }\n }\n contract MyTokenV2 is MyToken, ERC20PermitUpgradeable {\n     function initializeV2() reinitializer(2) public {\n         __ERC20Permit_init(\"MyToken\");\n     }\n }\n ```\n TIP: To avoid leaving the proxy in an uninitialized state, the initializer function should be called as early as\n possible by providing the encoded function call as the `_data` argument to {ERC1967Proxy-constructor}.\n CAUTION: When used with inheritance, manual care must be taken to not invoke a parent initializer twice, or to ensure\n that all initializers are idempotent. This is not verified automatically as constructors are by Solidity.\n [CAUTION]\n ====\n Avoid leaving a contract uninitialized.\n An uninitialized contract can be taken over by an attacker. This applies to both a proxy and its implementation\n contract, which may impact the proxy. To prevent the implementation contract from being used, you should invoke\n the {_disableInitializers} function in the constructor to automatically lock it when it is deployed:\n [.hljs-theme-light.nopadding]\n ```\n /// @custom:oz-upgrades-unsafe-allow constructor\n constructor() {\n     _disableInitializers();\n }\n ```\n ===="
							},
							"fullyImplemented": true,
							"id": 462,
							"linearizedBaseContracts": [
								462
							],
							"name": "Initializable",
							"nameLocation": "2367:13:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"canonicalName": "Initializable.InitializableStorage",
									"documentation": {
										"id": 198,
										"nodeType": "StructuredDocumentation",
										"src": "2387:293:1",
										"text": " @dev Storage of the initializable contract.\n It's implemented on a custom ERC-7201 namespace to reduce the risk of storage collisions\n when using with upgradeable contracts.\n @custom:storage-location erc7201:openzeppelin.storage.Initializable"
									},
									"id": 205,
									"members": [
										{
											"constant": false,
											"id": 201,
											"mutability": "mutable",
											"name": "_initialized",
											"nameLocation": "2820:12:1",
											"nodeType": "VariableDeclaration",
											"scope": 205,
											"src": "2813:19:1",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint64",
												"typeString": "uint64"
											},
											"typeName": {
												"id": 200,
												"name": "uint64",
												"nodeType": "ElementaryTypeName",
												"src": "2813:6:1",
												"typeDescriptions": {
													"typeIdentifier": "t_uint64",
													"typeString": "uint64"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 204,
											"mutability": "mutable",
											"name": "_initializing",
											"nameLocation": "2955:13:1",
											"nodeType": "VariableDeclaration",
											"scope": 205,
											"src": "2950:18:1",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bool",
												"typeString": "bool"
											},
											"typeName": {
												"id": 203,
												"name": "bool",
												"nodeType": "ElementaryTypeName",
												"src": "2950:4:1",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "InitializableStorage",
									"nameLocation": "2692:20:1",
									"nodeType": "StructDefinition",
									"scope": 462,
									"src": "2685:290:1",
									"visibility": "public"
								},
								{
									"constant": true,
									"id": 208,
									"mutability": "constant",
									"name": "INITIALIZABLE_STORAGE",
									"nameLocation": "3123:21:1",
									"nodeType": "VariableDeclaration",
									"scope": 462,
									"src": "3098:115:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes32",
										"typeString": "bytes32"
									},
									"typeName": {
										"id": 206,
										"name": "bytes32",
										"nodeType": "ElementaryTypeName",
										"src": "3098:7:1",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"value": {
										"hexValue": "307866306335376531363834306466303430663135303838646332663831666533393163333932336265633733653233613936363265666339633232396336613030",
										"id": 207,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "3147:66:1",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_108904022758810753673719992590105913556127789646572562039383141376366747609600_by_1",
											"typeString": "int_const 1089...(70 digits omitted)...9600"
										},
										"value": "0xf0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a00"
									},
									"visibility": "private"
								},
								{
									"documentation": {
										"id": 209,
										"nodeType": "StructuredDocumentation",
										"src": "3220:60:1",
										"text": " @dev The contract is already initialized."
									},
									"errorSelector": "f92ee8a9",
									"id": 211,
									"name": "InvalidInitialization",
									"nameLocation": "3291:21:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 210,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3312:2:1"
									},
									"src": "3285:30:1"
								},
								{
									"documentation": {
										"id": 212,
										"nodeType": "StructuredDocumentation",
										"src": "3321:57:1",
										"text": " @dev The contract is not initializing."
									},
									"errorSelector": "d7e6bcf8",
									"id": 214,
									"name": "NotInitializing",
									"nameLocation": "3389:15:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 213,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3404:2:1"
									},
									"src": "3383:24:1"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 215,
										"nodeType": "StructuredDocumentation",
										"src": "3413:90:1",
										"text": " @dev Triggered when the contract has been initialized or reinitialized."
									},
									"eventSelector": "c7f505b2f371ae2175ee4913f4499e1f2633a7b5936321eed1cdaeb6115181d2",
									"id": 219,
									"name": "Initialized",
									"nameLocation": "3514:11:1",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 218,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 217,
												"indexed": false,
												"mutability": "mutable",
												"name": "version",
												"nameLocation": "3533:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 219,
												"src": "3526:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint64",
													"typeString": "uint64"
												},
												"typeName": {
													"id": 216,
													"name": "uint64",
													"nodeType": "ElementaryTypeName",
													"src": "3526:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3525:16:1"
									},
									"src": "3508:34:1"
								},
								{
									"body": {
										"id": 301,
										"nodeType": "Block",
										"src": "4092:1079:1",
										"statements": [
											{
												"assignments": [
													224
												],
												"declarations": [
													{
														"constant": false,
														"id": 224,
														"mutability": "mutable",
														"name": "$",
														"nameLocation": "4187:1:1",
														"nodeType": "VariableDeclaration",
														"scope": 301,
														"src": "4158:30:1",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_InitializableStorage_$205_storage_ptr",
															"typeString": "struct Initializable.InitializableStorage"
														},
														"typeName": {
															"id": 223,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 222,
																"name": "InitializableStorage",
																"nameLocations": [
																	"4158:20:1"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 205,
																"src": "4158:20:1"
															},
															"referencedDeclaration": 205,
															"src": "4158:20:1",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_InitializableStorage_$205_storage_ptr",
																"typeString": "struct Initializable.InitializableStorage"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 227,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 225,
														"name": "_getInitializableStorage",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 461,
														"src": "4191:24:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$__$returns$_t_struct$_InitializableStorage_$205_storage_ptr_$",
															"typeString": "function () pure returns (struct Initializable.InitializableStorage storage pointer)"
														}
													},
													"id": 226,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4191:26:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_InitializableStorage_$205_storage_ptr",
														"typeString": "struct Initializable.InitializableStorage storage pointer"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4158:59:1"
											},
											{
												"assignments": [
													229
												],
												"declarations": [
													{
														"constant": false,
														"id": 229,
														"mutability": "mutable",
														"name": "isTopLevelCall",
														"nameLocation": "4284:14:1",
														"nodeType": "VariableDeclaration",
														"scope": 301,
														"src": "4279:19:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 228,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "4279:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 233,
												"initialValue": {
													"id": 232,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "4301:16:1",
													"subExpression": {
														"expression": {
															"id": 230,
															"name": "$",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 224,
															"src": "4302:1:1",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_InitializableStorage_$205_storage_ptr",
																"typeString": "struct Initializable.InitializableStorage storage pointer"
															}
														},
														"id": 231,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "4304:13:1",
														"memberName": "_initializing",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 204,
														"src": "4302:15:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4279:38:1"
											},
											{
												"assignments": [
													235
												],
												"declarations": [
													{
														"constant": false,
														"id": 235,
														"mutability": "mutable",
														"name": "initialized",
														"nameLocation": "4334:11:1",
														"nodeType": "VariableDeclaration",
														"scope": 301,
														"src": "4327:18:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint64",
															"typeString": "uint64"
														},
														"typeName": {
															"id": 234,
															"name": "uint64",
															"nodeType": "ElementaryTypeName",
															"src": "4327:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint64",
																"typeString": "uint64"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 238,
												"initialValue": {
													"expression": {
														"id": 236,
														"name": "$",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 224,
														"src": "4348:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_InitializableStorage_$205_storage_ptr",
															"typeString": "struct Initializable.InitializableStorage storage pointer"
														}
													},
													"id": 237,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "4350:12:1",
													"memberName": "_initialized",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 201,
													"src": "4348:14:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4327:35:1"
											},
											{
												"assignments": [
													240
												],
												"declarations": [
													{
														"constant": false,
														"id": 240,
														"mutability": "mutable",
														"name": "initialSetup",
														"nameLocation": "4709:12:1",
														"nodeType": "VariableDeclaration",
														"scope": 301,
														"src": "4704:17:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 239,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "4704:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 246,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 245,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint64",
															"typeString": "uint64"
														},
														"id": 243,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 241,
															"name": "initialized",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 235,
															"src": "4724:11:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint64",
																"typeString": "uint64"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"hexValue": "30",
															"id": 242,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4739:1:1",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "4724:16:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"id": 244,
														"name": "isTopLevelCall",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 229,
														"src": "4744:14:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "4724:34:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4704:54:1"
											},
											{
												"assignments": [
													248
												],
												"declarations": [
													{
														"constant": false,
														"id": 248,
														"mutability": "mutable",
														"name": "construction",
														"nameLocation": "4773:12:1",
														"nodeType": "VariableDeclaration",
														"scope": 301,
														"src": "4768:17:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 247,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "4768:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 261,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 260,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint64",
															"typeString": "uint64"
														},
														"id": 251,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 249,
															"name": "initialized",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 235,
															"src": "4788:11:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint64",
																"typeString": "uint64"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"hexValue": "31",
															"id": 250,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4803:1:1",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														},
														"src": "4788:16:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 259,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"expression": {
																"expression": {
																	"arguments": [
																		{
																			"id": 254,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967268,
																			"src": "4816:4:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_Initializable_$462",
																				"typeString": "contract Initializable"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_Initializable_$462",
																				"typeString": "contract Initializable"
																			}
																		],
																		"id": 253,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "4808:7:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 252,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "4808:7:1",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 255,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "4808:13:1",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"id": 256,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "4822:4:1",
																"memberName": "code",
																"nodeType": "MemberAccess",
																"src": "4808:18:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"id": 257,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "4827:6:1",
															"memberName": "length",
															"nodeType": "MemberAccess",
															"src": "4808:25:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"hexValue": "30",
															"id": 258,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4837:1:1",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "4808:30:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "4788:50:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4768:70:1"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 266,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 263,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "!",
														"prefix": true,
														"src": "4853:13:1",
														"subExpression": {
															"id": 262,
															"name": "initialSetup",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 240,
															"src": "4854:12:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"id": 265,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "!",
														"prefix": true,
														"src": "4870:13:1",
														"subExpression": {
															"id": 264,
															"name": "construction",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 248,
															"src": "4871:12:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "4853:30:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 271,
												"nodeType": "IfStatement",
												"src": "4849:91:1",
												"trueBody": {
													"id": 270,
													"nodeType": "Block",
													"src": "4885:55:1",
													"statements": [
														{
															"errorCall": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 267,
																	"name": "InvalidInitialization",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 211,
																	"src": "4906:21:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
																		"typeString": "function () pure returns (error)"
																	}
																},
																"id": 268,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4906:23:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 269,
															"nodeType": "RevertStatement",
															"src": "4899:30:1"
														}
													]
												}
											},
											{
												"expression": {
													"id": 276,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 272,
															"name": "$",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 224,
															"src": "4949:1:1",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_InitializableStorage_$205_storage_ptr",
																"typeString": "struct Initializable.InitializableStorage storage pointer"
															}
														},
														"id": 274,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "4951:12:1",
														"memberName": "_initialized",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 201,
														"src": "4949:14:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint64",
															"typeString": "uint64"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "31",
														"id": 275,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "4966:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"src": "4949:18:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													}
												},
												"id": 277,
												"nodeType": "ExpressionStatement",
												"src": "4949:18:1"
											},
											{
												"condition": {
													"id": 278,
													"name": "isTopLevelCall",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 229,
													"src": "4981:14:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 286,
												"nodeType": "IfStatement",
												"src": "4977:67:1",
												"trueBody": {
													"id": 285,
													"nodeType": "Block",
													"src": "4997:47:1",
													"statements": [
														{
															"expression": {
																"id": 283,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"expression": {
																		"id": 279,
																		"name": "$",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 224,
																		"src": "5011:1:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_InitializableStorage_$205_storage_ptr",
																			"typeString": "struct Initializable.InitializableStorage storage pointer"
																		}
																	},
																	"id": 281,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"memberLocation": "5013:13:1",
																	"memberName": "_initializing",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 204,
																	"src": "5011:15:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"hexValue": "74727565",
																	"id": 282,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "5029:4:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																"src": "5011:22:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 284,
															"nodeType": "ExpressionStatement",
															"src": "5011:22:1"
														}
													]
												}
											},
											{
												"id": 287,
												"nodeType": "PlaceholderStatement",
												"src": "5053:1:1"
											},
											{
												"condition": {
													"id": 288,
													"name": "isTopLevelCall",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 229,
													"src": "5068:14:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 300,
												"nodeType": "IfStatement",
												"src": "5064:101:1",
												"trueBody": {
													"id": 299,
													"nodeType": "Block",
													"src": "5084:81:1",
													"statements": [
														{
															"expression": {
																"id": 293,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"expression": {
																		"id": 289,
																		"name": "$",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 224,
																		"src": "5098:1:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_InitializableStorage_$205_storage_ptr",
																			"typeString": "struct Initializable.InitializableStorage storage pointer"
																		}
																	},
																	"id": 291,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"memberLocation": "5100:13:1",
																	"memberName": "_initializing",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 204,
																	"src": "5098:15:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"hexValue": "66616c7365",
																	"id": 292,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "5116:5:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "false"
																},
																"src": "5098:23:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 294,
															"nodeType": "ExpressionStatement",
															"src": "5098:23:1"
														},
														{
															"eventCall": {
																"arguments": [
																	{
																		"hexValue": "31",
																		"id": 296,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "5152:1:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_1_by_1",
																			"typeString": "int_const 1"
																		},
																		"value": "1"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_1_by_1",
																			"typeString": "int_const 1"
																		}
																	],
																	"id": 295,
																	"name": "Initialized",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 219,
																	"src": "5140:11:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_event_nonpayable$_t_uint64_$returns$__$",
																		"typeString": "function (uint64)"
																	}
																},
																"id": 297,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5140:14:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 298,
															"nodeType": "EmitStatement",
															"src": "5135:19:1"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 220,
										"nodeType": "StructuredDocumentation",
										"src": "3548:516:1",
										"text": " @dev A modifier that defines a protected initializer function that can be invoked at most once. In its scope,\n `onlyInitializing` functions can be used to initialize parent contracts.\n Similar to `reinitializer(1)`, except that in the context of a constructor an `initializer` may be invoked any\n number of times. This behavior in the constructor can be useful during testing and is not expected to be used in\n production.\n Emits an {Initialized} event."
									},
									"id": 302,
									"name": "initializer",
									"nameLocation": "4078:11:1",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 221,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4089:2:1"
									},
									"src": "4069:1102:1",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 348,
										"nodeType": "Block",
										"src": "6289:392:1",
										"statements": [
											{
												"assignments": [
													309
												],
												"declarations": [
													{
														"constant": false,
														"id": 309,
														"mutability": "mutable",
														"name": "$",
														"nameLocation": "6384:1:1",
														"nodeType": "VariableDeclaration",
														"scope": 348,
														"src": "6355:30:1",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_InitializableStorage_$205_storage_ptr",
															"typeString": "struct Initializable.InitializableStorage"
														},
														"typeName": {
															"id": 308,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 307,
																"name": "InitializableStorage",
																"nameLocations": [
																	"6355:20:1"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 205,
																"src": "6355:20:1"
															},
															"referencedDeclaration": 205,
															"src": "6355:20:1",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_InitializableStorage_$205_storage_ptr",
																"typeString": "struct Initializable.InitializableStorage"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 312,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 310,
														"name": "_getInitializableStorage",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 461,
														"src": "6388:24:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$__$returns$_t_struct$_InitializableStorage_$205_storage_ptr_$",
															"typeString": "function () pure returns (struct Initializable.InitializableStorage storage pointer)"
														}
													},
													"id": 311,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6388:26:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_InitializableStorage_$205_storage_ptr",
														"typeString": "struct Initializable.InitializableStorage storage pointer"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6355:59:1"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 319,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 313,
															"name": "$",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 309,
															"src": "6429:1:1",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_InitializableStorage_$205_storage_ptr",
																"typeString": "struct Initializable.InitializableStorage storage pointer"
															}
														},
														"id": 314,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "6431:13:1",
														"memberName": "_initializing",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 204,
														"src": "6429:15:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "||",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_uint64",
															"typeString": "uint64"
														},
														"id": 318,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"expression": {
																"id": 315,
																"name": "$",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 309,
																"src": "6448:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_InitializableStorage_$205_storage_ptr",
																	"typeString": "struct Initializable.InitializableStorage storage pointer"
																}
															},
															"id": 316,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "6450:12:1",
															"memberName": "_initialized",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 201,
															"src": "6448:14:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint64",
																"typeString": "uint64"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">=",
														"rightExpression": {
															"id": 317,
															"name": "version",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 305,
															"src": "6466:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint64",
																"typeString": "uint64"
															}
														},
														"src": "6448:25:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "6429:44:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 324,
												"nodeType": "IfStatement",
												"src": "6425:105:1",
												"trueBody": {
													"id": 323,
													"nodeType": "Block",
													"src": "6475:55:1",
													"statements": [
														{
															"errorCall": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 320,
																	"name": "InvalidInitialization",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 211,
																	"src": "6496:21:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
																		"typeString": "function () pure returns (error)"
																	}
																},
																"id": 321,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "6496:23:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 322,
															"nodeType": "RevertStatement",
															"src": "6489:30:1"
														}
													]
												}
											},
											{
												"expression": {
													"id": 329,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 325,
															"name": "$",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 309,
															"src": "6539:1:1",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_InitializableStorage_$205_storage_ptr",
																"typeString": "struct Initializable.InitializableStorage storage pointer"
															}
														},
														"id": 327,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "6541:12:1",
														"memberName": "_initialized",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 201,
														"src": "6539:14:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint64",
															"typeString": "uint64"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 328,
														"name": "version",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 305,
														"src": "6556:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint64",
															"typeString": "uint64"
														}
													},
													"src": "6539:24:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													}
												},
												"id": 330,
												"nodeType": "ExpressionStatement",
												"src": "6539:24:1"
											},
											{
												"expression": {
													"id": 335,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 331,
															"name": "$",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 309,
															"src": "6573:1:1",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_InitializableStorage_$205_storage_ptr",
																"typeString": "struct Initializable.InitializableStorage storage pointer"
															}
														},
														"id": 333,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "6575:13:1",
														"memberName": "_initializing",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 204,
														"src": "6573:15:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "74727565",
														"id": 334,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "6591:4:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "true"
													},
													"src": "6573:22:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 336,
												"nodeType": "ExpressionStatement",
												"src": "6573:22:1"
											},
											{
												"id": 337,
												"nodeType": "PlaceholderStatement",
												"src": "6605:1:1"
											},
											{
												"expression": {
													"id": 342,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 338,
															"name": "$",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 309,
															"src": "6616:1:1",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_InitializableStorage_$205_storage_ptr",
																"typeString": "struct Initializable.InitializableStorage storage pointer"
															}
														},
														"id": 340,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "6618:13:1",
														"memberName": "_initializing",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 204,
														"src": "6616:15:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "66616c7365",
														"id": 341,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "6634:5:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "false"
													},
													"src": "6616:23:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 343,
												"nodeType": "ExpressionStatement",
												"src": "6616:23:1"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 345,
															"name": "version",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 305,
															"src": "6666:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint64",
																"typeString": "uint64"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint64",
																"typeString": "uint64"
															}
														],
														"id": 344,
														"name": "Initialized",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 219,
														"src": "6654:11:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_uint64_$returns$__$",
															"typeString": "function (uint64)"
														}
													},
													"id": 346,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6654:20:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 347,
												"nodeType": "EmitStatement",
												"src": "6649:25:1"
											}
										]
									},
									"documentation": {
										"id": 303,
										"nodeType": "StructuredDocumentation",
										"src": "5177:1068:1",
										"text": " @dev A modifier that defines a protected reinitializer function that can be invoked at most once, and only if the\n contract hasn't been initialized to a greater version before. In its scope, `onlyInitializing` functions can be\n used to initialize parent contracts.\n A reinitializer may be used after the original initialization step. This is essential to configure modules that\n are added through upgrades and that require initialization.\n When `version` is 1, this modifier is similar to `initializer`, except that functions marked with `reinitializer`\n cannot be nested. If one is invoked in the context of another, execution will revert.\n Note that versions can jump in increments greater than 1; this implies that if multiple reinitializers coexist in\n a contract, executing them in the right order is up to the developer or operator.\n WARNING: Setting the version to 2**64 - 1 will prevent any future reinitialization.\n Emits an {Initialized} event."
									},
									"id": 349,
									"name": "reinitializer",
									"nameLocation": "6259:13:1",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 306,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 305,
												"mutability": "mutable",
												"name": "version",
												"nameLocation": "6280:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 349,
												"src": "6273:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint64",
													"typeString": "uint64"
												},
												"typeName": {
													"id": 304,
													"name": "uint64",
													"nodeType": "ElementaryTypeName",
													"src": "6273:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6272:16:1"
									},
									"src": "6250:431:1",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 356,
										"nodeType": "Block",
										"src": "6919:48:1",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 352,
														"name": "_checkInitializing",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 370,
														"src": "6929:18:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$__$",
															"typeString": "function () view"
														}
													},
													"id": 353,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6929:20:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 354,
												"nodeType": "ExpressionStatement",
												"src": "6929:20:1"
											},
											{
												"id": 355,
												"nodeType": "PlaceholderStatement",
												"src": "6959:1:1"
											}
										]
									},
									"documentation": {
										"id": 350,
										"nodeType": "StructuredDocumentation",
										"src": "6687:199:1",
										"text": " @dev Modifier to protect an initialization function so that it can only be invoked by functions with the\n {initializer} and {reinitializer} modifiers, directly or indirectly."
									},
									"id": 357,
									"name": "onlyInitializing",
									"nameLocation": "6900:16:1",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 351,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6916:2:1"
									},
									"src": "6891:76:1",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 369,
										"nodeType": "Block",
										"src": "7134:89:1",
										"statements": [
											{
												"condition": {
													"id": 363,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "7148:18:1",
													"subExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 361,
															"name": "_isInitializing",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 438,
															"src": "7149:15:1",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_bool_$",
																"typeString": "function () view returns (bool)"
															}
														},
														"id": 362,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "7149:17:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 368,
												"nodeType": "IfStatement",
												"src": "7144:73:1",
												"trueBody": {
													"id": 367,
													"nodeType": "Block",
													"src": "7168:49:1",
													"statements": [
														{
															"errorCall": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 364,
																	"name": "NotInitializing",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 214,
																	"src": "7189:15:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
																		"typeString": "function () pure returns (error)"
																	}
																},
																"id": 365,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "7189:17:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 366,
															"nodeType": "RevertStatement",
															"src": "7182:24:1"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 358,
										"nodeType": "StructuredDocumentation",
										"src": "6973:104:1",
										"text": " @dev Reverts if the contract is not in an initializing state. See {onlyInitializing}."
									},
									"id": 370,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_checkInitializing",
									"nameLocation": "7091:18:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 359,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7109:2:1"
									},
									"returnParameters": {
										"id": 360,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7134:0:1"
									},
									"scope": 462,
									"src": "7082:141:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 415,
										"nodeType": "Block",
										"src": "7758:373:1",
										"statements": [
											{
												"assignments": [
													376
												],
												"declarations": [
													{
														"constant": false,
														"id": 376,
														"mutability": "mutable",
														"name": "$",
														"nameLocation": "7853:1:1",
														"nodeType": "VariableDeclaration",
														"scope": 415,
														"src": "7824:30:1",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_InitializableStorage_$205_storage_ptr",
															"typeString": "struct Initializable.InitializableStorage"
														},
														"typeName": {
															"id": 375,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 374,
																"name": "InitializableStorage",
																"nameLocations": [
																	"7824:20:1"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 205,
																"src": "7824:20:1"
															},
															"referencedDeclaration": 205,
															"src": "7824:20:1",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_InitializableStorage_$205_storage_ptr",
																"typeString": "struct Initializable.InitializableStorage"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 379,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 377,
														"name": "_getInitializableStorage",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 461,
														"src": "7857:24:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$__$returns$_t_struct$_InitializableStorage_$205_storage_ptr_$",
															"typeString": "function () pure returns (struct Initializable.InitializableStorage storage pointer)"
														}
													},
													"id": 378,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7857:26:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_InitializableStorage_$205_storage_ptr",
														"typeString": "struct Initializable.InitializableStorage storage pointer"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "7824:59:1"
											},
											{
												"condition": {
													"expression": {
														"id": 380,
														"name": "$",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 376,
														"src": "7898:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_InitializableStorage_$205_storage_ptr",
															"typeString": "struct Initializable.InitializableStorage storage pointer"
														}
													},
													"id": 381,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "7900:13:1",
													"memberName": "_initializing",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 204,
													"src": "7898:15:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 386,
												"nodeType": "IfStatement",
												"src": "7894:76:1",
												"trueBody": {
													"id": 385,
													"nodeType": "Block",
													"src": "7915:55:1",
													"statements": [
														{
															"errorCall": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 382,
																	"name": "InvalidInitialization",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 211,
																	"src": "7936:21:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
																		"typeString": "function () pure returns (error)"
																	}
																},
																"id": 383,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "7936:23:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 384,
															"nodeType": "RevertStatement",
															"src": "7929:30:1"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													},
													"id": 394,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 387,
															"name": "$",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 376,
															"src": "7983:1:1",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_InitializableStorage_$205_storage_ptr",
																"typeString": "struct Initializable.InitializableStorage storage pointer"
															}
														},
														"id": 388,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "7985:12:1",
														"memberName": "_initialized",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 201,
														"src": "7983:14:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint64",
															"typeString": "uint64"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 391,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "8006:6:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint64_$",
																		"typeString": "type(uint64)"
																	},
																	"typeName": {
																		"id": 390,
																		"name": "uint64",
																		"nodeType": "ElementaryTypeName",
																		"src": "8006:6:1",
																		"typeDescriptions": {}
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_type$_t_uint64_$",
																		"typeString": "type(uint64)"
																	}
																],
																"id": 389,
																"name": "type",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967269,
																"src": "8001:4:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 392,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "8001:12:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_magic_meta_type_t_uint64",
																"typeString": "type(uint64)"
															}
														},
														"id": 393,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "8014:3:1",
														"memberName": "max",
														"nodeType": "MemberAccess",
														"src": "8001:16:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint64",
															"typeString": "uint64"
														}
													},
													"src": "7983:34:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 414,
												"nodeType": "IfStatement",
												"src": "7979:146:1",
												"trueBody": {
													"id": 413,
													"nodeType": "Block",
													"src": "8019:106:1",
													"statements": [
														{
															"expression": {
																"id": 403,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"expression": {
																		"id": 395,
																		"name": "$",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 376,
																		"src": "8033:1:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_InitializableStorage_$205_storage_ptr",
																			"typeString": "struct Initializable.InitializableStorage storage pointer"
																		}
																	},
																	"id": 397,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"memberLocation": "8035:12:1",
																	"memberName": "_initialized",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 201,
																	"src": "8033:14:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint64",
																		"typeString": "uint64"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"expression": {
																		"arguments": [
																			{
																				"id": 400,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "ElementaryTypeNameExpression",
																				"src": "8055:6:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_uint64_$",
																					"typeString": "type(uint64)"
																				},
																				"typeName": {
																					"id": 399,
																					"name": "uint64",
																					"nodeType": "ElementaryTypeName",
																					"src": "8055:6:1",
																					"typeDescriptions": {}
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_type$_t_uint64_$",
																					"typeString": "type(uint64)"
																				}
																			],
																			"id": 398,
																			"name": "type",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967269,
																			"src": "8050:4:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																				"typeString": "function () pure"
																			}
																		},
																		"id": 401,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "8050:12:1",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_meta_type_t_uint64",
																			"typeString": "type(uint64)"
																		}
																	},
																	"id": 402,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"memberLocation": "8063:3:1",
																	"memberName": "max",
																	"nodeType": "MemberAccess",
																	"src": "8050:16:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint64",
																		"typeString": "uint64"
																	}
																},
																"src": "8033:33:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint64",
																	"typeString": "uint64"
																}
															},
															"id": 404,
															"nodeType": "ExpressionStatement",
															"src": "8033:33:1"
														},
														{
															"eventCall": {
																"arguments": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"id": 408,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"lValueRequested": false,
																					"nodeType": "ElementaryTypeNameExpression",
																					"src": "8102:6:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_type$_t_uint64_$",
																						"typeString": "type(uint64)"
																					},
																					"typeName": {
																						"id": 407,
																						"name": "uint64",
																						"nodeType": "ElementaryTypeName",
																						"src": "8102:6:1",
																						"typeDescriptions": {}
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_type$_t_uint64_$",
																						"typeString": "type(uint64)"
																					}
																				],
																				"id": 406,
																				"name": "type",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967269,
																				"src": "8097:4:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																					"typeString": "function () pure"
																				}
																			},
																			"id": 409,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "8097:12:1",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_meta_type_t_uint64",
																				"typeString": "type(uint64)"
																			}
																		},
																		"id": 410,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"memberLocation": "8110:3:1",
																		"memberName": "max",
																		"nodeType": "MemberAccess",
																		"src": "8097:16:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint64",
																			"typeString": "uint64"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint64",
																			"typeString": "uint64"
																		}
																	],
																	"id": 405,
																	"name": "Initialized",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 219,
																	"src": "8085:11:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_event_nonpayable$_t_uint64_$returns$__$",
																		"typeString": "function (uint64)"
																	}
																},
																"id": 411,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "8085:29:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 412,
															"nodeType": "EmitStatement",
															"src": "8080:34:1"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 371,
										"nodeType": "StructuredDocumentation",
										"src": "7229:475:1",
										"text": " @dev Locks the contract, preventing any future reinitialization. This cannot be part of an initializer call.\n Calling this in the constructor of a contract will prevent that contract from being initialized or reinitialized\n to any version. It is recommended to use this to lock implementation contracts that are designed to be called\n through proxies.\n Emits an {Initialized} event the first time it is successfully executed."
									},
									"id": 416,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_disableInitializers",
									"nameLocation": "7718:20:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 372,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7738:2:1"
									},
									"returnParameters": {
										"id": 373,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7758:0:1"
									},
									"scope": 462,
									"src": "7709:422:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 426,
										"nodeType": "Block",
										"src": "8306:63:1",
										"statements": [
											{
												"expression": {
													"expression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 422,
															"name": "_getInitializableStorage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 461,
															"src": "8323:24:1",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$__$returns$_t_struct$_InitializableStorage_$205_storage_ptr_$",
																"typeString": "function () pure returns (struct Initializable.InitializableStorage storage pointer)"
															}
														},
														"id": 423,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "8323:26:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_InitializableStorage_$205_storage_ptr",
															"typeString": "struct Initializable.InitializableStorage storage pointer"
														}
													},
													"id": 424,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "8350:12:1",
													"memberName": "_initialized",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 201,
													"src": "8323:39:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													}
												},
												"functionReturnParameters": 421,
												"id": 425,
												"nodeType": "Return",
												"src": "8316:46:1"
											}
										]
									},
									"documentation": {
										"id": 417,
										"nodeType": "StructuredDocumentation",
										"src": "8137:99:1",
										"text": " @dev Returns the highest version that has been initialized. See {reinitializer}."
									},
									"id": 427,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_getInitializedVersion",
									"nameLocation": "8250:22:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 418,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8272:2:1"
									},
									"returnParameters": {
										"id": 421,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 420,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 427,
												"src": "8298:6:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint64",
													"typeString": "uint64"
												},
												"typeName": {
													"id": 419,
													"name": "uint64",
													"nodeType": "ElementaryTypeName",
													"src": "8298:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8297:8:1"
									},
									"scope": 462,
									"src": "8241:128:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 437,
										"nodeType": "Block",
										"src": "8541:64:1",
										"statements": [
											{
												"expression": {
													"expression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 433,
															"name": "_getInitializableStorage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 461,
															"src": "8558:24:1",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$__$returns$_t_struct$_InitializableStorage_$205_storage_ptr_$",
																"typeString": "function () pure returns (struct Initializable.InitializableStorage storage pointer)"
															}
														},
														"id": 434,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "8558:26:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_InitializableStorage_$205_storage_ptr",
															"typeString": "struct Initializable.InitializableStorage storage pointer"
														}
													},
													"id": 435,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "8585:13:1",
													"memberName": "_initializing",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 204,
													"src": "8558:40:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 432,
												"id": 436,
												"nodeType": "Return",
												"src": "8551:47:1"
											}
										]
									},
									"documentation": {
										"id": 428,
										"nodeType": "StructuredDocumentation",
										"src": "8375:105:1",
										"text": " @dev Returns `true` if the contract is currently initializing. See {onlyInitializing}."
									},
									"id": 438,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_isInitializing",
									"nameLocation": "8494:15:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 429,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8509:2:1"
									},
									"returnParameters": {
										"id": 432,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 431,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 438,
												"src": "8535:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 430,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "8535:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8534:6:1"
									},
									"scope": 462,
									"src": "8485:120:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 446,
										"nodeType": "Block",
										"src": "8896:45:1",
										"statements": [
											{
												"expression": {
													"id": 444,
													"name": "INITIALIZABLE_STORAGE",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 208,
													"src": "8913:21:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"functionReturnParameters": 443,
												"id": 445,
												"nodeType": "Return",
												"src": "8906:28:1"
											}
										]
									},
									"documentation": {
										"id": 439,
										"nodeType": "StructuredDocumentation",
										"src": "8611:203:1",
										"text": " @dev Pointer to storage slot. Allows integrators to override it with a custom storage location.\n NOTE: Consider following the ERC-7201 formula to derive storage locations."
									},
									"id": 447,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_initializableStorageSlot",
									"nameLocation": "8828:25:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 440,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8853:2:1"
									},
									"returnParameters": {
										"id": 443,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 442,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 447,
												"src": "8887:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 441,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "8887:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8886:9:1"
									},
									"scope": 462,
									"src": "8819:122:1",
									"stateMutability": "pure",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 460,
										"nodeType": "Block",
										"src": "9161:115:1",
										"statements": [
											{
												"assignments": [
													455
												],
												"declarations": [
													{
														"constant": false,
														"id": 455,
														"mutability": "mutable",
														"name": "slot",
														"nameLocation": "9179:4:1",
														"nodeType": "VariableDeclaration",
														"scope": 460,
														"src": "9171:12:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														},
														"typeName": {
															"id": 454,
															"name": "bytes32",
															"nodeType": "ElementaryTypeName",
															"src": "9171:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 458,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 456,
														"name": "_initializableStorageSlot",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 447,
														"src": "9186:25:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$__$returns$_t_bytes32_$",
															"typeString": "function () pure returns (bytes32)"
														}
													},
													"id": 457,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9186:27:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "9171:42:1"
											},
											{
												"AST": {
													"nativeSrc": "9232:38:1",
													"nodeType": "YulBlock",
													"src": "9232:38:1",
													"statements": [
														{
															"nativeSrc": "9246:14:1",
															"nodeType": "YulAssignment",
															"src": "9246:14:1",
															"value": {
																"name": "slot",
																"nativeSrc": "9256:4:1",
																"nodeType": "YulIdentifier",
																"src": "9256:4:1"
															},
															"variableNames": [
																{
																	"name": "$.slot",
																	"nativeSrc": "9246:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "9246:6:1"
																}
															]
														}
													]
												},
												"evmVersion": "prague",
												"externalReferences": [
													{
														"declaration": 452,
														"isOffset": false,
														"isSlot": true,
														"src": "9246:6:1",
														"suffix": "slot",
														"valueSize": 1
													},
													{
														"declaration": 455,
														"isOffset": false,
														"isSlot": false,
														"src": "9256:4:1",
														"valueSize": 1
													}
												],
												"id": 459,
												"nodeType": "InlineAssembly",
												"src": "9223:47:1"
											}
										]
									},
									"documentation": {
										"id": 448,
										"nodeType": "StructuredDocumentation",
										"src": "8947:67:1",
										"text": " @dev Returns a pointer to the storage namespace."
									},
									"id": 461,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_getInitializableStorage",
									"nameLocation": "9080:24:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 449,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "9104:2:1"
									},
									"returnParameters": {
										"id": 453,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 452,
												"mutability": "mutable",
												"name": "$",
												"nameLocation": "9158:1:1",
												"nodeType": "VariableDeclaration",
												"scope": 461,
												"src": "9129:30:1",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_InitializableStorage_$205_storage_ptr",
													"typeString": "struct Initializable.InitializableStorage"
												},
												"typeName": {
													"id": 451,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 450,
														"name": "InitializableStorage",
														"nameLocations": [
															"9129:20:1"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 205,
														"src": "9129:20:1"
													},
													"referencedDeclaration": 205,
													"src": "9129:20:1",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_InitializableStorage_$205_storage_ptr",
														"typeString": "struct Initializable.InitializableStorage"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9128:32:1"
									},
									"scope": 462,
									"src": "9071:205:1",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "private"
								}
							],
							"scope": 463,
							"src": "2349:6929:1",
							"usedErrors": [
								211,
								214
							],
							"usedEvents": [
								219
							]
						}
					],
					"src": "113:9166:1"
				},
				"id": 1
			},
			"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol",
					"exportedSymbols": {
						"ERC1967Utils": [
							1015
						],
						"IERC1822Proxiable": [
							721
						],
						"Initializable": [
							462
						],
						"UUPSUpgradeable": [
							644
						]
					},
					"id": 645,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 464,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".22"
							],
							"nodeType": "PragmaDirective",
							"src": "115:24:2"
						},
						{
							"absolutePath": "@openzeppelin/contracts/interfaces/draft-IERC1822.sol",
							"file": "@openzeppelin/contracts/interfaces/draft-IERC1822.sol",
							"id": 466,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 645,
							"sourceUnit": 722,
							"src": "141:88:2",
							"symbolAliases": [
								{
									"foreign": {
										"id": 465,
										"name": "IERC1822Proxiable",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 721,
										"src": "149:17:2",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol",
							"file": "@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol",
							"id": 468,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 645,
							"sourceUnit": 1016,
							"src": "230:84:2",
							"symbolAliases": [
								{
									"foreign": {
										"id": 467,
										"name": "ERC1967Utils",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1015,
										"src": "238:12:2",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol",
							"file": "./Initializable.sol",
							"id": 470,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 645,
							"sourceUnit": 463,
							"src": "315:50:2",
							"symbolAliases": [
								{
									"foreign": {
										"id": 469,
										"name": "Initializable",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 462,
										"src": "323:13:2",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 472,
										"name": "Initializable",
										"nameLocations": [
											"1023:13:2"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 462,
										"src": "1023:13:2"
									},
									"id": 473,
									"nodeType": "InheritanceSpecifier",
									"src": "1023:13:2"
								},
								{
									"baseName": {
										"id": 474,
										"name": "IERC1822Proxiable",
										"nameLocations": [
											"1038:17:2"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 721,
										"src": "1038:17:2"
									},
									"id": 475,
									"nodeType": "InheritanceSpecifier",
									"src": "1038:17:2"
								}
							],
							"canonicalName": "UUPSUpgradeable",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 471,
								"nodeType": "StructuredDocumentation",
								"src": "367:618:2",
								"text": " @dev An upgradeability mechanism designed for UUPS proxies. The functions included here can perform an upgrade of an\n {ERC1967Proxy}, when this contract is set as the implementation behind such a proxy.\n A security mechanism ensures that an upgrade does not turn off upgradeability accidentally, although this risk is\n reinstated if the upgrade retains upgradeability but removes the security mechanism, e.g. by replacing\n `UUPSUpgradeable` with a custom implementation of upgrades.\n The {_authorizeUpgrade} function must be overridden to include access restriction to the upgrade mechanism."
							},
							"fullyImplemented": false,
							"id": 644,
							"linearizedBaseContracts": [
								644,
								721,
								462
							],
							"name": "UUPSUpgradeable",
							"nameLocation": "1004:15:2",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"documentation": {
										"id": 476,
										"nodeType": "StructuredDocumentation",
										"src": "1062:61:2",
										"text": "@custom:oz-upgrades-unsafe-allow state-variable-immutable"
									},
									"id": 482,
									"mutability": "immutable",
									"name": "__self",
									"nameLocation": "1154:6:2",
									"nodeType": "VariableDeclaration",
									"scope": 644,
									"src": "1128:48:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 477,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "1128:7:2",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"value": {
										"arguments": [
											{
												"id": 480,
												"name": "this",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 4294967268,
												"src": "1171:4:2",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_UUPSUpgradeable_$644",
													"typeString": "contract UUPSUpgradeable"
												}
											}
										],
										"expression": {
											"argumentTypes": [
												{
													"typeIdentifier": "t_contract$_UUPSUpgradeable_$644",
													"typeString": "contract UUPSUpgradeable"
												}
											],
											"id": 479,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"lValueRequested": false,
											"nodeType": "ElementaryTypeNameExpression",
											"src": "1163:7:2",
											"typeDescriptions": {
												"typeIdentifier": "t_type$_t_address_$",
												"typeString": "type(address)"
											},
											"typeName": {
												"id": 478,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "1163:7:2",
												"typeDescriptions": {}
											}
										},
										"id": 481,
										"isConstant": false,
										"isLValue": false,
										"isPure": false,
										"kind": "typeConversion",
										"lValueRequested": false,
										"nameLocations": [],
										"names": [],
										"nodeType": "FunctionCall",
										"src": "1163:13:2",
										"tryCall": false,
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "private"
								},
								{
									"constant": true,
									"documentation": {
										"id": 483,
										"nodeType": "StructuredDocumentation",
										"src": "1183:631:2",
										"text": " @dev The version of the upgrade interface of the contract. If this getter is missing, both `upgradeTo(address)`\n and `upgradeToAndCall(address,bytes)` are present, and `upgradeTo` must be used if no function should be called,\n while `upgradeToAndCall` will invoke the `receive` function if the second argument is the empty byte string.\n If the getter returns `\"5.0.0\"`, only `upgradeToAndCall(address,bytes)` is present, and the second argument must\n be the empty byte string if no function should be called, making it impossible to invoke the `receive` function\n during an upgrade."
									},
									"functionSelector": "ad3cb1cc",
									"id": 486,
									"mutability": "constant",
									"name": "UPGRADE_INTERFACE_VERSION",
									"nameLocation": "1842:25:2",
									"nodeType": "VariableDeclaration",
									"scope": 644,
									"src": "1819:58:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_memory_ptr",
										"typeString": "string"
									},
									"typeName": {
										"id": 484,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "1819:6:2",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"value": {
										"hexValue": "352e302e30",
										"id": 485,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "string",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1870:7:2",
										"typeDescriptions": {
											"typeIdentifier": "t_stringliteral_2ade050ecfcf8ae20ae1d10a23573f9d7e0bad85e74a2cf8338a65401e64558c",
											"typeString": "literal_string \"5.0.0\""
										},
										"value": "5.0.0"
									},
									"visibility": "public"
								},
								{
									"documentation": {
										"id": 487,
										"nodeType": "StructuredDocumentation",
										"src": "1884:65:2",
										"text": " @dev The call is from an unauthorized context."
									},
									"errorSelector": "e07c8dba",
									"id": 489,
									"name": "UUPSUnauthorizedCallContext",
									"nameLocation": "1960:27:2",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 488,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1987:2:2"
									},
									"src": "1954:36:2"
								},
								{
									"documentation": {
										"id": 490,
										"nodeType": "StructuredDocumentation",
										"src": "1996:68:2",
										"text": " @dev The storage `slot` is unsupported as a UUID."
									},
									"errorSelector": "aa1d49a4",
									"id": 494,
									"name": "UUPSUnsupportedProxiableUUID",
									"nameLocation": "2075:28:2",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 493,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 492,
												"mutability": "mutable",
												"name": "slot",
												"nameLocation": "2112:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 494,
												"src": "2104:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 491,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2104:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2103:14:2"
									},
									"src": "2069:49:2"
								},
								{
									"body": {
										"id": 501,
										"nodeType": "Block",
										"src": "2645:41:2",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 497,
														"name": "_checkProxy",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 576,
														"src": "2655:11:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$__$",
															"typeString": "function () view"
														}
													},
													"id": 498,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2655:13:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 499,
												"nodeType": "ExpressionStatement",
												"src": "2655:13:2"
											},
											{
												"id": 500,
												"nodeType": "PlaceholderStatement",
												"src": "2678:1:2"
											}
										]
									},
									"documentation": {
										"id": 495,
										"nodeType": "StructuredDocumentation",
										"src": "2124:495:2",
										"text": " @dev Check that the execution is being performed through a delegatecall call and that the execution context is\n a proxy contract with an implementation (as defined in ERC-1967) pointing to self. This should only be the case\n for UUPS and transparent proxies that are using the current contract as their implementation. Execution of a\n function through ERC-1167 minimal proxies (clones) would not normally pass this test, but is not guaranteed to\n fail."
									},
									"id": 502,
									"name": "onlyProxy",
									"nameLocation": "2633:9:2",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 496,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2642:2:2"
									},
									"src": "2624:62:2",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 509,
										"nodeType": "Block",
										"src": "2916:48:2",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 505,
														"name": "_checkNotDelegated",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 592,
														"src": "2926:18:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$__$",
															"typeString": "function () view"
														}
													},
													"id": 506,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2926:20:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 507,
												"nodeType": "ExpressionStatement",
												"src": "2926:20:2"
											},
											{
												"id": 508,
												"nodeType": "PlaceholderStatement",
												"src": "2956:1:2"
											}
										]
									},
									"documentation": {
										"id": 503,
										"nodeType": "StructuredDocumentation",
										"src": "2692:195:2",
										"text": " @dev Check that the execution is not being performed through a delegate call. This allows a function to be\n callable on the implementing contract but not through proxies."
									},
									"id": 510,
									"name": "notDelegated",
									"nameLocation": "2901:12:2",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 504,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2913:2:2"
									},
									"src": "2892:72:2",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 515,
										"nodeType": "Block",
										"src": "3030:7:2",
										"statements": []
									},
									"id": 516,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 513,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 512,
												"name": "onlyInitializing",
												"nameLocations": [
													"3013:16:2"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 357,
												"src": "3013:16:2"
											},
											"nodeType": "ModifierInvocation",
											"src": "3013:16:2"
										}
									],
									"name": "__UUPSUpgradeable_init",
									"nameLocation": "2979:22:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 511,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3001:2:2"
									},
									"returnParameters": {
										"id": 514,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3030:0:2"
									},
									"scope": 644,
									"src": "2970:67:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 521,
										"nodeType": "Block",
										"src": "3113:7:2",
										"statements": []
									},
									"id": 522,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 519,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 518,
												"name": "onlyInitializing",
												"nameLocations": [
													"3096:16:2"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 357,
												"src": "3096:16:2"
											},
											"nodeType": "ModifierInvocation",
											"src": "3096:16:2"
										}
									],
									"name": "__UUPSUpgradeable_init_unchained",
									"nameLocation": "3052:32:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 517,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3084:2:2"
									},
									"returnParameters": {
										"id": 520,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3113:0:2"
									},
									"scope": 644,
									"src": "3043:77:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"baseFunctions": [
										720
									],
									"body": {
										"id": 533,
										"nodeType": "Block",
										"src": "3786:56:2",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 530,
														"name": "ERC1967Utils",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1015,
														"src": "3803:12:2",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_contract$_ERC1967Utils_$1015_$",
															"typeString": "type(library ERC1967Utils)"
														}
													},
													"id": 531,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"lValueRequested": false,
													"memberLocation": "3816:19:2",
													"memberName": "IMPLEMENTATION_SLOT",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 736,
													"src": "3803:32:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"functionReturnParameters": 529,
												"id": 532,
												"nodeType": "Return",
												"src": "3796:39:2"
											}
										]
									},
									"documentation": {
										"id": 523,
										"nodeType": "StructuredDocumentation",
										"src": "3125:578:2",
										"text": " @dev Implementation of the ERC-1822 {proxiableUUID} function. This returns the storage slot used by the\n implementation. It is used to validate the implementation's compatibility when performing an upgrade.\n IMPORTANT: A proxy pointing at a proxiable contract should not be considered proxiable itself, because this risks\n bricking a proxy that upgrades to it, by delegating to itself until out of gas. Thus it is critical that this\n function revert if invoked through a proxy. This is guaranteed by the `notDelegated` modifier."
									},
									"functionSelector": "52d1902d",
									"id": 534,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 526,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 525,
												"name": "notDelegated",
												"nameLocations": [
													"3755:12:2"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 510,
												"src": "3755:12:2"
											},
											"nodeType": "ModifierInvocation",
											"src": "3755:12:2"
										}
									],
									"name": "proxiableUUID",
									"nameLocation": "3717:13:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 524,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3730:2:2"
									},
									"returnParameters": {
										"id": 529,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 528,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 534,
												"src": "3777:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 527,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "3777:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3776:9:2"
									},
									"scope": 644,
									"src": "3708:134:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "external"
								},
								{
									"body": {
										"id": 553,
										"nodeType": "Block",
										"src": "4266:109:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 545,
															"name": "newImplementation",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 537,
															"src": "4294:17:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 544,
														"name": "_authorizeUpgrade",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 598,
														"src": "4276:17:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 546,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4276:36:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 547,
												"nodeType": "ExpressionStatement",
												"src": "4276:36:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 549,
															"name": "newImplementation",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 537,
															"src": "4344:17:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 550,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 539,
															"src": "4363:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 548,
														"name": "_upgradeToAndCallUUPS",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 643,
														"src": "4322:21:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,bytes memory)"
														}
													},
													"id": 551,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4322:46:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 552,
												"nodeType": "ExpressionStatement",
												"src": "4322:46:2"
											}
										]
									},
									"documentation": {
										"id": 535,
										"nodeType": "StructuredDocumentation",
										"src": "3848:308:2",
										"text": " @dev Upgrade the implementation of the proxy to `newImplementation`, and subsequently execute the function call\n encoded in `data`.\n Calls {_authorizeUpgrade}.\n Emits an {Upgraded} event.\n @custom:oz-upgrades-unsafe-allow-reachable delegatecall"
									},
									"functionSelector": "4f1ef286",
									"id": 554,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 542,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 541,
												"name": "onlyProxy",
												"nameLocations": [
													"4256:9:2"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 502,
												"src": "4256:9:2"
											},
											"nodeType": "ModifierInvocation",
											"src": "4256:9:2"
										}
									],
									"name": "upgradeToAndCall",
									"nameLocation": "4170:16:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 540,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 537,
												"mutability": "mutable",
												"name": "newImplementation",
												"nameLocation": "4195:17:2",
												"nodeType": "VariableDeclaration",
												"scope": 554,
												"src": "4187:25:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 536,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4187:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 539,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "4227:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 554,
												"src": "4214:17:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 538,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4214:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4186:46:2"
									},
									"returnParameters": {
										"id": 543,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4266:0:2"
									},
									"scope": 644,
									"src": "4161:214:2",
									"stateMutability": "payable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 575,
										"nodeType": "Block",
										"src": "4623:267:2",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 569,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"id": 563,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"arguments": [
																{
																	"id": 560,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "4658:4:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_UUPSUpgradeable_$644",
																		"typeString": "contract UUPSUpgradeable"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_UUPSUpgradeable_$644",
																		"typeString": "contract UUPSUpgradeable"
																	}
																],
																"id": 559,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "4650:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 558,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "4650:7:2",
																	"typeDescriptions": {}
																}
															},
															"id": 561,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4650:13:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"id": 562,
															"name": "__self",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 482,
															"src": "4667:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"src": "4650:23:2",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "||",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"id": 568,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"expression": {
																	"id": 564,
																	"name": "ERC1967Utils",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1015,
																	"src": "4728:12:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_contract$_ERC1967Utils_$1015_$",
																		"typeString": "type(library ERC1967Utils)"
																	}
																},
																"id": 565,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "4741:17:2",
																"memberName": "getImplementation",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 767,
																"src": "4728:30:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 566,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4728:32:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "!=",
														"rightExpression": {
															"id": 567,
															"name": "__self",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 482,
															"src": "4764:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"src": "4728:42:2",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "4650:120:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 574,
												"nodeType": "IfStatement",
												"src": "4633:251:2",
												"trueBody": {
													"id": 573,
													"nodeType": "Block",
													"src": "4823:61:2",
													"statements": [
														{
															"errorCall": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 570,
																	"name": "UUPSUnauthorizedCallContext",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 489,
																	"src": "4844:27:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
																		"typeString": "function () pure returns (error)"
																	}
																},
																"id": 571,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4844:29:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 572,
															"nodeType": "RevertStatement",
															"src": "4837:36:2"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 555,
										"nodeType": "StructuredDocumentation",
										"src": "4381:192:2",
										"text": " @dev Reverts if the execution is not performed via delegatecall or the execution\n context is not of a proxy with an ERC-1967 compliant implementation pointing to self."
									},
									"id": 576,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_checkProxy",
									"nameLocation": "4587:11:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 556,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4598:2:2"
									},
									"returnParameters": {
										"id": 557,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4623:0:2"
									},
									"scope": 644,
									"src": "4578:312:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 591,
										"nodeType": "Block",
										"src": "5059:161:2",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 585,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"arguments": [
															{
																"id": 582,
																"name": "this",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967268,
																"src": "5081:4:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_UUPSUpgradeable_$644",
																	"typeString": "contract UUPSUpgradeable"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_contract$_UUPSUpgradeable_$644",
																	"typeString": "contract UUPSUpgradeable"
																}
															],
															"id": 581,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "5073:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 580,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "5073:7:2",
																"typeDescriptions": {}
															}
														},
														"id": 583,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "5073:13:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"id": 584,
														"name": "__self",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 482,
														"src": "5090:6:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "5073:23:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 590,
												"nodeType": "IfStatement",
												"src": "5069:145:2",
												"trueBody": {
													"id": 589,
													"nodeType": "Block",
													"src": "5098:116:2",
													"statements": [
														{
															"errorCall": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 586,
																	"name": "UUPSUnauthorizedCallContext",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 489,
																	"src": "5174:27:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
																		"typeString": "function () pure returns (error)"
																	}
																},
																"id": 587,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5174:29:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 588,
															"nodeType": "RevertStatement",
															"src": "5167:36:2"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 577,
										"nodeType": "StructuredDocumentation",
										"src": "4896:106:2",
										"text": " @dev Reverts if the execution is performed via delegatecall.\n See {notDelegated}."
									},
									"id": 592,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_checkNotDelegated",
									"nameLocation": "5016:18:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 578,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5034:2:2"
									},
									"returnParameters": {
										"id": 579,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5059:0:2"
									},
									"scope": 644,
									"src": "5007:213:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"documentation": {
										"id": 593,
										"nodeType": "StructuredDocumentation",
										"src": "5226:372:2",
										"text": " @dev Function that should revert when `msg.sender` is not authorized to upgrade the contract. Called by\n {upgradeToAndCall}.\n Normally, this function will use an xref:access.adoc[access control] modifier such as {Ownable-onlyOwner}.\n ```solidity\n function _authorizeUpgrade(address) internal onlyOwner {}\n ```"
									},
									"id": 598,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "_authorizeUpgrade",
									"nameLocation": "5612:17:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 596,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 595,
												"mutability": "mutable",
												"name": "newImplementation",
												"nameLocation": "5638:17:2",
												"nodeType": "VariableDeclaration",
												"scope": 598,
												"src": "5630:25:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 594,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5630:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5629:27:2"
									},
									"returnParameters": {
										"id": 597,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5673:0:2"
									},
									"scope": 644,
									"src": "5603:71:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 642,
										"nodeType": "Block",
										"src": "6117:453:2",
										"statements": [
											{
												"clauses": [
													{
														"block": {
															"id": 631,
															"nodeType": "Block",
															"src": "6207:212:2",
															"statements": [
																{
																	"condition": {
																		"commonType": {
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		},
																		"id": 617,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 614,
																			"name": "slot",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 612,
																			"src": "6225:4:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bytes32",
																				"typeString": "bytes32"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "!=",
																		"rightExpression": {
																			"expression": {
																				"id": 615,
																				"name": "ERC1967Utils",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1015,
																				"src": "6233:12:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_contract$_ERC1967Utils_$1015_$",
																					"typeString": "type(library ERC1967Utils)"
																				}
																			},
																			"id": 616,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"memberLocation": "6246:19:2",
																			"memberName": "IMPLEMENTATION_SLOT",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 736,
																			"src": "6233:32:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bytes32",
																				"typeString": "bytes32"
																			}
																		},
																		"src": "6225:40:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"id": 623,
																	"nodeType": "IfStatement",
																	"src": "6221:120:2",
																	"trueBody": {
																		"id": 622,
																		"nodeType": "Block",
																		"src": "6267:74:2",
																		"statements": [
																			{
																				"errorCall": {
																					"arguments": [
																						{
																							"id": 619,
																							"name": "slot",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 612,
																							"src": "6321:4:2",
																							"typeDescriptions": {
																								"typeIdentifier": "t_bytes32",
																								"typeString": "bytes32"
																							}
																						}
																					],
																					"expression": {
																						"argumentTypes": [
																							{
																								"typeIdentifier": "t_bytes32",
																								"typeString": "bytes32"
																							}
																						],
																						"id": 618,
																						"name": "UUPSUnsupportedProxiableUUID",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 494,
																						"src": "6292:28:2",
																						"typeDescriptions": {
																							"typeIdentifier": "t_function_error_pure$_t_bytes32_$returns$_t_error_$",
																							"typeString": "function (bytes32) pure returns (error)"
																						}
																					},
																					"id": 620,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"kind": "functionCall",
																					"lValueRequested": false,
																					"nameLocations": [],
																					"names": [],
																					"nodeType": "FunctionCall",
																					"src": "6292:34:2",
																					"tryCall": false,
																					"typeDescriptions": {
																						"typeIdentifier": "t_error",
																						"typeString": "error"
																					}
																				},
																				"id": 621,
																				"nodeType": "RevertStatement",
																				"src": "6285:41:2"
																			}
																		]
																	}
																},
																{
																	"expression": {
																		"arguments": [
																			{
																				"id": 627,
																				"name": "newImplementation",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 601,
																				"src": "6384:17:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			{
																				"id": 628,
																				"name": "data",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 603,
																				"src": "6403:4:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes_memory_ptr",
																					"typeString": "bytes memory"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				},
																				{
																					"typeIdentifier": "t_bytes_memory_ptr",
																					"typeString": "bytes memory"
																				}
																			],
																			"expression": {
																				"id": 624,
																				"name": "ERC1967Utils",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1015,
																				"src": "6354:12:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_contract$_ERC1967Utils_$1015_$",
																					"typeString": "type(library ERC1967Utils)"
																				}
																			},
																			"id": 626,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "6367:16:2",
																			"memberName": "upgradeToAndCall",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 830,
																			"src": "6354:29:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$returns$__$",
																				"typeString": "function (address,bytes memory)"
																			}
																		},
																		"id": 629,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "6354:54:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_tuple$__$",
																			"typeString": "tuple()"
																		}
																	},
																	"id": 630,
																	"nodeType": "ExpressionStatement",
																	"src": "6354:54:2"
																}
															]
														},
														"errorName": "",
														"id": 632,
														"nodeType": "TryCatchClause",
														"parameters": {
															"id": 613,
															"nodeType": "ParameterList",
															"parameters": [
																{
																	"constant": false,
																	"id": 612,
																	"mutability": "mutable",
																	"name": "slot",
																	"nameLocation": "6201:4:2",
																	"nodeType": "VariableDeclaration",
																	"scope": 632,
																	"src": "6193:12:2",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	},
																	"typeName": {
																		"id": 611,
																		"name": "bytes32",
																		"nodeType": "ElementaryTypeName",
																		"src": "6193:7:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"src": "6192:14:2"
														},
														"src": "6184:235:2"
													},
													{
														"block": {
															"id": 639,
															"nodeType": "Block",
															"src": "6426:138:2",
															"statements": [
																{
																	"errorCall": {
																		"arguments": [
																			{
																				"id": 636,
																				"name": "newImplementation",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 601,
																				"src": "6535:17:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			],
																			"expression": {
																				"id": 633,
																				"name": "ERC1967Utils",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1015,
																				"src": "6493:12:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_contract$_ERC1967Utils_$1015_$",
																					"typeString": "type(library ERC1967Utils)"
																				}
																			},
																			"id": 635,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "6506:28:2",
																			"memberName": "ERC1967InvalidImplementation",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 741,
																			"src": "6493:41:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																				"typeString": "function (address) pure returns (error)"
																			}
																		},
																		"id": 637,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "6493:60:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_error",
																			"typeString": "error"
																		}
																	},
																	"id": 638,
																	"nodeType": "RevertStatement",
																	"src": "6486:67:2"
																}
															]
														},
														"errorName": "",
														"id": 640,
														"nodeType": "TryCatchClause",
														"src": "6420:144:2"
													}
												],
												"externalCall": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"expression": {
															"arguments": [
																{
																	"id": 607,
																	"name": "newImplementation",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 601,
																	"src": "6149:17:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 606,
																"name": "IERC1822Proxiable",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 721,
																"src": "6131:17:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_IERC1822Proxiable_$721_$",
																	"typeString": "type(contract IERC1822Proxiable)"
																}
															},
															"id": 608,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6131:36:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC1822Proxiable_$721",
																"typeString": "contract IERC1822Proxiable"
															}
														},
														"id": 609,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "6168:13:2",
														"memberName": "proxiableUUID",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 720,
														"src": "6131:50:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_view$__$returns$_t_bytes32_$",
															"typeString": "function () view external returns (bytes32)"
														}
													},
													"id": 610,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6131:52:2",
													"tryCall": true,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"id": 641,
												"nodeType": "TryStatement",
												"src": "6127:437:2"
											}
										]
									},
									"documentation": {
										"id": 599,
										"nodeType": "StructuredDocumentation",
										"src": "5680:347:2",
										"text": " @dev Performs an implementation upgrade with a security check for UUPS proxies, and additional setup call.\n As a security check, {proxiableUUID} is invoked in the new implementation, and the return value\n is expected to be the implementation slot in ERC-1967.\n Emits an {IERC1967-Upgraded} event."
									},
									"id": 643,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_upgradeToAndCallUUPS",
									"nameLocation": "6041:21:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 604,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 601,
												"mutability": "mutable",
												"name": "newImplementation",
												"nameLocation": "6071:17:2",
												"nodeType": "VariableDeclaration",
												"scope": 643,
												"src": "6063:25:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 600,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6063:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 603,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "6103:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 643,
												"src": "6090:17:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 602,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6090:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6062:46:2"
									},
									"returnParameters": {
										"id": 605,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6117:0:2"
									},
									"scope": 644,
									"src": "6032:538:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								}
							],
							"scope": 645,
							"src": "986:5586:2",
							"usedErrors": [
								211,
								214,
								489,
								494,
								741,
								754,
								1035,
								1298
							],
							"usedEvents": [
								219,
								698
							]
						}
					],
					"src": "115:6458:2"
				},
				"id": 2
			},
			"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol",
					"exportedSymbols": {
						"ContextUpgradeable": [
							690
						],
						"Initializable": [
							462
						]
					},
					"id": 691,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 646,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "101:24:3"
						},
						{
							"absolutePath": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol",
							"file": "../proxy/utils/Initializable.sol",
							"id": 648,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 691,
							"sourceUnit": 463,
							"src": "126:63:3",
							"symbolAliases": [
								{
									"foreign": {
										"id": 647,
										"name": "Initializable",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 462,
										"src": "134:13:3",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 650,
										"name": "Initializable",
										"nameLocations": [
											"728:13:3"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 462,
										"src": "728:13:3"
									},
									"id": 651,
									"nodeType": "InheritanceSpecifier",
									"src": "728:13:3"
								}
							],
							"canonicalName": "ContextUpgradeable",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 649,
								"nodeType": "StructuredDocumentation",
								"src": "191:496:3",
								"text": " @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."
							},
							"fullyImplemented": true,
							"id": 690,
							"linearizedBaseContracts": [
								690,
								462
							],
							"name": "ContextUpgradeable",
							"nameLocation": "706:18:3",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 656,
										"nodeType": "Block",
										"src": "800:7:3",
										"statements": []
									},
									"id": 657,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 654,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 653,
												"name": "onlyInitializing",
												"nameLocations": [
													"783:16:3"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 357,
												"src": "783:16:3"
											},
											"nodeType": "ModifierInvocation",
											"src": "783:16:3"
										}
									],
									"name": "__Context_init",
									"nameLocation": "757:14:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 652,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "771:2:3"
									},
									"returnParameters": {
										"id": 655,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "800:0:3"
									},
									"scope": 690,
									"src": "748:59:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 662,
										"nodeType": "Block",
										"src": "875:7:3",
										"statements": []
									},
									"id": 663,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 660,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 659,
												"name": "onlyInitializing",
												"nameLocations": [
													"858:16:3"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 357,
												"src": "858:16:3"
											},
											"nodeType": "ModifierInvocation",
											"src": "858:16:3"
										}
									],
									"name": "__Context_init_unchained",
									"nameLocation": "822:24:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 658,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "846:2:3"
									},
									"returnParameters": {
										"id": 661,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "875:0:3"
									},
									"scope": 690,
									"src": "813:69:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 671,
										"nodeType": "Block",
										"src": "949:34:3",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 668,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "966:3:3",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 669,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "970:6:3",
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "966:10:3",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 667,
												"id": 670,
												"nodeType": "Return",
												"src": "959:17:3"
											}
										]
									},
									"id": 672,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgSender",
									"nameLocation": "896:10:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 664,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "906:2:3"
									},
									"returnParameters": {
										"id": 667,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 666,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 672,
												"src": "940:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 665,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "940:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "939:9:3"
									},
									"scope": 690,
									"src": "887:96:3",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 680,
										"nodeType": "Block",
										"src": "1056:32:3",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 677,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "1073:3:3",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 678,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "1077:4:3",
													"memberName": "data",
													"nodeType": "MemberAccess",
													"src": "1073:8:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_calldata_ptr",
														"typeString": "bytes calldata"
													}
												},
												"functionReturnParameters": 676,
												"id": 679,
												"nodeType": "Return",
												"src": "1066:15:3"
											}
										]
									},
									"id": 681,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgData",
									"nameLocation": "998:8:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 673,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1006:2:3"
									},
									"returnParameters": {
										"id": 676,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 675,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 681,
												"src": "1040:14:3",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 674,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "1040:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1039:16:3"
									},
									"scope": 690,
									"src": "989:99:3",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 688,
										"nodeType": "Block",
										"src": "1166:25:3",
										"statements": [
											{
												"expression": {
													"hexValue": "30",
													"id": 686,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "1183:1:3",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"functionReturnParameters": 685,
												"id": 687,
												"nodeType": "Return",
												"src": "1176:8:3"
											}
										]
									},
									"id": 689,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_contextSuffixLength",
									"nameLocation": "1103:20:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 682,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1123:2:3"
									},
									"returnParameters": {
										"id": 685,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 684,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 689,
												"src": "1157:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 683,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1157:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1156:9:3"
									},
									"scope": 690,
									"src": "1094:97:3",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 691,
							"src": "688:505:3",
							"usedErrors": [
								211,
								214
							],
							"usedEvents": [
								219
							]
						}
					],
					"src": "101:1093:3"
				},
				"id": 3
			},
			"@openzeppelin/contracts/interfaces/IERC1967.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/interfaces/IERC1967.sol",
					"exportedSymbols": {
						"IERC1967": [
							711
						]
					},
					"id": 712,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 692,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "107:24:4"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC1967",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 693,
								"nodeType": "StructuredDocumentation",
								"src": "133:101:4",
								"text": " @dev ERC-1967: Proxy Storage Slots. This interface contains the events defined in the ERC."
							},
							"fullyImplemented": true,
							"id": 711,
							"linearizedBaseContracts": [
								711
							],
							"name": "IERC1967",
							"nameLocation": "245:8:4",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 694,
										"nodeType": "StructuredDocumentation",
										"src": "260:68:4",
										"text": " @dev Emitted when the implementation is upgraded."
									},
									"eventSelector": "bc7cd75a20ee27fd9adebab32041f755214dbc6bffa90cc0225b39da2e5c2d3b",
									"id": 698,
									"name": "Upgraded",
									"nameLocation": "339:8:4",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 697,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 696,
												"indexed": true,
												"mutability": "mutable",
												"name": "implementation",
												"nameLocation": "364:14:4",
												"nodeType": "VariableDeclaration",
												"scope": 698,
												"src": "348:30:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 695,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "348:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "347:32:4"
									},
									"src": "333:47:4"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 699,
										"nodeType": "StructuredDocumentation",
										"src": "386:67:4",
										"text": " @dev Emitted when the admin account has changed."
									},
									"eventSelector": "7e644d79422f17c01e4894b5f4f588d331ebfa28653d42ae832dc59e38c9798f",
									"id": 705,
									"name": "AdminChanged",
									"nameLocation": "464:12:4",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 704,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 701,
												"indexed": false,
												"mutability": "mutable",
												"name": "previousAdmin",
												"nameLocation": "485:13:4",
												"nodeType": "VariableDeclaration",
												"scope": 705,
												"src": "477:21:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 700,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "477:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 703,
												"indexed": false,
												"mutability": "mutable",
												"name": "newAdmin",
												"nameLocation": "508:8:4",
												"nodeType": "VariableDeclaration",
												"scope": 705,
												"src": "500:16:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 702,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "500:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "476:41:4"
									},
									"src": "458:60:4"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 706,
										"nodeType": "StructuredDocumentation",
										"src": "524:59:4",
										"text": " @dev Emitted when the beacon is changed."
									},
									"eventSelector": "1cf3b03a6cf19fa2baba4df148e9dcabedea7f8a5c07840e207e5c089be95d3e",
									"id": 710,
									"name": "BeaconUpgraded",
									"nameLocation": "594:14:4",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 709,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 708,
												"indexed": true,
												"mutability": "mutable",
												"name": "beacon",
												"nameLocation": "625:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 710,
												"src": "609:22:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 707,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "609:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "608:24:4"
									},
									"src": "588:45:4"
								}
							],
							"scope": 712,
							"src": "235:400:4",
							"usedErrors": [],
							"usedEvents": [
								698,
								705,
								710
							]
						}
					],
					"src": "107:529:4"
				},
				"id": 4
			},
			"@openzeppelin/contracts/interfaces/draft-IERC1822.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/interfaces/draft-IERC1822.sol",
					"exportedSymbols": {
						"IERC1822Proxiable": [
							721
						]
					},
					"id": 722,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 713,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "113:24:5"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC1822Proxiable",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 714,
								"nodeType": "StructuredDocumentation",
								"src": "139:204:5",
								"text": " @dev ERC-1822: Universal Upgradeable Proxy Standard (UUPS) documents a method for upgradeability through a simplified\n proxy whose upgrades are fully controlled by the current implementation."
							},
							"fullyImplemented": false,
							"id": 721,
							"linearizedBaseContracts": [
								721
							],
							"name": "IERC1822Proxiable",
							"nameLocation": "354:17:5",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 715,
										"nodeType": "StructuredDocumentation",
										"src": "378:438:5",
										"text": " @dev Returns the storage slot that the proxiable contract assumes is being used to store the implementation\n address.\n IMPORTANT: A proxy pointing at a proxiable contract should not be considered proxiable itself, because this risks\n bricking a proxy that upgrades to it, by delegating to itself until out of gas. Thus it is critical that this\n function revert if invoked through a proxy."
									},
									"functionSelector": "52d1902d",
									"id": 720,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "proxiableUUID",
									"nameLocation": "830:13:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 716,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "843:2:5"
									},
									"returnParameters": {
										"id": 719,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 718,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 720,
												"src": "869:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 717,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "869:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "868:9:5"
									},
									"scope": 721,
									"src": "821:57:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 722,
							"src": "344:536:5",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "113:768:5"
				},
				"id": 5
			},
			"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol",
					"exportedSymbols": {
						"Address": [
							1285
						],
						"ERC1967Utils": [
							1015
						],
						"IBeacon": [
							1025
						],
						"IERC1967": [
							711
						],
						"StorageSlot": [
							1431
						]
					},
					"id": 1016,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 723,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".22"
							],
							"nodeType": "PragmaDirective",
							"src": "114:24:6"
						},
						{
							"absolutePath": "@openzeppelin/contracts/proxy/beacon/IBeacon.sol",
							"file": "../beacon/IBeacon.sol",
							"id": 725,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1016,
							"sourceUnit": 1026,
							"src": "140:46:6",
							"symbolAliases": [
								{
									"foreign": {
										"id": 724,
										"name": "IBeacon",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1025,
										"src": "148:7:6",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/interfaces/IERC1967.sol",
							"file": "../../interfaces/IERC1967.sol",
							"id": 727,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1016,
							"sourceUnit": 712,
							"src": "187:55:6",
							"symbolAliases": [
								{
									"foreign": {
										"id": 726,
										"name": "IERC1967",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 711,
										"src": "195:8:6",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Address.sol",
							"file": "../../utils/Address.sol",
							"id": 729,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1016,
							"sourceUnit": 1286,
							"src": "243:48:6",
							"symbolAliases": [
								{
									"foreign": {
										"id": 728,
										"name": "Address",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1285,
										"src": "251:7:6",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/StorageSlot.sol",
							"file": "../../utils/StorageSlot.sol",
							"id": 731,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1016,
							"sourceUnit": 1432,
							"src": "292:56:6",
							"symbolAliases": [
								{
									"foreign": {
										"id": 730,
										"name": "StorageSlot",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1431,
										"src": "300:11:6",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "ERC1967Utils",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 732,
								"nodeType": "StructuredDocumentation",
								"src": "350:145:6",
								"text": " @dev This library provides getters and event emitting update functions for\n https://eips.ethereum.org/EIPS/eip-1967[ERC-1967] slots."
							},
							"fullyImplemented": true,
							"id": 1015,
							"linearizedBaseContracts": [
								1015
							],
							"name": "ERC1967Utils",
							"nameLocation": "504:12:6",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": true,
									"documentation": {
										"id": 733,
										"nodeType": "StructuredDocumentation",
										"src": "523:170:6",
										"text": " @dev Storage slot with the address of the current implementation.\n This is the keccak-256 hash of \"eip1967.proxy.implementation\" subtracted by 1."
									},
									"id": 736,
									"mutability": "constant",
									"name": "IMPLEMENTATION_SLOT",
									"nameLocation": "789:19:6",
									"nodeType": "VariableDeclaration",
									"scope": 1015,
									"src": "763:114:6",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes32",
										"typeString": "bytes32"
									},
									"typeName": {
										"id": 734,
										"name": "bytes32",
										"nodeType": "ElementaryTypeName",
										"src": "763:7:6",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"value": {
										"hexValue": "307833363038393461313362613161333231303636376338323834393264623938646361336532303736636333373335613932306133636135303564333832626263",
										"id": 735,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "811:66:6",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_24440054405305269366569402256811496959409073762505157381672968839269610695612_by_1",
											"typeString": "int_const 2444...(69 digits omitted)...5612"
										},
										"value": "0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc"
									},
									"visibility": "internal"
								},
								{
									"documentation": {
										"id": 737,
										"nodeType": "StructuredDocumentation",
										"src": "884:69:6",
										"text": " @dev The `implementation` of the proxy is invalid."
									},
									"errorSelector": "4c9c8ce3",
									"id": 741,
									"name": "ERC1967InvalidImplementation",
									"nameLocation": "964:28:6",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 740,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 739,
												"mutability": "mutable",
												"name": "implementation",
												"nameLocation": "1001:14:6",
												"nodeType": "VariableDeclaration",
												"scope": 741,
												"src": "993:22:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 738,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "993:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "992:24:6"
									},
									"src": "958:59:6"
								},
								{
									"documentation": {
										"id": 742,
										"nodeType": "StructuredDocumentation",
										"src": "1023:60:6",
										"text": " @dev The `admin` of the proxy is invalid."
									},
									"errorSelector": "62e77ba2",
									"id": 746,
									"name": "ERC1967InvalidAdmin",
									"nameLocation": "1094:19:6",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 745,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 744,
												"mutability": "mutable",
												"name": "admin",
												"nameLocation": "1122:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 746,
												"src": "1114:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 743,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1114:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1113:15:6"
									},
									"src": "1088:41:6"
								},
								{
									"documentation": {
										"id": 747,
										"nodeType": "StructuredDocumentation",
										"src": "1135:61:6",
										"text": " @dev The `beacon` of the proxy is invalid."
									},
									"errorSelector": "64ced0ec",
									"id": 751,
									"name": "ERC1967InvalidBeacon",
									"nameLocation": "1207:20:6",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 750,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 749,
												"mutability": "mutable",
												"name": "beacon",
												"nameLocation": "1236:6:6",
												"nodeType": "VariableDeclaration",
												"scope": 751,
												"src": "1228:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 748,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1228:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1227:16:6"
									},
									"src": "1201:43:6"
								},
								{
									"documentation": {
										"id": 752,
										"nodeType": "StructuredDocumentation",
										"src": "1250:82:6",
										"text": " @dev An upgrade function sees `msg.value > 0` that may be lost."
									},
									"errorSelector": "b398979f",
									"id": 754,
									"name": "ERC1967NonPayable",
									"nameLocation": "1343:17:6",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 753,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1360:2:6"
									},
									"src": "1337:26:6"
								},
								{
									"body": {
										"id": 766,
										"nodeType": "Block",
										"src": "1502:77:6",
										"statements": [
											{
												"expression": {
													"expression": {
														"arguments": [
															{
																"id": 762,
																"name": "IMPLEMENTATION_SLOT",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 736,
																"src": "1546:19:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															],
															"expression": {
																"id": 760,
																"name": "StorageSlot",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1431,
																"src": "1519:11:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_StorageSlot_$1431_$",
																	"typeString": "type(library StorageSlot)"
																}
															},
															"id": 761,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1531:14:6",
															"memberName": "getAddressSlot",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1342,
															"src": "1519:26:6",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_bytes32_$returns$_t_struct$_AddressSlot_$1313_storage_ptr_$",
																"typeString": "function (bytes32) pure returns (struct StorageSlot.AddressSlot storage pointer)"
															}
														},
														"id": 763,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1519:47:6",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_AddressSlot_$1313_storage_ptr",
															"typeString": "struct StorageSlot.AddressSlot storage pointer"
														}
													},
													"id": 764,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "1567:5:6",
													"memberName": "value",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 1312,
													"src": "1519:53:6",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 759,
												"id": 765,
												"nodeType": "Return",
												"src": "1512:60:6"
											}
										]
									},
									"documentation": {
										"id": 755,
										"nodeType": "StructuredDocumentation",
										"src": "1369:67:6",
										"text": " @dev Returns the current implementation address."
									},
									"id": 767,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getImplementation",
									"nameLocation": "1450:17:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 756,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1467:2:6"
									},
									"returnParameters": {
										"id": 759,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 758,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 767,
												"src": "1493:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 757,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1493:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1492:9:6"
									},
									"scope": 1015,
									"src": "1441:138:6",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 793,
										"nodeType": "Block",
										"src": "1734:218:6",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 777,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"expression": {
																"id": 773,
																"name": "newImplementation",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 770,
																"src": "1748:17:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 774,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1766:4:6",
															"memberName": "code",
															"nodeType": "MemberAccess",
															"src": "1748:22:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 775,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1771:6:6",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "1748:29:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 776,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1781:1:6",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "1748:34:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 783,
												"nodeType": "IfStatement",
												"src": "1744:119:6",
												"trueBody": {
													"id": 782,
													"nodeType": "Block",
													"src": "1784:79:6",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"id": 779,
																		"name": "newImplementation",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 770,
																		"src": "1834:17:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 778,
																	"name": "ERC1967InvalidImplementation",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 741,
																	"src": "1805:28:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 780,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1805:47:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 781,
															"nodeType": "RevertStatement",
															"src": "1798:54:6"
														}
													]
												}
											},
											{
												"expression": {
													"id": 791,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"arguments": [
																{
																	"id": 787,
																	"name": "IMPLEMENTATION_SLOT",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 736,
																	"src": "1899:19:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																],
																"expression": {
																	"id": 784,
																	"name": "StorageSlot",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1431,
																	"src": "1872:11:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_contract$_StorageSlot_$1431_$",
																		"typeString": "type(library StorageSlot)"
																	}
																},
																"id": 786,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "1884:14:6",
																"memberName": "getAddressSlot",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 1342,
																"src": "1872:26:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_bytes32_$returns$_t_struct$_AddressSlot_$1313_storage_ptr_$",
																	"typeString": "function (bytes32) pure returns (struct StorageSlot.AddressSlot storage pointer)"
																}
															},
															"id": 788,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1872:47:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_AddressSlot_$1313_storage_ptr",
																"typeString": "struct StorageSlot.AddressSlot storage pointer"
															}
														},
														"id": 789,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "1920:5:6",
														"memberName": "value",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1312,
														"src": "1872:53:6",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 790,
														"name": "newImplementation",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 770,
														"src": "1928:17:6",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1872:73:6",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 792,
												"nodeType": "ExpressionStatement",
												"src": "1872:73:6"
											}
										]
									},
									"documentation": {
										"id": 768,
										"nodeType": "StructuredDocumentation",
										"src": "1585:81:6",
										"text": " @dev Stores a new address in the ERC-1967 implementation slot."
									},
									"id": 794,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_setImplementation",
									"nameLocation": "1680:18:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 771,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 770,
												"mutability": "mutable",
												"name": "newImplementation",
												"nameLocation": "1707:17:6",
												"nodeType": "VariableDeclaration",
												"scope": 794,
												"src": "1699:25:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 769,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1699:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1698:27:6"
									},
									"returnParameters": {
										"id": 772,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1734:0:6"
									},
									"scope": 1015,
									"src": "1671:281:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 829,
										"nodeType": "Block",
										"src": "2345:263:6",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 803,
															"name": "newImplementation",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 797,
															"src": "2374:17:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 802,
														"name": "_setImplementation",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 794,
														"src": "2355:18:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 804,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2355:37:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 805,
												"nodeType": "ExpressionStatement",
												"src": "2355:37:6"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 809,
															"name": "newImplementation",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 797,
															"src": "2425:17:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"expression": {
															"id": 806,
															"name": "IERC1967",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 711,
															"src": "2407:8:6",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_IERC1967_$711_$",
																"typeString": "type(contract IERC1967)"
															}
														},
														"id": 808,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "2416:8:6",
														"memberName": "Upgraded",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 698,
														"src": "2407:17:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 810,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2407:36:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 811,
												"nodeType": "EmitStatement",
												"src": "2402:41:6"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 815,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 812,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 799,
															"src": "2458:4:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 813,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "2463:6:6",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "2458:11:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 814,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2472:1:6",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "2458:15:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 827,
													"nodeType": "Block",
													"src": "2559:43:6",
													"statements": [
														{
															"expression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 824,
																	"name": "_checkNonPayable",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1014,
																	"src": "2573:16:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
																		"typeString": "function ()"
																	}
																},
																"id": 825,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2573:18:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 826,
															"nodeType": "ExpressionStatement",
															"src": "2573:18:6"
														}
													]
												},
												"id": 828,
												"nodeType": "IfStatement",
												"src": "2454:148:6",
												"trueBody": {
													"id": 823,
													"nodeType": "Block",
													"src": "2475:78:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 819,
																		"name": "newImplementation",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 797,
																		"src": "2518:17:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 820,
																		"name": "data",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 799,
																		"src": "2537:4:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	],
																	"expression": {
																		"id": 816,
																		"name": "Address",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1285,
																		"src": "2489:7:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_contract$_Address_$1285_$",
																			"typeString": "type(library Address)"
																		}
																	},
																	"id": 818,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "2497:20:6",
																	"memberName": "functionDelegateCall",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1202,
																	"src": "2489:28:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$returns$_t_bytes_memory_ptr_$",
																		"typeString": "function (address,bytes memory) returns (bytes memory)"
																	}
																},
																"id": 821,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2489:53:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"id": 822,
															"nodeType": "ExpressionStatement",
															"src": "2489:53:6"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 795,
										"nodeType": "StructuredDocumentation",
										"src": "1958:301:6",
										"text": " @dev Performs implementation upgrade with additional setup call if data is nonempty.\n This function is payable only if the setup call is performed, otherwise `msg.value` is rejected\n to avoid stuck value in the contract.\n Emits an {IERC1967-Upgraded} event."
									},
									"id": 830,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "upgradeToAndCall",
									"nameLocation": "2273:16:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 800,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 797,
												"mutability": "mutable",
												"name": "newImplementation",
												"nameLocation": "2298:17:6",
												"nodeType": "VariableDeclaration",
												"scope": 830,
												"src": "2290:25:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 796,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2290:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 799,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "2330:4:6",
												"nodeType": "VariableDeclaration",
												"scope": 830,
												"src": "2317:17:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 798,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "2317:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2289:46:6"
									},
									"returnParameters": {
										"id": 801,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2345:0:6"
									},
									"scope": 1015,
									"src": "2264:344:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"constant": true,
									"documentation": {
										"id": 831,
										"nodeType": "StructuredDocumentation",
										"src": "2614:145:6",
										"text": " @dev Storage slot with the admin of the contract.\n This is the keccak-256 hash of \"eip1967.proxy.admin\" subtracted by 1."
									},
									"id": 834,
									"mutability": "constant",
									"name": "ADMIN_SLOT",
									"nameLocation": "2855:10:6",
									"nodeType": "VariableDeclaration",
									"scope": 1015,
									"src": "2829:105:6",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes32",
										"typeString": "bytes32"
									},
									"typeName": {
										"id": 832,
										"name": "bytes32",
										"nodeType": "ElementaryTypeName",
										"src": "2829:7:6",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"value": {
										"hexValue": "307862353331323736383461353638623331373361653133623966386136303136653234336536336236653865653131373864366137313738353062356436313033",
										"id": 833,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "2868:66:6",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_81955473079516046949633743016697847541294818689821282749996681496272635257091_by_1",
											"typeString": "int_const 8195...(69 digits omitted)...7091"
										},
										"value": "0xb53127684a568b3173ae13b9f8a6016e243e63b6e8ee1178d6a717850b5d6103"
									},
									"visibility": "internal"
								},
								{
									"body": {
										"id": 846,
										"nodeType": "Block",
										"src": "3339:68:6",
										"statements": [
											{
												"expression": {
													"expression": {
														"arguments": [
															{
																"id": 842,
																"name": "ADMIN_SLOT",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 834,
																"src": "3383:10:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															],
															"expression": {
																"id": 840,
																"name": "StorageSlot",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1431,
																"src": "3356:11:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_StorageSlot_$1431_$",
																	"typeString": "type(library StorageSlot)"
																}
															},
															"id": 841,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "3368:14:6",
															"memberName": "getAddressSlot",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1342,
															"src": "3356:26:6",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_bytes32_$returns$_t_struct$_AddressSlot_$1313_storage_ptr_$",
																"typeString": "function (bytes32) pure returns (struct StorageSlot.AddressSlot storage pointer)"
															}
														},
														"id": 843,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "3356:38:6",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_AddressSlot_$1313_storage_ptr",
															"typeString": "struct StorageSlot.AddressSlot storage pointer"
														}
													},
													"id": 844,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "3395:5:6",
													"memberName": "value",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 1312,
													"src": "3356:44:6",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 839,
												"id": 845,
												"nodeType": "Return",
												"src": "3349:51:6"
											}
										]
									},
									"documentation": {
										"id": 835,
										"nodeType": "StructuredDocumentation",
										"src": "2941:341:6",
										"text": " @dev Returns the current admin.\n TIP: To get this value clients can read directly from the storage slot shown below (specified by ERC-1967) using\n the https://eth.wiki/json-rpc/API#eth_getstorageat[`eth_getStorageAt`] RPC call.\n `0xb53127684a568b3173ae13b9f8a6016e243e63b6e8ee1178d6a717850b5d6103`"
									},
									"id": 847,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getAdmin",
									"nameLocation": "3296:8:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 836,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3304:2:6"
									},
									"returnParameters": {
										"id": 839,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 838,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 847,
												"src": "3330:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 837,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3330:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3329:9:6"
									},
									"scope": 1015,
									"src": "3287:120:6",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 877,
										"nodeType": "Block",
										"src": "3535:172:6",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 858,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 853,
														"name": "newAdmin",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 850,
														"src": "3549:8:6",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 856,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "3569:1:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 855,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "3561:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 854,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "3561:7:6",
																"typeDescriptions": {}
															}
														},
														"id": 857,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "3561:10:6",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "3549:22:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 867,
												"nodeType": "IfStatement",
												"src": "3545:91:6",
												"trueBody": {
													"id": 866,
													"nodeType": "Block",
													"src": "3573:63:6",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 862,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "3622:1:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 861,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "3614:7:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 860,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "3614:7:6",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 863,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "3614:10:6",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 859,
																	"name": "ERC1967InvalidAdmin",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 746,
																	"src": "3594:19:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 864,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3594:31:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 865,
															"nodeType": "RevertStatement",
															"src": "3587:38:6"
														}
													]
												}
											},
											{
												"expression": {
													"id": 875,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"arguments": [
																{
																	"id": 871,
																	"name": "ADMIN_SLOT",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 834,
																	"src": "3672:10:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																],
																"expression": {
																	"id": 868,
																	"name": "StorageSlot",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1431,
																	"src": "3645:11:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_contract$_StorageSlot_$1431_$",
																		"typeString": "type(library StorageSlot)"
																	}
																},
																"id": 870,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "3657:14:6",
																"memberName": "getAddressSlot",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 1342,
																"src": "3645:26:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_bytes32_$returns$_t_struct$_AddressSlot_$1313_storage_ptr_$",
																	"typeString": "function (bytes32) pure returns (struct StorageSlot.AddressSlot storage pointer)"
																}
															},
															"id": 872,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3645:38:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_AddressSlot_$1313_storage_ptr",
																"typeString": "struct StorageSlot.AddressSlot storage pointer"
															}
														},
														"id": 873,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "3684:5:6",
														"memberName": "value",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1312,
														"src": "3645:44:6",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 874,
														"name": "newAdmin",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 850,
														"src": "3692:8:6",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "3645:55:6",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 876,
												"nodeType": "ExpressionStatement",
												"src": "3645:55:6"
											}
										]
									},
									"documentation": {
										"id": 848,
										"nodeType": "StructuredDocumentation",
										"src": "3413:72:6",
										"text": " @dev Stores a new address in the ERC-1967 admin slot."
									},
									"id": 878,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_setAdmin",
									"nameLocation": "3499:9:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 851,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 850,
												"mutability": "mutable",
												"name": "newAdmin",
												"nameLocation": "3517:8:6",
												"nodeType": "VariableDeclaration",
												"scope": 878,
												"src": "3509:16:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 849,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3509:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3508:18:6"
									},
									"returnParameters": {
										"id": 852,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3535:0:6"
									},
									"scope": 1015,
									"src": "3490:217:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 896,
										"nodeType": "Block",
										"src": "3875:94:6",
										"statements": [
											{
												"eventCall": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 887,
																"name": "getAdmin",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 847,
																"src": "3912:8:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 888,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3912:10:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 889,
															"name": "newAdmin",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 881,
															"src": "3924:8:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"expression": {
															"id": 884,
															"name": "IERC1967",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 711,
															"src": "3890:8:6",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_IERC1967_$711_$",
																"typeString": "type(contract IERC1967)"
															}
														},
														"id": 886,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "3899:12:6",
														"memberName": "AdminChanged",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 705,
														"src": "3890:21:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 890,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3890:43:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 891,
												"nodeType": "EmitStatement",
												"src": "3885:48:6"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 893,
															"name": "newAdmin",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 881,
															"src": "3953:8:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 892,
														"name": "_setAdmin",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 878,
														"src": "3943:9:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 894,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3943:19:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 895,
												"nodeType": "ExpressionStatement",
												"src": "3943:19:6"
											}
										]
									},
									"documentation": {
										"id": 879,
										"nodeType": "StructuredDocumentation",
										"src": "3713:109:6",
										"text": " @dev Changes the admin of the proxy.\n Emits an {IERC1967-AdminChanged} event."
									},
									"id": 897,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "changeAdmin",
									"nameLocation": "3836:11:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 882,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 881,
												"mutability": "mutable",
												"name": "newAdmin",
												"nameLocation": "3856:8:6",
												"nodeType": "VariableDeclaration",
												"scope": 897,
												"src": "3848:16:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 880,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3848:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3847:18:6"
									},
									"returnParameters": {
										"id": 883,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3875:0:6"
									},
									"scope": 1015,
									"src": "3827:142:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"constant": true,
									"documentation": {
										"id": 898,
										"nodeType": "StructuredDocumentation",
										"src": "3975:201:6",
										"text": " @dev The storage slot of the UpgradeableBeacon contract which defines the implementation for this proxy.\n This is the keccak-256 hash of \"eip1967.proxy.beacon\" subtracted by 1."
									},
									"id": 901,
									"mutability": "constant",
									"name": "BEACON_SLOT",
									"nameLocation": "4272:11:6",
									"nodeType": "VariableDeclaration",
									"scope": 1015,
									"src": "4246:106:6",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes32",
										"typeString": "bytes32"
									},
									"typeName": {
										"id": 899,
										"name": "bytes32",
										"nodeType": "ElementaryTypeName",
										"src": "4246:7:6",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"value": {
										"hexValue": "307861336630616437346535343233616562666438306433656634333436353738333335613961373261656165653539666636636233353832623335313333643530",
										"id": 900,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "4286:66:6",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_74152234768234802001998023604048924213078445070507226371336425913862612794704_by_1",
											"typeString": "int_const 7415...(69 digits omitted)...4704"
										},
										"value": "0xa3f0ad74e5423aebfd80d3ef4346578335a9a72aeaee59ff6cb3582b35133d50"
									},
									"visibility": "internal"
								},
								{
									"body": {
										"id": 913,
										"nodeType": "Block",
										"src": "4468:69:6",
										"statements": [
											{
												"expression": {
													"expression": {
														"arguments": [
															{
																"id": 909,
																"name": "BEACON_SLOT",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 901,
																"src": "4512:11:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															],
															"expression": {
																"id": 907,
																"name": "StorageSlot",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1431,
																"src": "4485:11:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_StorageSlot_$1431_$",
																	"typeString": "type(library StorageSlot)"
																}
															},
															"id": 908,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "4497:14:6",
															"memberName": "getAddressSlot",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1342,
															"src": "4485:26:6",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_bytes32_$returns$_t_struct$_AddressSlot_$1313_storage_ptr_$",
																"typeString": "function (bytes32) pure returns (struct StorageSlot.AddressSlot storage pointer)"
															}
														},
														"id": 910,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "4485:39:6",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_AddressSlot_$1313_storage_ptr",
															"typeString": "struct StorageSlot.AddressSlot storage pointer"
														}
													},
													"id": 911,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "4525:5:6",
													"memberName": "value",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 1312,
													"src": "4485:45:6",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 906,
												"id": 912,
												"nodeType": "Return",
												"src": "4478:52:6"
											}
										]
									},
									"documentation": {
										"id": 902,
										"nodeType": "StructuredDocumentation",
										"src": "4359:51:6",
										"text": " @dev Returns the current beacon."
									},
									"id": 914,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getBeacon",
									"nameLocation": "4424:9:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 903,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4433:2:6"
									},
									"returnParameters": {
										"id": 906,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 905,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 914,
												"src": "4459:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 904,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4459:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4458:9:6"
									},
									"scope": 1015,
									"src": "4415:122:6",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 959,
										"nodeType": "Block",
										"src": "4667:390:6",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 924,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"expression": {
																"id": 920,
																"name": "newBeacon",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 917,
																"src": "4681:9:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 921,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "4691:4:6",
															"memberName": "code",
															"nodeType": "MemberAccess",
															"src": "4681:14:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 922,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "4696:6:6",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "4681:21:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 923,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "4706:1:6",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "4681:26:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 930,
												"nodeType": "IfStatement",
												"src": "4677:95:6",
												"trueBody": {
													"id": 929,
													"nodeType": "Block",
													"src": "4709:63:6",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"id": 926,
																		"name": "newBeacon",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 917,
																		"src": "4751:9:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 925,
																	"name": "ERC1967InvalidBeacon",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 751,
																	"src": "4730:20:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 927,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4730:31:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 928,
															"nodeType": "RevertStatement",
															"src": "4723:38:6"
														}
													]
												}
											},
											{
												"expression": {
													"id": 938,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"arguments": [
																{
																	"id": 934,
																	"name": "BEACON_SLOT",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 901,
																	"src": "4809:11:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																],
																"expression": {
																	"id": 931,
																	"name": "StorageSlot",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1431,
																	"src": "4782:11:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_contract$_StorageSlot_$1431_$",
																		"typeString": "type(library StorageSlot)"
																	}
																},
																"id": 933,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "4794:14:6",
																"memberName": "getAddressSlot",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 1342,
																"src": "4782:26:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_bytes32_$returns$_t_struct$_AddressSlot_$1313_storage_ptr_$",
																	"typeString": "function (bytes32) pure returns (struct StorageSlot.AddressSlot storage pointer)"
																}
															},
															"id": 935,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4782:39:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_AddressSlot_$1313_storage_ptr",
																"typeString": "struct StorageSlot.AddressSlot storage pointer"
															}
														},
														"id": 936,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "4822:5:6",
														"memberName": "value",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1312,
														"src": "4782:45:6",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 937,
														"name": "newBeacon",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 917,
														"src": "4830:9:6",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "4782:57:6",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 939,
												"nodeType": "ExpressionStatement",
												"src": "4782:57:6"
											},
											{
												"assignments": [
													941
												],
												"declarations": [
													{
														"constant": false,
														"id": 941,
														"mutability": "mutable",
														"name": "beaconImplementation",
														"nameLocation": "4858:20:6",
														"nodeType": "VariableDeclaration",
														"scope": 959,
														"src": "4850:28:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 940,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "4850:7:6",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 947,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"expression": {
															"arguments": [
																{
																	"id": 943,
																	"name": "newBeacon",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 917,
																	"src": "4889:9:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 942,
																"name": "IBeacon",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1025,
																"src": "4881:7:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_IBeacon_$1025_$",
																	"typeString": "type(contract IBeacon)"
																}
															},
															"id": 944,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4881:18:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IBeacon_$1025",
																"typeString": "contract IBeacon"
															}
														},
														"id": 945,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "4900:14:6",
														"memberName": "implementation",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1024,
														"src": "4881:33:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_view$__$returns$_t_address_$",
															"typeString": "function () view external returns (address)"
														}
													},
													"id": 946,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4881:35:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4850:66:6"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 952,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"expression": {
																"id": 948,
																"name": "beaconImplementation",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 941,
																"src": "4930:20:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 949,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "4951:4:6",
															"memberName": "code",
															"nodeType": "MemberAccess",
															"src": "4930:25:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 950,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "4956:6:6",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "4930:32:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 951,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "4966:1:6",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "4930:37:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 958,
												"nodeType": "IfStatement",
												"src": "4926:125:6",
												"trueBody": {
													"id": 957,
													"nodeType": "Block",
													"src": "4969:82:6",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"id": 954,
																		"name": "beaconImplementation",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 941,
																		"src": "5019:20:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 953,
																	"name": "ERC1967InvalidImplementation",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 741,
																	"src": "4990:28:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 955,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4990:50:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 956,
															"nodeType": "RevertStatement",
															"src": "4983:57:6"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 915,
										"nodeType": "StructuredDocumentation",
										"src": "4543:72:6",
										"text": " @dev Stores a new beacon in the ERC-1967 beacon slot."
									},
									"id": 960,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_setBeacon",
									"nameLocation": "4629:10:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 918,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 917,
												"mutability": "mutable",
												"name": "newBeacon",
												"nameLocation": "4648:9:6",
												"nodeType": "VariableDeclaration",
												"scope": 960,
												"src": "4640:17:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 916,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4640:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4639:19:6"
									},
									"returnParameters": {
										"id": 919,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4667:0:6"
									},
									"scope": 1015,
									"src": "4620:437:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 999,
										"nodeType": "Block",
										"src": "5661:263:6",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 969,
															"name": "newBeacon",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 963,
															"src": "5682:9:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 968,
														"name": "_setBeacon",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 960,
														"src": "5671:10:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 970,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5671:21:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 971,
												"nodeType": "ExpressionStatement",
												"src": "5671:21:6"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 975,
															"name": "newBeacon",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 963,
															"src": "5731:9:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"expression": {
															"id": 972,
															"name": "IERC1967",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 711,
															"src": "5707:8:6",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_IERC1967_$711_$",
																"typeString": "type(contract IERC1967)"
															}
														},
														"id": 974,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "5716:14:6",
														"memberName": "BeaconUpgraded",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 710,
														"src": "5707:23:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 976,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5707:34:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 977,
												"nodeType": "EmitStatement",
												"src": "5702:39:6"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 981,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 978,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 965,
															"src": "5756:4:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 979,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "5761:6:6",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "5756:11:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 980,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "5770:1:6",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "5756:15:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 997,
													"nodeType": "Block",
													"src": "5875:43:6",
													"statements": [
														{
															"expression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 994,
																	"name": "_checkNonPayable",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1014,
																	"src": "5889:16:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
																		"typeString": "function ()"
																	}
																},
																"id": 995,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5889:18:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 996,
															"nodeType": "ExpressionStatement",
															"src": "5889:18:6"
														}
													]
												},
												"id": 998,
												"nodeType": "IfStatement",
												"src": "5752:166:6",
												"trueBody": {
													"id": 993,
													"nodeType": "Block",
													"src": "5773:96:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"expression": {
																				"arguments": [
																					{
																						"id": 986,
																						"name": "newBeacon",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 963,
																						"src": "5824:9:6",
																						"typeDescriptions": {
																							"typeIdentifier": "t_address",
																							"typeString": "address"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_address",
																							"typeString": "address"
																						}
																					],
																					"id": 985,
																					"name": "IBeacon",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1025,
																					"src": "5816:7:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_type$_t_contract$_IBeacon_$1025_$",
																						"typeString": "type(contract IBeacon)"
																					}
																				},
																				"id": 987,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "typeConversion",
																				"lValueRequested": false,
																				"nameLocations": [],
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "5816:18:6",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_contract$_IBeacon_$1025",
																					"typeString": "contract IBeacon"
																				}
																			},
																			"id": 988,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "5835:14:6",
																			"memberName": "implementation",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 1024,
																			"src": "5816:33:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_external_view$__$returns$_t_address_$",
																				"typeString": "function () view external returns (address)"
																			}
																		},
																		"id": 989,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "5816:35:6",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 990,
																		"name": "data",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 965,
																		"src": "5853:4:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	],
																	"expression": {
																		"id": 982,
																		"name": "Address",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1285,
																		"src": "5787:7:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_contract$_Address_$1285_$",
																			"typeString": "type(library Address)"
																		}
																	},
																	"id": 984,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "5795:20:6",
																	"memberName": "functionDelegateCall",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1202,
																	"src": "5787:28:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$returns$_t_bytes_memory_ptr_$",
																		"typeString": "function (address,bytes memory) returns (bytes memory)"
																	}
																},
																"id": 991,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5787:71:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"id": 992,
															"nodeType": "ExpressionStatement",
															"src": "5787:71:6"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 961,
										"nodeType": "StructuredDocumentation",
										"src": "5063:514:6",
										"text": " @dev Change the beacon and trigger a setup call if data is nonempty.\n This function is payable only if the setup call is performed, otherwise `msg.value` is rejected\n to avoid stuck value in the contract.\n Emits an {IERC1967-BeaconUpgraded} event.\n CAUTION: Invoking this function has no effect on an instance of {BeaconProxy} since v5, since\n it uses an immutable beacon without looking at the value of the ERC-1967 beacon slot for\n efficiency."
									},
									"id": 1000,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "upgradeBeaconToAndCall",
									"nameLocation": "5591:22:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 966,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 963,
												"mutability": "mutable",
												"name": "newBeacon",
												"nameLocation": "5622:9:6",
												"nodeType": "VariableDeclaration",
												"scope": 1000,
												"src": "5614:17:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 962,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5614:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 965,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "5646:4:6",
												"nodeType": "VariableDeclaration",
												"scope": 1000,
												"src": "5633:17:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 964,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5633:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5613:38:6"
									},
									"returnParameters": {
										"id": 967,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5661:0:6"
									},
									"scope": 1015,
									"src": "5582:342:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1013,
										"nodeType": "Block",
										"src": "6149:86:6",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1007,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 1004,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967281,
															"src": "6163:3:6",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 1005,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "6167:5:6",
														"memberName": "value",
														"nodeType": "MemberAccess",
														"src": "6163:9:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 1006,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "6175:1:6",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "6163:13:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1012,
												"nodeType": "IfStatement",
												"src": "6159:70:6",
												"trueBody": {
													"id": 1011,
													"nodeType": "Block",
													"src": "6178:51:6",
													"statements": [
														{
															"errorCall": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 1008,
																	"name": "ERC1967NonPayable",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 754,
																	"src": "6199:17:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
																		"typeString": "function () pure returns (error)"
																	}
																},
																"id": 1009,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "6199:19:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 1010,
															"nodeType": "RevertStatement",
															"src": "6192:26:6"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 1001,
										"nodeType": "StructuredDocumentation",
										"src": "5930:178:6",
										"text": " @dev Reverts if `msg.value` is not zero. It can be used to avoid `msg.value` stuck in the contract\n if an upgrade doesn't perform an initialization call."
									},
									"id": 1014,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_checkNonPayable",
									"nameLocation": "6122:16:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1002,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6138:2:6"
									},
									"returnParameters": {
										"id": 1003,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6149:0:6"
									},
									"scope": 1015,
									"src": "6113:122:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								}
							],
							"scope": 1016,
							"src": "496:5741:6",
							"usedErrors": [
								741,
								746,
								751,
								754
							],
							"usedEvents": []
						}
					],
					"src": "114:6124:6"
				},
				"id": 6
			},
			"@openzeppelin/contracts/proxy/beacon/IBeacon.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/proxy/beacon/IBeacon.sol",
					"exportedSymbols": {
						"IBeacon": [
							1025
						]
					},
					"id": 1026,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1017,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "108:24:7"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IBeacon",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 1018,
								"nodeType": "StructuredDocumentation",
								"src": "134:79:7",
								"text": " @dev This is the interface that {BeaconProxy} expects of its beacon."
							},
							"fullyImplemented": false,
							"id": 1025,
							"linearizedBaseContracts": [
								1025
							],
							"name": "IBeacon",
							"nameLocation": "224:7:7",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 1019,
										"nodeType": "StructuredDocumentation",
										"src": "238:168:7",
										"text": " @dev Must return an address that can be used as a delegate call target.\n {UpgradeableBeacon} will check that this address is a contract."
									},
									"functionSelector": "5c60da1b",
									"id": 1024,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "implementation",
									"nameLocation": "420:14:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1020,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "434:2:7"
									},
									"returnParameters": {
										"id": 1023,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1022,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1024,
												"src": "460:7:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1021,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "460:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "459:9:7"
									},
									"scope": 1025,
									"src": "411:58:7",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1026,
							"src": "214:257:7",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "108:364:7"
				},
				"id": 7
			},
			"@openzeppelin/contracts/utils/Address.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/Address.sol",
					"exportedSymbols": {
						"Address": [
							1285
						],
						"Errors": [
							1307
						]
					},
					"id": 1286,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1027,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "101:24:8"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Errors.sol",
							"file": "./Errors.sol",
							"id": 1029,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1286,
							"sourceUnit": 1308,
							"src": "127:36:8",
							"symbolAliases": [
								{
									"foreign": {
										"id": 1028,
										"name": "Errors",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1307,
										"src": "135:6:8",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "Address",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 1030,
								"nodeType": "StructuredDocumentation",
								"src": "165:67:8",
								"text": " @dev Collection of functions related to the address type"
							},
							"fullyImplemented": true,
							"id": 1285,
							"linearizedBaseContracts": [
								1285
							],
							"name": "Address",
							"nameLocation": "241:7:8",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 1031,
										"nodeType": "StructuredDocumentation",
										"src": "255:75:8",
										"text": " @dev There's no code at `target` (it is not a contract)."
									},
									"errorSelector": "9996b315",
									"id": 1035,
									"name": "AddressEmptyCode",
									"nameLocation": "341:16:8",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1034,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1033,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "366:6:8",
												"nodeType": "VariableDeclaration",
												"scope": 1035,
												"src": "358:14:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1032,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "358:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "357:16:8"
									},
									"src": "335:39:8"
								},
								{
									"body": {
										"id": 1082,
										"nodeType": "Block",
										"src": "1361:294:8",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1049,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 1045,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "1383:4:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_Address_$1285",
																		"typeString": "library Address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_Address_$1285",
																		"typeString": "library Address"
																	}
																],
																"id": 1044,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "1375:7:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1043,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "1375:7:8",
																	"typeDescriptions": {}
																}
															},
															"id": 1046,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1375:13:8",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 1047,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1389:7:8",
														"memberName": "balance",
														"nodeType": "MemberAccess",
														"src": "1375:21:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"id": 1048,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1040,
														"src": "1399:6:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1375:30:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1062,
												"nodeType": "IfStatement",
												"src": "1371:125:8",
												"trueBody": {
													"id": 1061,
													"nodeType": "Block",
													"src": "1407:89:8",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"id": 1055,
																					"name": "this",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 4294967268,
																					"src": "1463:4:8",
																					"typeDescriptions": {
																						"typeIdentifier": "t_contract$_Address_$1285",
																						"typeString": "library Address"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_contract$_Address_$1285",
																						"typeString": "library Address"
																					}
																				],
																				"id": 1054,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "ElementaryTypeNameExpression",
																				"src": "1455:7:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_address_$",
																					"typeString": "type(address)"
																				},
																				"typeName": {
																					"id": 1053,
																					"name": "address",
																					"nodeType": "ElementaryTypeName",
																					"src": "1455:7:8",
																					"typeDescriptions": {}
																				}
																			},
																			"id": 1056,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "typeConversion",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "1455:13:8",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"id": 1057,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "1469:7:8",
																		"memberName": "balance",
																		"nodeType": "MemberAccess",
																		"src": "1455:21:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	{
																		"id": 1058,
																		"name": "amount",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1040,
																		"src": "1478:6:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"id": 1050,
																		"name": "Errors",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1307,
																		"src": "1428:6:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_contract$_Errors_$1307_$",
																			"typeString": "type(library Errors)"
																		}
																	},
																	"id": 1052,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "1435:19:8",
																	"memberName": "InsufficientBalance",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1295,
																	"src": "1428:26:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint256_$_t_uint256_$returns$_t_error_$",
																		"typeString": "function (uint256,uint256) pure returns (error)"
																	}
																},
																"id": 1059,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1428:57:8",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 1060,
															"nodeType": "RevertStatement",
															"src": "1421:64:8"
														}
													]
												}
											},
											{
												"assignments": [
													1064,
													1066
												],
												"declarations": [
													{
														"constant": false,
														"id": 1064,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "1512:7:8",
														"nodeType": "VariableDeclaration",
														"scope": 1082,
														"src": "1507:12:8",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 1063,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "1507:4:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 1066,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "1534:10:8",
														"nodeType": "VariableDeclaration",
														"scope": 1082,
														"src": "1521:23:8",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 1065,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "1521:5:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1073,
												"initialValue": {
													"arguments": [
														{
															"hexValue": "",
															"id": 1071,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1578:2:8",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															},
															"value": ""
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																	"typeString": "literal_string \"\""
																}
															],
															"expression": {
																"id": 1067,
																"name": "recipient",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1038,
																"src": "1548:9:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"id": 1068,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1558:4:8",
															"memberName": "call",
															"nodeType": "MemberAccess",
															"src": "1548:14:8",
															"typeDescriptions": {
																"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
																"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
															}
														},
														"id": 1070,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"names": [
															"value"
														],
														"nodeType": "FunctionCallOptions",
														"options": [
															{
																"id": 1069,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1040,
																"src": "1570:6:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"src": "1548:29:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 1072,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1548:33:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1506:75:8"
											},
											{
												"condition": {
													"id": 1075,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "1595:8:8",
													"subExpression": {
														"id": 1074,
														"name": "success",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1064,
														"src": "1596:7:8",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1081,
												"nodeType": "IfStatement",
												"src": "1591:58:8",
												"trueBody": {
													"id": 1080,
													"nodeType": "Block",
													"src": "1605:44:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 1077,
																		"name": "returndata",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1066,
																		"src": "1627:10:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	],
																	"id": 1076,
																	"name": "_revert",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1284,
																	"src": "1619:7:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_bytes_memory_ptr_$returns$__$",
																		"typeString": "function (bytes memory) pure"
																	}
																},
																"id": 1078,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1619:19:8",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1079,
															"nodeType": "ExpressionStatement",
															"src": "1619:19:8"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 1036,
										"nodeType": "StructuredDocumentation",
										"src": "380:905:8",
										"text": " @dev Replacement for Solidity's `transfer`: sends `amount` wei to\n `recipient`, forwarding all available gas and reverting on errors.\n https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\n of certain opcodes, possibly making contracts go over the 2300 gas limit\n imposed by `transfer`, making them unable to receive funds via\n `transfer`. {sendValue} removes this limitation.\n https://consensys.net/diligence/blog/2019/09/stop-using-soliditys-transfer-now/[Learn more].\n IMPORTANT: because control is transferred to `recipient`, care must be\n taken to not create reentrancy vulnerabilities. Consider using\n {ReentrancyGuard} or the\n https://solidity.readthedocs.io/en/v0.8.20/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern]."
									},
									"id": 1083,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sendValue",
									"nameLocation": "1299:9:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1041,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1038,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "1325:9:8",
												"nodeType": "VariableDeclaration",
												"scope": 1083,
												"src": "1309:25:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address_payable",
													"typeString": "address payable"
												},
												"typeName": {
													"id": 1037,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1309:15:8",
													"stateMutability": "payable",
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1040,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "1344:6:8",
												"nodeType": "VariableDeclaration",
												"scope": 1083,
												"src": "1336:14:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1039,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1336:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1308:43:8"
									},
									"returnParameters": {
										"id": 1042,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1361:0:8"
									},
									"scope": 1285,
									"src": "1290:365:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1099,
										"nodeType": "Block",
										"src": "2589:62:8",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1094,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1086,
															"src": "2628:6:8",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1095,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1088,
															"src": "2636:4:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "30",
															"id": 1096,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2642:1:8",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															}
														],
														"id": 1093,
														"name": "functionCallWithValue",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1150,
														"src": "2606:21:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,uint256) returns (bytes memory)"
														}
													},
													"id": 1097,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2606:38:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 1092,
												"id": 1098,
												"nodeType": "Return",
												"src": "2599:45:8"
											}
										]
									},
									"documentation": {
										"id": 1084,
										"nodeType": "StructuredDocumentation",
										"src": "1661:834:8",
										"text": " @dev Performs a Solidity function call using a low level `call`. A\n plain `call` is an unsafe replacement for a function call: use this\n function instead.\n If `target` reverts with a revert reason or custom error, it is bubbled\n up by this function (like regular Solidity function calls). However, if\n the call reverted with no returned reason, this function reverts with a\n {Errors.FailedCall} error.\n Returns the raw returned data. To convert to the expected return value,\n use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\n Requirements:\n - `target` must be a contract.\n - calling `target` with `data` must not revert."
									},
									"id": 1100,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCall",
									"nameLocation": "2509:12:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1089,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1086,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "2530:6:8",
												"nodeType": "VariableDeclaration",
												"scope": 1100,
												"src": "2522:14:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1085,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2522:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1088,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "2551:4:8",
												"nodeType": "VariableDeclaration",
												"scope": 1100,
												"src": "2538:17:8",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1087,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "2538:5:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2521:35:8"
									},
									"returnParameters": {
										"id": 1092,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1091,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1100,
												"src": "2575:12:8",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1090,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "2575:5:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2574:14:8"
									},
									"scope": 1285,
									"src": "2500:151:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1149,
										"nodeType": "Block",
										"src": "3088:294:8",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1118,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 1114,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "3110:4:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_Address_$1285",
																		"typeString": "library Address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_Address_$1285",
																		"typeString": "library Address"
																	}
																],
																"id": 1113,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "3102:7:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1112,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "3102:7:8",
																	"typeDescriptions": {}
																}
															},
															"id": 1115,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3102:13:8",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 1116,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "3116:7:8",
														"memberName": "balance",
														"nodeType": "MemberAccess",
														"src": "3102:21:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"id": 1117,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1107,
														"src": "3126:5:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3102:29:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1131,
												"nodeType": "IfStatement",
												"src": "3098:123:8",
												"trueBody": {
													"id": 1130,
													"nodeType": "Block",
													"src": "3133:88:8",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"id": 1124,
																					"name": "this",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 4294967268,
																					"src": "3189:4:8",
																					"typeDescriptions": {
																						"typeIdentifier": "t_contract$_Address_$1285",
																						"typeString": "library Address"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_contract$_Address_$1285",
																						"typeString": "library Address"
																					}
																				],
																				"id": 1123,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "ElementaryTypeNameExpression",
																				"src": "3181:7:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_address_$",
																					"typeString": "type(address)"
																				},
																				"typeName": {
																					"id": 1122,
																					"name": "address",
																					"nodeType": "ElementaryTypeName",
																					"src": "3181:7:8",
																					"typeDescriptions": {}
																				}
																			},
																			"id": 1125,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "typeConversion",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "3181:13:8",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"id": 1126,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "3195:7:8",
																		"memberName": "balance",
																		"nodeType": "MemberAccess",
																		"src": "3181:21:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	{
																		"id": 1127,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1107,
																		"src": "3204:5:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"id": 1119,
																		"name": "Errors",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1307,
																		"src": "3154:6:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_contract$_Errors_$1307_$",
																			"typeString": "type(library Errors)"
																		}
																	},
																	"id": 1121,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "3161:19:8",
																	"memberName": "InsufficientBalance",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1295,
																	"src": "3154:26:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint256_$_t_uint256_$returns$_t_error_$",
																		"typeString": "function (uint256,uint256) pure returns (error)"
																	}
																},
																"id": 1128,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3154:56:8",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 1129,
															"nodeType": "RevertStatement",
															"src": "3147:63:8"
														}
													]
												}
											},
											{
												"assignments": [
													1133,
													1135
												],
												"declarations": [
													{
														"constant": false,
														"id": 1133,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "3236:7:8",
														"nodeType": "VariableDeclaration",
														"scope": 1149,
														"src": "3231:12:8",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 1132,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "3231:4:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 1135,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "3258:10:8",
														"nodeType": "VariableDeclaration",
														"scope": 1149,
														"src": "3245:23:8",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 1134,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "3245:5:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1142,
												"initialValue": {
													"arguments": [
														{
															"id": 1140,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1105,
															"src": "3298:4:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															],
															"expression": {
																"id": 1136,
																"name": "target",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1103,
																"src": "3272:6:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 1137,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "3279:4:8",
															"memberName": "call",
															"nodeType": "MemberAccess",
															"src": "3272:11:8",
															"typeDescriptions": {
																"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
																"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
															}
														},
														"id": 1139,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"names": [
															"value"
														],
														"nodeType": "FunctionCallOptions",
														"options": [
															{
																"id": 1138,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1107,
																"src": "3291:5:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"src": "3272:25:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 1141,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3272:31:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3230:73:8"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1144,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1103,
															"src": "3347:6:8",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1145,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1133,
															"src": "3355:7:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 1146,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1135,
															"src": "3364:10:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 1143,
														"name": "verifyCallResultFromTarget",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1242,
														"src": "3320:26:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_bool_$_t_bytes_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bool,bytes memory) view returns (bytes memory)"
														}
													},
													"id": 1147,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3320:55:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 1111,
												"id": 1148,
												"nodeType": "Return",
												"src": "3313:62:8"
											}
										]
									},
									"documentation": {
										"id": 1101,
										"nodeType": "StructuredDocumentation",
										"src": "2657:313:8",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but also transferring `value` wei to `target`.\n Requirements:\n - the calling contract must have an ETH balance of at least `value`.\n - the called Solidity function must be `payable`."
									},
									"id": 1150,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCallWithValue",
									"nameLocation": "2984:21:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1108,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1103,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "3014:6:8",
												"nodeType": "VariableDeclaration",
												"scope": 1150,
												"src": "3006:14:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1102,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3006:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1105,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "3035:4:8",
												"nodeType": "VariableDeclaration",
												"scope": 1150,
												"src": "3022:17:8",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1104,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3022:5:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1107,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "3049:5:8",
												"nodeType": "VariableDeclaration",
												"scope": 1150,
												"src": "3041:13:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1106,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3041:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3005:50:8"
									},
									"returnParameters": {
										"id": 1111,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1110,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1150,
												"src": "3074:12:8",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1109,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3074:5:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3073:14:8"
									},
									"scope": 1285,
									"src": "2975:407:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1175,
										"nodeType": "Block",
										"src": "3621:154:8",
										"statements": [
											{
												"assignments": [
													1161,
													1163
												],
												"declarations": [
													{
														"constant": false,
														"id": 1161,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "3637:7:8",
														"nodeType": "VariableDeclaration",
														"scope": 1175,
														"src": "3632:12:8",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 1160,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "3632:4:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 1163,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "3659:10:8",
														"nodeType": "VariableDeclaration",
														"scope": 1175,
														"src": "3646:23:8",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 1162,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "3646:5:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1168,
												"initialValue": {
													"arguments": [
														{
															"id": 1166,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1155,
															"src": "3691:4:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"id": 1164,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1153,
															"src": "3673:6:8",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 1165,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "3680:10:8",
														"memberName": "staticcall",
														"nodeType": "MemberAccess",
														"src": "3673:17:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barestaticcall_view$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
															"typeString": "function (bytes memory) view returns (bool,bytes memory)"
														}
													},
													"id": 1167,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3673:23:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3631:65:8"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1170,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1153,
															"src": "3740:6:8",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1171,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1161,
															"src": "3748:7:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 1172,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1163,
															"src": "3757:10:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 1169,
														"name": "verifyCallResultFromTarget",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1242,
														"src": "3713:26:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_bool_$_t_bytes_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bool,bytes memory) view returns (bytes memory)"
														}
													},
													"id": 1173,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3713:55:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 1159,
												"id": 1174,
												"nodeType": "Return",
												"src": "3706:62:8"
											}
										]
									},
									"documentation": {
										"id": 1151,
										"nodeType": "StructuredDocumentation",
										"src": "3388:128:8",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but performing a static call."
									},
									"id": 1176,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionStaticCall",
									"nameLocation": "3530:18:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1156,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1153,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "3557:6:8",
												"nodeType": "VariableDeclaration",
												"scope": 1176,
												"src": "3549:14:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1152,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3549:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1155,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "3578:4:8",
												"nodeType": "VariableDeclaration",
												"scope": 1176,
												"src": "3565:17:8",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1154,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3565:5:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3548:35:8"
									},
									"returnParameters": {
										"id": 1159,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1158,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1176,
												"src": "3607:12:8",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1157,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3607:5:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3606:14:8"
									},
									"scope": 1285,
									"src": "3521:254:8",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1201,
										"nodeType": "Block",
										"src": "4013:156:8",
										"statements": [
											{
												"assignments": [
													1187,
													1189
												],
												"declarations": [
													{
														"constant": false,
														"id": 1187,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "4029:7:8",
														"nodeType": "VariableDeclaration",
														"scope": 1201,
														"src": "4024:12:8",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 1186,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "4024:4:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 1189,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "4051:10:8",
														"nodeType": "VariableDeclaration",
														"scope": 1201,
														"src": "4038:23:8",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 1188,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "4038:5:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1194,
												"initialValue": {
													"arguments": [
														{
															"id": 1192,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1181,
															"src": "4085:4:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"id": 1190,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1179,
															"src": "4065:6:8",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 1191,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "4072:12:8",
														"memberName": "delegatecall",
														"nodeType": "MemberAccess",
														"src": "4065:19:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_baredelegatecall_nonpayable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
															"typeString": "function (bytes memory) returns (bool,bytes memory)"
														}
													},
													"id": 1193,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4065:25:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4023:67:8"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1196,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1179,
															"src": "4134:6:8",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1197,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1187,
															"src": "4142:7:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 1198,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1189,
															"src": "4151:10:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 1195,
														"name": "verifyCallResultFromTarget",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1242,
														"src": "4107:26:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_bool_$_t_bytes_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bool,bytes memory) view returns (bytes memory)"
														}
													},
													"id": 1199,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4107:55:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 1185,
												"id": 1200,
												"nodeType": "Return",
												"src": "4100:62:8"
											}
										]
									},
									"documentation": {
										"id": 1177,
										"nodeType": "StructuredDocumentation",
										"src": "3781:130:8",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but performing a delegate call."
									},
									"id": 1202,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionDelegateCall",
									"nameLocation": "3925:20:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1182,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1179,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "3954:6:8",
												"nodeType": "VariableDeclaration",
												"scope": 1202,
												"src": "3946:14:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1178,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3946:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1181,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "3975:4:8",
												"nodeType": "VariableDeclaration",
												"scope": 1202,
												"src": "3962:17:8",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1180,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3962:5:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3945:35:8"
									},
									"returnParameters": {
										"id": 1185,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1184,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1202,
												"src": "3999:12:8",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1183,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3999:5:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3998:14:8"
									},
									"scope": 1285,
									"src": "3916:253:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1241,
										"nodeType": "Block",
										"src": "4595:424:8",
										"statements": [
											{
												"condition": {
													"id": 1215,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "4609:8:8",
													"subExpression": {
														"id": 1214,
														"name": "success",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1207,
														"src": "4610:7:8",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 1239,
													"nodeType": "Block",
													"src": "4669:344:8",
													"statements": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"id": 1230,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1224,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"expression": {
																			"id": 1221,
																			"name": "returndata",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1209,
																			"src": "4857:10:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bytes_memory_ptr",
																				"typeString": "bytes memory"
																			}
																		},
																		"id": 1222,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "4868:6:8",
																		"memberName": "length",
																		"nodeType": "MemberAccess",
																		"src": "4857:17:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "==",
																	"rightExpression": {
																		"hexValue": "30",
																		"id": 1223,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "4878:1:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	},
																	"src": "4857:22:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "&&",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1229,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"expression": {
																			"expression": {
																				"id": 1225,
																				"name": "target",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1205,
																				"src": "4883:6:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"id": 1226,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "4890:4:8",
																			"memberName": "code",
																			"nodeType": "MemberAccess",
																			"src": "4883:11:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bytes_memory_ptr",
																				"typeString": "bytes memory"
																			}
																		},
																		"id": 1227,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "4895:6:8",
																		"memberName": "length",
																		"nodeType": "MemberAccess",
																		"src": "4883:18:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "==",
																	"rightExpression": {
																		"hexValue": "30",
																		"id": 1228,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "4905:1:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	},
																	"src": "4883:23:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"src": "4857:49:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 1236,
															"nodeType": "IfStatement",
															"src": "4853:119:8",
															"trueBody": {
																"id": 1235,
																"nodeType": "Block",
																"src": "4908:64:8",
																"statements": [
																	{
																		"errorCall": {
																			"arguments": [
																				{
																					"id": 1232,
																					"name": "target",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1205,
																					"src": "4950:6:8",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				],
																				"id": 1231,
																				"name": "AddressEmptyCode",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1035,
																				"src": "4933:16:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																					"typeString": "function (address) pure returns (error)"
																				}
																			},
																			"id": 1233,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "4933:24:8",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_error",
																				"typeString": "error"
																			}
																		},
																		"id": 1234,
																		"nodeType": "RevertStatement",
																		"src": "4926:31:8"
																	}
																]
															}
														},
														{
															"expression": {
																"id": 1237,
																"name": "returndata",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1209,
																"src": "4992:10:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"functionReturnParameters": 1213,
															"id": 1238,
															"nodeType": "Return",
															"src": "4985:17:8"
														}
													]
												},
												"id": 1240,
												"nodeType": "IfStatement",
												"src": "4605:408:8",
												"trueBody": {
													"id": 1220,
													"nodeType": "Block",
													"src": "4619:44:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 1217,
																		"name": "returndata",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1209,
																		"src": "4641:10:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	],
																	"id": 1216,
																	"name": "_revert",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1284,
																	"src": "4633:7:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_bytes_memory_ptr_$returns$__$",
																		"typeString": "function (bytes memory) pure"
																	}
																},
																"id": 1218,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4633:19:8",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1219,
															"nodeType": "ExpressionStatement",
															"src": "4633:19:8"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 1203,
										"nodeType": "StructuredDocumentation",
										"src": "4175:257:8",
										"text": " @dev Tool to verify that a low level call to smart-contract was successful, and reverts if the target\n was not a contract or bubbling up the revert reason (falling back to {Errors.FailedCall}) in case\n of an unsuccessful call."
									},
									"id": 1242,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "verifyCallResultFromTarget",
									"nameLocation": "4446:26:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1210,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1205,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "4490:6:8",
												"nodeType": "VariableDeclaration",
												"scope": 1242,
												"src": "4482:14:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1204,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4482:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1207,
												"mutability": "mutable",
												"name": "success",
												"nameLocation": "4511:7:8",
												"nodeType": "VariableDeclaration",
												"scope": 1242,
												"src": "4506:12:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1206,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4506:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1209,
												"mutability": "mutable",
												"name": "returndata",
												"nameLocation": "4541:10:8",
												"nodeType": "VariableDeclaration",
												"scope": 1242,
												"src": "4528:23:8",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1208,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4528:5:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4472:85:8"
									},
									"returnParameters": {
										"id": 1213,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1212,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1242,
												"src": "4581:12:8",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1211,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4581:5:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4580:14:8"
									},
									"scope": 1285,
									"src": "4437:582:8",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1263,
										"nodeType": "Block",
										"src": "5323:122:8",
										"statements": [
											{
												"condition": {
													"id": 1253,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "5337:8:8",
													"subExpression": {
														"id": 1252,
														"name": "success",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1245,
														"src": "5338:7:8",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 1261,
													"nodeType": "Block",
													"src": "5397:42:8",
													"statements": [
														{
															"expression": {
																"id": 1259,
																"name": "returndata",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1247,
																"src": "5418:10:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"functionReturnParameters": 1251,
															"id": 1260,
															"nodeType": "Return",
															"src": "5411:17:8"
														}
													]
												},
												"id": 1262,
												"nodeType": "IfStatement",
												"src": "5333:106:8",
												"trueBody": {
													"id": 1258,
													"nodeType": "Block",
													"src": "5347:44:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 1255,
																		"name": "returndata",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1247,
																		"src": "5369:10:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	],
																	"id": 1254,
																	"name": "_revert",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1284,
																	"src": "5361:7:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_bytes_memory_ptr_$returns$__$",
																		"typeString": "function (bytes memory) pure"
																	}
																},
																"id": 1256,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5361:19:8",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1257,
															"nodeType": "ExpressionStatement",
															"src": "5361:19:8"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 1243,
										"nodeType": "StructuredDocumentation",
										"src": "5025:191:8",
										"text": " @dev Tool to verify that a low level call was successful, and reverts if it wasn't, either by bubbling the\n revert reason or with a default {Errors.FailedCall} error."
									},
									"id": 1264,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "verifyCallResult",
									"nameLocation": "5230:16:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1248,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1245,
												"mutability": "mutable",
												"name": "success",
												"nameLocation": "5252:7:8",
												"nodeType": "VariableDeclaration",
												"scope": 1264,
												"src": "5247:12:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1244,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "5247:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1247,
												"mutability": "mutable",
												"name": "returndata",
												"nameLocation": "5274:10:8",
												"nodeType": "VariableDeclaration",
												"scope": 1264,
												"src": "5261:23:8",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1246,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5261:5:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5246:39:8"
									},
									"returnParameters": {
										"id": 1251,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1250,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1264,
												"src": "5309:12:8",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1249,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5309:5:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5308:14:8"
									},
									"scope": 1285,
									"src": "5221:224:8",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1283,
										"nodeType": "Block",
										"src": "5614:432:8",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1273,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 1270,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1267,
															"src": "5690:10:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 1271,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "5701:6:8",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "5690:17:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 1272,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "5710:1:8",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "5690:21:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 1281,
													"nodeType": "Block",
													"src": "5989:51:8",
													"statements": [
														{
															"errorCall": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"expression": {
																		"id": 1276,
																		"name": "Errors",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1307,
																		"src": "6010:6:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_contract$_Errors_$1307_$",
																			"typeString": "type(library Errors)"
																		}
																	},
																	"id": 1278,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "6017:10:8",
																	"memberName": "FailedCall",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1298,
																	"src": "6010:17:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
																		"typeString": "function () pure returns (error)"
																	}
																},
																"id": 1279,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "6010:19:8",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 1280,
															"nodeType": "RevertStatement",
															"src": "6003:26:8"
														}
													]
												},
												"id": 1282,
												"nodeType": "IfStatement",
												"src": "5686:354:8",
												"trueBody": {
													"id": 1275,
													"nodeType": "Block",
													"src": "5713:270:8",
													"statements": [
														{
															"AST": {
																"nativeSrc": "5840:133:8",
																"nodeType": "YulBlock",
																"src": "5840:133:8",
																"statements": [
																	{
																		"nativeSrc": "5858:40:8",
																		"nodeType": "YulVariableDeclaration",
																		"src": "5858:40:8",
																		"value": {
																			"arguments": [
																				{
																					"name": "returndata",
																					"nativeSrc": "5887:10:8",
																					"nodeType": "YulIdentifier",
																					"src": "5887:10:8"
																				}
																			],
																			"functionName": {
																				"name": "mload",
																				"nativeSrc": "5881:5:8",
																				"nodeType": "YulIdentifier",
																				"src": "5881:5:8"
																			},
																			"nativeSrc": "5881:17:8",
																			"nodeType": "YulFunctionCall",
																			"src": "5881:17:8"
																		},
																		"variables": [
																			{
																				"name": "returndata_size",
																				"nativeSrc": "5862:15:8",
																				"nodeType": "YulTypedName",
																				"src": "5862:15:8",
																				"type": ""
																			}
																		]
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nativeSrc": "5926:2:8",
																							"nodeType": "YulLiteral",
																							"src": "5926:2:8",
																							"type": "",
																							"value": "32"
																						},
																						{
																							"name": "returndata",
																							"nativeSrc": "5930:10:8",
																							"nodeType": "YulIdentifier",
																							"src": "5930:10:8"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nativeSrc": "5922:3:8",
																						"nodeType": "YulIdentifier",
																						"src": "5922:3:8"
																					},
																					"nativeSrc": "5922:19:8",
																					"nodeType": "YulFunctionCall",
																					"src": "5922:19:8"
																				},
																				{
																					"name": "returndata_size",
																					"nativeSrc": "5943:15:8",
																					"nodeType": "YulIdentifier",
																					"src": "5943:15:8"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "5915:6:8",
																				"nodeType": "YulIdentifier",
																				"src": "5915:6:8"
																			},
																			"nativeSrc": "5915:44:8",
																			"nodeType": "YulFunctionCall",
																			"src": "5915:44:8"
																		},
																		"nativeSrc": "5915:44:8",
																		"nodeType": "YulExpressionStatement",
																		"src": "5915:44:8"
																	}
																]
															},
															"evmVersion": "prague",
															"externalReferences": [
																{
																	"declaration": 1267,
																	"isOffset": false,
																	"isSlot": false,
																	"src": "5887:10:8",
																	"valueSize": 1
																},
																{
																	"declaration": 1267,
																	"isOffset": false,
																	"isSlot": false,
																	"src": "5930:10:8",
																	"valueSize": 1
																}
															],
															"flags": [
																"memory-safe"
															],
															"id": 1274,
															"nodeType": "InlineAssembly",
															"src": "5815:158:8"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 1265,
										"nodeType": "StructuredDocumentation",
										"src": "5451:103:8",
										"text": " @dev Reverts with returndata if present. Otherwise reverts with {Errors.FailedCall}."
									},
									"id": 1284,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_revert",
									"nameLocation": "5568:7:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1268,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1267,
												"mutability": "mutable",
												"name": "returndata",
												"nameLocation": "5589:10:8",
												"nodeType": "VariableDeclaration",
												"scope": 1284,
												"src": "5576:23:8",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1266,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5576:5:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5575:25:8"
									},
									"returnParameters": {
										"id": 1269,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5614:0:8"
									},
									"scope": 1285,
									"src": "5559:487:8",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "private"
								}
							],
							"scope": 1286,
							"src": "233:5815:8",
							"usedErrors": [
								1035
							],
							"usedEvents": []
						}
					],
					"src": "101:5948:8"
				},
				"id": 8
			},
			"@openzeppelin/contracts/utils/Errors.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/Errors.sol",
					"exportedSymbols": {
						"Errors": [
							1307
						]
					},
					"id": 1308,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1287,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "100:24:9"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "Errors",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 1288,
								"nodeType": "StructuredDocumentation",
								"src": "126:284:9",
								"text": " @dev Collection of common custom errors used in multiple contracts\n IMPORTANT: Backwards compatibility is not guaranteed in future versions of the library.\n It is recommended to avoid relying on the error API for critical functionality.\n _Available since v5.1._"
							},
							"fullyImplemented": true,
							"id": 1307,
							"linearizedBaseContracts": [
								1307
							],
							"name": "Errors",
							"nameLocation": "419:6:9",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 1289,
										"nodeType": "StructuredDocumentation",
										"src": "432:94:9",
										"text": " @dev The ETH balance of the account is not enough to perform the operation."
									},
									"errorSelector": "cf479181",
									"id": 1295,
									"name": "InsufficientBalance",
									"nameLocation": "537:19:9",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1294,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1291,
												"mutability": "mutable",
												"name": "balance",
												"nameLocation": "565:7:9",
												"nodeType": "VariableDeclaration",
												"scope": 1295,
												"src": "557:15:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1290,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "557:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1293,
												"mutability": "mutable",
												"name": "needed",
												"nameLocation": "582:6:9",
												"nodeType": "VariableDeclaration",
												"scope": 1295,
												"src": "574:14:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1292,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "574:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "556:33:9"
									},
									"src": "531:59:9"
								},
								{
									"documentation": {
										"id": 1296,
										"nodeType": "StructuredDocumentation",
										"src": "596:89:9",
										"text": " @dev A call to an address target failed. The target may have reverted."
									},
									"errorSelector": "d6bda275",
									"id": 1298,
									"name": "FailedCall",
									"nameLocation": "696:10:9",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1297,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "706:2:9"
									},
									"src": "690:19:9"
								},
								{
									"documentation": {
										"id": 1299,
										"nodeType": "StructuredDocumentation",
										"src": "715:46:9",
										"text": " @dev The deployment failed."
									},
									"errorSelector": "b06ebf3d",
									"id": 1301,
									"name": "FailedDeployment",
									"nameLocation": "772:16:9",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1300,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "788:2:9"
									},
									"src": "766:25:9"
								},
								{
									"documentation": {
										"id": 1302,
										"nodeType": "StructuredDocumentation",
										"src": "797:58:9",
										"text": " @dev A necessary precompile is missing."
									},
									"errorSelector": "42b01bce",
									"id": 1306,
									"name": "MissingPrecompile",
									"nameLocation": "866:17:9",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1305,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1304,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1306,
												"src": "884:7:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1303,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "884:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "883:9:9"
									},
									"src": "860:33:9"
								}
							],
							"scope": 1308,
							"src": "411:484:9",
							"usedErrors": [
								1295,
								1298,
								1301,
								1306
							],
							"usedEvents": []
						}
					],
					"src": "100:796:9"
				},
				"id": 9
			},
			"@openzeppelin/contracts/utils/StorageSlot.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/StorageSlot.sol",
					"exportedSymbols": {
						"StorageSlot": [
							1431
						]
					},
					"id": 1432,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1309,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "193:24:10"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "StorageSlot",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 1310,
								"nodeType": "StructuredDocumentation",
								"src": "219:1187:10",
								"text": " @dev Library for reading and writing primitive types to specific storage slots.\n Storage slots are often used to avoid storage conflict when dealing with upgradeable contracts.\n This library helps with reading and writing to such slots without the need for inline assembly.\n The functions in this library return Slot structs that contain a `value` member that can be used to read or write.\n Example usage to set ERC-1967 implementation slot:\n ```solidity\n contract ERC1967 {\n     // Define the slot. Alternatively, use the SlotDerivation library to derive the slot.\n     bytes32 internal constant _IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc;\n     function _getImplementation() internal view returns (address) {\n         return StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value;\n     }\n     function _setImplementation(address newImplementation) internal {\n         require(newImplementation.code.length > 0);\n         StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value = newImplementation;\n     }\n }\n ```\n TIP: Consider using this library along with {SlotDerivation}."
							},
							"fullyImplemented": true,
							"id": 1431,
							"linearizedBaseContracts": [
								1431
							],
							"name": "StorageSlot",
							"nameLocation": "1415:11:10",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"canonicalName": "StorageSlot.AddressSlot",
									"id": 1313,
									"members": [
										{
											"constant": false,
											"id": 1312,
											"mutability": "mutable",
											"name": "value",
											"nameLocation": "1470:5:10",
											"nodeType": "VariableDeclaration",
											"scope": 1313,
											"src": "1462:13:10",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 1311,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "1462:7:10",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "AddressSlot",
									"nameLocation": "1440:11:10",
									"nodeType": "StructDefinition",
									"scope": 1431,
									"src": "1433:49:10",
									"visibility": "public"
								},
								{
									"canonicalName": "StorageSlot.BooleanSlot",
									"id": 1316,
									"members": [
										{
											"constant": false,
											"id": 1315,
											"mutability": "mutable",
											"name": "value",
											"nameLocation": "1522:5:10",
											"nodeType": "VariableDeclaration",
											"scope": 1316,
											"src": "1517:10:10",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bool",
												"typeString": "bool"
											},
											"typeName": {
												"id": 1314,
												"name": "bool",
												"nodeType": "ElementaryTypeName",
												"src": "1517:4:10",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "BooleanSlot",
									"nameLocation": "1495:11:10",
									"nodeType": "StructDefinition",
									"scope": 1431,
									"src": "1488:46:10",
									"visibility": "public"
								},
								{
									"canonicalName": "StorageSlot.Bytes32Slot",
									"id": 1319,
									"members": [
										{
											"constant": false,
											"id": 1318,
											"mutability": "mutable",
											"name": "value",
											"nameLocation": "1577:5:10",
											"nodeType": "VariableDeclaration",
											"scope": 1319,
											"src": "1569:13:10",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bytes32",
												"typeString": "bytes32"
											},
											"typeName": {
												"id": 1317,
												"name": "bytes32",
												"nodeType": "ElementaryTypeName",
												"src": "1569:7:10",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "Bytes32Slot",
									"nameLocation": "1547:11:10",
									"nodeType": "StructDefinition",
									"scope": 1431,
									"src": "1540:49:10",
									"visibility": "public"
								},
								{
									"canonicalName": "StorageSlot.Uint256Slot",
									"id": 1322,
									"members": [
										{
											"constant": false,
											"id": 1321,
											"mutability": "mutable",
											"name": "value",
											"nameLocation": "1632:5:10",
											"nodeType": "VariableDeclaration",
											"scope": 1322,
											"src": "1624:13:10",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 1320,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "1624:7:10",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "Uint256Slot",
									"nameLocation": "1602:11:10",
									"nodeType": "StructDefinition",
									"scope": 1431,
									"src": "1595:49:10",
									"visibility": "public"
								},
								{
									"canonicalName": "StorageSlot.Int256Slot",
									"id": 1325,
									"members": [
										{
											"constant": false,
											"id": 1324,
											"mutability": "mutable",
											"name": "value",
											"nameLocation": "1685:5:10",
											"nodeType": "VariableDeclaration",
											"scope": 1325,
											"src": "1678:12:10",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_int256",
												"typeString": "int256"
											},
											"typeName": {
												"id": 1323,
												"name": "int256",
												"nodeType": "ElementaryTypeName",
												"src": "1678:6:10",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "Int256Slot",
									"nameLocation": "1657:10:10",
									"nodeType": "StructDefinition",
									"scope": 1431,
									"src": "1650:47:10",
									"visibility": "public"
								},
								{
									"canonicalName": "StorageSlot.StringSlot",
									"id": 1328,
									"members": [
										{
											"constant": false,
											"id": 1327,
											"mutability": "mutable",
											"name": "value",
											"nameLocation": "1738:5:10",
											"nodeType": "VariableDeclaration",
											"scope": 1328,
											"src": "1731:12:10",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_string_storage_ptr",
												"typeString": "string"
											},
											"typeName": {
												"id": 1326,
												"name": "string",
												"nodeType": "ElementaryTypeName",
												"src": "1731:6:10",
												"typeDescriptions": {
													"typeIdentifier": "t_string_storage_ptr",
													"typeString": "string"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "StringSlot",
									"nameLocation": "1710:10:10",
									"nodeType": "StructDefinition",
									"scope": 1431,
									"src": "1703:47:10",
									"visibility": "public"
								},
								{
									"canonicalName": "StorageSlot.BytesSlot",
									"id": 1331,
									"members": [
										{
											"constant": false,
											"id": 1330,
											"mutability": "mutable",
											"name": "value",
											"nameLocation": "1789:5:10",
											"nodeType": "VariableDeclaration",
											"scope": 1331,
											"src": "1783:11:10",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bytes_storage_ptr",
												"typeString": "bytes"
											},
											"typeName": {
												"id": 1329,
												"name": "bytes",
												"nodeType": "ElementaryTypeName",
												"src": "1783:5:10",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_storage_ptr",
													"typeString": "bytes"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "BytesSlot",
									"nameLocation": "1763:9:10",
									"nodeType": "StructDefinition",
									"scope": 1431,
									"src": "1756:45:10",
									"visibility": "public"
								},
								{
									"body": {
										"id": 1341,
										"nodeType": "Block",
										"src": "1983:79:10",
										"statements": [
											{
												"AST": {
													"nativeSrc": "2018:38:10",
													"nodeType": "YulBlock",
													"src": "2018:38:10",
													"statements": [
														{
															"nativeSrc": "2032:14:10",
															"nodeType": "YulAssignment",
															"src": "2032:14:10",
															"value": {
																"name": "slot",
																"nativeSrc": "2042:4:10",
																"nodeType": "YulIdentifier",
																"src": "2042:4:10"
															},
															"variableNames": [
																{
																	"name": "r.slot",
																	"nativeSrc": "2032:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "2032:6:10"
																}
															]
														}
													]
												},
												"evmVersion": "prague",
												"externalReferences": [
													{
														"declaration": 1338,
														"isOffset": false,
														"isSlot": true,
														"src": "2032:6:10",
														"suffix": "slot",
														"valueSize": 1
													},
													{
														"declaration": 1334,
														"isOffset": false,
														"isSlot": false,
														"src": "2042:4:10",
														"valueSize": 1
													}
												],
												"flags": [
													"memory-safe"
												],
												"id": 1340,
												"nodeType": "InlineAssembly",
												"src": "1993:63:10"
											}
										]
									},
									"documentation": {
										"id": 1332,
										"nodeType": "StructuredDocumentation",
										"src": "1807:87:10",
										"text": " @dev Returns an `AddressSlot` with member `value` located at `slot`."
									},
									"id": 1342,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getAddressSlot",
									"nameLocation": "1908:14:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1335,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1334,
												"mutability": "mutable",
												"name": "slot",
												"nameLocation": "1931:4:10",
												"nodeType": "VariableDeclaration",
												"scope": 1342,
												"src": "1923:12:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1333,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1923:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1922:14:10"
									},
									"returnParameters": {
										"id": 1339,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1338,
												"mutability": "mutable",
												"name": "r",
												"nameLocation": "1980:1:10",
												"nodeType": "VariableDeclaration",
												"scope": 1342,
												"src": "1960:21:10",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_AddressSlot_$1313_storage_ptr",
													"typeString": "struct StorageSlot.AddressSlot"
												},
												"typeName": {
													"id": 1337,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1336,
														"name": "AddressSlot",
														"nameLocations": [
															"1960:11:10"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1313,
														"src": "1960:11:10"
													},
													"referencedDeclaration": 1313,
													"src": "1960:11:10",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_AddressSlot_$1313_storage_ptr",
														"typeString": "struct StorageSlot.AddressSlot"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1959:23:10"
									},
									"scope": 1431,
									"src": "1899:163:10",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1352,
										"nodeType": "Block",
										"src": "2243:79:10",
										"statements": [
											{
												"AST": {
													"nativeSrc": "2278:38:10",
													"nodeType": "YulBlock",
													"src": "2278:38:10",
													"statements": [
														{
															"nativeSrc": "2292:14:10",
															"nodeType": "YulAssignment",
															"src": "2292:14:10",
															"value": {
																"name": "slot",
																"nativeSrc": "2302:4:10",
																"nodeType": "YulIdentifier",
																"src": "2302:4:10"
															},
															"variableNames": [
																{
																	"name": "r.slot",
																	"nativeSrc": "2292:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "2292:6:10"
																}
															]
														}
													]
												},
												"evmVersion": "prague",
												"externalReferences": [
													{
														"declaration": 1349,
														"isOffset": false,
														"isSlot": true,
														"src": "2292:6:10",
														"suffix": "slot",
														"valueSize": 1
													},
													{
														"declaration": 1345,
														"isOffset": false,
														"isSlot": false,
														"src": "2302:4:10",
														"valueSize": 1
													}
												],
												"flags": [
													"memory-safe"
												],
												"id": 1351,
												"nodeType": "InlineAssembly",
												"src": "2253:63:10"
											}
										]
									},
									"documentation": {
										"id": 1343,
										"nodeType": "StructuredDocumentation",
										"src": "2068:86:10",
										"text": " @dev Returns a `BooleanSlot` with member `value` located at `slot`."
									},
									"id": 1353,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getBooleanSlot",
									"nameLocation": "2168:14:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1346,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1345,
												"mutability": "mutable",
												"name": "slot",
												"nameLocation": "2191:4:10",
												"nodeType": "VariableDeclaration",
												"scope": 1353,
												"src": "2183:12:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1344,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2183:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2182:14:10"
									},
									"returnParameters": {
										"id": 1350,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1349,
												"mutability": "mutable",
												"name": "r",
												"nameLocation": "2240:1:10",
												"nodeType": "VariableDeclaration",
												"scope": 1353,
												"src": "2220:21:10",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_BooleanSlot_$1316_storage_ptr",
													"typeString": "struct StorageSlot.BooleanSlot"
												},
												"typeName": {
													"id": 1348,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1347,
														"name": "BooleanSlot",
														"nameLocations": [
															"2220:11:10"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1316,
														"src": "2220:11:10"
													},
													"referencedDeclaration": 1316,
													"src": "2220:11:10",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_BooleanSlot_$1316_storage_ptr",
														"typeString": "struct StorageSlot.BooleanSlot"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2219:23:10"
									},
									"scope": 1431,
									"src": "2159:163:10",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1363,
										"nodeType": "Block",
										"src": "2503:79:10",
										"statements": [
											{
												"AST": {
													"nativeSrc": "2538:38:10",
													"nodeType": "YulBlock",
													"src": "2538:38:10",
													"statements": [
														{
															"nativeSrc": "2552:14:10",
															"nodeType": "YulAssignment",
															"src": "2552:14:10",
															"value": {
																"name": "slot",
																"nativeSrc": "2562:4:10",
																"nodeType": "YulIdentifier",
																"src": "2562:4:10"
															},
															"variableNames": [
																{
																	"name": "r.slot",
																	"nativeSrc": "2552:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "2552:6:10"
																}
															]
														}
													]
												},
												"evmVersion": "prague",
												"externalReferences": [
													{
														"declaration": 1360,
														"isOffset": false,
														"isSlot": true,
														"src": "2552:6:10",
														"suffix": "slot",
														"valueSize": 1
													},
													{
														"declaration": 1356,
														"isOffset": false,
														"isSlot": false,
														"src": "2562:4:10",
														"valueSize": 1
													}
												],
												"flags": [
													"memory-safe"
												],
												"id": 1362,
												"nodeType": "InlineAssembly",
												"src": "2513:63:10"
											}
										]
									},
									"documentation": {
										"id": 1354,
										"nodeType": "StructuredDocumentation",
										"src": "2328:86:10",
										"text": " @dev Returns a `Bytes32Slot` with member `value` located at `slot`."
									},
									"id": 1364,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getBytes32Slot",
									"nameLocation": "2428:14:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1357,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1356,
												"mutability": "mutable",
												"name": "slot",
												"nameLocation": "2451:4:10",
												"nodeType": "VariableDeclaration",
												"scope": 1364,
												"src": "2443:12:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1355,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2443:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2442:14:10"
									},
									"returnParameters": {
										"id": 1361,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1360,
												"mutability": "mutable",
												"name": "r",
												"nameLocation": "2500:1:10",
												"nodeType": "VariableDeclaration",
												"scope": 1364,
												"src": "2480:21:10",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Bytes32Slot_$1319_storage_ptr",
													"typeString": "struct StorageSlot.Bytes32Slot"
												},
												"typeName": {
													"id": 1359,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1358,
														"name": "Bytes32Slot",
														"nameLocations": [
															"2480:11:10"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1319,
														"src": "2480:11:10"
													},
													"referencedDeclaration": 1319,
													"src": "2480:11:10",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Bytes32Slot_$1319_storage_ptr",
														"typeString": "struct StorageSlot.Bytes32Slot"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2479:23:10"
									},
									"scope": 1431,
									"src": "2419:163:10",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1374,
										"nodeType": "Block",
										"src": "2763:79:10",
										"statements": [
											{
												"AST": {
													"nativeSrc": "2798:38:10",
													"nodeType": "YulBlock",
													"src": "2798:38:10",
													"statements": [
														{
															"nativeSrc": "2812:14:10",
															"nodeType": "YulAssignment",
															"src": "2812:14:10",
															"value": {
																"name": "slot",
																"nativeSrc": "2822:4:10",
																"nodeType": "YulIdentifier",
																"src": "2822:4:10"
															},
															"variableNames": [
																{
																	"name": "r.slot",
																	"nativeSrc": "2812:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "2812:6:10"
																}
															]
														}
													]
												},
												"evmVersion": "prague",
												"externalReferences": [
													{
														"declaration": 1371,
														"isOffset": false,
														"isSlot": true,
														"src": "2812:6:10",
														"suffix": "slot",
														"valueSize": 1
													},
													{
														"declaration": 1367,
														"isOffset": false,
														"isSlot": false,
														"src": "2822:4:10",
														"valueSize": 1
													}
												],
												"flags": [
													"memory-safe"
												],
												"id": 1373,
												"nodeType": "InlineAssembly",
												"src": "2773:63:10"
											}
										]
									},
									"documentation": {
										"id": 1365,
										"nodeType": "StructuredDocumentation",
										"src": "2588:86:10",
										"text": " @dev Returns a `Uint256Slot` with member `value` located at `slot`."
									},
									"id": 1375,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getUint256Slot",
									"nameLocation": "2688:14:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1368,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1367,
												"mutability": "mutable",
												"name": "slot",
												"nameLocation": "2711:4:10",
												"nodeType": "VariableDeclaration",
												"scope": 1375,
												"src": "2703:12:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1366,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2703:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2702:14:10"
									},
									"returnParameters": {
										"id": 1372,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1371,
												"mutability": "mutable",
												"name": "r",
												"nameLocation": "2760:1:10",
												"nodeType": "VariableDeclaration",
												"scope": 1375,
												"src": "2740:21:10",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Uint256Slot_$1322_storage_ptr",
													"typeString": "struct StorageSlot.Uint256Slot"
												},
												"typeName": {
													"id": 1370,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1369,
														"name": "Uint256Slot",
														"nameLocations": [
															"2740:11:10"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1322,
														"src": "2740:11:10"
													},
													"referencedDeclaration": 1322,
													"src": "2740:11:10",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Uint256Slot_$1322_storage_ptr",
														"typeString": "struct StorageSlot.Uint256Slot"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2739:23:10"
									},
									"scope": 1431,
									"src": "2679:163:10",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1385,
										"nodeType": "Block",
										"src": "3020:79:10",
										"statements": [
											{
												"AST": {
													"nativeSrc": "3055:38:10",
													"nodeType": "YulBlock",
													"src": "3055:38:10",
													"statements": [
														{
															"nativeSrc": "3069:14:10",
															"nodeType": "YulAssignment",
															"src": "3069:14:10",
															"value": {
																"name": "slot",
																"nativeSrc": "3079:4:10",
																"nodeType": "YulIdentifier",
																"src": "3079:4:10"
															},
															"variableNames": [
																{
																	"name": "r.slot",
																	"nativeSrc": "3069:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "3069:6:10"
																}
															]
														}
													]
												},
												"evmVersion": "prague",
												"externalReferences": [
													{
														"declaration": 1382,
														"isOffset": false,
														"isSlot": true,
														"src": "3069:6:10",
														"suffix": "slot",
														"valueSize": 1
													},
													{
														"declaration": 1378,
														"isOffset": false,
														"isSlot": false,
														"src": "3079:4:10",
														"valueSize": 1
													}
												],
												"flags": [
													"memory-safe"
												],
												"id": 1384,
												"nodeType": "InlineAssembly",
												"src": "3030:63:10"
											}
										]
									},
									"documentation": {
										"id": 1376,
										"nodeType": "StructuredDocumentation",
										"src": "2848:85:10",
										"text": " @dev Returns a `Int256Slot` with member `value` located at `slot`."
									},
									"id": 1386,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getInt256Slot",
									"nameLocation": "2947:13:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1379,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1378,
												"mutability": "mutable",
												"name": "slot",
												"nameLocation": "2969:4:10",
												"nodeType": "VariableDeclaration",
												"scope": 1386,
												"src": "2961:12:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1377,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2961:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2960:14:10"
									},
									"returnParameters": {
										"id": 1383,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1382,
												"mutability": "mutable",
												"name": "r",
												"nameLocation": "3017:1:10",
												"nodeType": "VariableDeclaration",
												"scope": 1386,
												"src": "2998:20:10",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Int256Slot_$1325_storage_ptr",
													"typeString": "struct StorageSlot.Int256Slot"
												},
												"typeName": {
													"id": 1381,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1380,
														"name": "Int256Slot",
														"nameLocations": [
															"2998:10:10"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1325,
														"src": "2998:10:10"
													},
													"referencedDeclaration": 1325,
													"src": "2998:10:10",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Int256Slot_$1325_storage_ptr",
														"typeString": "struct StorageSlot.Int256Slot"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2997:22:10"
									},
									"scope": 1431,
									"src": "2938:161:10",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1396,
										"nodeType": "Block",
										"src": "3277:79:10",
										"statements": [
											{
												"AST": {
													"nativeSrc": "3312:38:10",
													"nodeType": "YulBlock",
													"src": "3312:38:10",
													"statements": [
														{
															"nativeSrc": "3326:14:10",
															"nodeType": "YulAssignment",
															"src": "3326:14:10",
															"value": {
																"name": "slot",
																"nativeSrc": "3336:4:10",
																"nodeType": "YulIdentifier",
																"src": "3336:4:10"
															},
															"variableNames": [
																{
																	"name": "r.slot",
																	"nativeSrc": "3326:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "3326:6:10"
																}
															]
														}
													]
												},
												"evmVersion": "prague",
												"externalReferences": [
													{
														"declaration": 1393,
														"isOffset": false,
														"isSlot": true,
														"src": "3326:6:10",
														"suffix": "slot",
														"valueSize": 1
													},
													{
														"declaration": 1389,
														"isOffset": false,
														"isSlot": false,
														"src": "3336:4:10",
														"valueSize": 1
													}
												],
												"flags": [
													"memory-safe"
												],
												"id": 1395,
												"nodeType": "InlineAssembly",
												"src": "3287:63:10"
											}
										]
									},
									"documentation": {
										"id": 1387,
										"nodeType": "StructuredDocumentation",
										"src": "3105:85:10",
										"text": " @dev Returns a `StringSlot` with member `value` located at `slot`."
									},
									"id": 1397,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getStringSlot",
									"nameLocation": "3204:13:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1390,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1389,
												"mutability": "mutable",
												"name": "slot",
												"nameLocation": "3226:4:10",
												"nodeType": "VariableDeclaration",
												"scope": 1397,
												"src": "3218:12:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1388,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "3218:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3217:14:10"
									},
									"returnParameters": {
										"id": 1394,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1393,
												"mutability": "mutable",
												"name": "r",
												"nameLocation": "3274:1:10",
												"nodeType": "VariableDeclaration",
												"scope": 1397,
												"src": "3255:20:10",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_StringSlot_$1328_storage_ptr",
													"typeString": "struct StorageSlot.StringSlot"
												},
												"typeName": {
													"id": 1392,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1391,
														"name": "StringSlot",
														"nameLocations": [
															"3255:10:10"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1328,
														"src": "3255:10:10"
													},
													"referencedDeclaration": 1328,
													"src": "3255:10:10",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_StringSlot_$1328_storage_ptr",
														"typeString": "struct StorageSlot.StringSlot"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3254:22:10"
									},
									"scope": 1431,
									"src": "3195:161:10",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1407,
										"nodeType": "Block",
										"src": "3558:85:10",
										"statements": [
											{
												"AST": {
													"nativeSrc": "3593:44:10",
													"nodeType": "YulBlock",
													"src": "3593:44:10",
													"statements": [
														{
															"nativeSrc": "3607:20:10",
															"nodeType": "YulAssignment",
															"src": "3607:20:10",
															"value": {
																"name": "store.slot",
																"nativeSrc": "3617:10:10",
																"nodeType": "YulIdentifier",
																"src": "3617:10:10"
															},
															"variableNames": [
																{
																	"name": "r.slot",
																	"nativeSrc": "3607:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "3607:6:10"
																}
															]
														}
													]
												},
												"evmVersion": "prague",
												"externalReferences": [
													{
														"declaration": 1404,
														"isOffset": false,
														"isSlot": true,
														"src": "3607:6:10",
														"suffix": "slot",
														"valueSize": 1
													},
													{
														"declaration": 1400,
														"isOffset": false,
														"isSlot": true,
														"src": "3617:10:10",
														"suffix": "slot",
														"valueSize": 1
													}
												],
												"flags": [
													"memory-safe"
												],
												"id": 1406,
												"nodeType": "InlineAssembly",
												"src": "3568:69:10"
											}
										]
									},
									"documentation": {
										"id": 1398,
										"nodeType": "StructuredDocumentation",
										"src": "3362:101:10",
										"text": " @dev Returns an `StringSlot` representation of the string storage pointer `store`."
									},
									"id": 1408,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getStringSlot",
									"nameLocation": "3477:13:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1401,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1400,
												"mutability": "mutable",
												"name": "store",
												"nameLocation": "3506:5:10",
												"nodeType": "VariableDeclaration",
												"scope": 1408,
												"src": "3491:20:10",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_string_storage_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1399,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "3491:6:10",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3490:22:10"
									},
									"returnParameters": {
										"id": 1405,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1404,
												"mutability": "mutable",
												"name": "r",
												"nameLocation": "3555:1:10",
												"nodeType": "VariableDeclaration",
												"scope": 1408,
												"src": "3536:20:10",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_StringSlot_$1328_storage_ptr",
													"typeString": "struct StorageSlot.StringSlot"
												},
												"typeName": {
													"id": 1403,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1402,
														"name": "StringSlot",
														"nameLocations": [
															"3536:10:10"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1328,
														"src": "3536:10:10"
													},
													"referencedDeclaration": 1328,
													"src": "3536:10:10",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_StringSlot_$1328_storage_ptr",
														"typeString": "struct StorageSlot.StringSlot"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3535:22:10"
									},
									"scope": 1431,
									"src": "3468:175:10",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1418,
										"nodeType": "Block",
										"src": "3818:79:10",
										"statements": [
											{
												"AST": {
													"nativeSrc": "3853:38:10",
													"nodeType": "YulBlock",
													"src": "3853:38:10",
													"statements": [
														{
															"nativeSrc": "3867:14:10",
															"nodeType": "YulAssignment",
															"src": "3867:14:10",
															"value": {
																"name": "slot",
																"nativeSrc": "3877:4:10",
																"nodeType": "YulIdentifier",
																"src": "3877:4:10"
															},
															"variableNames": [
																{
																	"name": "r.slot",
																	"nativeSrc": "3867:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "3867:6:10"
																}
															]
														}
													]
												},
												"evmVersion": "prague",
												"externalReferences": [
													{
														"declaration": 1415,
														"isOffset": false,
														"isSlot": true,
														"src": "3867:6:10",
														"suffix": "slot",
														"valueSize": 1
													},
													{
														"declaration": 1411,
														"isOffset": false,
														"isSlot": false,
														"src": "3877:4:10",
														"valueSize": 1
													}
												],
												"flags": [
													"memory-safe"
												],
												"id": 1417,
												"nodeType": "InlineAssembly",
												"src": "3828:63:10"
											}
										]
									},
									"documentation": {
										"id": 1409,
										"nodeType": "StructuredDocumentation",
										"src": "3649:84:10",
										"text": " @dev Returns a `BytesSlot` with member `value` located at `slot`."
									},
									"id": 1419,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getBytesSlot",
									"nameLocation": "3747:12:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1412,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1411,
												"mutability": "mutable",
												"name": "slot",
												"nameLocation": "3768:4:10",
												"nodeType": "VariableDeclaration",
												"scope": 1419,
												"src": "3760:12:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1410,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "3760:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3759:14:10"
									},
									"returnParameters": {
										"id": 1416,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1415,
												"mutability": "mutable",
												"name": "r",
												"nameLocation": "3815:1:10",
												"nodeType": "VariableDeclaration",
												"scope": 1419,
												"src": "3797:19:10",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_BytesSlot_$1331_storage_ptr",
													"typeString": "struct StorageSlot.BytesSlot"
												},
												"typeName": {
													"id": 1414,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1413,
														"name": "BytesSlot",
														"nameLocations": [
															"3797:9:10"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1331,
														"src": "3797:9:10"
													},
													"referencedDeclaration": 1331,
													"src": "3797:9:10",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_BytesSlot_$1331_storage_ptr",
														"typeString": "struct StorageSlot.BytesSlot"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3796:21:10"
									},
									"scope": 1431,
									"src": "3738:159:10",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1429,
										"nodeType": "Block",
										"src": "4094:85:10",
										"statements": [
											{
												"AST": {
													"nativeSrc": "4129:44:10",
													"nodeType": "YulBlock",
													"src": "4129:44:10",
													"statements": [
														{
															"nativeSrc": "4143:20:10",
															"nodeType": "YulAssignment",
															"src": "4143:20:10",
															"value": {
																"name": "store.slot",
																"nativeSrc": "4153:10:10",
																"nodeType": "YulIdentifier",
																"src": "4153:10:10"
															},
															"variableNames": [
																{
																	"name": "r.slot",
																	"nativeSrc": "4143:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "4143:6:10"
																}
															]
														}
													]
												},
												"evmVersion": "prague",
												"externalReferences": [
													{
														"declaration": 1426,
														"isOffset": false,
														"isSlot": true,
														"src": "4143:6:10",
														"suffix": "slot",
														"valueSize": 1
													},
													{
														"declaration": 1422,
														"isOffset": false,
														"isSlot": true,
														"src": "4153:10:10",
														"suffix": "slot",
														"valueSize": 1
													}
												],
												"flags": [
													"memory-safe"
												],
												"id": 1428,
												"nodeType": "InlineAssembly",
												"src": "4104:69:10"
											}
										]
									},
									"documentation": {
										"id": 1420,
										"nodeType": "StructuredDocumentation",
										"src": "3903:99:10",
										"text": " @dev Returns an `BytesSlot` representation of the bytes storage pointer `store`."
									},
									"id": 1430,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getBytesSlot",
									"nameLocation": "4016:12:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1423,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1422,
												"mutability": "mutable",
												"name": "store",
												"nameLocation": "4043:5:10",
												"nodeType": "VariableDeclaration",
												"scope": 1430,
												"src": "4029:19:10",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_storage_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1421,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4029:5:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4028:21:10"
									},
									"returnParameters": {
										"id": 1427,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1426,
												"mutability": "mutable",
												"name": "r",
												"nameLocation": "4091:1:10",
												"nodeType": "VariableDeclaration",
												"scope": 1430,
												"src": "4073:19:10",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_BytesSlot_$1331_storage_ptr",
													"typeString": "struct StorageSlot.BytesSlot"
												},
												"typeName": {
													"id": 1425,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1424,
														"name": "BytesSlot",
														"nameLocations": [
															"4073:9:10"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1331,
														"src": "4073:9:10"
													},
													"referencedDeclaration": 1331,
													"src": "4073:9:10",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_BytesSlot_$1331_storage_ptr",
														"typeString": "struct StorageSlot.BytesSlot"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4072:21:10"
									},
									"scope": 1431,
									"src": "4007:172:10",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 1432,
							"src": "1407:2774:10",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "193:3989:10"
				},
				"id": 10
			},
			"contracts/PlatformFeeAndRewardSystem.sol": {
				"ast": {
					"absolutePath": "contracts/PlatformFeeAndRewardSystem.sol",
					"exportedSymbols": {
						"ContextUpgradeable": [
							690
						],
						"ERC1967Utils": [
							1015
						],
						"IERC1822Proxiable": [
							721
						],
						"Initializable": [
							462
						],
						"OwnableUpgradeable": [
							194
						],
						"RewardManager": [
							1535
						],
						"UUPSUpgradeable": [
							644
						]
					},
					"id": 1536,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1433,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "33:24:11"
						},
						{
							"absolutePath": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol",
							"file": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol",
							"id": 1434,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1536,
							"sourceUnit": 645,
							"src": "61:77:11",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol",
							"file": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol",
							"id": 1435,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1536,
							"sourceUnit": 463,
							"src": "140:75:11",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol",
							"file": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol",
							"id": 1436,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1536,
							"sourceUnit": 195,
							"src": "217:75:11",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 1437,
										"name": "Initializable",
										"nameLocations": [
											"324:13:11"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 462,
										"src": "324:13:11"
									},
									"id": 1438,
									"nodeType": "InheritanceSpecifier",
									"src": "324:13:11"
								},
								{
									"baseName": {
										"id": 1439,
										"name": "OwnableUpgradeable",
										"nameLocations": [
											"339:18:11"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 194,
										"src": "339:18:11"
									},
									"id": 1440,
									"nodeType": "InheritanceSpecifier",
									"src": "339:18:11"
								}
							],
							"canonicalName": "RewardManager",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 1535,
							"linearizedBaseContracts": [
								1535,
								194,
								690,
								462
							],
							"name": "RewardManager",
							"nameLocation": "307:13:11",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"functionSelector": "26232a2e",
									"id": 1442,
									"mutability": "mutable",
									"name": "platformFee",
									"nameLocation": "380:11:11",
									"nodeType": "VariableDeclaration",
									"scope": 1535,
									"src": "365:26:11",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1441,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "365:7:11",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "49880782",
									"id": 1444,
									"mutability": "mutable",
									"name": "maxRewardPoints",
									"nameLocation": "413:15:11",
									"nodeType": "VariableDeclaration",
									"scope": 1535,
									"src": "398:30:11",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1443,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "398:7:11",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "7ce26644",
									"id": 1448,
									"mutability": "mutable",
									"name": "userRewardPoints",
									"nameLocation": "470:16:11",
									"nodeType": "VariableDeclaration",
									"scope": 1535,
									"src": "435:51:11",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 1447,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 1445,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "443:7:11",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "435:27:11",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 1446,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "454:7:11",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "public"
								},
								{
									"anonymous": false,
									"eventSelector": "e34918ff1c7084970068b53fd71ad6d8b04e9f15d3886cbf006443e6cdc52ea6",
									"id": 1454,
									"name": "RewardDistributed",
									"nameLocation": "501:17:11",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1453,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1450,
												"indexed": true,
												"mutability": "mutable",
												"name": "user",
												"nameLocation": "535:4:11",
												"nodeType": "VariableDeclaration",
												"scope": 1454,
												"src": "519:20:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1449,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "519:7:11",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1452,
												"indexed": false,
												"mutability": "mutable",
												"name": "points",
												"nameLocation": "549:6:11",
												"nodeType": "VariableDeclaration",
												"scope": 1454,
												"src": "541:14:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1451,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "541:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "518:38:11"
									},
									"src": "495:62:11"
								},
								{
									"body": {
										"id": 1476,
										"nodeType": "Block",
										"src": "638:113:11",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 1464,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "664:3:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1465,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "668:6:11",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "664:10:11",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 1463,
														"name": "__Ownable_init",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 54,
														"src": "649:14:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 1466,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "649:26:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1467,
												"nodeType": "ExpressionStatement",
												"src": "649:26:11"
											},
											{
												"expression": {
													"id": 1470,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1468,
														"name": "platformFee",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1442,
														"src": "686:11:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1469,
														"name": "_fee",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1456,
														"src": "700:4:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "686:18:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1471,
												"nodeType": "ExpressionStatement",
												"src": "686:18:11"
											},
											{
												"expression": {
													"id": 1474,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1472,
														"name": "maxRewardPoints",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1444,
														"src": "715:15:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1473,
														"name": "_maxPoints",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1458,
														"src": "733:10:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "715:28:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1475,
												"nodeType": "ExpressionStatement",
												"src": "715:28:11"
											}
										]
									},
									"functionSelector": "e4a30116",
									"id": 1477,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1461,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1460,
												"name": "initializer",
												"nameLocations": [
													"626:11:11"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 302,
												"src": "626:11:11"
											},
											"nodeType": "ModifierInvocation",
											"src": "626:11:11"
										}
									],
									"name": "initialize",
									"nameLocation": "574:10:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1459,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1456,
												"mutability": "mutable",
												"name": "_fee",
												"nameLocation": "593:4:11",
												"nodeType": "VariableDeclaration",
												"scope": 1477,
												"src": "585:12:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1455,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "585:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1458,
												"mutability": "mutable",
												"name": "_maxPoints",
												"nameLocation": "607:10:11",
												"nodeType": "VariableDeclaration",
												"scope": 1477,
												"src": "599:18:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1457,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "599:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "584:34:11"
									},
									"returnParameters": {
										"id": 1462,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "638:0:11"
									},
									"scope": 1535,
									"src": "565:186:11",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1510,
										"nodeType": "Block",
										"src": "834:201:11",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1489,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1487,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1481,
																"src": "853:6:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1488,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "862:1:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "853:10:11",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416d6f756e74206d757374206265203e2030",
															"id": 1490,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "865:20:11",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_01c242f1c806840acb94ec05d87d4647010419c53a053a581e0026b3f6467dbb",
																"typeString": "literal_string \"Amount must be > 0\""
															},
															"value": "Amount must be > 0"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_01c242f1c806840acb94ec05d87d4647010419c53a053a581e0026b3f6467dbb",
																"typeString": "literal_string \"Amount must be > 0\""
															}
														],
														"id": 1486,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "845:7:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1491,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "845:41:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1492,
												"nodeType": "ExpressionStatement",
												"src": "845:41:11"
											},
											{
												"assignments": [
													1494
												],
												"declarations": [
													{
														"constant": false,
														"id": 1494,
														"mutability": "mutable",
														"name": "reward",
														"nameLocation": "905:6:11",
														"nodeType": "VariableDeclaration",
														"scope": 1510,
														"src": "897:14:11",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1493,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "897:7:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1498,
												"initialValue": {
													"arguments": [
														{
															"id": 1496,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1481,
															"src": "930:6:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1495,
														"name": "calculateReward",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1534,
														"src": "914:15:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_uint256_$",
															"typeString": "function (uint256) view returns (uint256)"
														}
													},
													"id": 1497,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "914:23:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "897:40:11"
											},
											{
												"expression": {
													"id": 1503,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1499,
															"name": "userRewardPoints",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1448,
															"src": "948:16:11",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 1501,
														"indexExpression": {
															"id": 1500,
															"name": "user",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1479,
															"src": "965:4:11",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "948:22:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"id": 1502,
														"name": "reward",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1494,
														"src": "974:6:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "948:32:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1504,
												"nodeType": "ExpressionStatement",
												"src": "948:32:11"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 1506,
															"name": "user",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1479,
															"src": "1014:4:11",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1507,
															"name": "reward",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1494,
															"src": "1020:6:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1505,
														"name": "RewardDistributed",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1454,
														"src": "996:17:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 1508,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "996:31:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1509,
												"nodeType": "EmitStatement",
												"src": "991:36:11"
											}
										]
									},
									"functionSelector": "1ec8bb8c",
									"id": 1511,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1484,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1483,
												"name": "onlyOwner",
												"nameLocations": [
													"824:9:11"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 89,
												"src": "824:9:11"
											},
											"nodeType": "ModifierInvocation",
											"src": "824:9:11"
										}
									],
									"name": "distributeReward",
									"nameLocation": "768:16:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1482,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1479,
												"mutability": "mutable",
												"name": "user",
												"nameLocation": "793:4:11",
												"nodeType": "VariableDeclaration",
												"scope": 1511,
												"src": "785:12:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1478,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "785:7:11",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1481,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "807:6:11",
												"nodeType": "VariableDeclaration",
												"scope": 1511,
												"src": "799:14:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1480,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "799:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "784:30:11"
									},
									"returnParameters": {
										"id": 1485,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "834:0:11"
									},
									"scope": 1535,
									"src": "759:276:11",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1533,
										"nodeType": "Block",
										"src": "1114:133:11",
										"statements": [
											{
												"assignments": [
													1519
												],
												"declarations": [
													{
														"constant": false,
														"id": 1519,
														"mutability": "mutable",
														"name": "reward",
														"nameLocation": "1133:6:11",
														"nodeType": "VariableDeclaration",
														"scope": 1533,
														"src": "1125:14:11",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1518,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "1125:7:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1525,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1524,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1522,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 1520,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1513,
															"src": "1142:6:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "*",
														"rightExpression": {
															"id": 1521,
															"name": "platformFee",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1442,
															"src": "1151:11:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "1142:20:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "/",
													"rightExpression": {
														"hexValue": "3130303030",
														"id": 1523,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1165:5:11",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_10000_by_1",
															"typeString": "int_const 10000"
														},
														"value": "10000"
													},
													"src": "1142:28:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1125:45:11"
											},
											{
												"expression": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1528,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 1526,
															"name": "reward",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1519,
															"src": "1188:6:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">",
														"rightExpression": {
															"id": 1527,
															"name": "maxRewardPoints",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1444,
															"src": "1197:15:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "1188:24:11",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"id": 1530,
														"name": "reward",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1519,
														"src": "1233:6:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1531,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "1188:51:11",
													"trueExpression": {
														"id": 1529,
														"name": "maxRewardPoints",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1444,
														"src": "1215:15:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1517,
												"id": 1532,
												"nodeType": "Return",
												"src": "1181:58:11"
											}
										]
									},
									"functionSelector": "d2d7231f",
									"id": 1534,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "calculateReward",
									"nameLocation": "1052:15:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1514,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1513,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "1076:6:11",
												"nodeType": "VariableDeclaration",
												"scope": 1534,
												"src": "1068:14:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1512,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1068:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1067:16:11"
									},
									"returnParameters": {
										"id": 1517,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1516,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1534,
												"src": "1105:7:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1515,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1105:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1104:9:11"
									},
									"scope": 1535,
									"src": "1043:204:11",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								}
							],
							"scope": 1536,
							"src": "298:952:11",
							"usedErrors": [
								30,
								35,
								211,
								214
							],
							"usedEvents": [
								41,
								219,
								1454
							]
						}
					],
					"src": "33:1219:11"
				},
				"id": 11
			}
		}
	}
}