{
	"id": "c1e44527dd34f32ea5aa40e0f756927a",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.30",
	"solcLongVersion": "0.8.30+commit.73712a01",
	"input": {
		"language": "Solidity",
		"sources": {
			"contracts/Logger.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\npragma solidity ^0.8.2;\r\n\r\nimport \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\";\r\nimport \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\";\r\nimport \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\";\r\n\r\n\r\ncontract Logger is Initializable, OwnableUpgradeable {\r\n    struct Transaction {\r\n        address sender;\r\n        address recipient;\r\n        uint256 amount;\r\n        uint256 fee;\r\n        uint256 reward;\r\n        uint48 timestamp;\r\n        string txHash;\r\n        address token;\r\n    }\r\n\r\n    mapping(address => Transaction[]) public userTransactions;\r\n\r\n    event TransactionLogged(address indexed sender, address indexed recipient, uint256 amount);\r\n\r\n    function initialize() public initializer {\r\n        __Ownable_init(msg.sender);\r\n    }\r\n\r\n    function logTransaction(uint48 timestamp, address recipient,   uint256 amount, uint256 fee, uint256 reward, string calldata txHash, address token) external {\r\n        require(recipient != address(0) && token != address(0), \"Invalid address\");\r\n        userTransactions[msg.sender].push(Transaction({\r\n            sender: msg.sender,\r\n            recipient: recipient,\r\n            amount: amount,\r\n            fee: fee,\r\n            reward: reward,\r\n            timestamp: timestamp,\r\n            txHash: txHash,\r\n            token: token\r\n        }));\r\n        emit TransactionLogged(msg.sender, recipient, amount);\r\n    }\r\n}\r\n"
			},
			"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (access/Ownable.sol)\n\npragma solidity ^0.8.20;\n\nimport {ContextUpgradeable} from \"../utils/ContextUpgradeable.sol\";\nimport {Initializable} from \"../proxy/utils/Initializable.sol\";\n\n/**\n * @dev Contract module which provides a basic access control mechanism, where\n * there is an account (an owner) that can be granted exclusive access to\n * specific functions.\n *\n * The initial owner is set to the address provided by the deployer. This can\n * later be changed with {transferOwnership}.\n *\n * This module is used through inheritance. It will make available the modifier\n * `onlyOwner`, which can be applied to your functions to restrict their use to\n * the owner.\n */\nabstract contract OwnableUpgradeable is Initializable, ContextUpgradeable {\n    /// @custom:storage-location erc7201:openzeppelin.storage.Ownable\n    struct OwnableStorage {\n        address _owner;\n    }\n\n    // keccak256(abi.encode(uint256(keccak256(\"openzeppelin.storage.Ownable\")) - 1)) & ~bytes32(uint256(0xff))\n    bytes32 private constant OwnableStorageLocation = 0x9016d09d72d40fdae2fd8ceac6b6234c7706214fd39c1cd1e609a0528c199300;\n\n    function _getOwnableStorage() private pure returns (OwnableStorage storage $) {\n        assembly {\n            $.slot := OwnableStorageLocation\n        }\n    }\n\n    /**\n     * @dev The caller account is not authorized to perform an operation.\n     */\n    error OwnableUnauthorizedAccount(address account);\n\n    /**\n     * @dev The owner is not a valid owner account. (eg. `address(0)`)\n     */\n    error OwnableInvalidOwner(address owner);\n\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\n\n    /**\n     * @dev Initializes the contract setting the address provided by the deployer as the initial owner.\n     */\n    function __Ownable_init(address initialOwner) internal onlyInitializing {\n        __Ownable_init_unchained(initialOwner);\n    }\n\n    function __Ownable_init_unchained(address initialOwner) internal onlyInitializing {\n        if (initialOwner == address(0)) {\n            revert OwnableInvalidOwner(address(0));\n        }\n        _transferOwnership(initialOwner);\n    }\n\n    /**\n     * @dev Throws if called by any account other than the owner.\n     */\n    modifier onlyOwner() {\n        _checkOwner();\n        _;\n    }\n\n    /**\n     * @dev Returns the address of the current owner.\n     */\n    function owner() public view virtual returns (address) {\n        OwnableStorage storage $ = _getOwnableStorage();\n        return $._owner;\n    }\n\n    /**\n     * @dev Throws if the sender is not the owner.\n     */\n    function _checkOwner() internal view virtual {\n        if (owner() != _msgSender()) {\n            revert OwnableUnauthorizedAccount(_msgSender());\n        }\n    }\n\n    /**\n     * @dev Leaves the contract without owner. It will not be possible to call\n     * `onlyOwner` functions. Can only be called by the current owner.\n     *\n     * NOTE: Renouncing ownership will leave the contract without an owner,\n     * thereby disabling any functionality that is only available to the owner.\n     */\n    function renounceOwnership() public virtual onlyOwner {\n        _transferOwnership(address(0));\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Can only be called by the current owner.\n     */\n    function transferOwnership(address newOwner) public virtual onlyOwner {\n        if (newOwner == address(0)) {\n            revert OwnableInvalidOwner(address(0));\n        }\n        _transferOwnership(newOwner);\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Internal function without access restriction.\n     */\n    function _transferOwnership(address newOwner) internal virtual {\n        OwnableStorage storage $ = _getOwnableStorage();\n        address oldOwner = $._owner;\n        $._owner = newOwner;\n        emit OwnershipTransferred(oldOwner, newOwner);\n    }\n}\n"
			},
			"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.3.0) (proxy/utils/Initializable.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev This is a base contract to aid in writing upgradeable contracts, or any kind of contract that will be deployed\n * behind a proxy. Since proxied contracts do not make use of a constructor, it's common to move constructor logic to an\n * external initializer function, usually called `initialize`. It then becomes necessary to protect this initializer\n * function so it can only be called once. The {initializer} modifier provided by this contract will have this effect.\n *\n * The initialization functions use a version number. Once a version number is used, it is consumed and cannot be\n * reused. This mechanism prevents re-execution of each \"step\" but allows the creation of new initialization steps in\n * case an upgrade adds a module that needs to be initialized.\n *\n * For example:\n *\n * [.hljs-theme-light.nopadding]\n * ```solidity\n * contract MyToken is ERC20Upgradeable {\n *     function initialize() initializer public {\n *         __ERC20_init(\"MyToken\", \"MTK\");\n *     }\n * }\n *\n * contract MyTokenV2 is MyToken, ERC20PermitUpgradeable {\n *     function initializeV2() reinitializer(2) public {\n *         __ERC20Permit_init(\"MyToken\");\n *     }\n * }\n * ```\n *\n * TIP: To avoid leaving the proxy in an uninitialized state, the initializer function should be called as early as\n * possible by providing the encoded function call as the `_data` argument to {ERC1967Proxy-constructor}.\n *\n * CAUTION: When used with inheritance, manual care must be taken to not invoke a parent initializer twice, or to ensure\n * that all initializers are idempotent. This is not verified automatically as constructors are by Solidity.\n *\n * [CAUTION]\n * ====\n * Avoid leaving a contract uninitialized.\n *\n * An uninitialized contract can be taken over by an attacker. This applies to both a proxy and its implementation\n * contract, which may impact the proxy. To prevent the implementation contract from being used, you should invoke\n * the {_disableInitializers} function in the constructor to automatically lock it when it is deployed:\n *\n * [.hljs-theme-light.nopadding]\n * ```\n * /// @custom:oz-upgrades-unsafe-allow constructor\n * constructor() {\n *     _disableInitializers();\n * }\n * ```\n * ====\n */\nabstract contract Initializable {\n    /**\n     * @dev Storage of the initializable contract.\n     *\n     * It's implemented on a custom ERC-7201 namespace to reduce the risk of storage collisions\n     * when using with upgradeable contracts.\n     *\n     * @custom:storage-location erc7201:openzeppelin.storage.Initializable\n     */\n    struct InitializableStorage {\n        /**\n         * @dev Indicates that the contract has been initialized.\n         */\n        uint64 _initialized;\n        /**\n         * @dev Indicates that the contract is in the process of being initialized.\n         */\n        bool _initializing;\n    }\n\n    // keccak256(abi.encode(uint256(keccak256(\"openzeppelin.storage.Initializable\")) - 1)) & ~bytes32(uint256(0xff))\n    bytes32 private constant INITIALIZABLE_STORAGE = 0xf0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a00;\n\n    /**\n     * @dev The contract is already initialized.\n     */\n    error InvalidInitialization();\n\n    /**\n     * @dev The contract is not initializing.\n     */\n    error NotInitializing();\n\n    /**\n     * @dev Triggered when the contract has been initialized or reinitialized.\n     */\n    event Initialized(uint64 version);\n\n    /**\n     * @dev A modifier that defines a protected initializer function that can be invoked at most once. In its scope,\n     * `onlyInitializing` functions can be used to initialize parent contracts.\n     *\n     * Similar to `reinitializer(1)`, except that in the context of a constructor an `initializer` may be invoked any\n     * number of times. This behavior in the constructor can be useful during testing and is not expected to be used in\n     * production.\n     *\n     * Emits an {Initialized} event.\n     */\n    modifier initializer() {\n        // solhint-disable-next-line var-name-mixedcase\n        InitializableStorage storage $ = _getInitializableStorage();\n\n        // Cache values to avoid duplicated sloads\n        bool isTopLevelCall = !$._initializing;\n        uint64 initialized = $._initialized;\n\n        // Allowed calls:\n        // - initialSetup: the contract is not in the initializing state and no previous version was\n        //                 initialized\n        // - construction: the contract is initialized at version 1 (no reinitialization) and the\n        //                 current contract is just being deployed\n        bool initialSetup = initialized == 0 && isTopLevelCall;\n        bool construction = initialized == 1 && address(this).code.length == 0;\n\n        if (!initialSetup && !construction) {\n            revert InvalidInitialization();\n        }\n        $._initialized = 1;\n        if (isTopLevelCall) {\n            $._initializing = true;\n        }\n        _;\n        if (isTopLevelCall) {\n            $._initializing = false;\n            emit Initialized(1);\n        }\n    }\n\n    /**\n     * @dev A modifier that defines a protected reinitializer function that can be invoked at most once, and only if the\n     * contract hasn't been initialized to a greater version before. In its scope, `onlyInitializing` functions can be\n     * used to initialize parent contracts.\n     *\n     * A reinitializer may be used after the original initialization step. This is essential to configure modules that\n     * are added through upgrades and that require initialization.\n     *\n     * When `version` is 1, this modifier is similar to `initializer`, except that functions marked with `reinitializer`\n     * cannot be nested. If one is invoked in the context of another, execution will revert.\n     *\n     * Note that versions can jump in increments greater than 1; this implies that if multiple reinitializers coexist in\n     * a contract, executing them in the right order is up to the developer or operator.\n     *\n     * WARNING: Setting the version to 2**64 - 1 will prevent any future reinitialization.\n     *\n     * Emits an {Initialized} event.\n     */\n    modifier reinitializer(uint64 version) {\n        // solhint-disable-next-line var-name-mixedcase\n        InitializableStorage storage $ = _getInitializableStorage();\n\n        if ($._initializing || $._initialized >= version) {\n            revert InvalidInitialization();\n        }\n        $._initialized = version;\n        $._initializing = true;\n        _;\n        $._initializing = false;\n        emit Initialized(version);\n    }\n\n    /**\n     * @dev Modifier to protect an initialization function so that it can only be invoked by functions with the\n     * {initializer} and {reinitializer} modifiers, directly or indirectly.\n     */\n    modifier onlyInitializing() {\n        _checkInitializing();\n        _;\n    }\n\n    /**\n     * @dev Reverts if the contract is not in an initializing state. See {onlyInitializing}.\n     */\n    function _checkInitializing() internal view virtual {\n        if (!_isInitializing()) {\n            revert NotInitializing();\n        }\n    }\n\n    /**\n     * @dev Locks the contract, preventing any future reinitialization. This cannot be part of an initializer call.\n     * Calling this in the constructor of a contract will prevent that contract from being initialized or reinitialized\n     * to any version. It is recommended to use this to lock implementation contracts that are designed to be called\n     * through proxies.\n     *\n     * Emits an {Initialized} event the first time it is successfully executed.\n     */\n    function _disableInitializers() internal virtual {\n        // solhint-disable-next-line var-name-mixedcase\n        InitializableStorage storage $ = _getInitializableStorage();\n\n        if ($._initializing) {\n            revert InvalidInitialization();\n        }\n        if ($._initialized != type(uint64).max) {\n            $._initialized = type(uint64).max;\n            emit Initialized(type(uint64).max);\n        }\n    }\n\n    /**\n     * @dev Returns the highest version that has been initialized. See {reinitializer}.\n     */\n    function _getInitializedVersion() internal view returns (uint64) {\n        return _getInitializableStorage()._initialized;\n    }\n\n    /**\n     * @dev Returns `true` if the contract is currently initializing. See {onlyInitializing}.\n     */\n    function _isInitializing() internal view returns (bool) {\n        return _getInitializableStorage()._initializing;\n    }\n\n    /**\n     * @dev Pointer to storage slot. Allows integrators to override it with a custom storage location.\n     *\n     * NOTE: Consider following the ERC-7201 formula to derive storage locations.\n     */\n    function _initializableStorageSlot() internal pure virtual returns (bytes32) {\n        return INITIALIZABLE_STORAGE;\n    }\n\n    /**\n     * @dev Returns a pointer to the storage namespace.\n     */\n    // solhint-disable-next-line var-name-mixedcase\n    function _getInitializableStorage() private pure returns (InitializableStorage storage $) {\n        bytes32 slot = _initializableStorageSlot();\n        assembly {\n            $.slot := slot\n        }\n    }\n}\n"
			},
			"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.3.0) (proxy/utils/UUPSUpgradeable.sol)\n\npragma solidity ^0.8.22;\n\nimport {IERC1822Proxiable} from \"@openzeppelin/contracts/interfaces/draft-IERC1822.sol\";\nimport {ERC1967Utils} from \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\";\nimport {Initializable} from \"./Initializable.sol\";\n\n/**\n * @dev An upgradeability mechanism designed for UUPS proxies. The functions included here can perform an upgrade of an\n * {ERC1967Proxy}, when this contract is set as the implementation behind such a proxy.\n *\n * A security mechanism ensures that an upgrade does not turn off upgradeability accidentally, although this risk is\n * reinstated if the upgrade retains upgradeability but removes the security mechanism, e.g. by replacing\n * `UUPSUpgradeable` with a custom implementation of upgrades.\n *\n * The {_authorizeUpgrade} function must be overridden to include access restriction to the upgrade mechanism.\n */\nabstract contract UUPSUpgradeable is Initializable, IERC1822Proxiable {\n    /// @custom:oz-upgrades-unsafe-allow state-variable-immutable\n    address private immutable __self = address(this);\n\n    /**\n     * @dev The version of the upgrade interface of the contract. If this getter is missing, both `upgradeTo(address)`\n     * and `upgradeToAndCall(address,bytes)` are present, and `upgradeTo` must be used if no function should be called,\n     * while `upgradeToAndCall` will invoke the `receive` function if the second argument is the empty byte string.\n     * If the getter returns `\"5.0.0\"`, only `upgradeToAndCall(address,bytes)` is present, and the second argument must\n     * be the empty byte string if no function should be called, making it impossible to invoke the `receive` function\n     * during an upgrade.\n     */\n    string public constant UPGRADE_INTERFACE_VERSION = \"5.0.0\";\n\n    /**\n     * @dev The call is from an unauthorized context.\n     */\n    error UUPSUnauthorizedCallContext();\n\n    /**\n     * @dev The storage `slot` is unsupported as a UUID.\n     */\n    error UUPSUnsupportedProxiableUUID(bytes32 slot);\n\n    /**\n     * @dev Check that the execution is being performed through a delegatecall call and that the execution context is\n     * a proxy contract with an implementation (as defined in ERC-1967) pointing to self. This should only be the case\n     * for UUPS and transparent proxies that are using the current contract as their implementation. Execution of a\n     * function through ERC-1167 minimal proxies (clones) would not normally pass this test, but is not guaranteed to\n     * fail.\n     */\n    modifier onlyProxy() {\n        _checkProxy();\n        _;\n    }\n\n    /**\n     * @dev Check that the execution is not being performed through a delegate call. This allows a function to be\n     * callable on the implementing contract but not through proxies.\n     */\n    modifier notDelegated() {\n        _checkNotDelegated();\n        _;\n    }\n\n    function __UUPSUpgradeable_init() internal onlyInitializing {\n    }\n\n    function __UUPSUpgradeable_init_unchained() internal onlyInitializing {\n    }\n    /**\n     * @dev Implementation of the ERC-1822 {proxiableUUID} function. This returns the storage slot used by the\n     * implementation. It is used to validate the implementation's compatibility when performing an upgrade.\n     *\n     * IMPORTANT: A proxy pointing at a proxiable contract should not be considered proxiable itself, because this risks\n     * bricking a proxy that upgrades to it, by delegating to itself until out of gas. Thus it is critical that this\n     * function revert if invoked through a proxy. This is guaranteed by the `notDelegated` modifier.\n     */\n    function proxiableUUID() external view virtual notDelegated returns (bytes32) {\n        return ERC1967Utils.IMPLEMENTATION_SLOT;\n    }\n\n    /**\n     * @dev Upgrade the implementation of the proxy to `newImplementation`, and subsequently execute the function call\n     * encoded in `data`.\n     *\n     * Calls {_authorizeUpgrade}.\n     *\n     * Emits an {Upgraded} event.\n     *\n     * @custom:oz-upgrades-unsafe-allow-reachable delegatecall\n     */\n    function upgradeToAndCall(address newImplementation, bytes memory data) public payable virtual onlyProxy {\n        _authorizeUpgrade(newImplementation);\n        _upgradeToAndCallUUPS(newImplementation, data);\n    }\n\n    /**\n     * @dev Reverts if the execution is not performed via delegatecall or the execution\n     * context is not of a proxy with an ERC-1967 compliant implementation pointing to self.\n     */\n    function _checkProxy() internal view virtual {\n        if (\n            address(this) == __self || // Must be called through delegatecall\n            ERC1967Utils.getImplementation() != __self // Must be called through an active proxy\n        ) {\n            revert UUPSUnauthorizedCallContext();\n        }\n    }\n\n    /**\n     * @dev Reverts if the execution is performed via delegatecall.\n     * See {notDelegated}.\n     */\n    function _checkNotDelegated() internal view virtual {\n        if (address(this) != __self) {\n            // Must not be called through delegatecall\n            revert UUPSUnauthorizedCallContext();\n        }\n    }\n\n    /**\n     * @dev Function that should revert when `msg.sender` is not authorized to upgrade the contract. Called by\n     * {upgradeToAndCall}.\n     *\n     * Normally, this function will use an xref:access.adoc[access control] modifier such as {Ownable-onlyOwner}.\n     *\n     * ```solidity\n     * function _authorizeUpgrade(address) internal onlyOwner {}\n     * ```\n     */\n    function _authorizeUpgrade(address newImplementation) internal virtual;\n\n    /**\n     * @dev Performs an implementation upgrade with a security check for UUPS proxies, and additional setup call.\n     *\n     * As a security check, {proxiableUUID} is invoked in the new implementation, and the return value\n     * is expected to be the implementation slot in ERC-1967.\n     *\n     * Emits an {IERC1967-Upgraded} event.\n     */\n    function _upgradeToAndCallUUPS(address newImplementation, bytes memory data) private {\n        try IERC1822Proxiable(newImplementation).proxiableUUID() returns (bytes32 slot) {\n            if (slot != ERC1967Utils.IMPLEMENTATION_SLOT) {\n                revert UUPSUnsupportedProxiableUUID(slot);\n            }\n            ERC1967Utils.upgradeToAndCall(newImplementation, data);\n        } catch {\n            // The implementation is not UUPS\n            revert ERC1967Utils.ERC1967InvalidImplementation(newImplementation);\n        }\n    }\n}\n"
			},
			"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.2.0) (proxy/ERC1967/ERC1967Utils.sol)\n\npragma solidity ^0.8.22;\n\nimport {IBeacon} from \"../beacon/IBeacon.sol\";\nimport {IERC1967} from \"../../interfaces/IERC1967.sol\";\nimport {Address} from \"../../utils/Address.sol\";\nimport {StorageSlot} from \"../../utils/StorageSlot.sol\";\n\n/**\n * @dev This library provides getters and event emitting update functions for\n * https://eips.ethereum.org/EIPS/eip-1967[ERC-1967] slots.\n */\nlibrary ERC1967Utils {\n    /**\n     * @dev Storage slot with the address of the current implementation.\n     * This is the keccak-256 hash of \"eip1967.proxy.implementation\" subtracted by 1.\n     */\n    // solhint-disable-next-line private-vars-leading-underscore\n    bytes32 internal constant IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc;\n\n    /**\n     * @dev The `implementation` of the proxy is invalid.\n     */\n    error ERC1967InvalidImplementation(address implementation);\n\n    /**\n     * @dev The `admin` of the proxy is invalid.\n     */\n    error ERC1967InvalidAdmin(address admin);\n\n    /**\n     * @dev The `beacon` of the proxy is invalid.\n     */\n    error ERC1967InvalidBeacon(address beacon);\n\n    /**\n     * @dev An upgrade function sees `msg.value > 0` that may be lost.\n     */\n    error ERC1967NonPayable();\n\n    /**\n     * @dev Returns the current implementation address.\n     */\n    function getImplementation() internal view returns (address) {\n        return StorageSlot.getAddressSlot(IMPLEMENTATION_SLOT).value;\n    }\n\n    /**\n     * @dev Stores a new address in the ERC-1967 implementation slot.\n     */\n    function _setImplementation(address newImplementation) private {\n        if (newImplementation.code.length == 0) {\n            revert ERC1967InvalidImplementation(newImplementation);\n        }\n        StorageSlot.getAddressSlot(IMPLEMENTATION_SLOT).value = newImplementation;\n    }\n\n    /**\n     * @dev Performs implementation upgrade with additional setup call if data is nonempty.\n     * This function is payable only if the setup call is performed, otherwise `msg.value` is rejected\n     * to avoid stuck value in the contract.\n     *\n     * Emits an {IERC1967-Upgraded} event.\n     */\n    function upgradeToAndCall(address newImplementation, bytes memory data) internal {\n        _setImplementation(newImplementation);\n        emit IERC1967.Upgraded(newImplementation);\n\n        if (data.length > 0) {\n            Address.functionDelegateCall(newImplementation, data);\n        } else {\n            _checkNonPayable();\n        }\n    }\n\n    /**\n     * @dev Storage slot with the admin of the contract.\n     * This is the keccak-256 hash of \"eip1967.proxy.admin\" subtracted by 1.\n     */\n    // solhint-disable-next-line private-vars-leading-underscore\n    bytes32 internal constant ADMIN_SLOT = 0xb53127684a568b3173ae13b9f8a6016e243e63b6e8ee1178d6a717850b5d6103;\n\n    /**\n     * @dev Returns the current admin.\n     *\n     * TIP: To get this value clients can read directly from the storage slot shown below (specified by ERC-1967) using\n     * the https://eth.wiki/json-rpc/API#eth_getstorageat[`eth_getStorageAt`] RPC call.\n     * `0xb53127684a568b3173ae13b9f8a6016e243e63b6e8ee1178d6a717850b5d6103`\n     */\n    function getAdmin() internal view returns (address) {\n        return StorageSlot.getAddressSlot(ADMIN_SLOT).value;\n    }\n\n    /**\n     * @dev Stores a new address in the ERC-1967 admin slot.\n     */\n    function _setAdmin(address newAdmin) private {\n        if (newAdmin == address(0)) {\n            revert ERC1967InvalidAdmin(address(0));\n        }\n        StorageSlot.getAddressSlot(ADMIN_SLOT).value = newAdmin;\n    }\n\n    /**\n     * @dev Changes the admin of the proxy.\n     *\n     * Emits an {IERC1967-AdminChanged} event.\n     */\n    function changeAdmin(address newAdmin) internal {\n        emit IERC1967.AdminChanged(getAdmin(), newAdmin);\n        _setAdmin(newAdmin);\n    }\n\n    /**\n     * @dev The storage slot of the UpgradeableBeacon contract which defines the implementation for this proxy.\n     * This is the keccak-256 hash of \"eip1967.proxy.beacon\" subtracted by 1.\n     */\n    // solhint-disable-next-line private-vars-leading-underscore\n    bytes32 internal constant BEACON_SLOT = 0xa3f0ad74e5423aebfd80d3ef4346578335a9a72aeaee59ff6cb3582b35133d50;\n\n    /**\n     * @dev Returns the current beacon.\n     */\n    function getBeacon() internal view returns (address) {\n        return StorageSlot.getAddressSlot(BEACON_SLOT).value;\n    }\n\n    /**\n     * @dev Stores a new beacon in the ERC-1967 beacon slot.\n     */\n    function _setBeacon(address newBeacon) private {\n        if (newBeacon.code.length == 0) {\n            revert ERC1967InvalidBeacon(newBeacon);\n        }\n\n        StorageSlot.getAddressSlot(BEACON_SLOT).value = newBeacon;\n\n        address beaconImplementation = IBeacon(newBeacon).implementation();\n        if (beaconImplementation.code.length == 0) {\n            revert ERC1967InvalidImplementation(beaconImplementation);\n        }\n    }\n\n    /**\n     * @dev Change the beacon and trigger a setup call if data is nonempty.\n     * This function is payable only if the setup call is performed, otherwise `msg.value` is rejected\n     * to avoid stuck value in the contract.\n     *\n     * Emits an {IERC1967-BeaconUpgraded} event.\n     *\n     * CAUTION: Invoking this function has no effect on an instance of {BeaconProxy} since v5, since\n     * it uses an immutable beacon without looking at the value of the ERC-1967 beacon slot for\n     * efficiency.\n     */\n    function upgradeBeaconToAndCall(address newBeacon, bytes memory data) internal {\n        _setBeacon(newBeacon);\n        emit IERC1967.BeaconUpgraded(newBeacon);\n\n        if (data.length > 0) {\n            Address.functionDelegateCall(IBeacon(newBeacon).implementation(), data);\n        } else {\n            _checkNonPayable();\n        }\n    }\n\n    /**\n     * @dev Reverts if `msg.value` is not zero. It can be used to avoid `msg.value` stuck in the contract\n     * if an upgrade doesn't perform an initialization call.\n     */\n    function _checkNonPayable() private {\n        if (msg.value > 0) {\n            revert ERC1967NonPayable();\n        }\n    }\n}\n"
			},
			"@openzeppelin/contracts/interfaces/draft-IERC1822.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (interfaces/draft-IERC1822.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev ERC-1822: Universal Upgradeable Proxy Standard (UUPS) documents a method for upgradeability through a simplified\n * proxy whose upgrades are fully controlled by the current implementation.\n */\ninterface IERC1822Proxiable {\n    /**\n     * @dev Returns the storage slot that the proxiable contract assumes is being used to store the implementation\n     * address.\n     *\n     * IMPORTANT: A proxy pointing at a proxiable contract should not be considered proxiable itself, because this risks\n     * bricking a proxy that upgrades to it, by delegating to itself until out of gas. Thus it is critical that this\n     * function revert if invoked through a proxy.\n     */\n    function proxiableUUID() external view returns (bytes32);\n}\n"
			},
			"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.1) (utils/Context.sol)\n\npragma solidity ^0.8.20;\nimport {Initializable} from \"../proxy/utils/Initializable.sol\";\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract ContextUpgradeable is Initializable {\n    function __Context_init() internal onlyInitializing {\n    }\n\n    function __Context_init_unchained() internal onlyInitializing {\n    }\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n\n    function _contextSuffixLength() internal view virtual returns (uint256) {\n        return 0;\n    }\n}\n"
			},
			"@openzeppelin/contracts/utils/StorageSlot.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (utils/StorageSlot.sol)\n// This file was procedurally generated from scripts/generate/templates/StorageSlot.js.\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Library for reading and writing primitive types to specific storage slots.\n *\n * Storage slots are often used to avoid storage conflict when dealing with upgradeable contracts.\n * This library helps with reading and writing to such slots without the need for inline assembly.\n *\n * The functions in this library return Slot structs that contain a `value` member that can be used to read or write.\n *\n * Example usage to set ERC-1967 implementation slot:\n * ```solidity\n * contract ERC1967 {\n *     // Define the slot. Alternatively, use the SlotDerivation library to derive the slot.\n *     bytes32 internal constant _IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc;\n *\n *     function _getImplementation() internal view returns (address) {\n *         return StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value;\n *     }\n *\n *     function _setImplementation(address newImplementation) internal {\n *         require(newImplementation.code.length > 0);\n *         StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value = newImplementation;\n *     }\n * }\n * ```\n *\n * TIP: Consider using this library along with {SlotDerivation}.\n */\nlibrary StorageSlot {\n    struct AddressSlot {\n        address value;\n    }\n\n    struct BooleanSlot {\n        bool value;\n    }\n\n    struct Bytes32Slot {\n        bytes32 value;\n    }\n\n    struct Uint256Slot {\n        uint256 value;\n    }\n\n    struct Int256Slot {\n        int256 value;\n    }\n\n    struct StringSlot {\n        string value;\n    }\n\n    struct BytesSlot {\n        bytes value;\n    }\n\n    /**\n     * @dev Returns an `AddressSlot` with member `value` located at `slot`.\n     */\n    function getAddressSlot(bytes32 slot) internal pure returns (AddressSlot storage r) {\n        assembly (\"memory-safe\") {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns a `BooleanSlot` with member `value` located at `slot`.\n     */\n    function getBooleanSlot(bytes32 slot) internal pure returns (BooleanSlot storage r) {\n        assembly (\"memory-safe\") {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns a `Bytes32Slot` with member `value` located at `slot`.\n     */\n    function getBytes32Slot(bytes32 slot) internal pure returns (Bytes32Slot storage r) {\n        assembly (\"memory-safe\") {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns a `Uint256Slot` with member `value` located at `slot`.\n     */\n    function getUint256Slot(bytes32 slot) internal pure returns (Uint256Slot storage r) {\n        assembly (\"memory-safe\") {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns a `Int256Slot` with member `value` located at `slot`.\n     */\n    function getInt256Slot(bytes32 slot) internal pure returns (Int256Slot storage r) {\n        assembly (\"memory-safe\") {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns a `StringSlot` with member `value` located at `slot`.\n     */\n    function getStringSlot(bytes32 slot) internal pure returns (StringSlot storage r) {\n        assembly (\"memory-safe\") {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns an `StringSlot` representation of the string storage pointer `store`.\n     */\n    function getStringSlot(string storage store) internal pure returns (StringSlot storage r) {\n        assembly (\"memory-safe\") {\n            r.slot := store.slot\n        }\n    }\n\n    /**\n     * @dev Returns a `BytesSlot` with member `value` located at `slot`.\n     */\n    function getBytesSlot(bytes32 slot) internal pure returns (BytesSlot storage r) {\n        assembly (\"memory-safe\") {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns an `BytesSlot` representation of the bytes storage pointer `store`.\n     */\n    function getBytesSlot(bytes storage store) internal pure returns (BytesSlot storage r) {\n        assembly (\"memory-safe\") {\n            r.slot := store.slot\n        }\n    }\n}\n"
			},
			"@openzeppelin/contracts/utils/Address.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.2.0) (utils/Address.sol)\n\npragma solidity ^0.8.20;\n\nimport {Errors} from \"./Errors.sol\";\n\n/**\n * @dev Collection of functions related to the address type\n */\nlibrary Address {\n    /**\n     * @dev There's no code at `target` (it is not a contract).\n     */\n    error AddressEmptyCode(address target);\n\n    /**\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\n     * `recipient`, forwarding all available gas and reverting on errors.\n     *\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\n     * imposed by `transfer`, making them unable to receive funds via\n     * `transfer`. {sendValue} removes this limitation.\n     *\n     * https://consensys.net/diligence/blog/2019/09/stop-using-soliditys-transfer-now/[Learn more].\n     *\n     * IMPORTANT: because control is transferred to `recipient`, care must be\n     * taken to not create reentrancy vulnerabilities. Consider using\n     * {ReentrancyGuard} or the\n     * https://solidity.readthedocs.io/en/v0.8.20/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\n     */\n    function sendValue(address payable recipient, uint256 amount) internal {\n        if (address(this).balance < amount) {\n            revert Errors.InsufficientBalance(address(this).balance, amount);\n        }\n\n        (bool success, bytes memory returndata) = recipient.call{value: amount}(\"\");\n        if (!success) {\n            _revert(returndata);\n        }\n    }\n\n    /**\n     * @dev Performs a Solidity function call using a low level `call`. A\n     * plain `call` is an unsafe replacement for a function call: use this\n     * function instead.\n     *\n     * If `target` reverts with a revert reason or custom error, it is bubbled\n     * up by this function (like regular Solidity function calls). However, if\n     * the call reverted with no returned reason, this function reverts with a\n     * {Errors.FailedCall} error.\n     *\n     * Returns the raw returned data. To convert to the expected return value,\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\n     *\n     * Requirements:\n     *\n     * - `target` must be a contract.\n     * - calling `target` with `data` must not revert.\n     */\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\n        return functionCallWithValue(target, data, 0);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but also transferring `value` wei to `target`.\n     *\n     * Requirements:\n     *\n     * - the calling contract must have an ETH balance of at least `value`.\n     * - the called Solidity function must be `payable`.\n     */\n    function functionCallWithValue(address target, bytes memory data, uint256 value) internal returns (bytes memory) {\n        if (address(this).balance < value) {\n            revert Errors.InsufficientBalance(address(this).balance, value);\n        }\n        (bool success, bytes memory returndata) = target.call{value: value}(data);\n        return verifyCallResultFromTarget(target, success, returndata);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but performing a static call.\n     */\n    function functionStaticCall(address target, bytes memory data) internal view returns (bytes memory) {\n        (bool success, bytes memory returndata) = target.staticcall(data);\n        return verifyCallResultFromTarget(target, success, returndata);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but performing a delegate call.\n     */\n    function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {\n        (bool success, bytes memory returndata) = target.delegatecall(data);\n        return verifyCallResultFromTarget(target, success, returndata);\n    }\n\n    /**\n     * @dev Tool to verify that a low level call to smart-contract was successful, and reverts if the target\n     * was not a contract or bubbling up the revert reason (falling back to {Errors.FailedCall}) in case\n     * of an unsuccessful call.\n     */\n    function verifyCallResultFromTarget(\n        address target,\n        bool success,\n        bytes memory returndata\n    ) internal view returns (bytes memory) {\n        if (!success) {\n            _revert(returndata);\n        } else {\n            // only check if target is a contract if the call was successful and the return data is empty\n            // otherwise we already know that it was a contract\n            if (returndata.length == 0 && target.code.length == 0) {\n                revert AddressEmptyCode(target);\n            }\n            return returndata;\n        }\n    }\n\n    /**\n     * @dev Tool to verify that a low level call was successful, and reverts if it wasn't, either by bubbling the\n     * revert reason or with a default {Errors.FailedCall} error.\n     */\n    function verifyCallResult(bool success, bytes memory returndata) internal pure returns (bytes memory) {\n        if (!success) {\n            _revert(returndata);\n        } else {\n            return returndata;\n        }\n    }\n\n    /**\n     * @dev Reverts with returndata if present. Otherwise reverts with {Errors.FailedCall}.\n     */\n    function _revert(bytes memory returndata) private pure {\n        // Look for revert reason and bubble it up if present\n        if (returndata.length > 0) {\n            // The easiest way to bubble the revert reason is using memory via assembly\n            assembly (\"memory-safe\") {\n                let returndata_size := mload(returndata)\n                revert(add(32, returndata), returndata_size)\n            }\n        } else {\n            revert Errors.FailedCall();\n        }\n    }\n}\n"
			},
			"@openzeppelin/contracts/interfaces/IERC1967.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (interfaces/IERC1967.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev ERC-1967: Proxy Storage Slots. This interface contains the events defined in the ERC.\n */\ninterface IERC1967 {\n    /**\n     * @dev Emitted when the implementation is upgraded.\n     */\n    event Upgraded(address indexed implementation);\n\n    /**\n     * @dev Emitted when the admin account has changed.\n     */\n    event AdminChanged(address previousAdmin, address newAdmin);\n\n    /**\n     * @dev Emitted when the beacon is changed.\n     */\n    event BeaconUpgraded(address indexed beacon);\n}\n"
			},
			"@openzeppelin/contracts/proxy/beacon/IBeacon.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (proxy/beacon/IBeacon.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev This is the interface that {BeaconProxy} expects of its beacon.\n */\ninterface IBeacon {\n    /**\n     * @dev Must return an address that can be used as a delegate call target.\n     *\n     * {UpgradeableBeacon} will check that this address is a contract.\n     */\n    function implementation() external view returns (address);\n}\n"
			},
			"@openzeppelin/contracts/utils/Errors.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (utils/Errors.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Collection of common custom errors used in multiple contracts\n *\n * IMPORTANT: Backwards compatibility is not guaranteed in future versions of the library.\n * It is recommended to avoid relying on the error API for critical functionality.\n *\n * _Available since v5.1._\n */\nlibrary Errors {\n    /**\n     * @dev The ETH balance of the account is not enough to perform the operation.\n     */\n    error InsufficientBalance(uint256 balance, uint256 needed);\n\n    /**\n     * @dev A call to an address target failed. The target may have reverted.\n     */\n    error FailedCall();\n\n    /**\n     * @dev The deployment failed.\n     */\n    error FailedDeployment();\n\n    /**\n     * @dev A necessary precompile is missing.\n     */\n    error MissingPrecompile(address);\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			},
			"remappings": []
		}
	},
	"output": {
		"contracts": {
			"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol": {
				"OwnableUpgradeable": {
					"abi": [
						{
							"inputs": [],
							"name": "InvalidInitialization",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "NotInitializing",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "OwnableInvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "OwnableUnauthorizedAccount",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint64",
									"name": "version",
									"type": "uint64"
								}
							],
							"name": "Initialized",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. The initial owner is set to the address provided by the deployer. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.",
						"errors": {
							"InvalidInitialization()": [
								{
									"details": "The contract is already initialized."
								}
							],
							"NotInitializing()": [
								{
									"details": "The contract is not initializing."
								}
							],
							"OwnableInvalidOwner(address)": [
								{
									"details": "The owner is not a valid owner account. (eg. `address(0)`)"
								}
							],
							"OwnableUnauthorizedAccount(address)": [
								{
									"details": "The caller account is not authorized to perform an operation."
								}
							]
						},
						"events": {
							"Initialized(uint64)": {
								"details": "Triggered when the contract has been initialized or reinitialized."
							}
						},
						"kind": "dev",
						"methods": {
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"owner()": "8da5cb5b",
							"renounceOwnership()": "715018a6",
							"transferOwnership(address)": "f2fde38b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.30+commit.73712a01\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"InvalidInitialization\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NotInitializing\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint64\",\"name\":\"version\",\"type\":\"uint64\"}],\"name\":\"Initialized\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. The initial owner is set to the address provided by the deployer. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.\",\"errors\":{\"InvalidInitialization()\":[{\"details\":\"The contract is already initialized.\"}],\"NotInitializing()\":[{\"details\":\"The contract is not initializing.\"}],\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}]},\"events\":{\"Initialized(uint64)\":{\"details\":\"Triggered when the contract has been initialized or reinitialized.\"}},\"kind\":\"dev\",\"methods\":{\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":\"OwnableUpgradeable\"},\"evmVersion\":\"prague\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":{\"keccak256\":\"0xc163fcf9bb10138631a9ba5564df1fa25db9adff73bd9ee868a8ae1858fe093a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9706d43a0124053d9880f6e31a59f31bc0a6a3dc1acd66ce0a16e1111658c5f6\",\"dweb:/ipfs/QmUFmfowzkRwGtDu36cXV9SPTBHJ3n7dG9xQiK5B28jTf2\"]},\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":{\"keccak256\":\"0xdb4d24ee2c087c391d587cd17adfe5b3f9d93b3110b1388c2ab6c7c0ad1dcd05\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ab7b6d5b9e2b88176312967fe0f0e78f3d9a1422fa5e4b64e2440c35869b5d08\",\"dweb:/ipfs/QmXKYWWyzcLg1B2k7Sb1qkEXgLCYfXecR9wYW5obRzWP1Q\"]},\"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":{\"keccak256\":\"0xdbef5f0c787055227243a7318ef74c8a5a1108ca3a07f2b3a00ef67769e1e397\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://08e39f23d5b4692f9a40803e53a8156b72b4c1f9902a88cd65ba964db103dab9\",\"dweb:/ipfs/QmPKn6EYDgpga7KtpkA8wV2yJCYGMtc9K4LkJfhKX2RVSV\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol": {
				"Initializable": {
					"abi": [
						{
							"inputs": [],
							"name": "InvalidInitialization",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "NotInitializing",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint64",
									"name": "version",
									"type": "uint64"
								}
							],
							"name": "Initialized",
							"type": "event"
						}
					],
					"devdoc": {
						"custom:oz-upgrades-unsafe-allow": "constructor constructor() {     _disableInitializers(); } ``` ====",
						"details": "This is a base contract to aid in writing upgradeable contracts, or any kind of contract that will be deployed behind a proxy. Since proxied contracts do not make use of a constructor, it's common to move constructor logic to an external initializer function, usually called `initialize`. It then becomes necessary to protect this initializer function so it can only be called once. The {initializer} modifier provided by this contract will have this effect. The initialization functions use a version number. Once a version number is used, it is consumed and cannot be reused. This mechanism prevents re-execution of each \"step\" but allows the creation of new initialization steps in case an upgrade adds a module that needs to be initialized. For example: [.hljs-theme-light.nopadding] ```solidity contract MyToken is ERC20Upgradeable {     function initialize() initializer public {         __ERC20_init(\"MyToken\", \"MTK\");     } } contract MyTokenV2 is MyToken, ERC20PermitUpgradeable {     function initializeV2() reinitializer(2) public {         __ERC20Permit_init(\"MyToken\");     } } ``` TIP: To avoid leaving the proxy in an uninitialized state, the initializer function should be called as early as possible by providing the encoded function call as the `_data` argument to {ERC1967Proxy-constructor}. CAUTION: When used with inheritance, manual care must be taken to not invoke a parent initializer twice, or to ensure that all initializers are idempotent. This is not verified automatically as constructors are by Solidity. [CAUTION] ==== Avoid leaving a contract uninitialized. An uninitialized contract can be taken over by an attacker. This applies to both a proxy and its implementation contract, which may impact the proxy. To prevent the implementation contract from being used, you should invoke the {_disableInitializers} function in the constructor to automatically lock it when it is deployed: [.hljs-theme-light.nopadding] ```",
						"errors": {
							"InvalidInitialization()": [
								{
									"details": "The contract is already initialized."
								}
							],
							"NotInitializing()": [
								{
									"details": "The contract is not initializing."
								}
							]
						},
						"events": {
							"Initialized(uint64)": {
								"details": "Triggered when the contract has been initialized or reinitialized."
							}
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.30+commit.73712a01\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"InvalidInitialization\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NotInitializing\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint64\",\"name\":\"version\",\"type\":\"uint64\"}],\"name\":\"Initialized\",\"type\":\"event\"}],\"devdoc\":{\"custom:oz-upgrades-unsafe-allow\":\"constructor constructor() {     _disableInitializers(); } ``` ====\",\"details\":\"This is a base contract to aid in writing upgradeable contracts, or any kind of contract that will be deployed behind a proxy. Since proxied contracts do not make use of a constructor, it's common to move constructor logic to an external initializer function, usually called `initialize`. It then becomes necessary to protect this initializer function so it can only be called once. The {initializer} modifier provided by this contract will have this effect. The initialization functions use a version number. Once a version number is used, it is consumed and cannot be reused. This mechanism prevents re-execution of each \\\"step\\\" but allows the creation of new initialization steps in case an upgrade adds a module that needs to be initialized. For example: [.hljs-theme-light.nopadding] ```solidity contract MyToken is ERC20Upgradeable {     function initialize() initializer public {         __ERC20_init(\\\"MyToken\\\", \\\"MTK\\\");     } } contract MyTokenV2 is MyToken, ERC20PermitUpgradeable {     function initializeV2() reinitializer(2) public {         __ERC20Permit_init(\\\"MyToken\\\");     } } ``` TIP: To avoid leaving the proxy in an uninitialized state, the initializer function should be called as early as possible by providing the encoded function call as the `_data` argument to {ERC1967Proxy-constructor}. CAUTION: When used with inheritance, manual care must be taken to not invoke a parent initializer twice, or to ensure that all initializers are idempotent. This is not verified automatically as constructors are by Solidity. [CAUTION] ==== Avoid leaving a contract uninitialized. An uninitialized contract can be taken over by an attacker. This applies to both a proxy and its implementation contract, which may impact the proxy. To prevent the implementation contract from being used, you should invoke the {_disableInitializers} function in the constructor to automatically lock it when it is deployed: [.hljs-theme-light.nopadding] ```\",\"errors\":{\"InvalidInitialization()\":[{\"details\":\"The contract is already initialized.\"}],\"NotInitializing()\":[{\"details\":\"The contract is not initializing.\"}]},\"events\":{\"Initialized(uint64)\":{\"details\":\"Triggered when the contract has been initialized or reinitialized.\"}},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":\"Initializable\"},\"evmVersion\":\"prague\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":{\"keccak256\":\"0xdb4d24ee2c087c391d587cd17adfe5b3f9d93b3110b1388c2ab6c7c0ad1dcd05\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ab7b6d5b9e2b88176312967fe0f0e78f3d9a1422fa5e4b64e2440c35869b5d08\",\"dweb:/ipfs/QmXKYWWyzcLg1B2k7Sb1qkEXgLCYfXecR9wYW5obRzWP1Q\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol": {
				"UUPSUpgradeable": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "target",
									"type": "address"
								}
							],
							"name": "AddressEmptyCode",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "implementation",
									"type": "address"
								}
							],
							"name": "ERC1967InvalidImplementation",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "ERC1967NonPayable",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "FailedCall",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "InvalidInitialization",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "NotInitializing",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "UUPSUnauthorizedCallContext",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "slot",
									"type": "bytes32"
								}
							],
							"name": "UUPSUnsupportedProxiableUUID",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint64",
									"name": "version",
									"type": "uint64"
								}
							],
							"name": "Initialized",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "implementation",
									"type": "address"
								}
							],
							"name": "Upgraded",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "UPGRADE_INTERFACE_VERSION",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "proxiableUUID",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newImplementation",
									"type": "address"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "upgradeToAndCall",
							"outputs": [],
							"stateMutability": "payable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "An upgradeability mechanism designed for UUPS proxies. The functions included here can perform an upgrade of an {ERC1967Proxy}, when this contract is set as the implementation behind such a proxy. A security mechanism ensures that an upgrade does not turn off upgradeability accidentally, although this risk is reinstated if the upgrade retains upgradeability but removes the security mechanism, e.g. by replacing `UUPSUpgradeable` with a custom implementation of upgrades. The {_authorizeUpgrade} function must be overridden to include access restriction to the upgrade mechanism.",
						"errors": {
							"AddressEmptyCode(address)": [
								{
									"details": "There's no code at `target` (it is not a contract)."
								}
							],
							"ERC1967InvalidImplementation(address)": [
								{
									"details": "The `implementation` of the proxy is invalid."
								}
							],
							"ERC1967NonPayable()": [
								{
									"details": "An upgrade function sees `msg.value > 0` that may be lost."
								}
							],
							"FailedCall()": [
								{
									"details": "A call to an address target failed. The target may have reverted."
								}
							],
							"InvalidInitialization()": [
								{
									"details": "The contract is already initialized."
								}
							],
							"NotInitializing()": [
								{
									"details": "The contract is not initializing."
								}
							],
							"UUPSUnauthorizedCallContext()": [
								{
									"details": "The call is from an unauthorized context."
								}
							],
							"UUPSUnsupportedProxiableUUID(bytes32)": [
								{
									"details": "The storage `slot` is unsupported as a UUID."
								}
							]
						},
						"events": {
							"Initialized(uint64)": {
								"details": "Triggered when the contract has been initialized or reinitialized."
							},
							"Upgraded(address)": {
								"details": "Emitted when the implementation is upgraded."
							}
						},
						"kind": "dev",
						"methods": {
							"proxiableUUID()": {
								"details": "Implementation of the ERC-1822 {proxiableUUID} function. This returns the storage slot used by the implementation. It is used to validate the implementation's compatibility when performing an upgrade. IMPORTANT: A proxy pointing at a proxiable contract should not be considered proxiable itself, because this risks bricking a proxy that upgrades to it, by delegating to itself until out of gas. Thus it is critical that this function revert if invoked through a proxy. This is guaranteed by the `notDelegated` modifier."
							},
							"upgradeToAndCall(address,bytes)": {
								"custom:oz-upgrades-unsafe-allow-reachable": "delegatecall",
								"details": "Upgrade the implementation of the proxy to `newImplementation`, and subsequently execute the function call encoded in `data`. Calls {_authorizeUpgrade}. Emits an {Upgraded} event."
							}
						},
						"stateVariables": {
							"UPGRADE_INTERFACE_VERSION": {
								"details": "The version of the upgrade interface of the contract. If this getter is missing, both `upgradeTo(address)` and `upgradeToAndCall(address,bytes)` are present, and `upgradeTo` must be used if no function should be called, while `upgradeToAndCall` will invoke the `receive` function if the second argument is the empty byte string. If the getter returns `\"5.0.0\"`, only `upgradeToAndCall(address,bytes)` is present, and the second argument must be the empty byte string if no function should be called, making it impossible to invoke the `receive` function during an upgrade."
							},
							"__self": {
								"custom:oz-upgrades-unsafe-allow": "state-variable-immutable"
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"UPGRADE_INTERFACE_VERSION()": "ad3cb1cc",
							"proxiableUUID()": "52d1902d",
							"upgradeToAndCall(address,bytes)": "4f1ef286"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.30+commit.73712a01\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"}],\"name\":\"AddressEmptyCode\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"implementation\",\"type\":\"address\"}],\"name\":\"ERC1967InvalidImplementation\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ERC1967NonPayable\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"FailedCall\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidInitialization\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NotInitializing\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"UUPSUnauthorizedCallContext\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"slot\",\"type\":\"bytes32\"}],\"name\":\"UUPSUnsupportedProxiableUUID\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint64\",\"name\":\"version\",\"type\":\"uint64\"}],\"name\":\"Initialized\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"implementation\",\"type\":\"address\"}],\"name\":\"Upgraded\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"UPGRADE_INTERFACE_VERSION\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"proxiableUUID\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newImplementation\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"upgradeToAndCall\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"An upgradeability mechanism designed for UUPS proxies. The functions included here can perform an upgrade of an {ERC1967Proxy}, when this contract is set as the implementation behind such a proxy. A security mechanism ensures that an upgrade does not turn off upgradeability accidentally, although this risk is reinstated if the upgrade retains upgradeability but removes the security mechanism, e.g. by replacing `UUPSUpgradeable` with a custom implementation of upgrades. The {_authorizeUpgrade} function must be overridden to include access restriction to the upgrade mechanism.\",\"errors\":{\"AddressEmptyCode(address)\":[{\"details\":\"There's no code at `target` (it is not a contract).\"}],\"ERC1967InvalidImplementation(address)\":[{\"details\":\"The `implementation` of the proxy is invalid.\"}],\"ERC1967NonPayable()\":[{\"details\":\"An upgrade function sees `msg.value > 0` that may be lost.\"}],\"FailedCall()\":[{\"details\":\"A call to an address target failed. The target may have reverted.\"}],\"InvalidInitialization()\":[{\"details\":\"The contract is already initialized.\"}],\"NotInitializing()\":[{\"details\":\"The contract is not initializing.\"}],\"UUPSUnauthorizedCallContext()\":[{\"details\":\"The call is from an unauthorized context.\"}],\"UUPSUnsupportedProxiableUUID(bytes32)\":[{\"details\":\"The storage `slot` is unsupported as a UUID.\"}]},\"events\":{\"Initialized(uint64)\":{\"details\":\"Triggered when the contract has been initialized or reinitialized.\"},\"Upgraded(address)\":{\"details\":\"Emitted when the implementation is upgraded.\"}},\"kind\":\"dev\",\"methods\":{\"proxiableUUID()\":{\"details\":\"Implementation of the ERC-1822 {proxiableUUID} function. This returns the storage slot used by the implementation. It is used to validate the implementation's compatibility when performing an upgrade. IMPORTANT: A proxy pointing at a proxiable contract should not be considered proxiable itself, because this risks bricking a proxy that upgrades to it, by delegating to itself until out of gas. Thus it is critical that this function revert if invoked through a proxy. This is guaranteed by the `notDelegated` modifier.\"},\"upgradeToAndCall(address,bytes)\":{\"custom:oz-upgrades-unsafe-allow-reachable\":\"delegatecall\",\"details\":\"Upgrade the implementation of the proxy to `newImplementation`, and subsequently execute the function call encoded in `data`. Calls {_authorizeUpgrade}. Emits an {Upgraded} event.\"}},\"stateVariables\":{\"UPGRADE_INTERFACE_VERSION\":{\"details\":\"The version of the upgrade interface of the contract. If this getter is missing, both `upgradeTo(address)` and `upgradeToAndCall(address,bytes)` are present, and `upgradeTo` must be used if no function should be called, while `upgradeToAndCall` will invoke the `receive` function if the second argument is the empty byte string. If the getter returns `\\\"5.0.0\\\"`, only `upgradeToAndCall(address,bytes)` is present, and the second argument must be the empty byte string if no function should be called, making it impossible to invoke the `receive` function during an upgrade.\"},\"__self\":{\"custom:oz-upgrades-unsafe-allow\":\"state-variable-immutable\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":\"UUPSUpgradeable\"},\"evmVersion\":\"prague\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":{\"keccak256\":\"0xdb4d24ee2c087c391d587cd17adfe5b3f9d93b3110b1388c2ab6c7c0ad1dcd05\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ab7b6d5b9e2b88176312967fe0f0e78f3d9a1422fa5e4b64e2440c35869b5d08\",\"dweb:/ipfs/QmXKYWWyzcLg1B2k7Sb1qkEXgLCYfXecR9wYW5obRzWP1Q\"]},\"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":{\"keccak256\":\"0x574a7451e42724f7de29e2855c392a8a5020acd695169466a18459467d719d63\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5bc189f63b639ee173dd7b6fecc39baf7113bf161776aea22b34c57fdd1872ec\",\"dweb:/ipfs/QmZAf2VtjDLRULqjJkde6LNsxAg12tUqpPqgUQQZbAjgtZ\"]},\"@openzeppelin/contracts/interfaces/IERC1967.sol\":{\"keccak256\":\"0xb25a4f11fa80c702bf5cd85adec90e6f6f507f32f4a8e6f5dbc31e8c10029486\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6917f8a323e7811f041aecd4d9fd6e92455a6fba38a797ac6f6e208c7912b79d\",\"dweb:/ipfs/QmShuYv55wYHGi4EFkDB8QfF7ZCHoKk2efyz3AWY1ExSq7\"]},\"@openzeppelin/contracts/interfaces/draft-IERC1822.sol\":{\"keccak256\":\"0xc42facb5094f2f35f066a7155bda23545e39a3156faef3ddc00185544443ba7d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d3b36282ab029b46bd082619a308a2ea11c309967b9425b7b7a6eb0b0c1c3196\",\"dweb:/ipfs/QmP2YVfDB2FoREax3vJu7QhDnyYRMw52WPrCD4vdT2kuDA\"]},\"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":{\"keccak256\":\"0x8decfa54cec979c824b044b8128cd91d713f72c71fd7dfa54974624d8c949898\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://271f914261a19d87117a777e0924ada545c16191ef9b00cc40b0134fc14ebc70\",\"dweb:/ipfs/QmdvVNWHGHQrGGPonZJs5NuzTevTjZRM2zayKrDJf7WBA2\"]},\"@openzeppelin/contracts/proxy/beacon/IBeacon.sol\":{\"keccak256\":\"0xc59a78b07b44b2cf2e8ab4175fca91e8eca1eee2df7357b8d2a8833e5ea1f64c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5aa4f07e65444784c29cd7bfcc2341b34381e4e5b5da9f0c5bd00d7f430e66fa\",\"dweb:/ipfs/QmWRMh4Q9DpaU9GvsiXmDdoNYMyyece9if7hnfLz7uqzWM\"]},\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0xaaa1d17c1129b127a4a401db2fbd72960e2671474be3d08cae71ccdc42f7624c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://cb2f27cd3952aa667e198fba0d9b7bcec52fbb12c16f013c25fe6fb52b29cc0e\",\"dweb:/ipfs/QmeuohBFoeyDPZA9JNCTEDz3VBfBD4EABWuWXVhHAuEpKR\"]},\"@openzeppelin/contracts/utils/Errors.sol\":{\"keccak256\":\"0x6afa713bfd42cf0f7656efa91201007ac465e42049d7de1d50753a373648c123\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ba1d02f4847670a1b83dec9f7d37f0b0418d6043447b69f3a29a5f9efc547fcf\",\"dweb:/ipfs/QmQ7iH2keLNUKgq2xSWcRmuBE5eZ3F5whYAkAGzCNNoEWB\"]},\"@openzeppelin/contracts/utils/StorageSlot.sol\":{\"keccak256\":\"0xcf74f855663ce2ae00ed8352666b7935f6cddea2932fdf2c3ecd30a9b1cd0e97\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9f660b1f351b757dfe01438e59888f31f33ded3afcf5cb5b0d9bf9aa6f320a8b\",\"dweb:/ipfs/QmarDJ5hZEgBtCmmrVzEZWjub9769eD686jmzb2XpSU1cM\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol": {
				"ContextUpgradeable": {
					"abi": [
						{
							"inputs": [],
							"name": "InvalidInitialization",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "NotInitializing",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint64",
									"name": "version",
									"type": "uint64"
								}
							],
							"name": "Initialized",
							"type": "event"
						}
					],
					"devdoc": {
						"details": "Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.",
						"errors": {
							"InvalidInitialization()": [
								{
									"details": "The contract is already initialized."
								}
							],
							"NotInitializing()": [
								{
									"details": "The contract is not initializing."
								}
							]
						},
						"events": {
							"Initialized(uint64)": {
								"details": "Triggered when the contract has been initialized or reinitialized."
							}
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.30+commit.73712a01\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"InvalidInitialization\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NotInitializing\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint64\",\"name\":\"version\",\"type\":\"uint64\"}],\"name\":\"Initialized\",\"type\":\"event\"}],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"errors\":{\"InvalidInitialization()\":[{\"details\":\"The contract is already initialized.\"}],\"NotInitializing()\":[{\"details\":\"The contract is not initializing.\"}]},\"events\":{\"Initialized(uint64)\":{\"details\":\"Triggered when the contract has been initialized or reinitialized.\"}},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":\"ContextUpgradeable\"},\"evmVersion\":\"prague\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":{\"keccak256\":\"0xdb4d24ee2c087c391d587cd17adfe5b3f9d93b3110b1388c2ab6c7c0ad1dcd05\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ab7b6d5b9e2b88176312967fe0f0e78f3d9a1422fa5e4b64e2440c35869b5d08\",\"dweb:/ipfs/QmXKYWWyzcLg1B2k7Sb1qkEXgLCYfXecR9wYW5obRzWP1Q\"]},\"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":{\"keccak256\":\"0xdbef5f0c787055227243a7318ef74c8a5a1108ca3a07f2b3a00ef67769e1e397\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://08e39f23d5b4692f9a40803e53a8156b72b4c1f9902a88cd65ba964db103dab9\",\"dweb:/ipfs/QmPKn6EYDgpga7KtpkA8wV2yJCYGMtc9K4LkJfhKX2RVSV\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/interfaces/IERC1967.sol": {
				"IERC1967": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "previousAdmin",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "address",
									"name": "newAdmin",
									"type": "address"
								}
							],
							"name": "AdminChanged",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "beacon",
									"type": "address"
								}
							],
							"name": "BeaconUpgraded",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "implementation",
									"type": "address"
								}
							],
							"name": "Upgraded",
							"type": "event"
						}
					],
					"devdoc": {
						"details": "ERC-1967: Proxy Storage Slots. This interface contains the events defined in the ERC.",
						"events": {
							"AdminChanged(address,address)": {
								"details": "Emitted when the admin account has changed."
							},
							"BeaconUpgraded(address)": {
								"details": "Emitted when the beacon is changed."
							},
							"Upgraded(address)": {
								"details": "Emitted when the implementation is upgraded."
							}
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.30+commit.73712a01\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"previousAdmin\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"newAdmin\",\"type\":\"address\"}],\"name\":\"AdminChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"beacon\",\"type\":\"address\"}],\"name\":\"BeaconUpgraded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"implementation\",\"type\":\"address\"}],\"name\":\"Upgraded\",\"type\":\"event\"}],\"devdoc\":{\"details\":\"ERC-1967: Proxy Storage Slots. This interface contains the events defined in the ERC.\",\"events\":{\"AdminChanged(address,address)\":{\"details\":\"Emitted when the admin account has changed.\"},\"BeaconUpgraded(address)\":{\"details\":\"Emitted when the beacon is changed.\"},\"Upgraded(address)\":{\"details\":\"Emitted when the implementation is upgraded.\"}},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/IERC1967.sol\":\"IERC1967\"},\"evmVersion\":\"prague\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/IERC1967.sol\":{\"keccak256\":\"0xb25a4f11fa80c702bf5cd85adec90e6f6f507f32f4a8e6f5dbc31e8c10029486\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6917f8a323e7811f041aecd4d9fd6e92455a6fba38a797ac6f6e208c7912b79d\",\"dweb:/ipfs/QmShuYv55wYHGi4EFkDB8QfF7ZCHoKk2efyz3AWY1ExSq7\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/interfaces/draft-IERC1822.sol": {
				"IERC1822Proxiable": {
					"abi": [
						{
							"inputs": [],
							"name": "proxiableUUID",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "ERC-1822: Universal Upgradeable Proxy Standard (UUPS) documents a method for upgradeability through a simplified proxy whose upgrades are fully controlled by the current implementation.",
						"kind": "dev",
						"methods": {
							"proxiableUUID()": {
								"details": "Returns the storage slot that the proxiable contract assumes is being used to store the implementation address. IMPORTANT: A proxy pointing at a proxiable contract should not be considered proxiable itself, because this risks bricking a proxy that upgrades to it, by delegating to itself until out of gas. Thus it is critical that this function revert if invoked through a proxy."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"proxiableUUID()": "52d1902d"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.30+commit.73712a01\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"proxiableUUID\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"ERC-1822: Universal Upgradeable Proxy Standard (UUPS) documents a method for upgradeability through a simplified proxy whose upgrades are fully controlled by the current implementation.\",\"kind\":\"dev\",\"methods\":{\"proxiableUUID()\":{\"details\":\"Returns the storage slot that the proxiable contract assumes is being used to store the implementation address. IMPORTANT: A proxy pointing at a proxiable contract should not be considered proxiable itself, because this risks bricking a proxy that upgrades to it, by delegating to itself until out of gas. Thus it is critical that this function revert if invoked through a proxy.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC1822.sol\":\"IERC1822Proxiable\"},\"evmVersion\":\"prague\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC1822.sol\":{\"keccak256\":\"0xc42facb5094f2f35f066a7155bda23545e39a3156faef3ddc00185544443ba7d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d3b36282ab029b46bd082619a308a2ea11c309967b9425b7b7a6eb0b0c1c3196\",\"dweb:/ipfs/QmP2YVfDB2FoREax3vJu7QhDnyYRMw52WPrCD4vdT2kuDA\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol": {
				"ERC1967Utils": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "admin",
									"type": "address"
								}
							],
							"name": "ERC1967InvalidAdmin",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "beacon",
									"type": "address"
								}
							],
							"name": "ERC1967InvalidBeacon",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "implementation",
									"type": "address"
								}
							],
							"name": "ERC1967InvalidImplementation",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "ERC1967NonPayable",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "This library provides getters and event emitting update functions for https://eips.ethereum.org/EIPS/eip-1967[ERC-1967] slots.",
						"errors": {
							"ERC1967InvalidAdmin(address)": [
								{
									"details": "The `admin` of the proxy is invalid."
								}
							],
							"ERC1967InvalidBeacon(address)": [
								{
									"details": "The `beacon` of the proxy is invalid."
								}
							],
							"ERC1967InvalidImplementation(address)": [
								{
									"details": "The `implementation` of the proxy is invalid."
								}
							],
							"ERC1967NonPayable()": [
								{
									"details": "An upgrade function sees `msg.value > 0` that may be lost."
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"stateVariables": {
							"ADMIN_SLOT": {
								"details": "Storage slot with the admin of the contract. This is the keccak-256 hash of \"eip1967.proxy.admin\" subtracted by 1."
							},
							"BEACON_SLOT": {
								"details": "The storage slot of the UpgradeableBeacon contract which defines the implementation for this proxy. This is the keccak-256 hash of \"eip1967.proxy.beacon\" subtracted by 1."
							},
							"IMPLEMENTATION_SLOT": {
								"details": "Storage slot with the address of the current implementation. This is the keccak-256 hash of \"eip1967.proxy.implementation\" subtracted by 1."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":496:6237  library ERC1967Utils {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":496:6237  library ERC1967Utils {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      revert(0x00, 0x00)\n\n    auxdata: 0xa2646970667358221220089058072fc6f42f8f62f38fcf5cfc02f77bb71f0e72f0efc0812efd2799168964736f6c634300081e0033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "6055604b600b8282823980515f1a607314603f577f4e487b71000000000000000000000000000000000000000000000000000000005f525f60045260245ffd5b305f52607381538281f3fe730000000000000000000000000000000000000000301460806040525f5ffdfea2646970667358221220089058072fc6f42f8f62f38fcf5cfc02f77bb71f0e72f0efc0812efd2799168964736f6c634300081e0033",
							"opcodes": "PUSH1 0x55 PUSH1 0x4B PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH0 BYTE PUSH1 0x73 EQ PUSH1 0x3F JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST ADDRESS PUSH0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 PUSH0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 ADDMOD SWAP1 PC SMOD 0x2F 0xC6 DELEGATECALL 0x2F DUP16 PUSH3 0xF38FCF TLOAD 0xFC MUL 0xF7 PUSH28 0xB71F0E72F0EFC0812EFD2799168964736F6C634300081E0033000000 ",
							"sourceMap": "496:5741:6:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "730000000000000000000000000000000000000000301460806040525f5ffdfea2646970667358221220089058072fc6f42f8f62f38fcf5cfc02f77bb71f0e72f0efc0812efd2799168964736f6c634300081e0033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 PUSH0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 ADDMOD SWAP1 PC SMOD 0x2F 0xC6 DELEGATECALL 0x2F DUP16 PUSH3 0xF38FCF TLOAD 0xFC MUL 0xF7 PUSH28 0xB71F0E72F0EFC0812EFD2799168964736F6C634300081E0033000000 ",
							"sourceMap": "496:5741:6:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17000",
								"executionCost": "92",
								"totalCost": "17092"
							},
							"internal": {
								"_checkNonPayable()": "infinite",
								"_setAdmin(address)": "infinite",
								"_setBeacon(address)": "infinite",
								"_setImplementation(address)": "infinite",
								"changeAdmin(address)": "infinite",
								"getAdmin()": "infinite",
								"getBeacon()": "infinite",
								"getImplementation()": "infinite",
								"upgradeBeaconToAndCall(address,bytes memory)": "infinite",
								"upgradeToAndCall(address,bytes memory)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 496,
									"end": 6237,
									"name": "PUSH #[$]",
									"source": 6,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 496,
									"end": 6237,
									"name": "PUSH [$]",
									"source": 6,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 496,
									"end": 6237,
									"name": "PUSH",
									"source": 6,
									"value": "B"
								},
								{
									"begin": 496,
									"end": 6237,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 496,
									"end": 6237,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 496,
									"end": 6237,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 496,
									"end": 6237,
									"name": "CODECOPY",
									"source": 6
								},
								{
									"begin": 496,
									"end": 6237,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 496,
									"end": 6237,
									"name": "MLOAD",
									"source": 6
								},
								{
									"begin": 496,
									"end": 6237,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 496,
									"end": 6237,
									"name": "BYTE",
									"source": 6
								},
								{
									"begin": 496,
									"end": 6237,
									"name": "PUSH",
									"source": 6,
									"value": "73"
								},
								{
									"begin": 496,
									"end": 6237,
									"name": "EQ",
									"source": 6
								},
								{
									"begin": 496,
									"end": 6237,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "1"
								},
								{
									"begin": 496,
									"end": 6237,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 496,
									"end": 6237,
									"name": "PUSH",
									"source": 6,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 496,
									"end": 6237,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 496,
									"end": 6237,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 496,
									"end": 6237,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 496,
									"end": 6237,
									"name": "PUSH",
									"source": 6,
									"value": "4"
								},
								{
									"begin": 496,
									"end": 6237,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 496,
									"end": 6237,
									"name": "PUSH",
									"source": 6,
									"value": "24"
								},
								{
									"begin": 496,
									"end": 6237,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 496,
									"end": 6237,
									"name": "REVERT",
									"source": 6
								},
								{
									"begin": 496,
									"end": 6237,
									"name": "tag",
									"source": 6,
									"value": "1"
								},
								{
									"begin": 496,
									"end": 6237,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 496,
									"end": 6237,
									"name": "ADDRESS",
									"source": 6
								},
								{
									"begin": 496,
									"end": 6237,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 496,
									"end": 6237,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 496,
									"end": 6237,
									"name": "PUSH",
									"source": 6,
									"value": "73"
								},
								{
									"begin": 496,
									"end": 6237,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 496,
									"end": 6237,
									"name": "MSTORE8",
									"source": 6
								},
								{
									"begin": 496,
									"end": 6237,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 496,
									"end": 6237,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 496,
									"end": 6237,
									"name": "RETURN",
									"source": 6
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220089058072fc6f42f8f62f38fcf5cfc02f77bb71f0e72f0efc0812efd2799168964736f6c634300081e0033",
									".code": [
										{
											"begin": 496,
											"end": 6237,
											"name": "PUSHDEPLOYADDRESS",
											"source": 6
										},
										{
											"begin": 496,
											"end": 6237,
											"name": "ADDRESS",
											"source": 6
										},
										{
											"begin": 496,
											"end": 6237,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 496,
											"end": 6237,
											"name": "PUSH",
											"source": 6,
											"value": "80"
										},
										{
											"begin": 496,
											"end": 6237,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 496,
											"end": 6237,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 496,
											"end": 6237,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 496,
											"end": 6237,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 496,
											"end": 6237,
											"name": "REVERT",
											"source": 6
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol",
								"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol",
								"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol",
								"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol",
								"@openzeppelin/contracts/interfaces/IERC1967.sol",
								"@openzeppelin/contracts/interfaces/draft-IERC1822.sol",
								"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol",
								"@openzeppelin/contracts/proxy/beacon/IBeacon.sol",
								"@openzeppelin/contracts/utils/Address.sol",
								"@openzeppelin/contracts/utils/Errors.sol",
								"@openzeppelin/contracts/utils/StorageSlot.sol",
								"contracts/Logger.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.30+commit.73712a01\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"admin\",\"type\":\"address\"}],\"name\":\"ERC1967InvalidAdmin\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"beacon\",\"type\":\"address\"}],\"name\":\"ERC1967InvalidBeacon\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"implementation\",\"type\":\"address\"}],\"name\":\"ERC1967InvalidImplementation\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ERC1967NonPayable\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"This library provides getters and event emitting update functions for https://eips.ethereum.org/EIPS/eip-1967[ERC-1967] slots.\",\"errors\":{\"ERC1967InvalidAdmin(address)\":[{\"details\":\"The `admin` of the proxy is invalid.\"}],\"ERC1967InvalidBeacon(address)\":[{\"details\":\"The `beacon` of the proxy is invalid.\"}],\"ERC1967InvalidImplementation(address)\":[{\"details\":\"The `implementation` of the proxy is invalid.\"}],\"ERC1967NonPayable()\":[{\"details\":\"An upgrade function sees `msg.value > 0` that may be lost.\"}]},\"kind\":\"dev\",\"methods\":{},\"stateVariables\":{\"ADMIN_SLOT\":{\"details\":\"Storage slot with the admin of the contract. This is the keccak-256 hash of \\\"eip1967.proxy.admin\\\" subtracted by 1.\"},\"BEACON_SLOT\":{\"details\":\"The storage slot of the UpgradeableBeacon contract which defines the implementation for this proxy. This is the keccak-256 hash of \\\"eip1967.proxy.beacon\\\" subtracted by 1.\"},\"IMPLEMENTATION_SLOT\":{\"details\":\"Storage slot with the address of the current implementation. This is the keccak-256 hash of \\\"eip1967.proxy.implementation\\\" subtracted by 1.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":\"ERC1967Utils\"},\"evmVersion\":\"prague\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/IERC1967.sol\":{\"keccak256\":\"0xb25a4f11fa80c702bf5cd85adec90e6f6f507f32f4a8e6f5dbc31e8c10029486\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6917f8a323e7811f041aecd4d9fd6e92455a6fba38a797ac6f6e208c7912b79d\",\"dweb:/ipfs/QmShuYv55wYHGi4EFkDB8QfF7ZCHoKk2efyz3AWY1ExSq7\"]},\"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":{\"keccak256\":\"0x8decfa54cec979c824b044b8128cd91d713f72c71fd7dfa54974624d8c949898\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://271f914261a19d87117a777e0924ada545c16191ef9b00cc40b0134fc14ebc70\",\"dweb:/ipfs/QmdvVNWHGHQrGGPonZJs5NuzTevTjZRM2zayKrDJf7WBA2\"]},\"@openzeppelin/contracts/proxy/beacon/IBeacon.sol\":{\"keccak256\":\"0xc59a78b07b44b2cf2e8ab4175fca91e8eca1eee2df7357b8d2a8833e5ea1f64c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5aa4f07e65444784c29cd7bfcc2341b34381e4e5b5da9f0c5bd00d7f430e66fa\",\"dweb:/ipfs/QmWRMh4Q9DpaU9GvsiXmDdoNYMyyece9if7hnfLz7uqzWM\"]},\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0xaaa1d17c1129b127a4a401db2fbd72960e2671474be3d08cae71ccdc42f7624c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://cb2f27cd3952aa667e198fba0d9b7bcec52fbb12c16f013c25fe6fb52b29cc0e\",\"dweb:/ipfs/QmeuohBFoeyDPZA9JNCTEDz3VBfBD4EABWuWXVhHAuEpKR\"]},\"@openzeppelin/contracts/utils/Errors.sol\":{\"keccak256\":\"0x6afa713bfd42cf0f7656efa91201007ac465e42049d7de1d50753a373648c123\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ba1d02f4847670a1b83dec9f7d37f0b0418d6043447b69f3a29a5f9efc547fcf\",\"dweb:/ipfs/QmQ7iH2keLNUKgq2xSWcRmuBE5eZ3F5whYAkAGzCNNoEWB\"]},\"@openzeppelin/contracts/utils/StorageSlot.sol\":{\"keccak256\":\"0xcf74f855663ce2ae00ed8352666b7935f6cddea2932fdf2c3ecd30a9b1cd0e97\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9f660b1f351b757dfe01438e59888f31f33ded3afcf5cb5b0d9bf9aa6f320a8b\",\"dweb:/ipfs/QmarDJ5hZEgBtCmmrVzEZWjub9769eD686jmzb2XpSU1cM\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/proxy/beacon/IBeacon.sol": {
				"IBeacon": {
					"abi": [
						{
							"inputs": [],
							"name": "implementation",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "This is the interface that {BeaconProxy} expects of its beacon.",
						"kind": "dev",
						"methods": {
							"implementation()": {
								"details": "Must return an address that can be used as a delegate call target. {UpgradeableBeacon} will check that this address is a contract."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"implementation()": "5c60da1b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.30+commit.73712a01\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"implementation\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"This is the interface that {BeaconProxy} expects of its beacon.\",\"kind\":\"dev\",\"methods\":{\"implementation()\":{\"details\":\"Must return an address that can be used as a delegate call target. {UpgradeableBeacon} will check that this address is a contract.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/proxy/beacon/IBeacon.sol\":\"IBeacon\"},\"evmVersion\":\"prague\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/proxy/beacon/IBeacon.sol\":{\"keccak256\":\"0xc59a78b07b44b2cf2e8ab4175fca91e8eca1eee2df7357b8d2a8833e5ea1f64c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5aa4f07e65444784c29cd7bfcc2341b34381e4e5b5da9f0c5bd00d7f430e66fa\",\"dweb:/ipfs/QmWRMh4Q9DpaU9GvsiXmDdoNYMyyece9if7hnfLz7uqzWM\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/Address.sol": {
				"Address": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "target",
									"type": "address"
								}
							],
							"name": "AddressEmptyCode",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Collection of functions related to the address type",
						"errors": {
							"AddressEmptyCode(address)": [
								{
									"details": "There's no code at `target` (it is not a contract)."
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts/utils/Address.sol\":233:6048  library Address {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts/utils/Address.sol\":233:6048  library Address {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      revert(0x00, 0x00)\n\n    auxdata: 0xa264697066735822122016bd345b94ef3845ef4ed93445c8d5f14e5010d9c744bb2ec9847009404477d664736f6c634300081e0033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "6055604b600b8282823980515f1a607314603f577f4e487b71000000000000000000000000000000000000000000000000000000005f525f60045260245ffd5b305f52607381538281f3fe730000000000000000000000000000000000000000301460806040525f5ffdfea264697066735822122016bd345b94ef3845ef4ed93445c8d5f14e5010d9c744bb2ec9847009404477d664736f6c634300081e0033",
							"opcodes": "PUSH1 0x55 PUSH1 0x4B PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH0 BYTE PUSH1 0x73 EQ PUSH1 0x3F JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST ADDRESS PUSH0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 PUSH0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 AND 0xBD CALLVALUE JUMPDEST SWAP5 0xEF CODESIZE GASLIMIT 0xEF 0x4E 0xD9 CALLVALUE GASLIMIT 0xC8 0xD5 CALL 0x4E POP LT 0xD9 0xC7 PREVRANDAO 0xBB 0x2E 0xC9 DUP5 PUSH17 0x9404477D664736F6C634300081E003300 ",
							"sourceMap": "233:5815:8:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "730000000000000000000000000000000000000000301460806040525f5ffdfea264697066735822122016bd345b94ef3845ef4ed93445c8d5f14e5010d9c744bb2ec9847009404477d664736f6c634300081e0033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 PUSH0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 AND 0xBD CALLVALUE JUMPDEST SWAP5 0xEF CODESIZE GASLIMIT 0xEF 0x4E 0xD9 CALLVALUE GASLIMIT 0xC8 0xD5 CALL 0x4E POP LT 0xD9 0xC7 PREVRANDAO 0xBB 0x2E 0xC9 DUP5 PUSH17 0x9404477D664736F6C634300081E003300 ",
							"sourceMap": "233:5815:8:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17000",
								"executionCost": "92",
								"totalCost": "17092"
							},
							"internal": {
								"_revert(bytes memory)": "infinite",
								"functionCall(address,bytes memory)": "infinite",
								"functionCallWithValue(address,bytes memory,uint256)": "infinite",
								"functionDelegateCall(address,bytes memory)": "infinite",
								"functionStaticCall(address,bytes memory)": "infinite",
								"sendValue(address payable,uint256)": "infinite",
								"verifyCallResult(bool,bytes memory)": "infinite",
								"verifyCallResultFromTarget(address,bool,bytes memory)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 233,
									"end": 6048,
									"name": "PUSH #[$]",
									"source": 8,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 233,
									"end": 6048,
									"name": "PUSH [$]",
									"source": 8,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 233,
									"end": 6048,
									"name": "PUSH",
									"source": 8,
									"value": "B"
								},
								{
									"begin": 233,
									"end": 6048,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 233,
									"end": 6048,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 233,
									"end": 6048,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 233,
									"end": 6048,
									"name": "CODECOPY",
									"source": 8
								},
								{
									"begin": 233,
									"end": 6048,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 233,
									"end": 6048,
									"name": "MLOAD",
									"source": 8
								},
								{
									"begin": 233,
									"end": 6048,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 233,
									"end": 6048,
									"name": "BYTE",
									"source": 8
								},
								{
									"begin": 233,
									"end": 6048,
									"name": "PUSH",
									"source": 8,
									"value": "73"
								},
								{
									"begin": 233,
									"end": 6048,
									"name": "EQ",
									"source": 8
								},
								{
									"begin": 233,
									"end": 6048,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "1"
								},
								{
									"begin": 233,
									"end": 6048,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": 233,
									"end": 6048,
									"name": "PUSH",
									"source": 8,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 233,
									"end": 6048,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 233,
									"end": 6048,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 233,
									"end": 6048,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 233,
									"end": 6048,
									"name": "PUSH",
									"source": 8,
									"value": "4"
								},
								{
									"begin": 233,
									"end": 6048,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 233,
									"end": 6048,
									"name": "PUSH",
									"source": 8,
									"value": "24"
								},
								{
									"begin": 233,
									"end": 6048,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 233,
									"end": 6048,
									"name": "REVERT",
									"source": 8
								},
								{
									"begin": 233,
									"end": 6048,
									"name": "tag",
									"source": 8,
									"value": "1"
								},
								{
									"begin": 233,
									"end": 6048,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 233,
									"end": 6048,
									"name": "ADDRESS",
									"source": 8
								},
								{
									"begin": 233,
									"end": 6048,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 233,
									"end": 6048,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 233,
									"end": 6048,
									"name": "PUSH",
									"source": 8,
									"value": "73"
								},
								{
									"begin": 233,
									"end": 6048,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 233,
									"end": 6048,
									"name": "MSTORE8",
									"source": 8
								},
								{
									"begin": 233,
									"end": 6048,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 233,
									"end": 6048,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 233,
									"end": 6048,
									"name": "RETURN",
									"source": 8
								}
							],
							".data": {
								"0": {
									".auxdata": "a264697066735822122016bd345b94ef3845ef4ed93445c8d5f14e5010d9c744bb2ec9847009404477d664736f6c634300081e0033",
									".code": [
										{
											"begin": 233,
											"end": 6048,
											"name": "PUSHDEPLOYADDRESS",
											"source": 8
										},
										{
											"begin": 233,
											"end": 6048,
											"name": "ADDRESS",
											"source": 8
										},
										{
											"begin": 233,
											"end": 6048,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 233,
											"end": 6048,
											"name": "PUSH",
											"source": 8,
											"value": "80"
										},
										{
											"begin": 233,
											"end": 6048,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 233,
											"end": 6048,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 233,
											"end": 6048,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 233,
											"end": 6048,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 233,
											"end": 6048,
											"name": "REVERT",
											"source": 8
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol",
								"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol",
								"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol",
								"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol",
								"@openzeppelin/contracts/interfaces/IERC1967.sol",
								"@openzeppelin/contracts/interfaces/draft-IERC1822.sol",
								"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol",
								"@openzeppelin/contracts/proxy/beacon/IBeacon.sol",
								"@openzeppelin/contracts/utils/Address.sol",
								"@openzeppelin/contracts/utils/Errors.sol",
								"@openzeppelin/contracts/utils/StorageSlot.sol",
								"contracts/Logger.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.30+commit.73712a01\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"}],\"name\":\"AddressEmptyCode\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Collection of functions related to the address type\",\"errors\":{\"AddressEmptyCode(address)\":[{\"details\":\"There's no code at `target` (it is not a contract).\"}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Address.sol\":\"Address\"},\"evmVersion\":\"prague\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0xaaa1d17c1129b127a4a401db2fbd72960e2671474be3d08cae71ccdc42f7624c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://cb2f27cd3952aa667e198fba0d9b7bcec52fbb12c16f013c25fe6fb52b29cc0e\",\"dweb:/ipfs/QmeuohBFoeyDPZA9JNCTEDz3VBfBD4EABWuWXVhHAuEpKR\"]},\"@openzeppelin/contracts/utils/Errors.sol\":{\"keccak256\":\"0x6afa713bfd42cf0f7656efa91201007ac465e42049d7de1d50753a373648c123\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ba1d02f4847670a1b83dec9f7d37f0b0418d6043447b69f3a29a5f9efc547fcf\",\"dweb:/ipfs/QmQ7iH2keLNUKgq2xSWcRmuBE5eZ3F5whYAkAGzCNNoEWB\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/Errors.sol": {
				"Errors": {
					"abi": [
						{
							"inputs": [],
							"name": "FailedCall",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "FailedDeployment",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"name": "MissingPrecompile",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Collection of common custom errors used in multiple contracts IMPORTANT: Backwards compatibility is not guaranteed in future versions of the library. It is recommended to avoid relying on the error API for critical functionality. _Available since v5.1._",
						"errors": {
							"FailedCall()": [
								{
									"details": "A call to an address target failed. The target may have reverted."
								}
							],
							"FailedDeployment()": [
								{
									"details": "The deployment failed."
								}
							],
							"InsufficientBalance(uint256,uint256)": [
								{
									"details": "The ETH balance of the account is not enough to perform the operation."
								}
							],
							"MissingPrecompile(address)": [
								{
									"details": "A necessary precompile is missing."
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts/utils/Errors.sol\":411:895  library Errors {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts/utils/Errors.sol\":411:895  library Errors {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      revert(0x00, 0x00)\n\n    auxdata: 0xa264697066735822122070b7bdd8bfafafcaf4815a18409339c23cd54fa7ea05f55990da1c7a945d265e64736f6c634300081e0033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "6055604b600b8282823980515f1a607314603f577f4e487b71000000000000000000000000000000000000000000000000000000005f525f60045260245ffd5b305f52607381538281f3fe730000000000000000000000000000000000000000301460806040525f5ffdfea264697066735822122070b7bdd8bfafafcaf4815a18409339c23cd54fa7ea05f55990da1c7a945d265e64736f6c634300081e0033",
							"opcodes": "PUSH1 0x55 PUSH1 0x4B PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH0 BYTE PUSH1 0x73 EQ PUSH1 0x3F JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST ADDRESS PUSH0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 PUSH0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH17 0xB7BDD8BFAFAFCAF4815A18409339C23CD5 0x4F 0xA7 0xEA SDIV CREATE2 MSIZE SWAP1 0xDA SHR PUSH27 0x945D265E64736F6C634300081E0033000000000000000000000000 ",
							"sourceMap": "411:484:9:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "730000000000000000000000000000000000000000301460806040525f5ffdfea264697066735822122070b7bdd8bfafafcaf4815a18409339c23cd54fa7ea05f55990da1c7a945d265e64736f6c634300081e0033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 PUSH0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH17 0xB7BDD8BFAFAFCAF4815A18409339C23CD5 0x4F 0xA7 0xEA SDIV CREATE2 MSIZE SWAP1 0xDA SHR PUSH27 0x945D265E64736F6C634300081E0033000000000000000000000000 ",
							"sourceMap": "411:484:9:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17000",
								"executionCost": "92",
								"totalCost": "17092"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 411,
									"end": 895,
									"name": "PUSH #[$]",
									"source": 9,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 411,
									"end": 895,
									"name": "PUSH [$]",
									"source": 9,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 411,
									"end": 895,
									"name": "PUSH",
									"source": 9,
									"value": "B"
								},
								{
									"begin": 411,
									"end": 895,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 411,
									"end": 895,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 411,
									"end": 895,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 411,
									"end": 895,
									"name": "CODECOPY",
									"source": 9
								},
								{
									"begin": 411,
									"end": 895,
									"name": "DUP1",
									"source": 9
								},
								{
									"begin": 411,
									"end": 895,
									"name": "MLOAD",
									"source": 9
								},
								{
									"begin": 411,
									"end": 895,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 411,
									"end": 895,
									"name": "BYTE",
									"source": 9
								},
								{
									"begin": 411,
									"end": 895,
									"name": "PUSH",
									"source": 9,
									"value": "73"
								},
								{
									"begin": 411,
									"end": 895,
									"name": "EQ",
									"source": 9
								},
								{
									"begin": 411,
									"end": 895,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "1"
								},
								{
									"begin": 411,
									"end": 895,
									"name": "JUMPI",
									"source": 9
								},
								{
									"begin": 411,
									"end": 895,
									"name": "PUSH",
									"source": 9,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 411,
									"end": 895,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 411,
									"end": 895,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 411,
									"end": 895,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 411,
									"end": 895,
									"name": "PUSH",
									"source": 9,
									"value": "4"
								},
								{
									"begin": 411,
									"end": 895,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 411,
									"end": 895,
									"name": "PUSH",
									"source": 9,
									"value": "24"
								},
								{
									"begin": 411,
									"end": 895,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 411,
									"end": 895,
									"name": "REVERT",
									"source": 9
								},
								{
									"begin": 411,
									"end": 895,
									"name": "tag",
									"source": 9,
									"value": "1"
								},
								{
									"begin": 411,
									"end": 895,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 411,
									"end": 895,
									"name": "ADDRESS",
									"source": 9
								},
								{
									"begin": 411,
									"end": 895,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 411,
									"end": 895,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 411,
									"end": 895,
									"name": "PUSH",
									"source": 9,
									"value": "73"
								},
								{
									"begin": 411,
									"end": 895,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 411,
									"end": 895,
									"name": "MSTORE8",
									"source": 9
								},
								{
									"begin": 411,
									"end": 895,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 411,
									"end": 895,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 411,
									"end": 895,
									"name": "RETURN",
									"source": 9
								}
							],
							".data": {
								"0": {
									".auxdata": "a264697066735822122070b7bdd8bfafafcaf4815a18409339c23cd54fa7ea05f55990da1c7a945d265e64736f6c634300081e0033",
									".code": [
										{
											"begin": 411,
											"end": 895,
											"name": "PUSHDEPLOYADDRESS",
											"source": 9
										},
										{
											"begin": 411,
											"end": 895,
											"name": "ADDRESS",
											"source": 9
										},
										{
											"begin": 411,
											"end": 895,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 411,
											"end": 895,
											"name": "PUSH",
											"source": 9,
											"value": "80"
										},
										{
											"begin": 411,
											"end": 895,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 411,
											"end": 895,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 411,
											"end": 895,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 411,
											"end": 895,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 411,
											"end": 895,
											"name": "REVERT",
											"source": 9
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol",
								"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol",
								"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol",
								"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol",
								"@openzeppelin/contracts/interfaces/IERC1967.sol",
								"@openzeppelin/contracts/interfaces/draft-IERC1822.sol",
								"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol",
								"@openzeppelin/contracts/proxy/beacon/IBeacon.sol",
								"@openzeppelin/contracts/utils/Address.sol",
								"@openzeppelin/contracts/utils/Errors.sol",
								"@openzeppelin/contracts/utils/StorageSlot.sol",
								"contracts/Logger.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.30+commit.73712a01\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"FailedCall\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"FailedDeployment\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"MissingPrecompile\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Collection of common custom errors used in multiple contracts IMPORTANT: Backwards compatibility is not guaranteed in future versions of the library. It is recommended to avoid relying on the error API for critical functionality. _Available since v5.1._\",\"errors\":{\"FailedCall()\":[{\"details\":\"A call to an address target failed. The target may have reverted.\"}],\"FailedDeployment()\":[{\"details\":\"The deployment failed.\"}],\"InsufficientBalance(uint256,uint256)\":[{\"details\":\"The ETH balance of the account is not enough to perform the operation.\"}],\"MissingPrecompile(address)\":[{\"details\":\"A necessary precompile is missing.\"}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Errors.sol\":\"Errors\"},\"evmVersion\":\"prague\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Errors.sol\":{\"keccak256\":\"0x6afa713bfd42cf0f7656efa91201007ac465e42049d7de1d50753a373648c123\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ba1d02f4847670a1b83dec9f7d37f0b0418d6043447b69f3a29a5f9efc547fcf\",\"dweb:/ipfs/QmQ7iH2keLNUKgq2xSWcRmuBE5eZ3F5whYAkAGzCNNoEWB\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/StorageSlot.sol": {
				"StorageSlot": {
					"abi": [],
					"devdoc": {
						"details": "Library for reading and writing primitive types to specific storage slots. Storage slots are often used to avoid storage conflict when dealing with upgradeable contracts. This library helps with reading and writing to such slots without the need for inline assembly. The functions in this library return Slot structs that contain a `value` member that can be used to read or write. Example usage to set ERC-1967 implementation slot: ```solidity contract ERC1967 {     // Define the slot. Alternatively, use the SlotDerivation library to derive the slot.     bytes32 internal constant _IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc;     function _getImplementation() internal view returns (address) {         return StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value;     }     function _setImplementation(address newImplementation) internal {         require(newImplementation.code.length > 0);         StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value = newImplementation;     } } ``` TIP: Consider using this library along with {SlotDerivation}.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts/utils/StorageSlot.sol\":1407:4181  library StorageSlot {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts/utils/StorageSlot.sol\":1407:4181  library StorageSlot {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      revert(0x00, 0x00)\n\n    auxdata: 0xa26469706673582212204a25b37743574a9bd3df8f6a8c08ff91930e443dfdca74f77c843cbdc2cbeaf064736f6c634300081e0033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "6055604b600b8282823980515f1a607314603f577f4e487b71000000000000000000000000000000000000000000000000000000005f525f60045260245ffd5b305f52607381538281f3fe730000000000000000000000000000000000000000301460806040525f5ffdfea26469706673582212204a25b37743574a9bd3df8f6a8c08ff91930e443dfdca74f77c843cbdc2cbeaf064736f6c634300081e0033",
							"opcodes": "PUSH1 0x55 PUSH1 0x4B PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH0 BYTE PUSH1 0x73 EQ PUSH1 0x3F JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST ADDRESS PUSH0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 PUSH0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 BLOBBASEFEE 0x25 0xB3 PUSH24 0x43574A9BD3DF8F6A8C08FF91930E443DFDCA74F77C843CBD 0xC2 0xCB 0xEA CREATE PUSH5 0x736F6C6343 STOP ADDMOD 0x1E STOP CALLER ",
							"sourceMap": "1407:2774:10:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "730000000000000000000000000000000000000000301460806040525f5ffdfea26469706673582212204a25b37743574a9bd3df8f6a8c08ff91930e443dfdca74f77c843cbdc2cbeaf064736f6c634300081e0033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 PUSH0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 BLOBBASEFEE 0x25 0xB3 PUSH24 0x43574A9BD3DF8F6A8C08FF91930E443DFDCA74F77C843CBD 0xC2 0xCB 0xEA CREATE PUSH5 0x736F6C6343 STOP ADDMOD 0x1E STOP CALLER ",
							"sourceMap": "1407:2774:10:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17000",
								"executionCost": "92",
								"totalCost": "17092"
							},
							"internal": {
								"getAddressSlot(bytes32)": "infinite",
								"getBooleanSlot(bytes32)": "infinite",
								"getBytes32Slot(bytes32)": "infinite",
								"getBytesSlot(bytes storage pointer)": "infinite",
								"getBytesSlot(bytes32)": "infinite",
								"getInt256Slot(bytes32)": "infinite",
								"getStringSlot(bytes32)": "infinite",
								"getStringSlot(string storage pointer)": "infinite",
								"getUint256Slot(bytes32)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 1407,
									"end": 4181,
									"name": "PUSH #[$]",
									"source": 10,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1407,
									"end": 4181,
									"name": "PUSH [$]",
									"source": 10,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1407,
									"end": 4181,
									"name": "PUSH",
									"source": 10,
									"value": "B"
								},
								{
									"begin": 1407,
									"end": 4181,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 1407,
									"end": 4181,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 1407,
									"end": 4181,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 1407,
									"end": 4181,
									"name": "CODECOPY",
									"source": 10
								},
								{
									"begin": 1407,
									"end": 4181,
									"name": "DUP1",
									"source": 10
								},
								{
									"begin": 1407,
									"end": 4181,
									"name": "MLOAD",
									"source": 10
								},
								{
									"begin": 1407,
									"end": 4181,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 1407,
									"end": 4181,
									"name": "BYTE",
									"source": 10
								},
								{
									"begin": 1407,
									"end": 4181,
									"name": "PUSH",
									"source": 10,
									"value": "73"
								},
								{
									"begin": 1407,
									"end": 4181,
									"name": "EQ",
									"source": 10
								},
								{
									"begin": 1407,
									"end": 4181,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "1"
								},
								{
									"begin": 1407,
									"end": 4181,
									"name": "JUMPI",
									"source": 10
								},
								{
									"begin": 1407,
									"end": 4181,
									"name": "PUSH",
									"source": 10,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1407,
									"end": 4181,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 1407,
									"end": 4181,
									"name": "MSTORE",
									"source": 10
								},
								{
									"begin": 1407,
									"end": 4181,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 1407,
									"end": 4181,
									"name": "PUSH",
									"source": 10,
									"value": "4"
								},
								{
									"begin": 1407,
									"end": 4181,
									"name": "MSTORE",
									"source": 10
								},
								{
									"begin": 1407,
									"end": 4181,
									"name": "PUSH",
									"source": 10,
									"value": "24"
								},
								{
									"begin": 1407,
									"end": 4181,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 1407,
									"end": 4181,
									"name": "REVERT",
									"source": 10
								},
								{
									"begin": 1407,
									"end": 4181,
									"name": "tag",
									"source": 10,
									"value": "1"
								},
								{
									"begin": 1407,
									"end": 4181,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 1407,
									"end": 4181,
									"name": "ADDRESS",
									"source": 10
								},
								{
									"begin": 1407,
									"end": 4181,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 1407,
									"end": 4181,
									"name": "MSTORE",
									"source": 10
								},
								{
									"begin": 1407,
									"end": 4181,
									"name": "PUSH",
									"source": 10,
									"value": "73"
								},
								{
									"begin": 1407,
									"end": 4181,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 1407,
									"end": 4181,
									"name": "MSTORE8",
									"source": 10
								},
								{
									"begin": 1407,
									"end": 4181,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 1407,
									"end": 4181,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 1407,
									"end": 4181,
									"name": "RETURN",
									"source": 10
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212204a25b37743574a9bd3df8f6a8c08ff91930e443dfdca74f77c843cbdc2cbeaf064736f6c634300081e0033",
									".code": [
										{
											"begin": 1407,
											"end": 4181,
											"name": "PUSHDEPLOYADDRESS",
											"source": 10
										},
										{
											"begin": 1407,
											"end": 4181,
											"name": "ADDRESS",
											"source": 10
										},
										{
											"begin": 1407,
											"end": 4181,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 1407,
											"end": 4181,
											"name": "PUSH",
											"source": 10,
											"value": "80"
										},
										{
											"begin": 1407,
											"end": 4181,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 1407,
											"end": 4181,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 1407,
											"end": 4181,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1407,
											"end": 4181,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1407,
											"end": 4181,
											"name": "REVERT",
											"source": 10
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol",
								"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol",
								"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol",
								"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol",
								"@openzeppelin/contracts/interfaces/IERC1967.sol",
								"@openzeppelin/contracts/interfaces/draft-IERC1822.sol",
								"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol",
								"@openzeppelin/contracts/proxy/beacon/IBeacon.sol",
								"@openzeppelin/contracts/utils/Address.sol",
								"@openzeppelin/contracts/utils/Errors.sol",
								"@openzeppelin/contracts/utils/StorageSlot.sol",
								"contracts/Logger.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.30+commit.73712a01\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Library for reading and writing primitive types to specific storage slots. Storage slots are often used to avoid storage conflict when dealing with upgradeable contracts. This library helps with reading and writing to such slots without the need for inline assembly. The functions in this library return Slot structs that contain a `value` member that can be used to read or write. Example usage to set ERC-1967 implementation slot: ```solidity contract ERC1967 {     // Define the slot. Alternatively, use the SlotDerivation library to derive the slot.     bytes32 internal constant _IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc;     function _getImplementation() internal view returns (address) {         return StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value;     }     function _setImplementation(address newImplementation) internal {         require(newImplementation.code.length > 0);         StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value = newImplementation;     } } ``` TIP: Consider using this library along with {SlotDerivation}.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/StorageSlot.sol\":\"StorageSlot\"},\"evmVersion\":\"prague\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/StorageSlot.sol\":{\"keccak256\":\"0xcf74f855663ce2ae00ed8352666b7935f6cddea2932fdf2c3ecd30a9b1cd0e97\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9f660b1f351b757dfe01438e59888f31f33ded3afcf5cb5b0d9bf9aa6f320a8b\",\"dweb:/ipfs/QmarDJ5hZEgBtCmmrVzEZWjub9769eD686jmzb2XpSU1cM\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/Logger.sol": {
				"Logger": {
					"abi": [
						{
							"inputs": [],
							"name": "InvalidInitialization",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "NotInitializing",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "OwnableInvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "OwnableUnauthorizedAccount",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint64",
									"name": "version",
									"type": "uint64"
								}
							],
							"name": "Initialized",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "TransactionLogged",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "initialize",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint48",
									"name": "timestamp",
									"type": "uint48"
								},
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "fee",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "reward",
									"type": "uint256"
								},
								{
									"internalType": "string",
									"name": "txHash",
									"type": "string"
								},
								{
									"internalType": "address",
									"name": "token",
									"type": "address"
								}
							],
							"name": "logTransaction",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"name": "userTransactions",
							"outputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "fee",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "reward",
									"type": "uint256"
								},
								{
									"internalType": "uint48",
									"name": "timestamp",
									"type": "uint48"
								},
								{
									"internalType": "string",
									"name": "txHash",
									"type": "string"
								},
								{
									"internalType": "address",
									"name": "token",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"errors": {
							"InvalidInitialization()": [
								{
									"details": "The contract is already initialized."
								}
							],
							"NotInitializing()": [
								{
									"details": "The contract is not initializing."
								}
							],
							"OwnableInvalidOwner(address)": [
								{
									"details": "The owner is not a valid owner account. (eg. `address(0)`)"
								}
							],
							"OwnableUnauthorizedAccount(address)": [
								{
									"details": "The caller account is not authorized to perform an operation."
								}
							]
						},
						"events": {
							"Initialized(uint64)": {
								"details": "Triggered when the contract has been initialized or reinitialized."
							}
						},
						"kind": "dev",
						"methods": {
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/Logger.sol\":297:1477  contract Logger is Initializable, OwnableUpgradeable {... */\n  mstore(0x40, 0x80)\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  revert(0x00, 0x00)\ntag_1:\n  pop\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/Logger.sol\":297:1477  contract Logger is Initializable, OwnableUpgradeable {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      revert(0x00, 0x00)\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x715018a6\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x8129fc1c\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x83dc65f2\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x8da5cb5b\n      eq\n      tag_6\n      jumpi\n      dup1\n      0xb842ec44\n      eq\n      tag_7\n      jumpi\n      dup1\n      0xf2fde38b\n      eq\n      tag_8\n      jumpi\n    tag_2:\n      revert(0x00, 0x00)\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3155:3256  function renounceOwnership() public virtual onlyOwner {... */\n    tag_3:\n      tag_9\n      tag_10\n      jump\t// in\n    tag_9:\n      stop\n        /* \"contracts/Logger.sol\":757:843  function initialize() public initializer {... */\n    tag_4:\n      tag_11\n      tag_12\n      jump\t// in\n    tag_11:\n      stop\n        /* \"contracts/Logger.sol\":851:1474  function logTransaction(uint48 timestamp, address recipient,   uint256 amount, uint256 fee, uint256 reward, string calldata txHash, address token) external {... */\n    tag_5:\n      tag_13\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_14\n      swap2\n      swap1\n      tag_15\n      jump\t// in\n    tag_14:\n      tag_16\n      jump\t// in\n    tag_13:\n      stop\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2441:2585  function owner() public view virtual returns (address) {... */\n    tag_6:\n      tag_17\n      tag_18\n      jump\t// in\n    tag_17:\n      mload(0x40)\n      tag_19\n      swap2\n      swap1\n      tag_20\n      jump\t// in\n    tag_19:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/Logger.sol\":592:649  mapping(address => Transaction[]) public userTransactions */\n    tag_7:\n      tag_21\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_22\n      swap2\n      swap1\n      tag_23\n      jump\t// in\n    tag_22:\n      tag_24\n      jump\t// in\n    tag_21:\n      mload(0x40)\n      tag_25\n      swap9\n      swap8\n      swap7\n      swap6\n      swap5\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_26\n      jump\t// in\n    tag_25:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3405:3620  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_8:\n      tag_27\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_28\n      swap2\n      swap1\n      tag_29\n      jump\t// in\n    tag_28:\n      tag_30\n      jump\t// in\n    tag_27:\n      stop\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3155:3256  function renounceOwnership() public virtual onlyOwner {... */\n    tag_10:\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2334:2347  _checkOwner() */\n      tag_32\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2334:2345  _checkOwner */\n      tag_33\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2334:2347  _checkOwner() */\n      jump\t// in\n    tag_32:\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3219:3249  _transferOwnership(address(0)) */\n      tag_35\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3246:3247  0 */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3219:3237  _transferOwnership */\n      tag_36\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3219:3249  _transferOwnership(address(0)) */\n      jump\t// in\n    tag_35:\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3155:3256  function renounceOwnership() public virtual onlyOwner {... */\n      jump\t// out\n        /* \"contracts/Logger.sol\":757:843  function initialize() public initializer {... */\n    tag_12:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4158:4188  InitializableStorage storage $ */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4191:4217  _getInitializableStorage() */\n      tag_38\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4191:4215  _getInitializableStorage */\n      tag_39\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4191:4217  _getInitializableStorage() */\n      jump\t// in\n    tag_38:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4158:4217  InitializableStorage storage $ = _getInitializableStorage() */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4279:4298  bool isTopLevelCall */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4302:4303  $ */\n      dup2\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4302:4317  $._initializing */\n      0x00\n      add\n      0x08\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4301:4317  !$._initializing */\n      iszero\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4279:4317  bool isTopLevelCall = !$._initializing */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4327:4345  uint64 initialized */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4348:4349  $ */\n      dup3\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4348:4362  $._initialized */\n      0x00\n      add\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4327:4362  uint64 initialized = $._initialized */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4704:4721  bool initialSetup */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4739:4740  0 */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4724:4735  initialized */\n      dup3\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4724:4740  initialized == 0 */\n      0xffffffffffffffff\n      and\n      eq\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4724:4758  initialized == 0 && isTopLevelCall */\n      dup1\n      iszero\n      tag_40\n      jumpi\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4744:4758  isTopLevelCall */\n      dup3\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4724:4758  initialized == 0 && isTopLevelCall */\n    tag_40:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4704:4758  bool initialSetup = initialized == 0 && isTopLevelCall */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4768:4785  bool construction */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4803:4804  1 */\n      0x01\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4788:4799  initialized */\n      dup4\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4788:4804  initialized == 1 */\n      0xffffffffffffffff\n      and\n      eq\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4788:4838  initialized == 1 && address(this).code.length == 0 */\n      dup1\n      iszero\n      tag_41\n      jumpi\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4837:4838  0 */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4816:4820  this */\n      address\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4808:4833  address(this).code.length */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      extcodesize\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4808:4838  address(this).code.length == 0 */\n      eq\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4788:4838  initialized == 1 && address(this).code.length == 0 */\n    tag_41:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4768:4838  bool construction = initialized == 1 && address(this).code.length == 0 */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4854:4866  initialSetup */\n      dup2\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4853:4866  !initialSetup */\n      iszero\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4853:4883  !initialSetup && !construction */\n      dup1\n      iszero\n      tag_42\n      jumpi\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4871:4883  construction */\n      dup1\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4870:4883  !construction */\n      iszero\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4853:4883  !initialSetup && !construction */\n    tag_42:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4849:4940  if (!initialSetup && !construction) {... */\n      iszero\n      tag_43\n      jumpi\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4906:4929  InvalidInitialization() */\n      mload(0x40)\n      0xf92ee8a900000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4849:4940  if (!initialSetup && !construction) {... */\n    tag_43:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4966:4967  1 */\n      0x01\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4949:4950  $ */\n      dup6\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4949:4963  $._initialized */\n      0x00\n      add\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4949:4967  $._initialized = 1 */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4981:4995  isTopLevelCall */\n      dup4\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4977:5044  if (isTopLevelCall) {... */\n      iszero\n      tag_44\n      jumpi\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":5029:5033  true */\n      0x01\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":5011:5012  $ */\n      dup6\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":5011:5026  $._initializing */\n      0x00\n      add\n      0x08\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":5011:5033  $._initializing = true */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      iszero\n      iszero\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4977:5044  if (isTopLevelCall) {... */\n    tag_44:\n        /* \"contracts/Logger.sol\":809:835  __Ownable_init(msg.sender) */\n      tag_46\n        /* \"contracts/Logger.sol\":824:834  msg.sender */\n      caller\n        /* \"contracts/Logger.sol\":809:823  __Ownable_init */\n      tag_47\n        /* \"contracts/Logger.sol\":809:835  __Ownable_init(msg.sender) */\n      jump\t// in\n    tag_46:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":5068:5082  isTopLevelCall */\n      dup4\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":5064:5165  if (isTopLevelCall) {... */\n      iszero\n      tag_48\n      jumpi\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":5116:5121  false */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":5098:5099  $ */\n      dup6\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":5098:5113  $._initializing */\n      0x00\n      add\n      0x08\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":5098:5121  $._initializing = false */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      iszero\n      iszero\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":5140:5154  Initialized(1) */\n      0xc7f505b2f371ae2175ee4913f4499e1f2633a7b5936321eed1cdaeb6115181d2\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":5152:5153  1 */\n      0x01\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":5140:5154  Initialized(1) */\n      mload(0x40)\n      tag_49\n      swap2\n      swap1\n      tag_50\n      jump\t// in\n    tag_49:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log1\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":5064:5165  if (isTopLevelCall) {... */\n    tag_48:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4092:5171  {... */\n      pop\n      pop\n      pop\n      pop\n      pop\n        /* \"contracts/Logger.sol\":757:843  function initialize() public initializer {... */\n      jump\t// out\n        /* \"contracts/Logger.sol\":851:1474  function logTransaction(uint48 timestamp, address recipient,   uint256 amount, uint256 fee, uint256 reward, string calldata txHash, address token) external {... */\n    tag_16:\n        /* \"contracts/Logger.sol\":1047:1048  0 */\n      0x00\n        /* \"contracts/Logger.sol\":1026:1049  recipient != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/Logger.sol\":1026:1035  recipient */\n      dup8\n        /* \"contracts/Logger.sol\":1026:1049  recipient != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n      iszero\n        /* \"contracts/Logger.sol\":1026:1072  recipient != address(0) && token != address(0) */\n      dup1\n      iszero\n      tag_52\n      jumpi\n      pop\n        /* \"contracts/Logger.sol\":1070:1071  0 */\n      0x00\n        /* \"contracts/Logger.sol\":1053:1072  token != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/Logger.sol\":1053:1058  token */\n      dup2\n        /* \"contracts/Logger.sol\":1053:1072  token != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n      iszero\n        /* \"contracts/Logger.sol\":1026:1072  recipient != address(0) && token != address(0) */\n    tag_52:\n        /* \"contracts/Logger.sol\":1018:1092  require(recipient != address(0) && token != address(0), \"Invalid address\") */\n      tag_53\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_54\n      swap1\n      tag_55\n      jump\t// in\n    tag_54:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_53:\n        /* \"contracts/Logger.sol\":1103:1119  userTransactions */\n      0x00\n        /* \"contracts/Logger.sol\":1103:1131  userTransactions[msg.sender] */\n      0x00\n        /* \"contracts/Logger.sol\":1120:1130  msg.sender */\n      caller\n        /* \"contracts/Logger.sol\":1103:1131  userTransactions[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/Logger.sol\":1137:1401  Transaction({... */\n      mload(0x40)\n      dup1\n      0x0100\n      add\n      0x40\n      mstore\n      dup1\n        /* \"contracts/Logger.sol\":1172:1182  msg.sender */\n      caller\n        /* \"contracts/Logger.sol\":1137:1401  Transaction({... */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n        /* \"contracts/Logger.sol\":1208:1217  recipient */\n      dup10\n        /* \"contracts/Logger.sol\":1137:1401  Transaction({... */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n        /* \"contracts/Logger.sol\":1240:1246  amount */\n      dup9\n        /* \"contracts/Logger.sol\":1137:1401  Transaction({... */\n      dup2\n      mstore\n      0x20\n      add\n        /* \"contracts/Logger.sol\":1266:1269  fee */\n      dup8\n        /* \"contracts/Logger.sol\":1137:1401  Transaction({... */\n      dup2\n      mstore\n      0x20\n      add\n        /* \"contracts/Logger.sol\":1292:1298  reward */\n      dup7\n        /* \"contracts/Logger.sol\":1137:1401  Transaction({... */\n      dup2\n      mstore\n      0x20\n      add\n        /* \"contracts/Logger.sol\":1324:1333  timestamp */\n      dup11\n        /* \"contracts/Logger.sol\":1137:1401  Transaction({... */\n      0xffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n        /* \"contracts/Logger.sol\":1356:1362  txHash */\n      dup6\n      dup6\n        /* \"contracts/Logger.sol\":1137:1401  Transaction({... */\n      dup1\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap4\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup4\n      dup4\n      dup1\n      dup3\n      dup5\n      calldatacopy\n      0x00\n      dup2\n      dup5\n      add\n      mstore\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      swap1\n      pop\n      dup1\n      dup4\n      add\n      swap3\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      dup2\n      mstore\n      0x20\n      add\n        /* \"contracts/Logger.sol\":1384:1389  token */\n      dup4\n        /* \"contracts/Logger.sol\":1137:1401  Transaction({... */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      pop\n        /* \"contracts/Logger.sol\":1103:1402  userTransactions[msg.sender].push(Transaction({... */\n      swap1\n      dup1\n      0x01\n      dup2\n      sload\n      add\n      dup1\n      dup3\n      sstore\n      dup1\n      swap2\n      pop\n      pop\n      0x01\n      swap1\n      sub\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n      0x08\n      mul\n      add\n      0x00\n      swap1\n      swap2\n      swap1\n      swap2\n      swap1\n      swap2\n      pop\n      0x00\n      dup3\n      add\n      mload\n      dup2\n      0x00\n      add\n      exp(0x0100, 0x00)\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n      0x20\n      dup3\n      add\n      mload\n      dup2\n      0x01\n      add\n      exp(0x0100, 0x00)\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n      0x40\n      dup3\n      add\n      mload\n      dup2\n      0x02\n      add\n      sstore\n      0x60\n      dup3\n      add\n      mload\n      dup2\n      0x03\n      add\n      sstore\n      0x80\n      dup3\n      add\n      mload\n      dup2\n      0x04\n      add\n      sstore\n      0xa0\n      dup3\n      add\n      mload\n      dup2\n      0x05\n      add\n      exp(0x0100, 0x00)\n      dup2\n      sload\n      dup2\n      0xffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n      0xc0\n      dup3\n      add\n      mload\n      dup2\n      0x06\n      add\n      swap1\n      dup2\n      tag_57\n      swap2\n      swap1\n      tag_58\n      jump\t// in\n    tag_57:\n      pop\n      0xe0\n      dup3\n      add\n      mload\n      dup2\n      0x07\n      add\n      exp(0x0100, 0x00)\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n      pop\n      pop\n        /* \"contracts/Logger.sol\":1448:1457  recipient */\n      dup7\n        /* \"contracts/Logger.sol\":1418:1466  TransactionLogged(msg.sender, recipient, amount) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/Logger.sol\":1436:1446  msg.sender */\n      caller\n        /* \"contracts/Logger.sol\":1418:1466  TransactionLogged(msg.sender, recipient, amount) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xc46393c51fb2221caaec70cc70adecd0bbd1f605f3a19747f4ec3a8aff00cf7c\n        /* \"contracts/Logger.sol\":1459:1465  amount */\n      dup9\n        /* \"contracts/Logger.sol\":1418:1466  TransactionLogged(msg.sender, recipient, amount) */\n      mload(0x40)\n      tag_59\n      swap2\n      swap1\n      tag_60\n      jump\t// in\n    tag_59:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"contracts/Logger.sol\":851:1474  function logTransaction(uint48 timestamp, address recipient,   uint256 amount, uint256 fee, uint256 reward, string calldata txHash, address token) external {... */\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2441:2585  function owner() public view virtual returns (address) {... */\n    tag_18:\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2487:2494  address */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2506:2530  OwnableStorage storage $ */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2533:2553  _getOwnableStorage() */\n      tag_62\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2533:2551  _getOwnableStorage */\n      tag_63\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2533:2553  _getOwnableStorage() */\n      jump\t// in\n    tag_62:\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2506:2553  OwnableStorage storage $ = _getOwnableStorage() */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2570:2571  $ */\n      dup1\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2570:2578  $._owner */\n      0x00\n      add\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2563:2578  return $._owner */\n      swap2\n      pop\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2441:2585  function owner() public view virtual returns (address) {... */\n      swap1\n      jump\t// out\n        /* \"contracts/Logger.sol\":592:649  mapping(address => Transaction[]) public userTransactions */\n    tag_24:\n      mstore(0x20, 0x00)\n      dup2\n      0x00\n      mstore\n      keccak256(0x00, 0x40)\n      dup2\n      dup2\n      sload\n      dup2\n      lt\n      tag_64\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_64:\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n      0x08\n      mul\n      add\n      0x00\n      swap2\n      pop\n      swap2\n      pop\n      pop\n      dup1\n      0x00\n      add\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      dup1\n      0x01\n      add\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      dup1\n      0x02\n      add\n      sload\n      swap1\n      dup1\n      0x03\n      add\n      sload\n      swap1\n      dup1\n      0x04\n      add\n      sload\n      swap1\n      dup1\n      0x05\n      add\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffff\n      and\n      swap1\n      dup1\n      0x06\n      add\n      dup1\n      sload\n      tag_66\n      swap1\n      tag_67\n      jump\t// in\n    tag_66:\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      tag_68\n      swap1\n      tag_67\n      jump\t// in\n    tag_68:\n      dup1\n      iszero\n      tag_69\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_70\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_69)\n    tag_70:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_71:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_71\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_69:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      dup1\n      0x07\n      add\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      pop\n      dup9\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3405:3620  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_30:\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2334:2347  _checkOwner() */\n      tag_73\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2334:2345  _checkOwner */\n      tag_33\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2334:2347  _checkOwner() */\n      jump\t// in\n    tag_73:\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3509:3510  0 */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3489:3511  newOwner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3489:3497  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3489:3511  newOwner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3485:3576  if (newOwner == address(0)) {... */\n      tag_75\n      jumpi\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3562:3563  0 */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3534:3565  OwnableInvalidOwner(address(0)) */\n      mload(0x40)\n      0x1e4fbdf700000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_76\n      swap2\n      swap1\n      tag_20\n      jump\t// in\n    tag_76:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3485:3576  if (newOwner == address(0)) {... */\n    tag_75:\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3585:3613  _transferOwnership(newOwner) */\n      tag_77\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3604:3612  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3585:3603  _transferOwnership */\n      tag_36\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3585:3613  _transferOwnership(newOwner) */\n      jump\t// in\n    tag_77:\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3405:3620  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2658:2820  function _checkOwner() internal view virtual {... */\n    tag_33:\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2728:2740  _msgSender() */\n      tag_79\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2728:2738  _msgSender */\n      tag_80\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2728:2740  _msgSender() */\n      jump\t// in\n    tag_79:\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2717:2740  owner() != _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2717:2724  owner() */\n      tag_81\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2717:2722  owner */\n      tag_18\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2717:2724  owner() */\n      jump\t// in\n    tag_81:\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2717:2740  owner() != _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2713:2814  if (owner() != _msgSender()) {... */\n      tag_82\n      jumpi\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2790:2802  _msgSender() */\n      tag_83\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2790:2800  _msgSender */\n      tag_80\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2790:2802  _msgSender() */\n      jump\t// in\n    tag_83:\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2763:2803  OwnableUnauthorizedAccount(_msgSender()) */\n      mload(0x40)\n      0x118cdaa700000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_84\n      swap2\n      swap1\n      tag_20\n      jump\t// in\n    tag_84:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2713:2814  if (owner() != _msgSender()) {... */\n    tag_82:\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2658:2820  function _checkOwner() internal view virtual {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3774:4022  function _transferOwnership(address newOwner) internal virtual {... */\n    tag_36:\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3847:3871  OwnableStorage storage $ */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3874:3894  _getOwnableStorage() */\n      tag_86\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3874:3892  _getOwnableStorage */\n      tag_63\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3874:3894  _getOwnableStorage() */\n      jump\t// in\n    tag_86:\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3847:3894  OwnableStorage storage $ = _getOwnableStorage() */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3904:3920  address oldOwner */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3923:3924  $ */\n      dup2\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3923:3931  $._owner */\n      0x00\n      add\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3904:3931  address oldOwner = $._owner */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3952:3960  newOwner */\n      dup3\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3941:3942  $ */\n      dup3\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3941:3949  $._owner */\n      0x00\n      add\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3941:3960  $._owner = newOwner */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":4006:4014  newOwner */\n      dup3\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3975:4015  OwnershipTransferred(oldOwner, newOwner) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3996:4004  oldOwner */\n      dup2\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3975:4015  OwnershipTransferred(oldOwner, newOwner) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3837:4022  {... */\n      pop\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3774:4022  function _transferOwnership(address newOwner) internal virtual {... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":9071:9276  function _getInitializableStorage() private pure returns (InitializableStorage storage $) {... */\n    tag_39:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":9129:9159  InitializableStorage storage $ */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":9171:9183  bytes32 slot */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":9186:9213  _initializableStorageSlot() */\n      tag_88\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":9186:9211  _initializableStorageSlot */\n      tag_89\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":9186:9213  _initializableStorageSlot() */\n      jump\t// in\n    tag_88:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":9171:9213  bytes32 slot = _initializableStorageSlot() */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":9256:9260  slot */\n      dup1\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":9246:9260  $.slot := slot */\n      swap2\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":9232:9270  {... */\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":9071:9276  function _getInitializableStorage() private pure returns (InitializableStorage storage $) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1847:1974  function __Ownable_init(address initialOwner) internal onlyInitializing {... */\n    tag_47:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":6929:6949  _checkInitializing() */\n      tag_91\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":6929:6947  _checkInitializing */\n      tag_92\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":6929:6949  _checkInitializing() */\n      jump\t// in\n    tag_91:\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1929:1967  __Ownable_init_unchained(initialOwner) */\n      tag_94\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1954:1966  initialOwner */\n      dup2\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1929:1953  __Ownable_init_unchained */\n      tag_95\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1929:1967  __Ownable_init_unchained(initialOwner) */\n      jump\t// in\n    tag_94:\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1847:1974  function __Ownable_init(address initialOwner) internal onlyInitializing {... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1192:1351  function _getOwnableStorage() private pure returns (OwnableStorage storage $) {... */\n    tag_63:\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1244:1268  OwnableStorage storage $ */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1313:1335  OwnableStorageLocation */\n      0x9016d09d72d40fdae2fd8ceac6b6234c7706214fd39c1cd1e609a0528c199300\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1303:1335  $.slot := OwnableStorageLocation */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1192:1351  function _getOwnableStorage() private pure returns (OwnableStorage storage $) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":887:983  function _msgSender() internal view virtual returns (address) {... */\n    tag_80:\n        /* \"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":940:947  address */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":966:976  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":959:976  return msg.sender */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":887:983  function _msgSender() internal view virtual returns (address) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":8819:8941  function _initializableStorageSlot() internal pure virtual returns (bytes32) {... */\n    tag_89:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":8887:8894  bytes32 */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":3147:3213  0xf0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a00 */\n      0xf0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a00\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":8913:8934  INITIALIZABLE_STORAGE */\n      0x00\n      shl\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":8906:8934  return INITIALIZABLE_STORAGE */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":8819:8941  function _initializableStorageSlot() internal pure virtual returns (bytes32) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":7082:7223  function _checkInitializing() internal view virtual {... */\n    tag_92:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":7149:7166  _isInitializing() */\n      tag_100\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":7149:7164  _isInitializing */\n      tag_101\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":7149:7166  _isInitializing() */\n      jump\t// in\n    tag_100:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":7144:7217  if (!_isInitializing()) {... */\n      tag_102\n      jumpi\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":7189:7206  NotInitializing() */\n      mload(0x40)\n      0xd7e6bcf800000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":7144:7217  if (!_isInitializing()) {... */\n    tag_102:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":7082:7223  function _checkInitializing() internal view virtual {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1980:2215  function __Ownable_init_unchained(address initialOwner) internal onlyInitializing {... */\n    tag_95:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":6929:6949  _checkInitializing() */\n      tag_104\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":6929:6947  _checkInitializing */\n      tag_92\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":6929:6949  _checkInitializing() */\n      jump\t// in\n    tag_104:\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2100:2101  0 */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2076:2102  initialOwner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2076:2088  initialOwner */\n      dup2\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2076:2102  initialOwner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2072:2167  if (initialOwner == address(0)) {... */\n      tag_106\n      jumpi\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2153:2154  0 */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2125:2156  OwnableInvalidOwner(address(0)) */\n      mload(0x40)\n      0x1e4fbdf700000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_107\n      swap2\n      swap1\n      tag_20\n      jump\t// in\n    tag_107:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2072:2167  if (initialOwner == address(0)) {... */\n    tag_106:\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2176:2208  _transferOwnership(initialOwner) */\n      tag_108\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2195:2207  initialOwner */\n      dup2\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2176:2194  _transferOwnership */\n      tag_36\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2176:2208  _transferOwnership(initialOwner) */\n      jump\t// in\n    tag_108:\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1980:2215  function __Ownable_init_unchained(address initialOwner) internal onlyInitializing {... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":8485:8605  function _isInitializing() internal view returns (bool) {... */\n    tag_101:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":8535:8539  bool */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":8558:8584  _getInitializableStorage() */\n      tag_110\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":8558:8582  _getInitializableStorage */\n      tag_39\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":8558:8584  _getInitializableStorage() */\n      jump\t// in\n    tag_110:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":8558:8598  _getInitializableStorage()._initializing */\n      0x00\n      add\n      0x08\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":8551:8598  return _getInitializableStorage()._initializing */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":8485:8605  function _isInitializing() internal view returns (bool) {... */\n      swap1\n      jump\t// out\n        /* \"#utility.yul\":88:205   */\n    tag_112:\n        /* \"#utility.yul\":197:198   */\n      0x00\n        /* \"#utility.yul\":194:195   */\n      0x00\n        /* \"#utility.yul\":187:199   */\n      revert\n        /* \"#utility.yul\":211:328   */\n    tag_113:\n        /* \"#utility.yul\":320:321   */\n      0x00\n        /* \"#utility.yul\":317:318   */\n      0x00\n        /* \"#utility.yul\":310:322   */\n      revert\n        /* \"#utility.yul\":334:431   */\n    tag_114:\n        /* \"#utility.yul\":370:377   */\n      0x00\n        /* \"#utility.yul\":410:424   */\n      0xffffffffffff\n        /* \"#utility.yul\":403:408   */\n      dup3\n        /* \"#utility.yul\":399:425   */\n      and\n        /* \"#utility.yul\":388:425   */\n      swap1\n      pop\n        /* \"#utility.yul\":334:431   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":437:557   */\n    tag_115:\n        /* \"#utility.yul\":509:532   */\n      tag_165\n        /* \"#utility.yul\":526:531   */\n      dup2\n        /* \"#utility.yul\":509:532   */\n      tag_114\n      jump\t// in\n    tag_165:\n        /* \"#utility.yul\":502:507   */\n      dup2\n        /* \"#utility.yul\":499:533   */\n      eq\n        /* \"#utility.yul\":489:551   */\n      tag_166\n      jumpi\n        /* \"#utility.yul\":547:548   */\n      0x00\n        /* \"#utility.yul\":544:545   */\n      0x00\n        /* \"#utility.yul\":537:549   */\n      revert\n        /* \"#utility.yul\":489:551   */\n    tag_166:\n        /* \"#utility.yul\":437:557   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":563:700   */\n    tag_116:\n        /* \"#utility.yul\":608:613   */\n      0x00\n        /* \"#utility.yul\":646:652   */\n      dup2\n        /* \"#utility.yul\":633:653   */\n      calldataload\n        /* \"#utility.yul\":624:653   */\n      swap1\n      pop\n        /* \"#utility.yul\":662:694   */\n      tag_168\n        /* \"#utility.yul\":688:693   */\n      dup2\n        /* \"#utility.yul\":662:694   */\n      tag_115\n      jump\t// in\n    tag_168:\n        /* \"#utility.yul\":563:700   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":706:832   */\n    tag_117:\n        /* \"#utility.yul\":743:750   */\n      0x00\n        /* \"#utility.yul\":783:825   */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":776:781   */\n      dup3\n        /* \"#utility.yul\":772:826   */\n      and\n        /* \"#utility.yul\":761:826   */\n      swap1\n      pop\n        /* \"#utility.yul\":706:832   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":838:934   */\n    tag_118:\n        /* \"#utility.yul\":875:882   */\n      0x00\n        /* \"#utility.yul\":904:928   */\n      tag_171\n        /* \"#utility.yul\":922:927   */\n      dup3\n        /* \"#utility.yul\":904:928   */\n      tag_117\n      jump\t// in\n    tag_171:\n        /* \"#utility.yul\":893:928   */\n      swap1\n      pop\n        /* \"#utility.yul\":838:934   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":940:1062   */\n    tag_119:\n        /* \"#utility.yul\":1013:1037   */\n      tag_173\n        /* \"#utility.yul\":1031:1036   */\n      dup2\n        /* \"#utility.yul\":1013:1037   */\n      tag_118\n      jump\t// in\n    tag_173:\n        /* \"#utility.yul\":1006:1011   */\n      dup2\n        /* \"#utility.yul\":1003:1038   */\n      eq\n        /* \"#utility.yul\":993:1056   */\n      tag_174\n      jumpi\n        /* \"#utility.yul\":1052:1053   */\n      0x00\n        /* \"#utility.yul\":1049:1050   */\n      0x00\n        /* \"#utility.yul\":1042:1054   */\n      revert\n        /* \"#utility.yul\":993:1056   */\n    tag_174:\n        /* \"#utility.yul\":940:1062   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1068:1207   */\n    tag_120:\n        /* \"#utility.yul\":1114:1119   */\n      0x00\n        /* \"#utility.yul\":1152:1158   */\n      dup2\n        /* \"#utility.yul\":1139:1159   */\n      calldataload\n        /* \"#utility.yul\":1130:1159   */\n      swap1\n      pop\n        /* \"#utility.yul\":1168:1201   */\n      tag_176\n        /* \"#utility.yul\":1195:1200   */\n      dup2\n        /* \"#utility.yul\":1168:1201   */\n      tag_119\n      jump\t// in\n    tag_176:\n        /* \"#utility.yul\":1068:1207   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1213:1290   */\n    tag_121:\n        /* \"#utility.yul\":1250:1257   */\n      0x00\n        /* \"#utility.yul\":1279:1284   */\n      dup2\n        /* \"#utility.yul\":1268:1284   */\n      swap1\n      pop\n        /* \"#utility.yul\":1213:1290   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1296:1418   */\n    tag_122:\n        /* \"#utility.yul\":1369:1393   */\n      tag_179\n        /* \"#utility.yul\":1387:1392   */\n      dup2\n        /* \"#utility.yul\":1369:1393   */\n      tag_121\n      jump\t// in\n    tag_179:\n        /* \"#utility.yul\":1362:1367   */\n      dup2\n        /* \"#utility.yul\":1359:1394   */\n      eq\n        /* \"#utility.yul\":1349:1412   */\n      tag_180\n      jumpi\n        /* \"#utility.yul\":1408:1409   */\n      0x00\n        /* \"#utility.yul\":1405:1406   */\n      0x00\n        /* \"#utility.yul\":1398:1410   */\n      revert\n        /* \"#utility.yul\":1349:1412   */\n    tag_180:\n        /* \"#utility.yul\":1296:1418   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1424:1563   */\n    tag_123:\n        /* \"#utility.yul\":1470:1475   */\n      0x00\n        /* \"#utility.yul\":1508:1514   */\n      dup2\n        /* \"#utility.yul\":1495:1515   */\n      calldataload\n        /* \"#utility.yul\":1486:1515   */\n      swap1\n      pop\n        /* \"#utility.yul\":1524:1557   */\n      tag_182\n        /* \"#utility.yul\":1551:1556   */\n      dup2\n        /* \"#utility.yul\":1524:1557   */\n      tag_122\n      jump\t// in\n    tag_182:\n        /* \"#utility.yul\":1424:1563   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1569:1686   */\n    tag_124:\n        /* \"#utility.yul\":1678:1679   */\n      0x00\n        /* \"#utility.yul\":1675:1676   */\n      0x00\n        /* \"#utility.yul\":1668:1680   */\n      revert\n        /* \"#utility.yul\":1692:1809   */\n    tag_125:\n        /* \"#utility.yul\":1801:1802   */\n      0x00\n        /* \"#utility.yul\":1798:1799   */\n      0x00\n        /* \"#utility.yul\":1791:1803   */\n      revert\n        /* \"#utility.yul\":1815:1932   */\n    tag_126:\n        /* \"#utility.yul\":1924:1925   */\n      0x00\n        /* \"#utility.yul\":1921:1922   */\n      0x00\n        /* \"#utility.yul\":1914:1926   */\n      revert\n        /* \"#utility.yul\":1952:2505   */\n    tag_127:\n        /* \"#utility.yul\":2010:2018   */\n      0x00\n        /* \"#utility.yul\":2020:2026   */\n      0x00\n        /* \"#utility.yul\":2070:2073   */\n      dup4\n        /* \"#utility.yul\":2063:2067   */\n      0x1f\n        /* \"#utility.yul\":2055:2061   */\n      dup5\n        /* \"#utility.yul\":2051:2068   */\n      add\n        /* \"#utility.yul\":2047:2074   */\n      slt\n        /* \"#utility.yul\":2037:2159   */\n      tag_187\n      jumpi\n        /* \"#utility.yul\":2078:2157   */\n      tag_188\n      tag_124\n      jump\t// in\n    tag_188:\n        /* \"#utility.yul\":2037:2159   */\n    tag_187:\n        /* \"#utility.yul\":2191:2197   */\n      dup3\n        /* \"#utility.yul\":2178:2198   */\n      calldataload\n        /* \"#utility.yul\":2168:2198   */\n      swap1\n      pop\n        /* \"#utility.yul\":2221:2239   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":2213:2219   */\n      dup2\n        /* \"#utility.yul\":2210:2240   */\n      gt\n        /* \"#utility.yul\":2207:2324   */\n      iszero\n      tag_189\n      jumpi\n        /* \"#utility.yul\":2243:2322   */\n      tag_190\n      tag_125\n      jump\t// in\n    tag_190:\n        /* \"#utility.yul\":2207:2324   */\n    tag_189:\n        /* \"#utility.yul\":2357:2361   */\n      0x20\n        /* \"#utility.yul\":2349:2355   */\n      dup4\n        /* \"#utility.yul\":2345:2362   */\n      add\n        /* \"#utility.yul\":2333:2362   */\n      swap2\n      pop\n        /* \"#utility.yul\":2411:2414   */\n      dup4\n        /* \"#utility.yul\":2403:2407   */\n      0x01\n        /* \"#utility.yul\":2395:2401   */\n      dup3\n        /* \"#utility.yul\":2391:2408   */\n      mul\n        /* \"#utility.yul\":2381:2389   */\n      dup4\n        /* \"#utility.yul\":2377:2409   */\n      add\n        /* \"#utility.yul\":2374:2415   */\n      gt\n        /* \"#utility.yul\":2371:2499   */\n      iszero\n      tag_191\n      jumpi\n        /* \"#utility.yul\":2418:2497   */\n      tag_192\n      tag_126\n      jump\t// in\n    tag_192:\n        /* \"#utility.yul\":2371:2499   */\n    tag_191:\n        /* \"#utility.yul\":1952:2505   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2511:3912   */\n    tag_15:\n        /* \"#utility.yul\":2635:2641   */\n      0x00\n        /* \"#utility.yul\":2643:2649   */\n      0x00\n        /* \"#utility.yul\":2651:2657   */\n      0x00\n        /* \"#utility.yul\":2659:2665   */\n      0x00\n        /* \"#utility.yul\":2667:2673   */\n      0x00\n        /* \"#utility.yul\":2675:2681   */\n      0x00\n        /* \"#utility.yul\":2683:2689   */\n      0x00\n        /* \"#utility.yul\":2691:2697   */\n      0x00\n        /* \"#utility.yul\":2740:2743   */\n      0xe0\n        /* \"#utility.yul\":2728:2737   */\n      dup10\n        /* \"#utility.yul\":2719:2726   */\n      dup12\n        /* \"#utility.yul\":2715:2738   */\n      sub\n        /* \"#utility.yul\":2711:2744   */\n      slt\n        /* \"#utility.yul\":2708:2828   */\n      iszero\n      tag_194\n      jumpi\n        /* \"#utility.yul\":2747:2826   */\n      tag_195\n      tag_112\n      jump\t// in\n    tag_195:\n        /* \"#utility.yul\":2708:2828   */\n    tag_194:\n        /* \"#utility.yul\":2867:2868   */\n      0x00\n        /* \"#utility.yul\":2892:2944   */\n      tag_196\n        /* \"#utility.yul\":2936:2943   */\n      dup12\n        /* \"#utility.yul\":2927:2933   */\n      dup3\n        /* \"#utility.yul\":2916:2925   */\n      dup13\n        /* \"#utility.yul\":2912:2934   */\n      add\n        /* \"#utility.yul\":2892:2944   */\n      tag_116\n      jump\t// in\n    tag_196:\n        /* \"#utility.yul\":2882:2944   */\n      swap9\n      pop\n        /* \"#utility.yul\":2838:2954   */\n      pop\n        /* \"#utility.yul\":2993:2995   */\n      0x20\n        /* \"#utility.yul\":3019:3072   */\n      tag_197\n        /* \"#utility.yul\":3064:3071   */\n      dup12\n        /* \"#utility.yul\":3055:3061   */\n      dup3\n        /* \"#utility.yul\":3044:3053   */\n      dup13\n        /* \"#utility.yul\":3040:3062   */\n      add\n        /* \"#utility.yul\":3019:3072   */\n      tag_120\n      jump\t// in\n    tag_197:\n        /* \"#utility.yul\":3009:3072   */\n      swap8\n      pop\n        /* \"#utility.yul\":2964:3082   */\n      pop\n        /* \"#utility.yul\":3121:3123   */\n      0x40\n        /* \"#utility.yul\":3147:3200   */\n      tag_198\n        /* \"#utility.yul\":3192:3199   */\n      dup12\n        /* \"#utility.yul\":3183:3189   */\n      dup3\n        /* \"#utility.yul\":3172:3181   */\n      dup13\n        /* \"#utility.yul\":3168:3190   */\n      add\n        /* \"#utility.yul\":3147:3200   */\n      tag_123\n      jump\t// in\n    tag_198:\n        /* \"#utility.yul\":3137:3200   */\n      swap7\n      pop\n        /* \"#utility.yul\":3092:3210   */\n      pop\n        /* \"#utility.yul\":3249:3251   */\n      0x60\n        /* \"#utility.yul\":3275:3328   */\n      tag_199\n        /* \"#utility.yul\":3320:3327   */\n      dup12\n        /* \"#utility.yul\":3311:3317   */\n      dup3\n        /* \"#utility.yul\":3300:3309   */\n      dup13\n        /* \"#utility.yul\":3296:3318   */\n      add\n        /* \"#utility.yul\":3275:3328   */\n      tag_123\n      jump\t// in\n    tag_199:\n        /* \"#utility.yul\":3265:3328   */\n      swap6\n      pop\n        /* \"#utility.yul\":3220:3338   */\n      pop\n        /* \"#utility.yul\":3377:3380   */\n      0x80\n        /* \"#utility.yul\":3404:3457   */\n      tag_200\n        /* \"#utility.yul\":3449:3456   */\n      dup12\n        /* \"#utility.yul\":3440:3446   */\n      dup3\n        /* \"#utility.yul\":3429:3438   */\n      dup13\n        /* \"#utility.yul\":3425:3447   */\n      add\n        /* \"#utility.yul\":3404:3457   */\n      tag_123\n      jump\t// in\n    tag_200:\n        /* \"#utility.yul\":3394:3457   */\n      swap5\n      pop\n        /* \"#utility.yul\":3348:3467   */\n      pop\n        /* \"#utility.yul\":3534:3537   */\n      0xa0\n        /* \"#utility.yul\":3523:3532   */\n      dup10\n        /* \"#utility.yul\":3519:3538   */\n      add\n        /* \"#utility.yul\":3506:3539   */\n      calldataload\n        /* \"#utility.yul\":3566:3584   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":3558:3564   */\n      dup2\n        /* \"#utility.yul\":3555:3585   */\n      gt\n        /* \"#utility.yul\":3552:3669   */\n      iszero\n      tag_201\n      jumpi\n        /* \"#utility.yul\":3588:3667   */\n      tag_202\n      tag_113\n      jump\t// in\n    tag_202:\n        /* \"#utility.yul\":3552:3669   */\n    tag_201:\n        /* \"#utility.yul\":3701:3766   */\n      tag_203\n        /* \"#utility.yul\":3758:3765   */\n      dup12\n        /* \"#utility.yul\":3749:3755   */\n      dup3\n        /* \"#utility.yul\":3738:3747   */\n      dup13\n        /* \"#utility.yul\":3734:3756   */\n      add\n        /* \"#utility.yul\":3701:3766   */\n      tag_127\n      jump\t// in\n    tag_203:\n        /* \"#utility.yul\":3683:3766   */\n      swap4\n      pop\n      swap4\n      pop\n        /* \"#utility.yul\":3477:3776   */\n      pop\n        /* \"#utility.yul\":3815:3818   */\n      0xc0\n        /* \"#utility.yul\":3842:3895   */\n      tag_204\n        /* \"#utility.yul\":3887:3894   */\n      dup12\n        /* \"#utility.yul\":3878:3884   */\n      dup3\n        /* \"#utility.yul\":3867:3876   */\n      dup13\n        /* \"#utility.yul\":3863:3885   */\n      add\n        /* \"#utility.yul\":3842:3895   */\n      tag_120\n      jump\t// in\n    tag_204:\n        /* \"#utility.yul\":3832:3895   */\n      swap2\n      pop\n        /* \"#utility.yul\":3786:3905   */\n      pop\n        /* \"#utility.yul\":2511:3912   */\n      swap3\n      swap6\n      swap9\n      pop\n      swap3\n      swap6\n      swap9\n      swap1\n      swap4\n      swap7\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3918:4036   */\n    tag_128:\n        /* \"#utility.yul\":4005:4029   */\n      tag_206\n        /* \"#utility.yul\":4023:4028   */\n      dup2\n        /* \"#utility.yul\":4005:4029   */\n      tag_118\n      jump\t// in\n    tag_206:\n        /* \"#utility.yul\":4000:4003   */\n      dup3\n        /* \"#utility.yul\":3993:4030   */\n      mstore\n        /* \"#utility.yul\":3918:4036   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4042:4264   */\n    tag_20:\n        /* \"#utility.yul\":4135:4139   */\n      0x00\n        /* \"#utility.yul\":4173:4175   */\n      0x20\n        /* \"#utility.yul\":4162:4171   */\n      dup3\n        /* \"#utility.yul\":4158:4176   */\n      add\n        /* \"#utility.yul\":4150:4176   */\n      swap1\n      pop\n        /* \"#utility.yul\":4186:4257   */\n      tag_208\n        /* \"#utility.yul\":4254:4255   */\n      0x00\n        /* \"#utility.yul\":4243:4252   */\n      dup4\n        /* \"#utility.yul\":4239:4256   */\n      add\n        /* \"#utility.yul\":4230:4236   */\n      dup5\n        /* \"#utility.yul\":4186:4257   */\n      tag_128\n      jump\t// in\n    tag_208:\n        /* \"#utility.yul\":4042:4264   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4270:4744   */\n    tag_23:\n        /* \"#utility.yul\":4338:4344   */\n      0x00\n        /* \"#utility.yul\":4346:4352   */\n      0x00\n        /* \"#utility.yul\":4395:4397   */\n      0x40\n        /* \"#utility.yul\":4383:4392   */\n      dup4\n        /* \"#utility.yul\":4374:4381   */\n      dup6\n        /* \"#utility.yul\":4370:4393   */\n      sub\n        /* \"#utility.yul\":4366:4398   */\n      slt\n        /* \"#utility.yul\":4363:4482   */\n      iszero\n      tag_210\n      jumpi\n        /* \"#utility.yul\":4401:4480   */\n      tag_211\n      tag_112\n      jump\t// in\n    tag_211:\n        /* \"#utility.yul\":4363:4482   */\n    tag_210:\n        /* \"#utility.yul\":4521:4522   */\n      0x00\n        /* \"#utility.yul\":4546:4599   */\n      tag_212\n        /* \"#utility.yul\":4591:4598   */\n      dup6\n        /* \"#utility.yul\":4582:4588   */\n      dup3\n        /* \"#utility.yul\":4571:4580   */\n      dup7\n        /* \"#utility.yul\":4567:4589   */\n      add\n        /* \"#utility.yul\":4546:4599   */\n      tag_120\n      jump\t// in\n    tag_212:\n        /* \"#utility.yul\":4536:4599   */\n      swap3\n      pop\n        /* \"#utility.yul\":4492:4609   */\n      pop\n        /* \"#utility.yul\":4648:4650   */\n      0x20\n        /* \"#utility.yul\":4674:4727   */\n      tag_213\n        /* \"#utility.yul\":4719:4726   */\n      dup6\n        /* \"#utility.yul\":4710:4716   */\n      dup3\n        /* \"#utility.yul\":4699:4708   */\n      dup7\n        /* \"#utility.yul\":4695:4717   */\n      add\n        /* \"#utility.yul\":4674:4727   */\n      tag_123\n      jump\t// in\n    tag_213:\n        /* \"#utility.yul\":4664:4727   */\n      swap2\n      pop\n        /* \"#utility.yul\":4619:4737   */\n      pop\n        /* \"#utility.yul\":4270:4744   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4750:4868   */\n    tag_129:\n        /* \"#utility.yul\":4837:4861   */\n      tag_215\n        /* \"#utility.yul\":4855:4860   */\n      dup2\n        /* \"#utility.yul\":4837:4861   */\n      tag_121\n      jump\t// in\n    tag_215:\n        /* \"#utility.yul\":4832:4835   */\n      dup3\n        /* \"#utility.yul\":4825:4862   */\n      mstore\n        /* \"#utility.yul\":4750:4868   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4874:4989   */\n    tag_130:\n        /* \"#utility.yul\":4959:4982   */\n      tag_217\n        /* \"#utility.yul\":4976:4981   */\n      dup2\n        /* \"#utility.yul\":4959:4982   */\n      tag_114\n      jump\t// in\n    tag_217:\n        /* \"#utility.yul\":4954:4957   */\n      dup3\n        /* \"#utility.yul\":4947:4983   */\n      mstore\n        /* \"#utility.yul\":4874:4989   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4995:5094   */\n    tag_131:\n        /* \"#utility.yul\":5047:5053   */\n      0x00\n        /* \"#utility.yul\":5081:5086   */\n      dup2\n        /* \"#utility.yul\":5075:5087   */\n      mload\n        /* \"#utility.yul\":5065:5087   */\n      swap1\n      pop\n        /* \"#utility.yul\":4995:5094   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5100:5269   */\n    tag_132:\n        /* \"#utility.yul\":5184:5195   */\n      0x00\n        /* \"#utility.yul\":5218:5224   */\n      dup3\n        /* \"#utility.yul\":5213:5216   */\n      dup3\n        /* \"#utility.yul\":5206:5225   */\n      mstore\n        /* \"#utility.yul\":5258:5262   */\n      0x20\n        /* \"#utility.yul\":5253:5256   */\n      dup3\n        /* \"#utility.yul\":5249:5263   */\n      add\n        /* \"#utility.yul\":5234:5263   */\n      swap1\n      pop\n        /* \"#utility.yul\":5100:5269   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5275:5414   */\n    tag_133:\n        /* \"#utility.yul\":5364:5370   */\n      dup3\n        /* \"#utility.yul\":5359:5362   */\n      dup2\n        /* \"#utility.yul\":5354:5357   */\n      dup4\n        /* \"#utility.yul\":5348:5371   */\n      mcopy\n        /* \"#utility.yul\":5405:5406   */\n      0x00\n        /* \"#utility.yul\":5396:5402   */\n      dup4\n        /* \"#utility.yul\":5391:5394   */\n      dup4\n        /* \"#utility.yul\":5387:5403   */\n      add\n        /* \"#utility.yul\":5380:5407   */\n      mstore\n        /* \"#utility.yul\":5275:5414   */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5420:5522   */\n    tag_134:\n        /* \"#utility.yul\":5461:5467   */\n      0x00\n        /* \"#utility.yul\":5512:5514   */\n      0x1f\n        /* \"#utility.yul\":5508:5515   */\n      not\n        /* \"#utility.yul\":5503:5505   */\n      0x1f\n        /* \"#utility.yul\":5496:5501   */\n      dup4\n        /* \"#utility.yul\":5492:5506   */\n      add\n        /* \"#utility.yul\":5488:5516   */\n      and\n        /* \"#utility.yul\":5478:5516   */\n      swap1\n      pop\n        /* \"#utility.yul\":5420:5522   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5528:5905   */\n    tag_135:\n        /* \"#utility.yul\":5616:5619   */\n      0x00\n        /* \"#utility.yul\":5644:5683   */\n      tag_223\n        /* \"#utility.yul\":5677:5682   */\n      dup3\n        /* \"#utility.yul\":5644:5683   */\n      tag_131\n      jump\t// in\n    tag_223:\n        /* \"#utility.yul\":5699:5770   */\n      tag_224\n        /* \"#utility.yul\":5763:5769   */\n      dup2\n        /* \"#utility.yul\":5758:5761   */\n      dup6\n        /* \"#utility.yul\":5699:5770   */\n      tag_132\n      jump\t// in\n    tag_224:\n        /* \"#utility.yul\":5692:5770   */\n      swap4\n      pop\n        /* \"#utility.yul\":5779:5844   */\n      tag_225\n        /* \"#utility.yul\":5837:5843   */\n      dup2\n        /* \"#utility.yul\":5832:5835   */\n      dup6\n        /* \"#utility.yul\":5825:5829   */\n      0x20\n        /* \"#utility.yul\":5818:5823   */\n      dup7\n        /* \"#utility.yul\":5814:5830   */\n      add\n        /* \"#utility.yul\":5779:5844   */\n      tag_133\n      jump\t// in\n    tag_225:\n        /* \"#utility.yul\":5869:5898   */\n      tag_226\n        /* \"#utility.yul\":5891:5897   */\n      dup2\n        /* \"#utility.yul\":5869:5898   */\n      tag_134\n      jump\t// in\n    tag_226:\n        /* \"#utility.yul\":5864:5867   */\n      dup5\n        /* \"#utility.yul\":5860:5899   */\n      add\n        /* \"#utility.yul\":5853:5899   */\n      swap2\n      pop\n        /* \"#utility.yul\":5620:5905   */\n      pop\n        /* \"#utility.yul\":5528:5905   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5911:6995   */\n    tag_26:\n        /* \"#utility.yul\":6218:6222   */\n      0x00\n        /* \"#utility.yul\":6256:6259   */\n      0x0100\n        /* \"#utility.yul\":6245:6254   */\n      dup3\n        /* \"#utility.yul\":6241:6260   */\n      add\n        /* \"#utility.yul\":6233:6260   */\n      swap1\n      pop\n        /* \"#utility.yul\":6270:6341   */\n      tag_228\n        /* \"#utility.yul\":6338:6339   */\n      0x00\n        /* \"#utility.yul\":6327:6336   */\n      dup4\n        /* \"#utility.yul\":6323:6340   */\n      add\n        /* \"#utility.yul\":6314:6320   */\n      dup12\n        /* \"#utility.yul\":6270:6341   */\n      tag_128\n      jump\t// in\n    tag_228:\n        /* \"#utility.yul\":6351:6423   */\n      tag_229\n        /* \"#utility.yul\":6419:6421   */\n      0x20\n        /* \"#utility.yul\":6408:6417   */\n      dup4\n        /* \"#utility.yul\":6404:6422   */\n      add\n        /* \"#utility.yul\":6395:6401   */\n      dup11\n        /* \"#utility.yul\":6351:6423   */\n      tag_128\n      jump\t// in\n    tag_229:\n        /* \"#utility.yul\":6433:6505   */\n      tag_230\n        /* \"#utility.yul\":6501:6503   */\n      0x40\n        /* \"#utility.yul\":6490:6499   */\n      dup4\n        /* \"#utility.yul\":6486:6504   */\n      add\n        /* \"#utility.yul\":6477:6483   */\n      dup10\n        /* \"#utility.yul\":6433:6505   */\n      tag_129\n      jump\t// in\n    tag_230:\n        /* \"#utility.yul\":6515:6587   */\n      tag_231\n        /* \"#utility.yul\":6583:6585   */\n      0x60\n        /* \"#utility.yul\":6572:6581   */\n      dup4\n        /* \"#utility.yul\":6568:6586   */\n      add\n        /* \"#utility.yul\":6559:6565   */\n      dup9\n        /* \"#utility.yul\":6515:6587   */\n      tag_129\n      jump\t// in\n    tag_231:\n        /* \"#utility.yul\":6597:6670   */\n      tag_232\n        /* \"#utility.yul\":6665:6668   */\n      0x80\n        /* \"#utility.yul\":6654:6663   */\n      dup4\n        /* \"#utility.yul\":6650:6669   */\n      add\n        /* \"#utility.yul\":6641:6647   */\n      dup8\n        /* \"#utility.yul\":6597:6670   */\n      tag_129\n      jump\t// in\n    tag_232:\n        /* \"#utility.yul\":6680:6751   */\n      tag_233\n        /* \"#utility.yul\":6746:6749   */\n      0xa0\n        /* \"#utility.yul\":6735:6744   */\n      dup4\n        /* \"#utility.yul\":6731:6750   */\n      add\n        /* \"#utility.yul\":6722:6728   */\n      dup7\n        /* \"#utility.yul\":6680:6751   */\n      tag_130\n      jump\t// in\n    tag_233:\n        /* \"#utility.yul\":6799:6808   */\n      dup2\n        /* \"#utility.yul\":6793:6797   */\n      dup2\n        /* \"#utility.yul\":6789:6809   */\n      sub\n        /* \"#utility.yul\":6783:6786   */\n      0xc0\n        /* \"#utility.yul\":6772:6781   */\n      dup4\n        /* \"#utility.yul\":6768:6787   */\n      add\n        /* \"#utility.yul\":6761:6810   */\n      mstore\n        /* \"#utility.yul\":6827:6905   */\n      tag_234\n        /* \"#utility.yul\":6900:6904   */\n      dup2\n        /* \"#utility.yul\":6891:6897   */\n      dup6\n        /* \"#utility.yul\":6827:6905   */\n      tag_135\n      jump\t// in\n    tag_234:\n        /* \"#utility.yul\":6819:6905   */\n      swap1\n      pop\n        /* \"#utility.yul\":6915:6988   */\n      tag_235\n        /* \"#utility.yul\":6983:6986   */\n      0xe0\n        /* \"#utility.yul\":6972:6981   */\n      dup4\n        /* \"#utility.yul\":6968:6987   */\n      add\n        /* \"#utility.yul\":6959:6965   */\n      dup5\n        /* \"#utility.yul\":6915:6988   */\n      tag_128\n      jump\t// in\n    tag_235:\n        /* \"#utility.yul\":5911:6995   */\n      swap10\n      swap9\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7001:7330   */\n    tag_29:\n        /* \"#utility.yul\":7060:7066   */\n      0x00\n        /* \"#utility.yul\":7109:7111   */\n      0x20\n        /* \"#utility.yul\":7097:7106   */\n      dup3\n        /* \"#utility.yul\":7088:7095   */\n      dup5\n        /* \"#utility.yul\":7084:7107   */\n      sub\n        /* \"#utility.yul\":7080:7112   */\n      slt\n        /* \"#utility.yul\":7077:7196   */\n      iszero\n      tag_237\n      jumpi\n        /* \"#utility.yul\":7115:7194   */\n      tag_238\n      tag_112\n      jump\t// in\n    tag_238:\n        /* \"#utility.yul\":7077:7196   */\n    tag_237:\n        /* \"#utility.yul\":7235:7236   */\n      0x00\n        /* \"#utility.yul\":7260:7313   */\n      tag_239\n        /* \"#utility.yul\":7305:7312   */\n      dup5\n        /* \"#utility.yul\":7296:7302   */\n      dup3\n        /* \"#utility.yul\":7285:7294   */\n      dup6\n        /* \"#utility.yul\":7281:7303   */\n      add\n        /* \"#utility.yul\":7260:7313   */\n      tag_120\n      jump\t// in\n    tag_239:\n        /* \"#utility.yul\":7250:7313   */\n      swap2\n      pop\n        /* \"#utility.yul\":7206:7323   */\n      pop\n        /* \"#utility.yul\":7001:7330   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7336:7421   */\n    tag_136:\n        /* \"#utility.yul\":7381:7388   */\n      0x00\n        /* \"#utility.yul\":7410:7415   */\n      dup2\n        /* \"#utility.yul\":7399:7415   */\n      swap1\n      pop\n        /* \"#utility.yul\":7336:7421   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7427:7528   */\n    tag_137:\n        /* \"#utility.yul\":7463:7470   */\n      0x00\n        /* \"#utility.yul\":7503:7521   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":7496:7501   */\n      dup3\n        /* \"#utility.yul\":7492:7522   */\n      and\n        /* \"#utility.yul\":7481:7522   */\n      swap1\n      pop\n        /* \"#utility.yul\":7427:7528   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7534:7594   */\n    tag_138:\n        /* \"#utility.yul\":7562:7565   */\n      0x00\n        /* \"#utility.yul\":7583:7588   */\n      dup2\n        /* \"#utility.yul\":7576:7588   */\n      swap1\n      pop\n        /* \"#utility.yul\":7534:7594   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7600:7756   */\n    tag_139:\n        /* \"#utility.yul\":7657:7666   */\n      0x00\n        /* \"#utility.yul\":7690:7750   */\n      tag_244\n        /* \"#utility.yul\":7707:7749   */\n      tag_245\n        /* \"#utility.yul\":7716:7748   */\n      tag_246\n        /* \"#utility.yul\":7742:7747   */\n      dup5\n        /* \"#utility.yul\":7716:7748   */\n      tag_136\n      jump\t// in\n    tag_246:\n        /* \"#utility.yul\":7707:7749   */\n      tag_138\n      jump\t// in\n    tag_245:\n        /* \"#utility.yul\":7690:7750   */\n      tag_137\n      jump\t// in\n    tag_244:\n        /* \"#utility.yul\":7677:7750   */\n      swap1\n      pop\n        /* \"#utility.yul\":7600:7756   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7762:7907   */\n    tag_140:\n        /* \"#utility.yul\":7856:7900   */\n      tag_248\n        /* \"#utility.yul\":7894:7899   */\n      dup2\n        /* \"#utility.yul\":7856:7900   */\n      tag_139\n      jump\t// in\n    tag_248:\n        /* \"#utility.yul\":7851:7854   */\n      dup3\n        /* \"#utility.yul\":7844:7901   */\n      mstore\n        /* \"#utility.yul\":7762:7907   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7913:8149   */\n    tag_50:\n        /* \"#utility.yul\":8013:8017   */\n      0x00\n        /* \"#utility.yul\":8051:8053   */\n      0x20\n        /* \"#utility.yul\":8040:8049   */\n      dup3\n        /* \"#utility.yul\":8036:8054   */\n      add\n        /* \"#utility.yul\":8028:8054   */\n      swap1\n      pop\n        /* \"#utility.yul\":8064:8142   */\n      tag_250\n        /* \"#utility.yul\":8139:8140   */\n      0x00\n        /* \"#utility.yul\":8128:8137   */\n      dup4\n        /* \"#utility.yul\":8124:8141   */\n      add\n        /* \"#utility.yul\":8115:8121   */\n      dup5\n        /* \"#utility.yul\":8064:8142   */\n      tag_140\n      jump\t// in\n    tag_250:\n        /* \"#utility.yul\":7913:8149   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8155:8320   */\n    tag_141:\n        /* \"#utility.yul\":8295:8312   */\n      0x496e76616c696420616464726573730000000000000000000000000000000000\n        /* \"#utility.yul\":8291:8292   */\n      0x00\n        /* \"#utility.yul\":8283:8289   */\n      dup3\n        /* \"#utility.yul\":8279:8293   */\n      add\n        /* \"#utility.yul\":8272:8313   */\n      mstore\n        /* \"#utility.yul\":8155:8320   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8326:8692   */\n    tag_142:\n        /* \"#utility.yul\":8468:8471   */\n      0x00\n        /* \"#utility.yul\":8489:8556   */\n      tag_253\n        /* \"#utility.yul\":8553:8555   */\n      0x0f\n        /* \"#utility.yul\":8548:8551   */\n      dup4\n        /* \"#utility.yul\":8489:8556   */\n      tag_132\n      jump\t// in\n    tag_253:\n        /* \"#utility.yul\":8482:8556   */\n      swap2\n      pop\n        /* \"#utility.yul\":8565:8658   */\n      tag_254\n        /* \"#utility.yul\":8654:8657   */\n      dup3\n        /* \"#utility.yul\":8565:8658   */\n      tag_141\n      jump\t// in\n    tag_254:\n        /* \"#utility.yul\":8683:8685   */\n      0x20\n        /* \"#utility.yul\":8678:8681   */\n      dup3\n        /* \"#utility.yul\":8674:8686   */\n      add\n        /* \"#utility.yul\":8667:8686   */\n      swap1\n      pop\n        /* \"#utility.yul\":8326:8692   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8698:9117   */\n    tag_55:\n        /* \"#utility.yul\":8864:8868   */\n      0x00\n        /* \"#utility.yul\":8902:8904   */\n      0x20\n        /* \"#utility.yul\":8891:8900   */\n      dup3\n        /* \"#utility.yul\":8887:8905   */\n      add\n        /* \"#utility.yul\":8879:8905   */\n      swap1\n      pop\n        /* \"#utility.yul\":8951:8960   */\n      dup2\n        /* \"#utility.yul\":8945:8949   */\n      dup2\n        /* \"#utility.yul\":8941:8961   */\n      sub\n        /* \"#utility.yul\":8937:8938   */\n      0x00\n        /* \"#utility.yul\":8926:8935   */\n      dup4\n        /* \"#utility.yul\":8922:8939   */\n      add\n        /* \"#utility.yul\":8915:8962   */\n      mstore\n        /* \"#utility.yul\":8979:9110   */\n      tag_256\n        /* \"#utility.yul\":9105:9109   */\n      dup2\n        /* \"#utility.yul\":8979:9110   */\n      tag_142\n      jump\t// in\n    tag_256:\n        /* \"#utility.yul\":8971:9110   */\n      swap1\n      pop\n        /* \"#utility.yul\":8698:9117   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9123:9303   */\n    tag_143:\n        /* \"#utility.yul\":9171:9248   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":9168:9169   */\n      0x00\n        /* \"#utility.yul\":9161:9249   */\n      mstore\n        /* \"#utility.yul\":9268:9272   */\n      0x41\n        /* \"#utility.yul\":9265:9266   */\n      0x04\n        /* \"#utility.yul\":9258:9273   */\n      mstore\n        /* \"#utility.yul\":9292:9296   */\n      0x24\n        /* \"#utility.yul\":9289:9290   */\n      0x00\n        /* \"#utility.yul\":9282:9297   */\n      revert\n        /* \"#utility.yul\":9309:9489   */\n    tag_144:\n        /* \"#utility.yul\":9357:9434   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":9354:9355   */\n      0x00\n        /* \"#utility.yul\":9347:9435   */\n      mstore\n        /* \"#utility.yul\":9454:9458   */\n      0x22\n        /* \"#utility.yul\":9451:9452   */\n      0x04\n        /* \"#utility.yul\":9444:9459   */\n      mstore\n        /* \"#utility.yul\":9478:9482   */\n      0x24\n        /* \"#utility.yul\":9475:9476   */\n      0x00\n        /* \"#utility.yul\":9468:9483   */\n      revert\n        /* \"#utility.yul\":9495:9815   */\n    tag_67:\n        /* \"#utility.yul\":9539:9545   */\n      0x00\n        /* \"#utility.yul\":9576:9577   */\n      0x02\n        /* \"#utility.yul\":9570:9574   */\n      dup3\n        /* \"#utility.yul\":9566:9578   */\n      div\n        /* \"#utility.yul\":9556:9578   */\n      swap1\n      pop\n        /* \"#utility.yul\":9623:9624   */\n      0x01\n        /* \"#utility.yul\":9617:9621   */\n      dup3\n        /* \"#utility.yul\":9613:9625   */\n      and\n        /* \"#utility.yul\":9644:9662   */\n      dup1\n        /* \"#utility.yul\":9634:9715   */\n      tag_260\n      jumpi\n        /* \"#utility.yul\":9700:9704   */\n      0x7f\n        /* \"#utility.yul\":9692:9698   */\n      dup3\n        /* \"#utility.yul\":9688:9705   */\n      and\n        /* \"#utility.yul\":9678:9705   */\n      swap2\n      pop\n        /* \"#utility.yul\":9634:9715   */\n    tag_260:\n        /* \"#utility.yul\":9762:9764   */\n      0x20\n        /* \"#utility.yul\":9754:9760   */\n      dup3\n        /* \"#utility.yul\":9751:9765   */\n      lt\n        /* \"#utility.yul\":9731:9749   */\n      dup2\n        /* \"#utility.yul\":9728:9766   */\n      sub\n        /* \"#utility.yul\":9725:9809   */\n      tag_261\n      jumpi\n        /* \"#utility.yul\":9781:9799   */\n      tag_262\n      tag_144\n      jump\t// in\n    tag_262:\n        /* \"#utility.yul\":9725:9809   */\n    tag_261:\n        /* \"#utility.yul\":9546:9815   */\n      pop\n        /* \"#utility.yul\":9495:9815   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9821:9962   */\n    tag_145:\n        /* \"#utility.yul\":9870:9874   */\n      0x00\n        /* \"#utility.yul\":9893:9896   */\n      dup2\n        /* \"#utility.yul\":9885:9896   */\n      swap1\n      pop\n        /* \"#utility.yul\":9916:9919   */\n      dup2\n        /* \"#utility.yul\":9913:9914   */\n      0x00\n        /* \"#utility.yul\":9906:9920   */\n      mstore\n        /* \"#utility.yul\":9950:9954   */\n      0x20\n        /* \"#utility.yul\":9947:9948   */\n      0x00\n        /* \"#utility.yul\":9937:9955   */\n      keccak256\n        /* \"#utility.yul\":9929:9955   */\n      swap1\n      pop\n        /* \"#utility.yul\":9821:9962   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9968:10061   */\n    tag_146:\n        /* \"#utility.yul\":10005:10011   */\n      0x00\n        /* \"#utility.yul\":10052:10054   */\n      0x20\n        /* \"#utility.yul\":10047:10049   */\n      0x1f\n        /* \"#utility.yul\":10040:10045   */\n      dup4\n        /* \"#utility.yul\":10036:10050   */\n      add\n        /* \"#utility.yul\":10032:10055   */\n      div\n        /* \"#utility.yul\":10022:10055   */\n      swap1\n      pop\n        /* \"#utility.yul\":9968:10061   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10067:10174   */\n    tag_147:\n        /* \"#utility.yul\":10111:10119   */\n      0x00\n        /* \"#utility.yul\":10161:10166   */\n      dup3\n        /* \"#utility.yul\":10155:10159   */\n      dup3\n        /* \"#utility.yul\":10151:10167   */\n      shl\n        /* \"#utility.yul\":10130:10167   */\n      swap1\n      pop\n        /* \"#utility.yul\":10067:10174   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10180:10573   */\n    tag_148:\n        /* \"#utility.yul\":10249:10255   */\n      0x00\n        /* \"#utility.yul\":10299:10300   */\n      0x08\n        /* \"#utility.yul\":10287:10297   */\n      dup4\n        /* \"#utility.yul\":10283:10301   */\n      mul\n        /* \"#utility.yul\":10322:10419   */\n      tag_267\n        /* \"#utility.yul\":10352:10418   */\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":10341:10350   */\n      dup3\n        /* \"#utility.yul\":10322:10419   */\n      tag_147\n      jump\t// in\n    tag_267:\n        /* \"#utility.yul\":10440:10479   */\n      tag_268\n        /* \"#utility.yul\":10470:10478   */\n      dup7\n        /* \"#utility.yul\":10459:10468   */\n      dup4\n        /* \"#utility.yul\":10440:10479   */\n      tag_147\n      jump\t// in\n    tag_268:\n        /* \"#utility.yul\":10428:10479   */\n      swap6\n      pop\n        /* \"#utility.yul\":10512:10516   */\n      dup1\n        /* \"#utility.yul\":10508:10517   */\n      not\n        /* \"#utility.yul\":10501:10506   */\n      dup5\n        /* \"#utility.yul\":10497:10518   */\n      and\n        /* \"#utility.yul\":10488:10518   */\n      swap4\n      pop\n        /* \"#utility.yul\":10561:10565   */\n      dup1\n        /* \"#utility.yul\":10551:10559   */\n      dup7\n        /* \"#utility.yul\":10547:10566   */\n      and\n        /* \"#utility.yul\":10540:10545   */\n      dup5\n        /* \"#utility.yul\":10537:10567   */\n      or\n        /* \"#utility.yul\":10527:10567   */\n      swap3\n      pop\n        /* \"#utility.yul\":10256:10573   */\n      pop\n      pop\n        /* \"#utility.yul\":10180:10573   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10579:10721   */\n    tag_149:\n        /* \"#utility.yul\":10629:10638   */\n      0x00\n        /* \"#utility.yul\":10662:10715   */\n      tag_270\n        /* \"#utility.yul\":10680:10714   */\n      tag_271\n        /* \"#utility.yul\":10689:10713   */\n      tag_272\n        /* \"#utility.yul\":10707:10712   */\n      dup5\n        /* \"#utility.yul\":10689:10713   */\n      tag_121\n      jump\t// in\n    tag_272:\n        /* \"#utility.yul\":10680:10714   */\n      tag_138\n      jump\t// in\n    tag_271:\n        /* \"#utility.yul\":10662:10715   */\n      tag_121\n      jump\t// in\n    tag_270:\n        /* \"#utility.yul\":10649:10715   */\n      swap1\n      pop\n        /* \"#utility.yul\":10579:10721   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10727:10802   */\n    tag_150:\n        /* \"#utility.yul\":10770:10773   */\n      0x00\n        /* \"#utility.yul\":10791:10796   */\n      dup2\n        /* \"#utility.yul\":10784:10796   */\n      swap1\n      pop\n        /* \"#utility.yul\":10727:10802   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10808:11077   */\n    tag_151:\n        /* \"#utility.yul\":10918:10957   */\n      tag_275\n        /* \"#utility.yul\":10949:10956   */\n      dup4\n        /* \"#utility.yul\":10918:10957   */\n      tag_149\n      jump\t// in\n    tag_275:\n        /* \"#utility.yul\":10979:11070   */\n      tag_276\n        /* \"#utility.yul\":11028:11069   */\n      tag_277\n        /* \"#utility.yul\":11052:11068   */\n      dup3\n        /* \"#utility.yul\":11028:11069   */\n      tag_150\n      jump\t// in\n    tag_277:\n        /* \"#utility.yul\":11020:11026   */\n      dup5\n        /* \"#utility.yul\":11013:11017   */\n      dup5\n        /* \"#utility.yul\":11007:11018   */\n      sload\n        /* \"#utility.yul\":10979:11070   */\n      tag_148\n      jump\t// in\n    tag_276:\n        /* \"#utility.yul\":10973:10977   */\n      dup3\n        /* \"#utility.yul\":10966:11071   */\n      sstore\n        /* \"#utility.yul\":10884:11077   */\n      pop\n        /* \"#utility.yul\":10808:11077   */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11083:11156   */\n    tag_152:\n        /* \"#utility.yul\":11128:11131   */\n      0x00\n        /* \"#utility.yul\":11149:11150   */\n      0x00\n        /* \"#utility.yul\":11142:11150   */\n      swap1\n      pop\n        /* \"#utility.yul\":11083:11156   */\n      swap1\n      jump\t// out\n        /* \"#utility.yul\":11162:11351   */\n    tag_153:\n        /* \"#utility.yul\":11239:11271   */\n      tag_280\n      tag_152\n      jump\t// in\n    tag_280:\n        /* \"#utility.yul\":11280:11345   */\n      tag_281\n        /* \"#utility.yul\":11338:11344   */\n      dup2\n        /* \"#utility.yul\":11330:11336   */\n      dup5\n        /* \"#utility.yul\":11324:11328   */\n      dup5\n        /* \"#utility.yul\":11280:11345   */\n      tag_151\n      jump\t// in\n    tag_281:\n        /* \"#utility.yul\":11215:11351   */\n      pop\n        /* \"#utility.yul\":11162:11351   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11357:11543   */\n    tag_154:\n        /* \"#utility.yul\":11417:11537   */\n    tag_283:\n        /* \"#utility.yul\":11434:11437   */\n      dup2\n        /* \"#utility.yul\":11427:11432   */\n      dup2\n        /* \"#utility.yul\":11424:11438   */\n      lt\n        /* \"#utility.yul\":11417:11537   */\n      iszero\n      tag_285\n      jumpi\n        /* \"#utility.yul\":11488:11527   */\n      tag_286\n        /* \"#utility.yul\":11525:11526   */\n      0x00\n        /* \"#utility.yul\":11518:11523   */\n      dup3\n        /* \"#utility.yul\":11488:11527   */\n      tag_153\n      jump\t// in\n    tag_286:\n        /* \"#utility.yul\":11461:11462   */\n      0x01\n        /* \"#utility.yul\":11454:11459   */\n      dup2\n        /* \"#utility.yul\":11450:11463   */\n      add\n        /* \"#utility.yul\":11441:11463   */\n      swap1\n      pop\n        /* \"#utility.yul\":11417:11537   */\n      jump(tag_283)\n    tag_285:\n        /* \"#utility.yul\":11357:11543   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11549:12092   */\n    tag_155:\n        /* \"#utility.yul\":11650:11652   */\n      0x1f\n        /* \"#utility.yul\":11645:11648   */\n      dup3\n        /* \"#utility.yul\":11642:11653   */\n      gt\n        /* \"#utility.yul\":11639:12085   */\n      iszero\n      tag_288\n      jumpi\n        /* \"#utility.yul\":11684:11722   */\n      tag_289\n        /* \"#utility.yul\":11716:11721   */\n      dup2\n        /* \"#utility.yul\":11684:11722   */\n      tag_145\n      jump\t// in\n    tag_289:\n        /* \"#utility.yul\":11768:11797   */\n      tag_290\n        /* \"#utility.yul\":11786:11796   */\n      dup5\n        /* \"#utility.yul\":11768:11797   */\n      tag_146\n      jump\t// in\n    tag_290:\n        /* \"#utility.yul\":11758:11766   */\n      dup2\n        /* \"#utility.yul\":11754:11798   */\n      add\n        /* \"#utility.yul\":11951:11953   */\n      0x20\n        /* \"#utility.yul\":11939:11949   */\n      dup6\n        /* \"#utility.yul\":11936:11954   */\n      lt\n        /* \"#utility.yul\":11933:11982   */\n      iszero\n      tag_291\n      jumpi\n        /* \"#utility.yul\":11972:11980   */\n      dup2\n        /* \"#utility.yul\":11957:11980   */\n      swap1\n      pop\n        /* \"#utility.yul\":11933:11982   */\n    tag_291:\n        /* \"#utility.yul\":11995:12075   */\n      tag_292\n        /* \"#utility.yul\":12051:12073   */\n      tag_293\n        /* \"#utility.yul\":12069:12072   */\n      dup6\n        /* \"#utility.yul\":12051:12073   */\n      tag_146\n      jump\t// in\n    tag_293:\n        /* \"#utility.yul\":12041:12049   */\n      dup4\n        /* \"#utility.yul\":12037:12074   */\n      add\n        /* \"#utility.yul\":12024:12035   */\n      dup3\n        /* \"#utility.yul\":11995:12075   */\n      tag_154\n      jump\t// in\n    tag_292:\n        /* \"#utility.yul\":11654:12085   */\n      pop\n      pop\n        /* \"#utility.yul\":11639:12085   */\n    tag_288:\n        /* \"#utility.yul\":11549:12092   */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12098:12215   */\n    tag_156:\n        /* \"#utility.yul\":12152:12160   */\n      0x00\n        /* \"#utility.yul\":12202:12207   */\n      dup3\n        /* \"#utility.yul\":12196:12200   */\n      dup3\n        /* \"#utility.yul\":12192:12208   */\n      shr\n        /* \"#utility.yul\":12171:12208   */\n      swap1\n      pop\n        /* \"#utility.yul\":12098:12215   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12221:12390   */\n    tag_157:\n        /* \"#utility.yul\":12265:12271   */\n      0x00\n        /* \"#utility.yul\":12298:12349   */\n      tag_296\n        /* \"#utility.yul\":12346:12347   */\n      0x00\n        /* \"#utility.yul\":12342:12348   */\n      not\n        /* \"#utility.yul\":12334:12339   */\n      dup5\n        /* \"#utility.yul\":12331:12332   */\n      0x08\n        /* \"#utility.yul\":12327:12340   */\n      mul\n        /* \"#utility.yul\":12298:12349   */\n      tag_156\n      jump\t// in\n    tag_296:\n        /* \"#utility.yul\":12294:12350   */\n      not\n        /* \"#utility.yul\":12379:12383   */\n      dup1\n        /* \"#utility.yul\":12373:12377   */\n      dup4\n        /* \"#utility.yul\":12369:12384   */\n      and\n        /* \"#utility.yul\":12359:12384   */\n      swap2\n      pop\n        /* \"#utility.yul\":12272:12390   */\n      pop\n        /* \"#utility.yul\":12221:12390   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12395:12690   */\n    tag_158:\n        /* \"#utility.yul\":12471:12475   */\n      0x00\n        /* \"#utility.yul\":12617:12646   */\n      tag_298\n        /* \"#utility.yul\":12642:12645   */\n      dup4\n        /* \"#utility.yul\":12636:12640   */\n      dup4\n        /* \"#utility.yul\":12617:12646   */\n      tag_157\n      jump\t// in\n    tag_298:\n        /* \"#utility.yul\":12609:12646   */\n      swap2\n      pop\n        /* \"#utility.yul\":12679:12682   */\n      dup3\n        /* \"#utility.yul\":12676:12677   */\n      0x02\n        /* \"#utility.yul\":12672:12683   */\n      mul\n        /* \"#utility.yul\":12666:12670   */\n      dup3\n        /* \"#utility.yul\":12663:12684   */\n      or\n        /* \"#utility.yul\":12655:12684   */\n      swap1\n      pop\n        /* \"#utility.yul\":12395:12690   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12695:14090   */\n    tag_58:\n        /* \"#utility.yul\":12812:12849   */\n      tag_300\n        /* \"#utility.yul\":12845:12848   */\n      dup3\n        /* \"#utility.yul\":12812:12849   */\n      tag_131\n      jump\t// in\n    tag_300:\n        /* \"#utility.yul\":12914:12932   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":12906:12912   */\n      dup2\n        /* \"#utility.yul\":12903:12933   */\n      gt\n        /* \"#utility.yul\":12900:12956   */\n      iszero\n      tag_301\n      jumpi\n        /* \"#utility.yul\":12936:12954   */\n      tag_302\n      tag_143\n      jump\t// in\n    tag_302:\n        /* \"#utility.yul\":12900:12956   */\n    tag_301:\n        /* \"#utility.yul\":12980:13018   */\n      tag_303\n        /* \"#utility.yul\":13012:13016   */\n      dup3\n        /* \"#utility.yul\":13006:13017   */\n      sload\n        /* \"#utility.yul\":12980:13018   */\n      tag_67\n      jump\t// in\n    tag_303:\n        /* \"#utility.yul\":13065:13132   */\n      tag_304\n        /* \"#utility.yul\":13125:13131   */\n      dup3\n        /* \"#utility.yul\":13117:13123   */\n      dup3\n        /* \"#utility.yul\":13111:13115   */\n      dup6\n        /* \"#utility.yul\":13065:13132   */\n      tag_155\n      jump\t// in\n    tag_304:\n        /* \"#utility.yul\":13159:13160   */\n      0x00\n        /* \"#utility.yul\":13183:13187   */\n      0x20\n        /* \"#utility.yul\":13170:13187   */\n      swap1\n      pop\n        /* \"#utility.yul\":13215:13217   */\n      0x1f\n        /* \"#utility.yul\":13207:13213   */\n      dup4\n        /* \"#utility.yul\":13204:13218   */\n      gt\n        /* \"#utility.yul\":13232:13233   */\n      0x01\n        /* \"#utility.yul\":13227:13845   */\n      dup2\n      eq\n      tag_306\n      jumpi\n        /* \"#utility.yul\":13889:13890   */\n      0x00\n        /* \"#utility.yul\":13906:13912   */\n      dup5\n        /* \"#utility.yul\":13903:13980   */\n      iszero\n      tag_307\n      jumpi\n        /* \"#utility.yul\":13955:13964   */\n      dup3\n        /* \"#utility.yul\":13950:13953   */\n      dup8\n        /* \"#utility.yul\":13946:13965   */\n      add\n        /* \"#utility.yul\":13940:13966   */\n      mload\n        /* \"#utility.yul\":13931:13966   */\n      swap1\n      pop\n        /* \"#utility.yul\":13903:13980   */\n    tag_307:\n        /* \"#utility.yul\":14006:14073   */\n      tag_308\n        /* \"#utility.yul\":14066:14072   */\n      dup6\n        /* \"#utility.yul\":14059:14064   */\n      dup3\n        /* \"#utility.yul\":14006:14073   */\n      tag_158\n      jump\t// in\n    tag_308:\n        /* \"#utility.yul\":14000:14004   */\n      dup7\n        /* \"#utility.yul\":13993:14074   */\n      sstore\n        /* \"#utility.yul\":13862:14084   */\n      pop\n        /* \"#utility.yul\":13197:14084   */\n      jump(tag_305)\n        /* \"#utility.yul\":13227:13845   */\n    tag_306:\n        /* \"#utility.yul\":13279:13283   */\n      0x1f\n        /* \"#utility.yul\":13275:13284   */\n      not\n        /* \"#utility.yul\":13267:13273   */\n      dup5\n        /* \"#utility.yul\":13263:13285   */\n      and\n        /* \"#utility.yul\":13313:13350   */\n      tag_309\n        /* \"#utility.yul\":13345:13349   */\n      dup7\n        /* \"#utility.yul\":13313:13350   */\n      tag_145\n      jump\t// in\n    tag_309:\n        /* \"#utility.yul\":13372:13373   */\n      0x00\n        /* \"#utility.yul\":13386:13594   */\n    tag_310:\n        /* \"#utility.yul\":13400:13407   */\n      dup3\n        /* \"#utility.yul\":13397:13398   */\n      dup2\n        /* \"#utility.yul\":13394:13408   */\n      lt\n        /* \"#utility.yul\":13386:13594   */\n      iszero\n      tag_312\n      jumpi\n        /* \"#utility.yul\":13479:13488   */\n      dup5\n        /* \"#utility.yul\":13474:13477   */\n      dup10\n        /* \"#utility.yul\":13470:13489   */\n      add\n        /* \"#utility.yul\":13464:13490   */\n      mload\n        /* \"#utility.yul\":13456:13462   */\n      dup3\n        /* \"#utility.yul\":13449:13491   */\n      sstore\n        /* \"#utility.yul\":13530:13531   */\n      0x01\n        /* \"#utility.yul\":13522:13528   */\n      dup3\n        /* \"#utility.yul\":13518:13532   */\n      add\n        /* \"#utility.yul\":13508:13532   */\n      swap2\n      pop\n        /* \"#utility.yul\":13577:13579   */\n      0x20\n        /* \"#utility.yul\":13566:13575   */\n      dup6\n        /* \"#utility.yul\":13562:13580   */\n      add\n        /* \"#utility.yul\":13549:13580   */\n      swap5\n      pop\n        /* \"#utility.yul\":13423:13427   */\n      0x20\n        /* \"#utility.yul\":13420:13421   */\n      dup2\n        /* \"#utility.yul\":13416:13428   */\n      add\n        /* \"#utility.yul\":13411:13428   */\n      swap1\n      pop\n        /* \"#utility.yul\":13386:13594   */\n      jump(tag_310)\n    tag_312:\n        /* \"#utility.yul\":13622:13628   */\n      dup7\n        /* \"#utility.yul\":13613:13620   */\n      dup4\n        /* \"#utility.yul\":13610:13629   */\n      lt\n        /* \"#utility.yul\":13607:13786   */\n      iszero\n      tag_313\n      jumpi\n        /* \"#utility.yul\":13680:13689   */\n      dup5\n        /* \"#utility.yul\":13675:13678   */\n      dup10\n        /* \"#utility.yul\":13671:13690   */\n      add\n        /* \"#utility.yul\":13665:13691   */\n      mload\n        /* \"#utility.yul\":13723:13771   */\n      tag_314\n        /* \"#utility.yul\":13765:13769   */\n      0x1f\n        /* \"#utility.yul\":13757:13763   */\n      dup10\n        /* \"#utility.yul\":13753:13770   */\n      and\n        /* \"#utility.yul\":13742:13751   */\n      dup3\n        /* \"#utility.yul\":13723:13771   */\n      tag_157\n      jump\t// in\n    tag_314:\n        /* \"#utility.yul\":13715:13721   */\n      dup4\n        /* \"#utility.yul\":13708:13772   */\n      sstore\n        /* \"#utility.yul\":13630:13786   */\n      pop\n        /* \"#utility.yul\":13607:13786   */\n    tag_313:\n        /* \"#utility.yul\":13832:13833   */\n      0x01\n        /* \"#utility.yul\":13828:13829   */\n      0x02\n        /* \"#utility.yul\":13820:13826   */\n      dup9\n        /* \"#utility.yul\":13816:13830   */\n      mul\n        /* \"#utility.yul\":13812:13834   */\n      add\n        /* \"#utility.yul\":13806:13810   */\n      dup9\n        /* \"#utility.yul\":13799:13835   */\n      sstore\n        /* \"#utility.yul\":13234:13845   */\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":13197:14084   */\n    tag_305:\n      pop\n        /* \"#utility.yul\":12787:14090   */\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":12695:14090   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14096:14318   */\n    tag_60:\n        /* \"#utility.yul\":14189:14193   */\n      0x00\n        /* \"#utility.yul\":14227:14229   */\n      0x20\n        /* \"#utility.yul\":14216:14225   */\n      dup3\n        /* \"#utility.yul\":14212:14230   */\n      add\n        /* \"#utility.yul\":14204:14230   */\n      swap1\n      pop\n        /* \"#utility.yul\":14240:14311   */\n      tag_316\n        /* \"#utility.yul\":14308:14309   */\n      0x00\n        /* \"#utility.yul\":14297:14306   */\n      dup4\n        /* \"#utility.yul\":14293:14310   */\n      add\n        /* \"#utility.yul\":14284:14290   */\n      dup5\n        /* \"#utility.yul\":14240:14311   */\n      tag_129\n      jump\t// in\n    tag_316:\n        /* \"#utility.yul\":14096:14318   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n\n    auxdata: 0xa2646970667358221220d5242b8c9d47dd81af19fa7adbe60b865414a51554862264e102bbff2a397dab64736f6c634300081e0033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "6080604052348015600e575f5ffd5b5061126e8061001c5f395ff3fe608060405234801561000f575f5ffd5b5060043610610060575f3560e01c8063715018a6146100645780638129fc1c1461006e57806383dc65f2146100785780638da5cb5b14610094578063b842ec44146100b2578063f2fde38b146100e9575b5f5ffd5b61006c610105565b005b610076610118565b005b610092600480360381019061008d9190610bfa565b610298565b005b61009c610607565b6040516100a99190610cc6565b60405180910390f35b6100cc60048036038101906100c79190610cdf565b61063c565b6040516100e0989796959493929190610dab565b60405180910390f35b61010360048036038101906100fe9190610e2e565b61078d565b005b61010d610811565b6101165f610898565b565b5f610121610969565b90505f815f0160089054906101000a900460ff161590505f825f015f9054906101000a900467ffffffffffffffff1690505f5f8267ffffffffffffffff161480156101695750825b90505f60018367ffffffffffffffff1614801561019c57505f3073ffffffffffffffffffffffffffffffffffffffff163b145b9050811580156101aa575080155b156101e1576040517ff92ee8a900000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6001855f015f6101000a81548167ffffffffffffffff021916908367ffffffffffffffff160217905550831561022e576001855f0160086101000a81548160ff0219169083151502179055505b6102373361097c565b8315610291575f855f0160086101000a81548160ff0219169083151502179055507fc7f505b2f371ae2175ee4913f4499e1f2633a7b5936321eed1cdaeb6115181d260016040516102889190610eae565b60405180910390a15b5050505050565b5f73ffffffffffffffffffffffffffffffffffffffff168773ffffffffffffffffffffffffffffffffffffffff161415801561030057505f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614155b61033f576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161033690610f11565b60405180910390fd5b5f5f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f206040518061010001604052803373ffffffffffffffffffffffffffffffffffffffff1681526020018973ffffffffffffffffffffffffffffffffffffffff1681526020018881526020018781526020018681526020018a65ffffffffffff16815260200185858080601f0160208091040260200160405190810160405280939291908181526020018383808284375f81840152601f19601f8201169050808301925050505050505081526020018373ffffffffffffffffffffffffffffffffffffffff16815250908060018154018082558091505060019003905f5260205f2090600802015f909190919091505f820151815f015f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506020820151816001015f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060408201518160020155606082015181600301556080820151816004015560a0820151816005015f6101000a81548165ffffffffffff021916908365ffffffffffff16021790555060c082015181600601908161054f9190611150565b5060e0820151816007015f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050508673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167fc46393c51fb2221caaec70cc70adecd0bbd1f605f3a19747f4ec3a8aff00cf7c886040516105f5919061121f565b60405180910390a35050505050505050565b5f5f610611610990565b9050805f015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1691505090565b5f602052815f5260405f208181548110610654575f80fd5b905f5260205f2090600802015f9150915050805f015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690806001015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690806002015490806003015490806004015490806005015f9054906101000a900465ffffffffffff16908060060180546106e790610f89565b80601f016020809104026020016040519081016040528092919081815260200182805461071390610f89565b801561075e5780601f106107355761010080835404028352916020019161075e565b820191905f5260205f20905b81548152906001019060200180831161074157829003601f168201915b505050505090806007015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905088565b610795610811565b5f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603610805575f6040517f1e4fbdf70000000000000000000000000000000000000000000000000000000081526004016107fc9190610cc6565b60405180910390fd5b61080e81610898565b50565b6108196109b7565b73ffffffffffffffffffffffffffffffffffffffff16610837610607565b73ffffffffffffffffffffffffffffffffffffffff16146108965761085a6109b7565b6040517f118cdaa700000000000000000000000000000000000000000000000000000000815260040161088d9190610cc6565b60405180910390fd5b565b5f6108a1610990565b90505f815f015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905082825f015f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508273ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a3505050565b5f5f6109736109be565b90508091505090565b6109846109e7565b61098d81610a27565b50565b5f7f9016d09d72d40fdae2fd8ceac6b6234c7706214fd39c1cd1e609a0528c199300905090565b5f33905090565b5f7ff0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a005f1b905090565b6109ef610aab565b610a25576040517fd7e6bcf800000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b565b610a2f6109e7565b5f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603610a9f575f6040517f1e4fbdf7000000000000000000000000000000000000000000000000000000008152600401610a969190610cc6565b60405180910390fd5b610aa881610898565b50565b5f610ab4610969565b5f0160089054906101000a900460ff16905090565b5f5ffd5b5f5ffd5b5f65ffffffffffff82169050919050565b610aeb81610ad1565b8114610af5575f5ffd5b50565b5f81359050610b0681610ae2565b92915050565b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f610b3582610b0c565b9050919050565b610b4581610b2b565b8114610b4f575f5ffd5b50565b5f81359050610b6081610b3c565b92915050565b5f819050919050565b610b7881610b66565b8114610b82575f5ffd5b50565b5f81359050610b9381610b6f565b92915050565b5f5ffd5b5f5ffd5b5f5ffd5b5f5f83601f840112610bba57610bb9610b99565b5b8235905067ffffffffffffffff811115610bd757610bd6610b9d565b5b602083019150836001820283011115610bf357610bf2610ba1565b5b9250929050565b5f5f5f5f5f5f5f5f60e0898b031215610c1657610c15610ac9565b5b5f610c238b828c01610af8565b9850506020610c348b828c01610b52565b9750506040610c458b828c01610b85565b9650506060610c568b828c01610b85565b9550506080610c678b828c01610b85565b94505060a089013567ffffffffffffffff811115610c8857610c87610acd565b5b610c948b828c01610ba5565b935093505060c0610ca78b828c01610b52565b9150509295985092959890939650565b610cc081610b2b565b82525050565b5f602082019050610cd95f830184610cb7565b92915050565b5f5f60408385031215610cf557610cf4610ac9565b5b5f610d0285828601610b52565b9250506020610d1385828601610b85565b9150509250929050565b610d2681610b66565b82525050565b610d3581610ad1565b82525050565b5f81519050919050565b5f82825260208201905092915050565b8281835e5f83830152505050565b5f601f19601f8301169050919050565b5f610d7d82610d3b565b610d878185610d45565b9350610d97818560208601610d55565b610da081610d63565b840191505092915050565b5f61010082019050610dbf5f83018b610cb7565b610dcc602083018a610cb7565b610dd96040830189610d1d565b610de66060830188610d1d565b610df36080830187610d1d565b610e0060a0830186610d2c565b81810360c0830152610e128185610d73565b9050610e2160e0830184610cb7565b9998505050505050505050565b5f60208284031215610e4357610e42610ac9565b5b5f610e5084828501610b52565b91505092915050565b5f819050919050565b5f67ffffffffffffffff82169050919050565b5f819050919050565b5f610e98610e93610e8e84610e59565b610e75565b610e62565b9050919050565b610ea881610e7e565b82525050565b5f602082019050610ec15f830184610e9f565b92915050565b7f496e76616c6964206164647265737300000000000000000000000000000000005f82015250565b5f610efb600f83610d45565b9150610f0682610ec7565b602082019050919050565b5f6020820190508181035f830152610f2881610eef565b9050919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52604160045260245ffd5b7f4e487b71000000000000000000000000000000000000000000000000000000005f52602260045260245ffd5b5f6002820490506001821680610fa057607f821691505b602082108103610fb357610fb2610f5c565b5b50919050565b5f819050815f5260205f209050919050565b5f6020601f8301049050919050565b5f82821b905092915050565b5f600883026110157fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82610fda565b61101f8683610fda565b95508019841693508086168417925050509392505050565b5f61105161104c61104784610b66565b610e75565b610b66565b9050919050565b5f819050919050565b61106a83611037565b61107e61107682611058565b848454610fe6565b825550505050565b5f5f905090565b611095611086565b6110a0818484611061565b505050565b5b818110156110c3576110b85f8261108d565b6001810190506110a6565b5050565b601f821115611108576110d981610fb9565b6110e284610fcb565b810160208510156110f1578190505b6111056110fd85610fcb565b8301826110a5565b50505b505050565b5f82821c905092915050565b5f6111285f198460080261110d565b1980831691505092915050565b5f6111408383611119565b9150826002028217905092915050565b61115982610d3b565b67ffffffffffffffff81111561117257611171610f2f565b5b61117c8254610f89565b6111878282856110c7565b5f60209050601f8311600181146111b8575f84156111a6578287015190505b6111b08582611135565b865550611217565b601f1984166111c686610fb9565b5f5b828110156111ed578489015182556001820191506020850194506020810190506111c8565b8683101561120a5784890151611206601f891682611119565b8355505b6001600288020188555050505b505050505050565b5f6020820190506112325f830184610d1d565b9291505056fea2646970667358221220d5242b8c9d47dd81af19fa7adbe60b865414a51554862264e102bbff2a397dab64736f6c634300081e0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH1 0xE JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x126E DUP1 PUSH2 0x1C PUSH0 CODECOPY PUSH0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x60 JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x715018A6 EQ PUSH2 0x64 JUMPI DUP1 PUSH4 0x8129FC1C EQ PUSH2 0x6E JUMPI DUP1 PUSH4 0x83DC65F2 EQ PUSH2 0x78 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x94 JUMPI DUP1 PUSH4 0xB842EC44 EQ PUSH2 0xB2 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0xE9 JUMPI JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH2 0x6C PUSH2 0x105 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x76 PUSH2 0x118 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x92 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x8D SWAP2 SWAP1 PUSH2 0xBFA JUMP JUMPDEST PUSH2 0x298 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x9C PUSH2 0x607 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xA9 SWAP2 SWAP1 PUSH2 0xCC6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xCC PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xC7 SWAP2 SWAP1 PUSH2 0xCDF JUMP JUMPDEST PUSH2 0x63C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xE0 SWAP9 SWAP8 SWAP7 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0xDAB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x103 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xFE SWAP2 SWAP1 PUSH2 0xE2E JUMP JUMPDEST PUSH2 0x78D JUMP JUMPDEST STOP JUMPDEST PUSH2 0x10D PUSH2 0x811 JUMP JUMPDEST PUSH2 0x116 PUSH0 PUSH2 0x898 JUMP JUMPDEST JUMP JUMPDEST PUSH0 PUSH2 0x121 PUSH2 0x969 JUMP JUMPDEST SWAP1 POP PUSH0 DUP2 PUSH0 ADD PUSH1 0x8 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO SWAP1 POP PUSH0 DUP3 PUSH0 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH8 0xFFFFFFFFFFFFFFFF AND SWAP1 POP PUSH0 PUSH0 DUP3 PUSH8 0xFFFFFFFFFFFFFFFF AND EQ DUP1 ISZERO PUSH2 0x169 JUMPI POP DUP3 JUMPDEST SWAP1 POP PUSH0 PUSH1 0x1 DUP4 PUSH8 0xFFFFFFFFFFFFFFFF AND EQ DUP1 ISZERO PUSH2 0x19C JUMPI POP PUSH0 ADDRESS PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EXTCODESIZE EQ JUMPDEST SWAP1 POP DUP2 ISZERO DUP1 ISZERO PUSH2 0x1AA JUMPI POP DUP1 ISZERO JUMPDEST ISZERO PUSH2 0x1E1 JUMPI PUSH1 0x40 MLOAD PUSH32 0xF92EE8A900000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 DUP6 PUSH0 ADD PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH8 0xFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH8 0xFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP4 ISZERO PUSH2 0x22E JUMPI PUSH1 0x1 DUP6 PUSH0 ADD PUSH1 0x8 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP JUMPDEST PUSH2 0x237 CALLER PUSH2 0x97C JUMP JUMPDEST DUP4 ISZERO PUSH2 0x291 JUMPI PUSH0 DUP6 PUSH0 ADD PUSH1 0x8 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH32 0xC7F505B2F371AE2175EE4913F4499E1F2633A7B5936321EED1CDAEB6115181D2 PUSH1 0x1 PUSH1 0x40 MLOAD PUSH2 0x288 SWAP2 SWAP1 PUSH2 0xEAE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO DUP1 ISZERO PUSH2 0x300 JUMPI POP PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO JUMPDEST PUSH2 0x33F JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x336 SWAP1 PUSH2 0xF11 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH1 0x40 MLOAD DUP1 PUSH2 0x100 ADD PUSH1 0x40 MSTORE DUP1 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP10 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP9 DUP2 MSTORE PUSH1 0x20 ADD DUP8 DUP2 MSTORE PUSH1 0x20 ADD DUP7 DUP2 MSTORE PUSH1 0x20 ADD DUP11 PUSH6 0xFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP6 DUP6 DUP1 DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP4 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP4 DUP1 DUP3 DUP5 CALLDATACOPY PUSH0 DUP2 DUP5 ADD MSTORE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND SWAP1 POP DUP1 DUP4 ADD SWAP3 POP POP POP POP POP POP POP DUP2 MSTORE PUSH1 0x20 ADD DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE POP SWAP1 DUP1 PUSH1 0x1 DUP2 SLOAD ADD DUP1 DUP3 SSTORE DUP1 SWAP2 POP POP PUSH1 0x1 SWAP1 SUB SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 PUSH1 0x8 MUL ADD PUSH0 SWAP1 SWAP2 SWAP1 SWAP2 SWAP1 SWAP2 POP PUSH0 DUP3 ADD MLOAD DUP2 PUSH0 ADD PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x20 DUP3 ADD MLOAD DUP2 PUSH1 0x1 ADD PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x40 DUP3 ADD MLOAD DUP2 PUSH1 0x2 ADD SSTORE PUSH1 0x60 DUP3 ADD MLOAD DUP2 PUSH1 0x3 ADD SSTORE PUSH1 0x80 DUP3 ADD MLOAD DUP2 PUSH1 0x4 ADD SSTORE PUSH1 0xA0 DUP3 ADD MLOAD DUP2 PUSH1 0x5 ADD PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH6 0xFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH6 0xFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0xC0 DUP3 ADD MLOAD DUP2 PUSH1 0x6 ADD SWAP1 DUP2 PUSH2 0x54F SWAP2 SWAP1 PUSH2 0x1150 JUMP JUMPDEST POP PUSH1 0xE0 DUP3 ADD MLOAD DUP2 PUSH1 0x7 ADD PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP POP DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xC46393C51FB2221CAAEC70CC70ADECD0BBD1F605F3A19747F4EC3A8AFF00CF7C DUP9 PUSH1 0x40 MLOAD PUSH2 0x5F5 SWAP2 SWAP1 PUSH2 0x121F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH2 0x611 PUSH2 0x990 JUMP JUMPDEST SWAP1 POP DUP1 PUSH0 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP2 POP POP SWAP1 JUMP JUMPDEST PUSH0 PUSH1 0x20 MSTORE DUP2 PUSH0 MSTORE PUSH1 0x40 PUSH0 KECCAK256 DUP2 DUP2 SLOAD DUP2 LT PUSH2 0x654 JUMPI PUSH0 DUP1 REVERT JUMPDEST SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 PUSH1 0x8 MUL ADD PUSH0 SWAP2 POP SWAP2 POP POP DUP1 PUSH0 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 DUP1 PUSH1 0x1 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 DUP1 PUSH1 0x2 ADD SLOAD SWAP1 DUP1 PUSH1 0x3 ADD SLOAD SWAP1 DUP1 PUSH1 0x4 ADD SLOAD SWAP1 DUP1 PUSH1 0x5 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH6 0xFFFFFFFFFFFF AND SWAP1 DUP1 PUSH1 0x6 ADD DUP1 SLOAD PUSH2 0x6E7 SWAP1 PUSH2 0xF89 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x713 SWAP1 PUSH2 0xF89 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x75E JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x735 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x75E JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x741 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 DUP1 PUSH1 0x7 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP9 JUMP JUMPDEST PUSH2 0x795 PUSH2 0x811 JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x805 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x1E4FBDF700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x7FC SWAP2 SWAP1 PUSH2 0xCC6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x80E DUP2 PUSH2 0x898 JUMP JUMPDEST POP JUMP JUMPDEST PUSH2 0x819 PUSH2 0x9B7 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x837 PUSH2 0x607 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x896 JUMPI PUSH2 0x85A PUSH2 0x9B7 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x118CDAA700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x88D SWAP2 SWAP1 PUSH2 0xCC6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH0 PUSH2 0x8A1 PUSH2 0x990 JUMP JUMPDEST SWAP1 POP PUSH0 DUP2 PUSH0 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP3 DUP3 PUSH0 ADD PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH2 0x973 PUSH2 0x9BE JUMP JUMPDEST SWAP1 POP DUP1 SWAP2 POP POP SWAP1 JUMP JUMPDEST PUSH2 0x984 PUSH2 0x9E7 JUMP JUMPDEST PUSH2 0x98D DUP2 PUSH2 0xA27 JUMP JUMPDEST POP JUMP JUMPDEST PUSH0 PUSH32 0x9016D09D72D40FDAE2FD8CEAC6B6234C7706214FD39C1CD1E609A0528C199300 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH32 0xF0C57E16840DF040F15088DC2F81FE391C3923BEC73E23A9662EFC9C229C6A00 PUSH0 SHL SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x9EF PUSH2 0xAAB JUMP JUMPDEST PUSH2 0xA25 JUMPI PUSH1 0x40 MLOAD PUSH32 0xD7E6BCF800000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH2 0xA2F PUSH2 0x9E7 JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xA9F JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x1E4FBDF700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xA96 SWAP2 SWAP1 PUSH2 0xCC6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xAA8 DUP2 PUSH2 0x898 JUMP JUMPDEST POP JUMP JUMPDEST PUSH0 PUSH2 0xAB4 PUSH2 0x969 JUMP JUMPDEST PUSH0 ADD PUSH1 0x8 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH0 PUSH6 0xFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xAEB DUP2 PUSH2 0xAD1 JUMP JUMPDEST DUP2 EQ PUSH2 0xAF5 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xB06 DUP2 PUSH2 0xAE2 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0xB35 DUP3 PUSH2 0xB0C JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xB45 DUP2 PUSH2 0xB2B JUMP JUMPDEST DUP2 EQ PUSH2 0xB4F JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xB60 DUP2 PUSH2 0xB3C JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xB78 DUP2 PUSH2 0xB66 JUMP JUMPDEST DUP2 EQ PUSH2 0xB82 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xB93 DUP2 PUSH2 0xB6F JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH0 PUSH0 DUP4 PUSH1 0x1F DUP5 ADD SLT PUSH2 0xBBA JUMPI PUSH2 0xBB9 PUSH2 0xB99 JUMP JUMPDEST JUMPDEST DUP3 CALLDATALOAD SWAP1 POP PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0xBD7 JUMPI PUSH2 0xBD6 PUSH2 0xB9D JUMP JUMPDEST JUMPDEST PUSH1 0x20 DUP4 ADD SWAP2 POP DUP4 PUSH1 0x1 DUP3 MUL DUP4 ADD GT ISZERO PUSH2 0xBF3 JUMPI PUSH2 0xBF2 PUSH2 0xBA1 JUMP JUMPDEST JUMPDEST SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH0 PUSH0 PUSH0 PUSH0 PUSH0 PUSH0 PUSH0 PUSH1 0xE0 DUP10 DUP12 SUB SLT ISZERO PUSH2 0xC16 JUMPI PUSH2 0xC15 PUSH2 0xAC9 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0xC23 DUP12 DUP3 DUP13 ADD PUSH2 0xAF8 JUMP JUMPDEST SWAP9 POP POP PUSH1 0x20 PUSH2 0xC34 DUP12 DUP3 DUP13 ADD PUSH2 0xB52 JUMP JUMPDEST SWAP8 POP POP PUSH1 0x40 PUSH2 0xC45 DUP12 DUP3 DUP13 ADD PUSH2 0xB85 JUMP JUMPDEST SWAP7 POP POP PUSH1 0x60 PUSH2 0xC56 DUP12 DUP3 DUP13 ADD PUSH2 0xB85 JUMP JUMPDEST SWAP6 POP POP PUSH1 0x80 PUSH2 0xC67 DUP12 DUP3 DUP13 ADD PUSH2 0xB85 JUMP JUMPDEST SWAP5 POP POP PUSH1 0xA0 DUP10 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0xC88 JUMPI PUSH2 0xC87 PUSH2 0xACD JUMP JUMPDEST JUMPDEST PUSH2 0xC94 DUP12 DUP3 DUP13 ADD PUSH2 0xBA5 JUMP JUMPDEST SWAP4 POP SWAP4 POP POP PUSH1 0xC0 PUSH2 0xCA7 DUP12 DUP3 DUP13 ADD PUSH2 0xB52 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP9 POP SWAP3 SWAP6 SWAP9 SWAP1 SWAP4 SWAP7 POP JUMP JUMPDEST PUSH2 0xCC0 DUP2 PUSH2 0xB2B JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xCD9 PUSH0 DUP4 ADD DUP5 PUSH2 0xCB7 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xCF5 JUMPI PUSH2 0xCF4 PUSH2 0xAC9 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0xD02 DUP6 DUP3 DUP7 ADD PUSH2 0xB52 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0xD13 DUP6 DUP3 DUP7 ADD PUSH2 0xB85 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH2 0xD26 DUP2 PUSH2 0xB66 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0xD35 DUP2 PUSH2 0xAD1 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP3 DUP2 DUP4 MCOPY PUSH0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0xD7D DUP3 PUSH2 0xD3B JUMP JUMPDEST PUSH2 0xD87 DUP2 DUP6 PUSH2 0xD45 JUMP JUMPDEST SWAP4 POP PUSH2 0xD97 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0xD55 JUMP JUMPDEST PUSH2 0xDA0 DUP2 PUSH2 0xD63 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x100 DUP3 ADD SWAP1 POP PUSH2 0xDBF PUSH0 DUP4 ADD DUP12 PUSH2 0xCB7 JUMP JUMPDEST PUSH2 0xDCC PUSH1 0x20 DUP4 ADD DUP11 PUSH2 0xCB7 JUMP JUMPDEST PUSH2 0xDD9 PUSH1 0x40 DUP4 ADD DUP10 PUSH2 0xD1D JUMP JUMPDEST PUSH2 0xDE6 PUSH1 0x60 DUP4 ADD DUP9 PUSH2 0xD1D JUMP JUMPDEST PUSH2 0xDF3 PUSH1 0x80 DUP4 ADD DUP8 PUSH2 0xD1D JUMP JUMPDEST PUSH2 0xE00 PUSH1 0xA0 DUP4 ADD DUP7 PUSH2 0xD2C JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0xC0 DUP4 ADD MSTORE PUSH2 0xE12 DUP2 DUP6 PUSH2 0xD73 JUMP JUMPDEST SWAP1 POP PUSH2 0xE21 PUSH1 0xE0 DUP4 ADD DUP5 PUSH2 0xCB7 JUMP JUMPDEST SWAP10 SWAP9 POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xE43 JUMPI PUSH2 0xE42 PUSH2 0xAC9 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0xE50 DUP5 DUP3 DUP6 ADD PUSH2 0xB52 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0xE98 PUSH2 0xE93 PUSH2 0xE8E DUP5 PUSH2 0xE59 JUMP JUMPDEST PUSH2 0xE75 JUMP JUMPDEST PUSH2 0xE62 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xEA8 DUP2 PUSH2 0xE7E JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xEC1 PUSH0 DUP4 ADD DUP5 PUSH2 0xE9F JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x496E76616C696420616464726573730000000000000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0xEFB PUSH1 0xF DUP4 PUSH2 0xD45 JUMP JUMPDEST SWAP2 POP PUSH2 0xF06 DUP3 PUSH2 0xEC7 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0xF28 DUP2 PUSH2 0xEEF JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0xFA0 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0xFB3 JUMPI PUSH2 0xFB2 PUSH2 0xF5C JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP DUP2 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 PUSH1 0x1F DUP4 ADD DIV SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 SHL SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x8 DUP4 MUL PUSH2 0x1015 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 PUSH2 0xFDA JUMP JUMPDEST PUSH2 0x101F DUP7 DUP4 PUSH2 0xFDA JUMP JUMPDEST SWAP6 POP DUP1 NOT DUP5 AND SWAP4 POP DUP1 DUP7 AND DUP5 OR SWAP3 POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x1051 PUSH2 0x104C PUSH2 0x1047 DUP5 PUSH2 0xB66 JUMP JUMPDEST PUSH2 0xE75 JUMP JUMPDEST PUSH2 0xB66 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x106A DUP4 PUSH2 0x1037 JUMP JUMPDEST PUSH2 0x107E PUSH2 0x1076 DUP3 PUSH2 0x1058 JUMP JUMPDEST DUP5 DUP5 SLOAD PUSH2 0xFE6 JUMP JUMPDEST DUP3 SSTORE POP POP POP POP JUMP JUMPDEST PUSH0 PUSH0 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x1095 PUSH2 0x1086 JUMP JUMPDEST PUSH2 0x10A0 DUP2 DUP5 DUP5 PUSH2 0x1061 JUMP JUMPDEST POP POP POP JUMP JUMPDEST JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x10C3 JUMPI PUSH2 0x10B8 PUSH0 DUP3 PUSH2 0x108D JUMP JUMPDEST PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x10A6 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH2 0x1108 JUMPI PUSH2 0x10D9 DUP2 PUSH2 0xFB9 JUMP JUMPDEST PUSH2 0x10E2 DUP5 PUSH2 0xFCB JUMP JUMPDEST DUP2 ADD PUSH1 0x20 DUP6 LT ISZERO PUSH2 0x10F1 JUMPI DUP2 SWAP1 POP JUMPDEST PUSH2 0x1105 PUSH2 0x10FD DUP6 PUSH2 0xFCB JUMP JUMPDEST DUP4 ADD DUP3 PUSH2 0x10A5 JUMP JUMPDEST POP POP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 DUP3 DUP3 SHR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x1128 PUSH0 NOT DUP5 PUSH1 0x8 MUL PUSH2 0x110D JUMP JUMPDEST NOT DUP1 DUP4 AND SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x1140 DUP4 DUP4 PUSH2 0x1119 JUMP JUMPDEST SWAP2 POP DUP3 PUSH1 0x2 MUL DUP3 OR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1159 DUP3 PUSH2 0xD3B JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1172 JUMPI PUSH2 0x1171 PUSH2 0xF2F JUMP JUMPDEST JUMPDEST PUSH2 0x117C DUP3 SLOAD PUSH2 0xF89 JUMP JUMPDEST PUSH2 0x1187 DUP3 DUP3 DUP6 PUSH2 0x10C7 JUMP JUMPDEST PUSH0 PUSH1 0x20 SWAP1 POP PUSH1 0x1F DUP4 GT PUSH1 0x1 DUP2 EQ PUSH2 0x11B8 JUMPI PUSH0 DUP5 ISZERO PUSH2 0x11A6 JUMPI DUP3 DUP8 ADD MLOAD SWAP1 POP JUMPDEST PUSH2 0x11B0 DUP6 DUP3 PUSH2 0x1135 JUMP JUMPDEST DUP7 SSTORE POP PUSH2 0x1217 JUMP JUMPDEST PUSH1 0x1F NOT DUP5 AND PUSH2 0x11C6 DUP7 PUSH2 0xFB9 JUMP JUMPDEST PUSH0 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x11ED JUMPI DUP5 DUP10 ADD MLOAD DUP3 SSTORE PUSH1 0x1 DUP3 ADD SWAP2 POP PUSH1 0x20 DUP6 ADD SWAP5 POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x11C8 JUMP JUMPDEST DUP7 DUP4 LT ISZERO PUSH2 0x120A JUMPI DUP5 DUP10 ADD MLOAD PUSH2 0x1206 PUSH1 0x1F DUP10 AND DUP3 PUSH2 0x1119 JUMP JUMPDEST DUP4 SSTORE POP JUMPDEST PUSH1 0x1 PUSH1 0x2 DUP9 MUL ADD DUP9 SSTORE POP POP POP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1232 PUSH0 DUP4 ADD DUP5 PUSH2 0xD1D JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xD5 0x24 0x2B DUP13 SWAP14 SELFBALANCE 0xDD DUP2 0xAF NOT STATICCALL PUSH27 0xDBE60B865414A51554862264E102BBFF2A397DAB64736F6C634300 ADDMOD 0x1E STOP CALLER ",
							"sourceMap": "297:1180:11:-:0;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@__Ownable_init_54": {
									"entryPoint": 2428,
									"id": 54,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@__Ownable_init_unchained_81": {
									"entryPoint": 2599,
									"id": 81,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_checkInitializing_370": {
									"entryPoint": 2535,
									"id": 370,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_checkOwner_122": {
									"entryPoint": 2065,
									"id": 122,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_getInitializableStorage_461": {
									"entryPoint": 2409,
									"id": 461,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_getOwnableStorage_25": {
									"entryPoint": 2448,
									"id": 25,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_initializableStorageSlot_447": {
									"entryPoint": 2494,
									"id": 447,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_isInitializing_438": {
									"entryPoint": 2731,
									"id": 438,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_msgSender_672": {
									"entryPoint": 2487,
									"id": 672,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_transferOwnership_193": {
									"entryPoint": 2200,
									"id": 193,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@initialize_1482": {
									"entryPoint": 280,
									"id": 1482,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@logTransaction_1542": {
									"entryPoint": 664,
									"id": 1542,
									"parameterSlots": 8,
									"returnSlots": 0
								},
								"@owner_105": {
									"entryPoint": 1543,
									"id": 105,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@renounceOwnership_136": {
									"entryPoint": 261,
									"id": 136,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@transferOwnership_164": {
									"entryPoint": 1933,
									"id": 164,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@userTransactions_1463": {
									"entryPoint": 1596,
									"id": 1463,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"abi_decode_t_address": {
									"entryPoint": 2898,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_string_calldata_ptr": {
									"entryPoint": 2981,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_t_uint256": {
									"entryPoint": 2949,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint48": {
									"entryPoint": 2808,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 3630,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_uint256": {
									"entryPoint": 3295,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_uint48t_addresst_uint256t_uint256t_uint256t_string_calldata_ptrt_address": {
									"entryPoint": 3066,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 8
								},
								"abi_encode_t_address_to_t_address_fromStack": {
									"entryPoint": 3255,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_rational_1_by_1_to_t_uint64_fromStack": {
									"entryPoint": 3743,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 3443,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_1462473b7a4b33d32b109b815fd2324d00c9e5839b707ecf16d0ab5744f99226_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 3823,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_uint256_to_t_uint256_fromStack": {
									"entryPoint": 3357,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_uint48_to_t_uint48_fromStack": {
									"entryPoint": 3372,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": 3270,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_address_t_uint256_t_uint256_t_uint256_t_uint48_t_string_memory_ptr_t_address__to_t_address_t_address_t_uint256_t_uint256_t_uint256_t_uint48_t_string_memory_ptr_t_address__fromStack_reversed": {
									"entryPoint": 3499,
									"id": null,
									"parameterSlots": 9,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_rational_1_by_1__to_t_uint64__fromStack_reversed": {
									"entryPoint": 3758,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_1462473b7a4b33d32b109b815fd2324d00c9e5839b707ecf16d0ab5744f99226__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 3857,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": 4639,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_dataslot_t_string_storage": {
									"entryPoint": 4025,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_length_t_string_memory_ptr": {
									"entryPoint": 3387,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_string_memory_ptr_fromStack": {
									"entryPoint": 3397,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"clean_up_bytearray_end_slots_t_string_storage": {
									"entryPoint": 4295,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"cleanup_t_address": {
									"entryPoint": 2859,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_rational_1_by_1": {
									"entryPoint": 3673,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 2828,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 2918,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint48": {
									"entryPoint": 2769,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint64": {
									"entryPoint": 3682,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"clear_storage_range_t_bytes1": {
									"entryPoint": 4261,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"convert_t_rational_1_by_1_to_t_uint64": {
									"entryPoint": 3710,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"convert_t_uint256_to_t_uint256": {
									"entryPoint": 4151,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage": {
									"entryPoint": 4432,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"copy_memory_to_memory_with_cleanup": {
									"entryPoint": 3413,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"divide_by_32_ceil": {
									"entryPoint": 4043,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"extract_byte_array_length": {
									"entryPoint": 3977,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"extract_used_part_and_set_length_of_short_byte_array": {
									"entryPoint": 4405,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"identity": {
									"entryPoint": 3701,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"mask_bytes_dynamic": {
									"entryPoint": 4377,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"panic_error_0x22": {
									"entryPoint": 3932,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x41": {
									"entryPoint": 3887,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"prepare_store_t_uint256": {
									"entryPoint": 4184,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"revert_error_15abf5612cd996bc235ba1e55a4a30ac60e6bb601ff7ba4ad3f179b6be8d0490": {
									"entryPoint": 2973,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d": {
									"entryPoint": 2969,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef": {
									"entryPoint": 2977,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": 2765,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 2761,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"round_up_to_mul_of_32": {
									"entryPoint": 3427,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"shift_left_dynamic": {
									"entryPoint": 4058,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"shift_right_unsigned_dynamic": {
									"entryPoint": 4365,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"storage_set_to_zero_t_uint256": {
									"entryPoint": 4237,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"store_literal_in_memory_1462473b7a4b33d32b109b815fd2324d00c9e5839b707ecf16d0ab5744f99226": {
									"entryPoint": 3783,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"update_byte_slice_dynamic32": {
									"entryPoint": 4070,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"update_storage_value_t_uint256_to_t_uint256": {
									"entryPoint": 4193,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"validator_revert_t_address": {
									"entryPoint": 2876,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_uint256": {
									"entryPoint": 2927,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_uint48": {
									"entryPoint": 2786,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"zero_value_for_split_t_uint256": {
									"entryPoint": 4230,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:14321:12",
										"nodeType": "YulBlock",
										"src": "0:14321:12",
										"statements": [
											{
												"body": {
													"nativeSrc": "47:35:12",
													"nodeType": "YulBlock",
													"src": "47:35:12",
													"statements": [
														{
															"nativeSrc": "57:19:12",
															"nodeType": "YulAssignment",
															"src": "57:19:12",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "73:2:12",
																		"nodeType": "YulLiteral",
																		"src": "73:2:12",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "67:5:12",
																	"nodeType": "YulIdentifier",
																	"src": "67:5:12"
																},
																"nativeSrc": "67:9:12",
																"nodeType": "YulFunctionCall",
																"src": "67:9:12"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nativeSrc": "57:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "57:6:12"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nativeSrc": "7:75:12",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nativeSrc": "40:6:12",
														"nodeType": "YulTypedName",
														"src": "40:6:12",
														"type": ""
													}
												],
												"src": "7:75:12"
											},
											{
												"body": {
													"nativeSrc": "177:28:12",
													"nodeType": "YulBlock",
													"src": "177:28:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "194:1:12",
																		"nodeType": "YulLiteral",
																		"src": "194:1:12",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "197:1:12",
																		"nodeType": "YulLiteral",
																		"src": "197:1:12",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "187:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "187:6:12"
																},
																"nativeSrc": "187:12:12",
																"nodeType": "YulFunctionCall",
																"src": "187:12:12"
															},
															"nativeSrc": "187:12:12",
															"nodeType": "YulExpressionStatement",
															"src": "187:12:12"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nativeSrc": "88:117:12",
												"nodeType": "YulFunctionDefinition",
												"src": "88:117:12"
											},
											{
												"body": {
													"nativeSrc": "300:28:12",
													"nodeType": "YulBlock",
													"src": "300:28:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "317:1:12",
																		"nodeType": "YulLiteral",
																		"src": "317:1:12",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "320:1:12",
																		"nodeType": "YulLiteral",
																		"src": "320:1:12",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "310:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "310:6:12"
																},
																"nativeSrc": "310:12:12",
																"nodeType": "YulFunctionCall",
																"src": "310:12:12"
															},
															"nativeSrc": "310:12:12",
															"nodeType": "YulExpressionStatement",
															"src": "310:12:12"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nativeSrc": "211:117:12",
												"nodeType": "YulFunctionDefinition",
												"src": "211:117:12"
											},
											{
												"body": {
													"nativeSrc": "378:53:12",
													"nodeType": "YulBlock",
													"src": "378:53:12",
													"statements": [
														{
															"nativeSrc": "388:37:12",
															"nodeType": "YulAssignment",
															"src": "388:37:12",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "403:5:12",
																		"nodeType": "YulIdentifier",
																		"src": "403:5:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "410:14:12",
																		"nodeType": "YulLiteral",
																		"src": "410:14:12",
																		"type": "",
																		"value": "0xffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "399:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "399:3:12"
																},
																"nativeSrc": "399:26:12",
																"nodeType": "YulFunctionCall",
																"src": "399:26:12"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "388:7:12",
																	"nodeType": "YulIdentifier",
																	"src": "388:7:12"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint48",
												"nativeSrc": "334:97:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "360:5:12",
														"nodeType": "YulTypedName",
														"src": "360:5:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "370:7:12",
														"nodeType": "YulTypedName",
														"src": "370:7:12",
														"type": ""
													}
												],
												"src": "334:97:12"
											},
											{
												"body": {
													"nativeSrc": "479:78:12",
													"nodeType": "YulBlock",
													"src": "479:78:12",
													"statements": [
														{
															"body": {
																"nativeSrc": "535:16:12",
																"nodeType": "YulBlock",
																"src": "535:16:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "544:1:12",
																					"nodeType": "YulLiteral",
																					"src": "544:1:12",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "547:1:12",
																					"nodeType": "YulLiteral",
																					"src": "547:1:12",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "537:6:12",
																				"nodeType": "YulIdentifier",
																				"src": "537:6:12"
																			},
																			"nativeSrc": "537:12:12",
																			"nodeType": "YulFunctionCall",
																			"src": "537:12:12"
																		},
																		"nativeSrc": "537:12:12",
																		"nodeType": "YulExpressionStatement",
																		"src": "537:12:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "502:5:12",
																				"nodeType": "YulIdentifier",
																				"src": "502:5:12"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "526:5:12",
																						"nodeType": "YulIdentifier",
																						"src": "526:5:12"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint48",
																					"nativeSrc": "509:16:12",
																					"nodeType": "YulIdentifier",
																					"src": "509:16:12"
																				},
																				"nativeSrc": "509:23:12",
																				"nodeType": "YulFunctionCall",
																				"src": "509:23:12"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "499:2:12",
																			"nodeType": "YulIdentifier",
																			"src": "499:2:12"
																		},
																		"nativeSrc": "499:34:12",
																		"nodeType": "YulFunctionCall",
																		"src": "499:34:12"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "492:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "492:6:12"
																},
																"nativeSrc": "492:42:12",
																"nodeType": "YulFunctionCall",
																"src": "492:42:12"
															},
															"nativeSrc": "489:62:12",
															"nodeType": "YulIf",
															"src": "489:62:12"
														}
													]
												},
												"name": "validator_revert_t_uint48",
												"nativeSrc": "437:120:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "472:5:12",
														"nodeType": "YulTypedName",
														"src": "472:5:12",
														"type": ""
													}
												],
												"src": "437:120:12"
											},
											{
												"body": {
													"nativeSrc": "614:86:12",
													"nodeType": "YulBlock",
													"src": "614:86:12",
													"statements": [
														{
															"nativeSrc": "624:29:12",
															"nodeType": "YulAssignment",
															"src": "624:29:12",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "646:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "646:6:12"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "633:12:12",
																	"nodeType": "YulIdentifier",
																	"src": "633:12:12"
																},
																"nativeSrc": "633:20:12",
																"nodeType": "YulFunctionCall",
																"src": "633:20:12"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "624:5:12",
																	"nodeType": "YulIdentifier",
																	"src": "624:5:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "688:5:12",
																		"nodeType": "YulIdentifier",
																		"src": "688:5:12"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint48",
																	"nativeSrc": "662:25:12",
																	"nodeType": "YulIdentifier",
																	"src": "662:25:12"
																},
																"nativeSrc": "662:32:12",
																"nodeType": "YulFunctionCall",
																"src": "662:32:12"
															},
															"nativeSrc": "662:32:12",
															"nodeType": "YulExpressionStatement",
															"src": "662:32:12"
														}
													]
												},
												"name": "abi_decode_t_uint48",
												"nativeSrc": "563:137:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "592:6:12",
														"nodeType": "YulTypedName",
														"src": "592:6:12",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "600:3:12",
														"nodeType": "YulTypedName",
														"src": "600:3:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "608:5:12",
														"nodeType": "YulTypedName",
														"src": "608:5:12",
														"type": ""
													}
												],
												"src": "563:137:12"
											},
											{
												"body": {
													"nativeSrc": "751:81:12",
													"nodeType": "YulBlock",
													"src": "751:81:12",
													"statements": [
														{
															"nativeSrc": "761:65:12",
															"nodeType": "YulAssignment",
															"src": "761:65:12",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "776:5:12",
																		"nodeType": "YulIdentifier",
																		"src": "776:5:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "783:42:12",
																		"nodeType": "YulLiteral",
																		"src": "783:42:12",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "772:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "772:3:12"
																},
																"nativeSrc": "772:54:12",
																"nodeType": "YulFunctionCall",
																"src": "772:54:12"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "761:7:12",
																	"nodeType": "YulIdentifier",
																	"src": "761:7:12"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nativeSrc": "706:126:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "733:5:12",
														"nodeType": "YulTypedName",
														"src": "733:5:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "743:7:12",
														"nodeType": "YulTypedName",
														"src": "743:7:12",
														"type": ""
													}
												],
												"src": "706:126:12"
											},
											{
												"body": {
													"nativeSrc": "883:51:12",
													"nodeType": "YulBlock",
													"src": "883:51:12",
													"statements": [
														{
															"nativeSrc": "893:35:12",
															"nodeType": "YulAssignment",
															"src": "893:35:12",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "922:5:12",
																		"nodeType": "YulIdentifier",
																		"src": "922:5:12"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nativeSrc": "904:17:12",
																	"nodeType": "YulIdentifier",
																	"src": "904:17:12"
																},
																"nativeSrc": "904:24:12",
																"nodeType": "YulFunctionCall",
																"src": "904:24:12"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "893:7:12",
																	"nodeType": "YulIdentifier",
																	"src": "893:7:12"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nativeSrc": "838:96:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "865:5:12",
														"nodeType": "YulTypedName",
														"src": "865:5:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "875:7:12",
														"nodeType": "YulTypedName",
														"src": "875:7:12",
														"type": ""
													}
												],
												"src": "838:96:12"
											},
											{
												"body": {
													"nativeSrc": "983:79:12",
													"nodeType": "YulBlock",
													"src": "983:79:12",
													"statements": [
														{
															"body": {
																"nativeSrc": "1040:16:12",
																"nodeType": "YulBlock",
																"src": "1040:16:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "1049:1:12",
																					"nodeType": "YulLiteral",
																					"src": "1049:1:12",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1052:1:12",
																					"nodeType": "YulLiteral",
																					"src": "1052:1:12",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "1042:6:12",
																				"nodeType": "YulIdentifier",
																				"src": "1042:6:12"
																			},
																			"nativeSrc": "1042:12:12",
																			"nodeType": "YulFunctionCall",
																			"src": "1042:12:12"
																		},
																		"nativeSrc": "1042:12:12",
																		"nodeType": "YulExpressionStatement",
																		"src": "1042:12:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "1006:5:12",
																				"nodeType": "YulIdentifier",
																				"src": "1006:5:12"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "1031:5:12",
																						"nodeType": "YulIdentifier",
																						"src": "1031:5:12"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nativeSrc": "1013:17:12",
																					"nodeType": "YulIdentifier",
																					"src": "1013:17:12"
																				},
																				"nativeSrc": "1013:24:12",
																				"nodeType": "YulFunctionCall",
																				"src": "1013:24:12"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "1003:2:12",
																			"nodeType": "YulIdentifier",
																			"src": "1003:2:12"
																		},
																		"nativeSrc": "1003:35:12",
																		"nodeType": "YulFunctionCall",
																		"src": "1003:35:12"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "996:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "996:6:12"
																},
																"nativeSrc": "996:43:12",
																"nodeType": "YulFunctionCall",
																"src": "996:43:12"
															},
															"nativeSrc": "993:63:12",
															"nodeType": "YulIf",
															"src": "993:63:12"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nativeSrc": "940:122:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "976:5:12",
														"nodeType": "YulTypedName",
														"src": "976:5:12",
														"type": ""
													}
												],
												"src": "940:122:12"
											},
											{
												"body": {
													"nativeSrc": "1120:87:12",
													"nodeType": "YulBlock",
													"src": "1120:87:12",
													"statements": [
														{
															"nativeSrc": "1130:29:12",
															"nodeType": "YulAssignment",
															"src": "1130:29:12",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "1152:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "1152:6:12"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "1139:12:12",
																	"nodeType": "YulIdentifier",
																	"src": "1139:12:12"
																},
																"nativeSrc": "1139:20:12",
																"nodeType": "YulFunctionCall",
																"src": "1139:20:12"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "1130:5:12",
																	"nodeType": "YulIdentifier",
																	"src": "1130:5:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "1195:5:12",
																		"nodeType": "YulIdentifier",
																		"src": "1195:5:12"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nativeSrc": "1168:26:12",
																	"nodeType": "YulIdentifier",
																	"src": "1168:26:12"
																},
																"nativeSrc": "1168:33:12",
																"nodeType": "YulFunctionCall",
																"src": "1168:33:12"
															},
															"nativeSrc": "1168:33:12",
															"nodeType": "YulExpressionStatement",
															"src": "1168:33:12"
														}
													]
												},
												"name": "abi_decode_t_address",
												"nativeSrc": "1068:139:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "1098:6:12",
														"nodeType": "YulTypedName",
														"src": "1098:6:12",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "1106:3:12",
														"nodeType": "YulTypedName",
														"src": "1106:3:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "1114:5:12",
														"nodeType": "YulTypedName",
														"src": "1114:5:12",
														"type": ""
													}
												],
												"src": "1068:139:12"
											},
											{
												"body": {
													"nativeSrc": "1258:32:12",
													"nodeType": "YulBlock",
													"src": "1258:32:12",
													"statements": [
														{
															"nativeSrc": "1268:16:12",
															"nodeType": "YulAssignment",
															"src": "1268:16:12",
															"value": {
																"name": "value",
																"nativeSrc": "1279:5:12",
																"nodeType": "YulIdentifier",
																"src": "1279:5:12"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "1268:7:12",
																	"nodeType": "YulIdentifier",
																	"src": "1268:7:12"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nativeSrc": "1213:77:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1240:5:12",
														"nodeType": "YulTypedName",
														"src": "1240:5:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "1250:7:12",
														"nodeType": "YulTypedName",
														"src": "1250:7:12",
														"type": ""
													}
												],
												"src": "1213:77:12"
											},
											{
												"body": {
													"nativeSrc": "1339:79:12",
													"nodeType": "YulBlock",
													"src": "1339:79:12",
													"statements": [
														{
															"body": {
																"nativeSrc": "1396:16:12",
																"nodeType": "YulBlock",
																"src": "1396:16:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "1405:1:12",
																					"nodeType": "YulLiteral",
																					"src": "1405:1:12",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1408:1:12",
																					"nodeType": "YulLiteral",
																					"src": "1408:1:12",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "1398:6:12",
																				"nodeType": "YulIdentifier",
																				"src": "1398:6:12"
																			},
																			"nativeSrc": "1398:12:12",
																			"nodeType": "YulFunctionCall",
																			"src": "1398:12:12"
																		},
																		"nativeSrc": "1398:12:12",
																		"nodeType": "YulExpressionStatement",
																		"src": "1398:12:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "1362:5:12",
																				"nodeType": "YulIdentifier",
																				"src": "1362:5:12"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "1387:5:12",
																						"nodeType": "YulIdentifier",
																						"src": "1387:5:12"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nativeSrc": "1369:17:12",
																					"nodeType": "YulIdentifier",
																					"src": "1369:17:12"
																				},
																				"nativeSrc": "1369:24:12",
																				"nodeType": "YulFunctionCall",
																				"src": "1369:24:12"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "1359:2:12",
																			"nodeType": "YulIdentifier",
																			"src": "1359:2:12"
																		},
																		"nativeSrc": "1359:35:12",
																		"nodeType": "YulFunctionCall",
																		"src": "1359:35:12"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "1352:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "1352:6:12"
																},
																"nativeSrc": "1352:43:12",
																"nodeType": "YulFunctionCall",
																"src": "1352:43:12"
															},
															"nativeSrc": "1349:63:12",
															"nodeType": "YulIf",
															"src": "1349:63:12"
														}
													]
												},
												"name": "validator_revert_t_uint256",
												"nativeSrc": "1296:122:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1332:5:12",
														"nodeType": "YulTypedName",
														"src": "1332:5:12",
														"type": ""
													}
												],
												"src": "1296:122:12"
											},
											{
												"body": {
													"nativeSrc": "1476:87:12",
													"nodeType": "YulBlock",
													"src": "1476:87:12",
													"statements": [
														{
															"nativeSrc": "1486:29:12",
															"nodeType": "YulAssignment",
															"src": "1486:29:12",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "1508:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "1508:6:12"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "1495:12:12",
																	"nodeType": "YulIdentifier",
																	"src": "1495:12:12"
																},
																"nativeSrc": "1495:20:12",
																"nodeType": "YulFunctionCall",
																"src": "1495:20:12"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "1486:5:12",
																	"nodeType": "YulIdentifier",
																	"src": "1486:5:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "1551:5:12",
																		"nodeType": "YulIdentifier",
																		"src": "1551:5:12"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nativeSrc": "1524:26:12",
																	"nodeType": "YulIdentifier",
																	"src": "1524:26:12"
																},
																"nativeSrc": "1524:33:12",
																"nodeType": "YulFunctionCall",
																"src": "1524:33:12"
															},
															"nativeSrc": "1524:33:12",
															"nodeType": "YulExpressionStatement",
															"src": "1524:33:12"
														}
													]
												},
												"name": "abi_decode_t_uint256",
												"nativeSrc": "1424:139:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "1454:6:12",
														"nodeType": "YulTypedName",
														"src": "1454:6:12",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "1462:3:12",
														"nodeType": "YulTypedName",
														"src": "1462:3:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "1470:5:12",
														"nodeType": "YulTypedName",
														"src": "1470:5:12",
														"type": ""
													}
												],
												"src": "1424:139:12"
											},
											{
												"body": {
													"nativeSrc": "1658:28:12",
													"nodeType": "YulBlock",
													"src": "1658:28:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1675:1:12",
																		"nodeType": "YulLiteral",
																		"src": "1675:1:12",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1678:1:12",
																		"nodeType": "YulLiteral",
																		"src": "1678:1:12",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "1668:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "1668:6:12"
																},
																"nativeSrc": "1668:12:12",
																"nodeType": "YulFunctionCall",
																"src": "1668:12:12"
															},
															"nativeSrc": "1668:12:12",
															"nodeType": "YulExpressionStatement",
															"src": "1668:12:12"
														}
													]
												},
												"name": "revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d",
												"nativeSrc": "1569:117:12",
												"nodeType": "YulFunctionDefinition",
												"src": "1569:117:12"
											},
											{
												"body": {
													"nativeSrc": "1781:28:12",
													"nodeType": "YulBlock",
													"src": "1781:28:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1798:1:12",
																		"nodeType": "YulLiteral",
																		"src": "1798:1:12",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1801:1:12",
																		"nodeType": "YulLiteral",
																		"src": "1801:1:12",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "1791:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "1791:6:12"
																},
																"nativeSrc": "1791:12:12",
																"nodeType": "YulFunctionCall",
																"src": "1791:12:12"
															},
															"nativeSrc": "1791:12:12",
															"nodeType": "YulExpressionStatement",
															"src": "1791:12:12"
														}
													]
												},
												"name": "revert_error_15abf5612cd996bc235ba1e55a4a30ac60e6bb601ff7ba4ad3f179b6be8d0490",
												"nativeSrc": "1692:117:12",
												"nodeType": "YulFunctionDefinition",
												"src": "1692:117:12"
											},
											{
												"body": {
													"nativeSrc": "1904:28:12",
													"nodeType": "YulBlock",
													"src": "1904:28:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1921:1:12",
																		"nodeType": "YulLiteral",
																		"src": "1921:1:12",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1924:1:12",
																		"nodeType": "YulLiteral",
																		"src": "1924:1:12",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "1914:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "1914:6:12"
																},
																"nativeSrc": "1914:12:12",
																"nodeType": "YulFunctionCall",
																"src": "1914:12:12"
															},
															"nativeSrc": "1914:12:12",
															"nodeType": "YulExpressionStatement",
															"src": "1914:12:12"
														}
													]
												},
												"name": "revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef",
												"nativeSrc": "1815:117:12",
												"nodeType": "YulFunctionDefinition",
												"src": "1815:117:12"
											},
											{
												"body": {
													"nativeSrc": "2027:478:12",
													"nodeType": "YulBlock",
													"src": "2027:478:12",
													"statements": [
														{
															"body": {
																"nativeSrc": "2076:83:12",
																"nodeType": "YulBlock",
																"src": "2076:83:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d",
																				"nativeSrc": "2078:77:12",
																				"nodeType": "YulIdentifier",
																				"src": "2078:77:12"
																			},
																			"nativeSrc": "2078:79:12",
																			"nodeType": "YulFunctionCall",
																			"src": "2078:79:12"
																		},
																		"nativeSrc": "2078:79:12",
																		"nodeType": "YulExpressionStatement",
																		"src": "2078:79:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nativeSrc": "2055:6:12",
																						"nodeType": "YulIdentifier",
																						"src": "2055:6:12"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "2063:4:12",
																						"nodeType": "YulLiteral",
																						"src": "2063:4:12",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "2051:3:12",
																					"nodeType": "YulIdentifier",
																					"src": "2051:3:12"
																				},
																				"nativeSrc": "2051:17:12",
																				"nodeType": "YulFunctionCall",
																				"src": "2051:17:12"
																			},
																			{
																				"name": "end",
																				"nativeSrc": "2070:3:12",
																				"nodeType": "YulIdentifier",
																				"src": "2070:3:12"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nativeSrc": "2047:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "2047:3:12"
																		},
																		"nativeSrc": "2047:27:12",
																		"nodeType": "YulFunctionCall",
																		"src": "2047:27:12"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "2040:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "2040:6:12"
																},
																"nativeSrc": "2040:35:12",
																"nodeType": "YulFunctionCall",
																"src": "2040:35:12"
															},
															"nativeSrc": "2037:122:12",
															"nodeType": "YulIf",
															"src": "2037:122:12"
														},
														{
															"nativeSrc": "2168:30:12",
															"nodeType": "YulAssignment",
															"src": "2168:30:12",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "2191:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "2191:6:12"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "2178:12:12",
																	"nodeType": "YulIdentifier",
																	"src": "2178:12:12"
																},
																"nativeSrc": "2178:20:12",
																"nodeType": "YulFunctionCall",
																"src": "2178:20:12"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "2168:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "2168:6:12"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "2241:83:12",
																"nodeType": "YulBlock",
																"src": "2241:83:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_15abf5612cd996bc235ba1e55a4a30ac60e6bb601ff7ba4ad3f179b6be8d0490",
																				"nativeSrc": "2243:77:12",
																				"nodeType": "YulIdentifier",
																				"src": "2243:77:12"
																			},
																			"nativeSrc": "2243:79:12",
																			"nodeType": "YulFunctionCall",
																			"src": "2243:79:12"
																		},
																		"nativeSrc": "2243:79:12",
																		"nodeType": "YulExpressionStatement",
																		"src": "2243:79:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "length",
																		"nativeSrc": "2213:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "2213:6:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2221:18:12",
																		"nodeType": "YulLiteral",
																		"src": "2221:18:12",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "2210:2:12",
																	"nodeType": "YulIdentifier",
																	"src": "2210:2:12"
																},
																"nativeSrc": "2210:30:12",
																"nodeType": "YulFunctionCall",
																"src": "2210:30:12"
															},
															"nativeSrc": "2207:117:12",
															"nodeType": "YulIf",
															"src": "2207:117:12"
														},
														{
															"nativeSrc": "2333:29:12",
															"nodeType": "YulAssignment",
															"src": "2333:29:12",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "2349:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "2349:6:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2357:4:12",
																		"nodeType": "YulLiteral",
																		"src": "2357:4:12",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "2345:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "2345:3:12"
																},
																"nativeSrc": "2345:17:12",
																"nodeType": "YulFunctionCall",
																"src": "2345:17:12"
															},
															"variableNames": [
																{
																	"name": "arrayPos",
																	"nativeSrc": "2333:8:12",
																	"nodeType": "YulIdentifier",
																	"src": "2333:8:12"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "2416:83:12",
																"nodeType": "YulBlock",
																"src": "2416:83:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef",
																				"nativeSrc": "2418:77:12",
																				"nodeType": "YulIdentifier",
																				"src": "2418:77:12"
																			},
																			"nativeSrc": "2418:79:12",
																			"nodeType": "YulFunctionCall",
																			"src": "2418:79:12"
																		},
																		"nativeSrc": "2418:79:12",
																		"nodeType": "YulExpressionStatement",
																		"src": "2418:79:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "arrayPos",
																				"nativeSrc": "2381:8:12",
																				"nodeType": "YulIdentifier",
																				"src": "2381:8:12"
																			},
																			{
																				"arguments": [
																					{
																						"name": "length",
																						"nativeSrc": "2395:6:12",
																						"nodeType": "YulIdentifier",
																						"src": "2395:6:12"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "2403:4:12",
																						"nodeType": "YulLiteral",
																						"src": "2403:4:12",
																						"type": "",
																						"value": "0x01"
																					}
																				],
																				"functionName": {
																					"name": "mul",
																					"nativeSrc": "2391:3:12",
																					"nodeType": "YulIdentifier",
																					"src": "2391:3:12"
																				},
																				"nativeSrc": "2391:17:12",
																				"nodeType": "YulFunctionCall",
																				"src": "2391:17:12"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2377:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "2377:3:12"
																		},
																		"nativeSrc": "2377:32:12",
																		"nodeType": "YulFunctionCall",
																		"src": "2377:32:12"
																	},
																	{
																		"name": "end",
																		"nativeSrc": "2411:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "2411:3:12"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "2374:2:12",
																	"nodeType": "YulIdentifier",
																	"src": "2374:2:12"
																},
																"nativeSrc": "2374:41:12",
																"nodeType": "YulFunctionCall",
																"src": "2374:41:12"
															},
															"nativeSrc": "2371:128:12",
															"nodeType": "YulIf",
															"src": "2371:128:12"
														}
													]
												},
												"name": "abi_decode_t_string_calldata_ptr",
												"nativeSrc": "1952:553:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "1994:6:12",
														"nodeType": "YulTypedName",
														"src": "1994:6:12",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "2002:3:12",
														"nodeType": "YulTypedName",
														"src": "2002:3:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "arrayPos",
														"nativeSrc": "2010:8:12",
														"nodeType": "YulTypedName",
														"src": "2010:8:12",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "2020:6:12",
														"nodeType": "YulTypedName",
														"src": "2020:6:12",
														"type": ""
													}
												],
												"src": "1952:553:12"
											},
											{
												"body": {
													"nativeSrc": "2698:1214:12",
													"nodeType": "YulBlock",
													"src": "2698:1214:12",
													"statements": [
														{
															"body": {
																"nativeSrc": "2745:83:12",
																"nodeType": "YulBlock",
																"src": "2745:83:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "2747:77:12",
																				"nodeType": "YulIdentifier",
																				"src": "2747:77:12"
																			},
																			"nativeSrc": "2747:79:12",
																			"nodeType": "YulFunctionCall",
																			"src": "2747:79:12"
																		},
																		"nativeSrc": "2747:79:12",
																		"nodeType": "YulExpressionStatement",
																		"src": "2747:79:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2719:7:12",
																				"nodeType": "YulIdentifier",
																				"src": "2719:7:12"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "2728:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "2728:9:12"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "2715:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "2715:3:12"
																		},
																		"nativeSrc": "2715:23:12",
																		"nodeType": "YulFunctionCall",
																		"src": "2715:23:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2740:3:12",
																		"nodeType": "YulLiteral",
																		"src": "2740:3:12",
																		"type": "",
																		"value": "224"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "2711:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "2711:3:12"
																},
																"nativeSrc": "2711:33:12",
																"nodeType": "YulFunctionCall",
																"src": "2711:33:12"
															},
															"nativeSrc": "2708:120:12",
															"nodeType": "YulIf",
															"src": "2708:120:12"
														},
														{
															"nativeSrc": "2838:116:12",
															"nodeType": "YulBlock",
															"src": "2838:116:12",
															"statements": [
																{
																	"nativeSrc": "2853:15:12",
																	"nodeType": "YulVariableDeclaration",
																	"src": "2853:15:12",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "2867:1:12",
																		"nodeType": "YulLiteral",
																		"src": "2867:1:12",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "2857:6:12",
																			"nodeType": "YulTypedName",
																			"src": "2857:6:12",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "2882:62:12",
																	"nodeType": "YulAssignment",
																	"src": "2882:62:12",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "2916:9:12",
																						"nodeType": "YulIdentifier",
																						"src": "2916:9:12"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "2927:6:12",
																						"nodeType": "YulIdentifier",
																						"src": "2927:6:12"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "2912:3:12",
																					"nodeType": "YulIdentifier",
																					"src": "2912:3:12"
																				},
																				"nativeSrc": "2912:22:12",
																				"nodeType": "YulFunctionCall",
																				"src": "2912:22:12"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2936:7:12",
																				"nodeType": "YulIdentifier",
																				"src": "2936:7:12"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint48",
																			"nativeSrc": "2892:19:12",
																			"nodeType": "YulIdentifier",
																			"src": "2892:19:12"
																		},
																		"nativeSrc": "2892:52:12",
																		"nodeType": "YulFunctionCall",
																		"src": "2892:52:12"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "2882:6:12",
																			"nodeType": "YulIdentifier",
																			"src": "2882:6:12"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "2964:118:12",
															"nodeType": "YulBlock",
															"src": "2964:118:12",
															"statements": [
																{
																	"nativeSrc": "2979:16:12",
																	"nodeType": "YulVariableDeclaration",
																	"src": "2979:16:12",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "2993:2:12",
																		"nodeType": "YulLiteral",
																		"src": "2993:2:12",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "2983:6:12",
																			"nodeType": "YulTypedName",
																			"src": "2983:6:12",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "3009:63:12",
																	"nodeType": "YulAssignment",
																	"src": "3009:63:12",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "3044:9:12",
																						"nodeType": "YulIdentifier",
																						"src": "3044:9:12"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "3055:6:12",
																						"nodeType": "YulIdentifier",
																						"src": "3055:6:12"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "3040:3:12",
																					"nodeType": "YulIdentifier",
																					"src": "3040:3:12"
																				},
																				"nativeSrc": "3040:22:12",
																				"nodeType": "YulFunctionCall",
																				"src": "3040:22:12"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "3064:7:12",
																				"nodeType": "YulIdentifier",
																				"src": "3064:7:12"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "3019:20:12",
																			"nodeType": "YulIdentifier",
																			"src": "3019:20:12"
																		},
																		"nativeSrc": "3019:53:12",
																		"nodeType": "YulFunctionCall",
																		"src": "3019:53:12"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "3009:6:12",
																			"nodeType": "YulIdentifier",
																			"src": "3009:6:12"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "3092:118:12",
															"nodeType": "YulBlock",
															"src": "3092:118:12",
															"statements": [
																{
																	"nativeSrc": "3107:16:12",
																	"nodeType": "YulVariableDeclaration",
																	"src": "3107:16:12",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "3121:2:12",
																		"nodeType": "YulLiteral",
																		"src": "3121:2:12",
																		"type": "",
																		"value": "64"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "3111:6:12",
																			"nodeType": "YulTypedName",
																			"src": "3111:6:12",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "3137:63:12",
																	"nodeType": "YulAssignment",
																	"src": "3137:63:12",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "3172:9:12",
																						"nodeType": "YulIdentifier",
																						"src": "3172:9:12"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "3183:6:12",
																						"nodeType": "YulIdentifier",
																						"src": "3183:6:12"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "3168:3:12",
																					"nodeType": "YulIdentifier",
																					"src": "3168:3:12"
																				},
																				"nativeSrc": "3168:22:12",
																				"nodeType": "YulFunctionCall",
																				"src": "3168:22:12"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "3192:7:12",
																				"nodeType": "YulIdentifier",
																				"src": "3192:7:12"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "3147:20:12",
																			"nodeType": "YulIdentifier",
																			"src": "3147:20:12"
																		},
																		"nativeSrc": "3147:53:12",
																		"nodeType": "YulFunctionCall",
																		"src": "3147:53:12"
																	},
																	"variableNames": [
																		{
																			"name": "value2",
																			"nativeSrc": "3137:6:12",
																			"nodeType": "YulIdentifier",
																			"src": "3137:6:12"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "3220:118:12",
															"nodeType": "YulBlock",
															"src": "3220:118:12",
															"statements": [
																{
																	"nativeSrc": "3235:16:12",
																	"nodeType": "YulVariableDeclaration",
																	"src": "3235:16:12",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "3249:2:12",
																		"nodeType": "YulLiteral",
																		"src": "3249:2:12",
																		"type": "",
																		"value": "96"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "3239:6:12",
																			"nodeType": "YulTypedName",
																			"src": "3239:6:12",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "3265:63:12",
																	"nodeType": "YulAssignment",
																	"src": "3265:63:12",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "3300:9:12",
																						"nodeType": "YulIdentifier",
																						"src": "3300:9:12"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "3311:6:12",
																						"nodeType": "YulIdentifier",
																						"src": "3311:6:12"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "3296:3:12",
																					"nodeType": "YulIdentifier",
																					"src": "3296:3:12"
																				},
																				"nativeSrc": "3296:22:12",
																				"nodeType": "YulFunctionCall",
																				"src": "3296:22:12"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "3320:7:12",
																				"nodeType": "YulIdentifier",
																				"src": "3320:7:12"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "3275:20:12",
																			"nodeType": "YulIdentifier",
																			"src": "3275:20:12"
																		},
																		"nativeSrc": "3275:53:12",
																		"nodeType": "YulFunctionCall",
																		"src": "3275:53:12"
																	},
																	"variableNames": [
																		{
																			"name": "value3",
																			"nativeSrc": "3265:6:12",
																			"nodeType": "YulIdentifier",
																			"src": "3265:6:12"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "3348:119:12",
															"nodeType": "YulBlock",
															"src": "3348:119:12",
															"statements": [
																{
																	"nativeSrc": "3363:17:12",
																	"nodeType": "YulVariableDeclaration",
																	"src": "3363:17:12",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "3377:3:12",
																		"nodeType": "YulLiteral",
																		"src": "3377:3:12",
																		"type": "",
																		"value": "128"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "3367:6:12",
																			"nodeType": "YulTypedName",
																			"src": "3367:6:12",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "3394:63:12",
																	"nodeType": "YulAssignment",
																	"src": "3394:63:12",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "3429:9:12",
																						"nodeType": "YulIdentifier",
																						"src": "3429:9:12"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "3440:6:12",
																						"nodeType": "YulIdentifier",
																						"src": "3440:6:12"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "3425:3:12",
																					"nodeType": "YulIdentifier",
																					"src": "3425:3:12"
																				},
																				"nativeSrc": "3425:22:12",
																				"nodeType": "YulFunctionCall",
																				"src": "3425:22:12"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "3449:7:12",
																				"nodeType": "YulIdentifier",
																				"src": "3449:7:12"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "3404:20:12",
																			"nodeType": "YulIdentifier",
																			"src": "3404:20:12"
																		},
																		"nativeSrc": "3404:53:12",
																		"nodeType": "YulFunctionCall",
																		"src": "3404:53:12"
																	},
																	"variableNames": [
																		{
																			"name": "value4",
																			"nativeSrc": "3394:6:12",
																			"nodeType": "YulIdentifier",
																			"src": "3394:6:12"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "3477:299:12",
															"nodeType": "YulBlock",
															"src": "3477:299:12",
															"statements": [
																{
																	"nativeSrc": "3492:47:12",
																	"nodeType": "YulVariableDeclaration",
																	"src": "3492:47:12",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "3523:9:12",
																						"nodeType": "YulIdentifier",
																						"src": "3523:9:12"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "3534:3:12",
																						"nodeType": "YulLiteral",
																						"src": "3534:3:12",
																						"type": "",
																						"value": "160"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "3519:3:12",
																					"nodeType": "YulIdentifier",
																					"src": "3519:3:12"
																				},
																				"nativeSrc": "3519:19:12",
																				"nodeType": "YulFunctionCall",
																				"src": "3519:19:12"
																			}
																		],
																		"functionName": {
																			"name": "calldataload",
																			"nativeSrc": "3506:12:12",
																			"nodeType": "YulIdentifier",
																			"src": "3506:12:12"
																		},
																		"nativeSrc": "3506:33:12",
																		"nodeType": "YulFunctionCall",
																		"src": "3506:33:12"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "3496:6:12",
																			"nodeType": "YulTypedName",
																			"src": "3496:6:12",
																			"type": ""
																		}
																	]
																},
																{
																	"body": {
																		"nativeSrc": "3586:83:12",
																		"nodeType": "YulBlock",
																		"src": "3586:83:12",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [],
																					"functionName": {
																						"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
																						"nativeSrc": "3588:77:12",
																						"nodeType": "YulIdentifier",
																						"src": "3588:77:12"
																					},
																					"nativeSrc": "3588:79:12",
																					"nodeType": "YulFunctionCall",
																					"src": "3588:79:12"
																				},
																				"nativeSrc": "3588:79:12",
																				"nodeType": "YulExpressionStatement",
																				"src": "3588:79:12"
																			}
																		]
																	},
																	"condition": {
																		"arguments": [
																			{
																				"name": "offset",
																				"nativeSrc": "3558:6:12",
																				"nodeType": "YulIdentifier",
																				"src": "3558:6:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3566:18:12",
																				"nodeType": "YulLiteral",
																				"src": "3566:18:12",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nativeSrc": "3555:2:12",
																			"nodeType": "YulIdentifier",
																			"src": "3555:2:12"
																		},
																		"nativeSrc": "3555:30:12",
																		"nodeType": "YulFunctionCall",
																		"src": "3555:30:12"
																	},
																	"nativeSrc": "3552:117:12",
																	"nodeType": "YulIf",
																	"src": "3552:117:12"
																},
																{
																	"nativeSrc": "3683:83:12",
																	"nodeType": "YulAssignment",
																	"src": "3683:83:12",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "3738:9:12",
																						"nodeType": "YulIdentifier",
																						"src": "3738:9:12"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "3749:6:12",
																						"nodeType": "YulIdentifier",
																						"src": "3749:6:12"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "3734:3:12",
																					"nodeType": "YulIdentifier",
																					"src": "3734:3:12"
																				},
																				"nativeSrc": "3734:22:12",
																				"nodeType": "YulFunctionCall",
																				"src": "3734:22:12"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "3758:7:12",
																				"nodeType": "YulIdentifier",
																				"src": "3758:7:12"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_string_calldata_ptr",
																			"nativeSrc": "3701:32:12",
																			"nodeType": "YulIdentifier",
																			"src": "3701:32:12"
																		},
																		"nativeSrc": "3701:65:12",
																		"nodeType": "YulFunctionCall",
																		"src": "3701:65:12"
																	},
																	"variableNames": [
																		{
																			"name": "value5",
																			"nativeSrc": "3683:6:12",
																			"nodeType": "YulIdentifier",
																			"src": "3683:6:12"
																		},
																		{
																			"name": "value6",
																			"nativeSrc": "3691:6:12",
																			"nodeType": "YulIdentifier",
																			"src": "3691:6:12"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "3786:119:12",
															"nodeType": "YulBlock",
															"src": "3786:119:12",
															"statements": [
																{
																	"nativeSrc": "3801:17:12",
																	"nodeType": "YulVariableDeclaration",
																	"src": "3801:17:12",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "3815:3:12",
																		"nodeType": "YulLiteral",
																		"src": "3815:3:12",
																		"type": "",
																		"value": "192"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "3805:6:12",
																			"nodeType": "YulTypedName",
																			"src": "3805:6:12",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "3832:63:12",
																	"nodeType": "YulAssignment",
																	"src": "3832:63:12",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "3867:9:12",
																						"nodeType": "YulIdentifier",
																						"src": "3867:9:12"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "3878:6:12",
																						"nodeType": "YulIdentifier",
																						"src": "3878:6:12"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "3863:3:12",
																					"nodeType": "YulIdentifier",
																					"src": "3863:3:12"
																				},
																				"nativeSrc": "3863:22:12",
																				"nodeType": "YulFunctionCall",
																				"src": "3863:22:12"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "3887:7:12",
																				"nodeType": "YulIdentifier",
																				"src": "3887:7:12"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "3842:20:12",
																			"nodeType": "YulIdentifier",
																			"src": "3842:20:12"
																		},
																		"nativeSrc": "3842:53:12",
																		"nodeType": "YulFunctionCall",
																		"src": "3842:53:12"
																	},
																	"variableNames": [
																		{
																			"name": "value7",
																			"nativeSrc": "3832:6:12",
																			"nodeType": "YulIdentifier",
																			"src": "3832:6:12"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint48t_addresst_uint256t_uint256t_uint256t_string_calldata_ptrt_address",
												"nativeSrc": "2511:1401:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2612:9:12",
														"nodeType": "YulTypedName",
														"src": "2612:9:12",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "2623:7:12",
														"nodeType": "YulTypedName",
														"src": "2623:7:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "2635:6:12",
														"nodeType": "YulTypedName",
														"src": "2635:6:12",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "2643:6:12",
														"nodeType": "YulTypedName",
														"src": "2643:6:12",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "2651:6:12",
														"nodeType": "YulTypedName",
														"src": "2651:6:12",
														"type": ""
													},
													{
														"name": "value3",
														"nativeSrc": "2659:6:12",
														"nodeType": "YulTypedName",
														"src": "2659:6:12",
														"type": ""
													},
													{
														"name": "value4",
														"nativeSrc": "2667:6:12",
														"nodeType": "YulTypedName",
														"src": "2667:6:12",
														"type": ""
													},
													{
														"name": "value5",
														"nativeSrc": "2675:6:12",
														"nodeType": "YulTypedName",
														"src": "2675:6:12",
														"type": ""
													},
													{
														"name": "value6",
														"nativeSrc": "2683:6:12",
														"nodeType": "YulTypedName",
														"src": "2683:6:12",
														"type": ""
													},
													{
														"name": "value7",
														"nativeSrc": "2691:6:12",
														"nodeType": "YulTypedName",
														"src": "2691:6:12",
														"type": ""
													}
												],
												"src": "2511:1401:12"
											},
											{
												"body": {
													"nativeSrc": "3983:53:12",
													"nodeType": "YulBlock",
													"src": "3983:53:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "4000:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "4000:3:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "4023:5:12",
																				"nodeType": "YulIdentifier",
																				"src": "4023:5:12"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nativeSrc": "4005:17:12",
																			"nodeType": "YulIdentifier",
																			"src": "4005:17:12"
																		},
																		"nativeSrc": "4005:24:12",
																		"nodeType": "YulFunctionCall",
																		"src": "4005:24:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3993:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "3993:6:12"
																},
																"nativeSrc": "3993:37:12",
																"nodeType": "YulFunctionCall",
																"src": "3993:37:12"
															},
															"nativeSrc": "3993:37:12",
															"nodeType": "YulExpressionStatement",
															"src": "3993:37:12"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nativeSrc": "3918:118:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3971:5:12",
														"nodeType": "YulTypedName",
														"src": "3971:5:12",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "3978:3:12",
														"nodeType": "YulTypedName",
														"src": "3978:3:12",
														"type": ""
													}
												],
												"src": "3918:118:12"
											},
											{
												"body": {
													"nativeSrc": "4140:124:12",
													"nodeType": "YulBlock",
													"src": "4140:124:12",
													"statements": [
														{
															"nativeSrc": "4150:26:12",
															"nodeType": "YulAssignment",
															"src": "4150:26:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "4162:9:12",
																		"nodeType": "YulIdentifier",
																		"src": "4162:9:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4173:2:12",
																		"nodeType": "YulLiteral",
																		"src": "4173:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "4158:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "4158:3:12"
																},
																"nativeSrc": "4158:18:12",
																"nodeType": "YulFunctionCall",
																"src": "4158:18:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "4150:4:12",
																	"nodeType": "YulIdentifier",
																	"src": "4150:4:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "4230:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "4230:6:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "4243:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "4243:9:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4254:1:12",
																				"nodeType": "YulLiteral",
																				"src": "4254:1:12",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4239:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "4239:3:12"
																		},
																		"nativeSrc": "4239:17:12",
																		"nodeType": "YulFunctionCall",
																		"src": "4239:17:12"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "4186:43:12",
																	"nodeType": "YulIdentifier",
																	"src": "4186:43:12"
																},
																"nativeSrc": "4186:71:12",
																"nodeType": "YulFunctionCall",
																"src": "4186:71:12"
															},
															"nativeSrc": "4186:71:12",
															"nodeType": "YulExpressionStatement",
															"src": "4186:71:12"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nativeSrc": "4042:222:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "4112:9:12",
														"nodeType": "YulTypedName",
														"src": "4112:9:12",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "4124:6:12",
														"nodeType": "YulTypedName",
														"src": "4124:6:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "4135:4:12",
														"nodeType": "YulTypedName",
														"src": "4135:4:12",
														"type": ""
													}
												],
												"src": "4042:222:12"
											},
											{
												"body": {
													"nativeSrc": "4353:391:12",
													"nodeType": "YulBlock",
													"src": "4353:391:12",
													"statements": [
														{
															"body": {
																"nativeSrc": "4399:83:12",
																"nodeType": "YulBlock",
																"src": "4399:83:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "4401:77:12",
																				"nodeType": "YulIdentifier",
																				"src": "4401:77:12"
																			},
																			"nativeSrc": "4401:79:12",
																			"nodeType": "YulFunctionCall",
																			"src": "4401:79:12"
																		},
																		"nativeSrc": "4401:79:12",
																		"nodeType": "YulExpressionStatement",
																		"src": "4401:79:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4374:7:12",
																				"nodeType": "YulIdentifier",
																				"src": "4374:7:12"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "4383:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "4383:9:12"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "4370:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "4370:3:12"
																		},
																		"nativeSrc": "4370:23:12",
																		"nodeType": "YulFunctionCall",
																		"src": "4370:23:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4395:2:12",
																		"nodeType": "YulLiteral",
																		"src": "4395:2:12",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "4366:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "4366:3:12"
																},
																"nativeSrc": "4366:32:12",
																"nodeType": "YulFunctionCall",
																"src": "4366:32:12"
															},
															"nativeSrc": "4363:119:12",
															"nodeType": "YulIf",
															"src": "4363:119:12"
														},
														{
															"nativeSrc": "4492:117:12",
															"nodeType": "YulBlock",
															"src": "4492:117:12",
															"statements": [
																{
																	"nativeSrc": "4507:15:12",
																	"nodeType": "YulVariableDeclaration",
																	"src": "4507:15:12",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "4521:1:12",
																		"nodeType": "YulLiteral",
																		"src": "4521:1:12",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "4511:6:12",
																			"nodeType": "YulTypedName",
																			"src": "4511:6:12",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "4536:63:12",
																	"nodeType": "YulAssignment",
																	"src": "4536:63:12",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "4571:9:12",
																						"nodeType": "YulIdentifier",
																						"src": "4571:9:12"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "4582:6:12",
																						"nodeType": "YulIdentifier",
																						"src": "4582:6:12"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "4567:3:12",
																					"nodeType": "YulIdentifier",
																					"src": "4567:3:12"
																				},
																				"nativeSrc": "4567:22:12",
																				"nodeType": "YulFunctionCall",
																				"src": "4567:22:12"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4591:7:12",
																				"nodeType": "YulIdentifier",
																				"src": "4591:7:12"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "4546:20:12",
																			"nodeType": "YulIdentifier",
																			"src": "4546:20:12"
																		},
																		"nativeSrc": "4546:53:12",
																		"nodeType": "YulFunctionCall",
																		"src": "4546:53:12"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "4536:6:12",
																			"nodeType": "YulIdentifier",
																			"src": "4536:6:12"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "4619:118:12",
															"nodeType": "YulBlock",
															"src": "4619:118:12",
															"statements": [
																{
																	"nativeSrc": "4634:16:12",
																	"nodeType": "YulVariableDeclaration",
																	"src": "4634:16:12",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "4648:2:12",
																		"nodeType": "YulLiteral",
																		"src": "4648:2:12",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "4638:6:12",
																			"nodeType": "YulTypedName",
																			"src": "4638:6:12",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "4664:63:12",
																	"nodeType": "YulAssignment",
																	"src": "4664:63:12",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "4699:9:12",
																						"nodeType": "YulIdentifier",
																						"src": "4699:9:12"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "4710:6:12",
																						"nodeType": "YulIdentifier",
																						"src": "4710:6:12"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "4695:3:12",
																					"nodeType": "YulIdentifier",
																					"src": "4695:3:12"
																				},
																				"nativeSrc": "4695:22:12",
																				"nodeType": "YulFunctionCall",
																				"src": "4695:22:12"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4719:7:12",
																				"nodeType": "YulIdentifier",
																				"src": "4719:7:12"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "4674:20:12",
																			"nodeType": "YulIdentifier",
																			"src": "4674:20:12"
																		},
																		"nativeSrc": "4674:53:12",
																		"nodeType": "YulFunctionCall",
																		"src": "4674:53:12"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "4664:6:12",
																			"nodeType": "YulIdentifier",
																			"src": "4664:6:12"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_uint256",
												"nativeSrc": "4270:474:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "4315:9:12",
														"nodeType": "YulTypedName",
														"src": "4315:9:12",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "4326:7:12",
														"nodeType": "YulTypedName",
														"src": "4326:7:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "4338:6:12",
														"nodeType": "YulTypedName",
														"src": "4338:6:12",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "4346:6:12",
														"nodeType": "YulTypedName",
														"src": "4346:6:12",
														"type": ""
													}
												],
												"src": "4270:474:12"
											},
											{
												"body": {
													"nativeSrc": "4815:53:12",
													"nodeType": "YulBlock",
													"src": "4815:53:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "4832:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "4832:3:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "4855:5:12",
																				"nodeType": "YulIdentifier",
																				"src": "4855:5:12"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nativeSrc": "4837:17:12",
																			"nodeType": "YulIdentifier",
																			"src": "4837:17:12"
																		},
																		"nativeSrc": "4837:24:12",
																		"nodeType": "YulFunctionCall",
																		"src": "4837:24:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4825:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "4825:6:12"
																},
																"nativeSrc": "4825:37:12",
																"nodeType": "YulFunctionCall",
																"src": "4825:37:12"
															},
															"nativeSrc": "4825:37:12",
															"nodeType": "YulExpressionStatement",
															"src": "4825:37:12"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
												"nativeSrc": "4750:118:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "4803:5:12",
														"nodeType": "YulTypedName",
														"src": "4803:5:12",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "4810:3:12",
														"nodeType": "YulTypedName",
														"src": "4810:3:12",
														"type": ""
													}
												],
												"src": "4750:118:12"
											},
											{
												"body": {
													"nativeSrc": "4937:52:12",
													"nodeType": "YulBlock",
													"src": "4937:52:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "4954:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "4954:3:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "4976:5:12",
																				"nodeType": "YulIdentifier",
																				"src": "4976:5:12"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint48",
																			"nativeSrc": "4959:16:12",
																			"nodeType": "YulIdentifier",
																			"src": "4959:16:12"
																		},
																		"nativeSrc": "4959:23:12",
																		"nodeType": "YulFunctionCall",
																		"src": "4959:23:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4947:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "4947:6:12"
																},
																"nativeSrc": "4947:36:12",
																"nodeType": "YulFunctionCall",
																"src": "4947:36:12"
															},
															"nativeSrc": "4947:36:12",
															"nodeType": "YulExpressionStatement",
															"src": "4947:36:12"
														}
													]
												},
												"name": "abi_encode_t_uint48_to_t_uint48_fromStack",
												"nativeSrc": "4874:115:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "4925:5:12",
														"nodeType": "YulTypedName",
														"src": "4925:5:12",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "4932:3:12",
														"nodeType": "YulTypedName",
														"src": "4932:3:12",
														"type": ""
													}
												],
												"src": "4874:115:12"
											},
											{
												"body": {
													"nativeSrc": "5054:40:12",
													"nodeType": "YulBlock",
													"src": "5054:40:12",
													"statements": [
														{
															"nativeSrc": "5065:22:12",
															"nodeType": "YulAssignment",
															"src": "5065:22:12",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "5081:5:12",
																		"nodeType": "YulIdentifier",
																		"src": "5081:5:12"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "5075:5:12",
																	"nodeType": "YulIdentifier",
																	"src": "5075:5:12"
																},
																"nativeSrc": "5075:12:12",
																"nodeType": "YulFunctionCall",
																"src": "5075:12:12"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "5065:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "5065:6:12"
																}
															]
														}
													]
												},
												"name": "array_length_t_string_memory_ptr",
												"nativeSrc": "4995:99:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "5037:5:12",
														"nodeType": "YulTypedName",
														"src": "5037:5:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "5047:6:12",
														"nodeType": "YulTypedName",
														"src": "5047:6:12",
														"type": ""
													}
												],
												"src": "4995:99:12"
											},
											{
												"body": {
													"nativeSrc": "5196:73:12",
													"nodeType": "YulBlock",
													"src": "5196:73:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "5213:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "5213:3:12"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "5218:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "5218:6:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5206:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "5206:6:12"
																},
																"nativeSrc": "5206:19:12",
																"nodeType": "YulFunctionCall",
																"src": "5206:19:12"
															},
															"nativeSrc": "5206:19:12",
															"nodeType": "YulExpressionStatement",
															"src": "5206:19:12"
														},
														{
															"nativeSrc": "5234:29:12",
															"nodeType": "YulAssignment",
															"src": "5234:29:12",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "5253:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "5253:3:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5258:4:12",
																		"nodeType": "YulLiteral",
																		"src": "5258:4:12",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "5249:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "5249:3:12"
																},
																"nativeSrc": "5249:14:12",
																"nodeType": "YulFunctionCall",
																"src": "5249:14:12"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nativeSrc": "5234:11:12",
																	"nodeType": "YulIdentifier",
																	"src": "5234:11:12"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
												"nativeSrc": "5100:169:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "5168:3:12",
														"nodeType": "YulTypedName",
														"src": "5168:3:12",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "5173:6:12",
														"nodeType": "YulTypedName",
														"src": "5173:6:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nativeSrc": "5184:11:12",
														"nodeType": "YulTypedName",
														"src": "5184:11:12",
														"type": ""
													}
												],
												"src": "5100:169:12"
											},
											{
												"body": {
													"nativeSrc": "5337:77:12",
													"nodeType": "YulBlock",
													"src": "5337:77:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "dst",
																		"nativeSrc": "5354:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "5354:3:12"
																	},
																	{
																		"name": "src",
																		"nativeSrc": "5359:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "5359:3:12"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "5364:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "5364:6:12"
																	}
																],
																"functionName": {
																	"name": "mcopy",
																	"nativeSrc": "5348:5:12",
																	"nodeType": "YulIdentifier",
																	"src": "5348:5:12"
																},
																"nativeSrc": "5348:23:12",
																"nodeType": "YulFunctionCall",
																"src": "5348:23:12"
															},
															"nativeSrc": "5348:23:12",
															"nodeType": "YulExpressionStatement",
															"src": "5348:23:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dst",
																				"nativeSrc": "5391:3:12",
																				"nodeType": "YulIdentifier",
																				"src": "5391:3:12"
																			},
																			{
																				"name": "length",
																				"nativeSrc": "5396:6:12",
																				"nodeType": "YulIdentifier",
																				"src": "5396:6:12"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5387:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "5387:3:12"
																		},
																		"nativeSrc": "5387:16:12",
																		"nodeType": "YulFunctionCall",
																		"src": "5387:16:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5405:1:12",
																		"nodeType": "YulLiteral",
																		"src": "5405:1:12",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5380:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "5380:6:12"
																},
																"nativeSrc": "5380:27:12",
																"nodeType": "YulFunctionCall",
																"src": "5380:27:12"
															},
															"nativeSrc": "5380:27:12",
															"nodeType": "YulExpressionStatement",
															"src": "5380:27:12"
														}
													]
												},
												"name": "copy_memory_to_memory_with_cleanup",
												"nativeSrc": "5275:139:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nativeSrc": "5319:3:12",
														"nodeType": "YulTypedName",
														"src": "5319:3:12",
														"type": ""
													},
													{
														"name": "dst",
														"nativeSrc": "5324:3:12",
														"nodeType": "YulTypedName",
														"src": "5324:3:12",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "5329:6:12",
														"nodeType": "YulTypedName",
														"src": "5329:6:12",
														"type": ""
													}
												],
												"src": "5275:139:12"
											},
											{
												"body": {
													"nativeSrc": "5468:54:12",
													"nodeType": "YulBlock",
													"src": "5468:54:12",
													"statements": [
														{
															"nativeSrc": "5478:38:12",
															"nodeType": "YulAssignment",
															"src": "5478:38:12",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "5496:5:12",
																				"nodeType": "YulIdentifier",
																				"src": "5496:5:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5503:2:12",
																				"nodeType": "YulLiteral",
																				"src": "5503:2:12",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5492:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "5492:3:12"
																		},
																		"nativeSrc": "5492:14:12",
																		"nodeType": "YulFunctionCall",
																		"src": "5492:14:12"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "5512:2:12",
																				"nodeType": "YulLiteral",
																				"src": "5512:2:12",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nativeSrc": "5508:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "5508:3:12"
																		},
																		"nativeSrc": "5508:7:12",
																		"nodeType": "YulFunctionCall",
																		"src": "5508:7:12"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "5488:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "5488:3:12"
																},
																"nativeSrc": "5488:28:12",
																"nodeType": "YulFunctionCall",
																"src": "5488:28:12"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "5478:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "5478:6:12"
																}
															]
														}
													]
												},
												"name": "round_up_to_mul_of_32",
												"nativeSrc": "5420:102:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "5451:5:12",
														"nodeType": "YulTypedName",
														"src": "5451:5:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "5461:6:12",
														"nodeType": "YulTypedName",
														"src": "5461:6:12",
														"type": ""
													}
												],
												"src": "5420:102:12"
											},
											{
												"body": {
													"nativeSrc": "5620:285:12",
													"nodeType": "YulBlock",
													"src": "5620:285:12",
													"statements": [
														{
															"nativeSrc": "5630:53:12",
															"nodeType": "YulVariableDeclaration",
															"src": "5630:53:12",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "5677:5:12",
																		"nodeType": "YulIdentifier",
																		"src": "5677:5:12"
																	}
																],
																"functionName": {
																	"name": "array_length_t_string_memory_ptr",
																	"nativeSrc": "5644:32:12",
																	"nodeType": "YulIdentifier",
																	"src": "5644:32:12"
																},
																"nativeSrc": "5644:39:12",
																"nodeType": "YulFunctionCall",
																"src": "5644:39:12"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "5634:6:12",
																	"nodeType": "YulTypedName",
																	"src": "5634:6:12",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "5692:78:12",
															"nodeType": "YulAssignment",
															"src": "5692:78:12",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "5758:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "5758:3:12"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "5763:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "5763:6:12"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "5699:58:12",
																	"nodeType": "YulIdentifier",
																	"src": "5699:58:12"
																},
																"nativeSrc": "5699:71:12",
																"nodeType": "YulFunctionCall",
																"src": "5699:71:12"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "5692:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "5692:3:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "5818:5:12",
																				"nodeType": "YulIdentifier",
																				"src": "5818:5:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5825:4:12",
																				"nodeType": "YulLiteral",
																				"src": "5825:4:12",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5814:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "5814:3:12"
																		},
																		"nativeSrc": "5814:16:12",
																		"nodeType": "YulFunctionCall",
																		"src": "5814:16:12"
																	},
																	{
																		"name": "pos",
																		"nativeSrc": "5832:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "5832:3:12"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "5837:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "5837:6:12"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory_with_cleanup",
																	"nativeSrc": "5779:34:12",
																	"nodeType": "YulIdentifier",
																	"src": "5779:34:12"
																},
																"nativeSrc": "5779:65:12",
																"nodeType": "YulFunctionCall",
																"src": "5779:65:12"
															},
															"nativeSrc": "5779:65:12",
															"nodeType": "YulExpressionStatement",
															"src": "5779:65:12"
														},
														{
															"nativeSrc": "5853:46:12",
															"nodeType": "YulAssignment",
															"src": "5853:46:12",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "5864:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "5864:3:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "5891:6:12",
																				"nodeType": "YulIdentifier",
																				"src": "5891:6:12"
																			}
																		],
																		"functionName": {
																			"name": "round_up_to_mul_of_32",
																			"nativeSrc": "5869:21:12",
																			"nodeType": "YulIdentifier",
																			"src": "5869:21:12"
																		},
																		"nativeSrc": "5869:29:12",
																		"nodeType": "YulFunctionCall",
																		"src": "5869:29:12"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "5860:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "5860:3:12"
																},
																"nativeSrc": "5860:39:12",
																"nodeType": "YulFunctionCall",
																"src": "5860:39:12"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "5853:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "5853:3:12"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "5528:377:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "5601:5:12",
														"nodeType": "YulTypedName",
														"src": "5601:5:12",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "5608:3:12",
														"nodeType": "YulTypedName",
														"src": "5608:3:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "5616:3:12",
														"nodeType": "YulTypedName",
														"src": "5616:3:12",
														"type": ""
													}
												],
												"src": "5528:377:12"
											},
											{
												"body": {
													"nativeSrc": "6223:772:12",
													"nodeType": "YulBlock",
													"src": "6223:772:12",
													"statements": [
														{
															"nativeSrc": "6233:27:12",
															"nodeType": "YulAssignment",
															"src": "6233:27:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "6245:9:12",
																		"nodeType": "YulIdentifier",
																		"src": "6245:9:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6256:3:12",
																		"nodeType": "YulLiteral",
																		"src": "6256:3:12",
																		"type": "",
																		"value": "256"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "6241:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "6241:3:12"
																},
																"nativeSrc": "6241:19:12",
																"nodeType": "YulFunctionCall",
																"src": "6241:19:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "6233:4:12",
																	"nodeType": "YulIdentifier",
																	"src": "6233:4:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "6314:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "6314:6:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "6327:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "6327:9:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6338:1:12",
																				"nodeType": "YulLiteral",
																				"src": "6338:1:12",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6323:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "6323:3:12"
																		},
																		"nativeSrc": "6323:17:12",
																		"nodeType": "YulFunctionCall",
																		"src": "6323:17:12"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "6270:43:12",
																	"nodeType": "YulIdentifier",
																	"src": "6270:43:12"
																},
																"nativeSrc": "6270:71:12",
																"nodeType": "YulFunctionCall",
																"src": "6270:71:12"
															},
															"nativeSrc": "6270:71:12",
															"nodeType": "YulExpressionStatement",
															"src": "6270:71:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "6395:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "6395:6:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "6408:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "6408:9:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6419:2:12",
																				"nodeType": "YulLiteral",
																				"src": "6419:2:12",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6404:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "6404:3:12"
																		},
																		"nativeSrc": "6404:18:12",
																		"nodeType": "YulFunctionCall",
																		"src": "6404:18:12"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "6351:43:12",
																	"nodeType": "YulIdentifier",
																	"src": "6351:43:12"
																},
																"nativeSrc": "6351:72:12",
																"nodeType": "YulFunctionCall",
																"src": "6351:72:12"
															},
															"nativeSrc": "6351:72:12",
															"nodeType": "YulExpressionStatement",
															"src": "6351:72:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value2",
																		"nativeSrc": "6477:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "6477:6:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "6490:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "6490:9:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6501:2:12",
																				"nodeType": "YulLiteral",
																				"src": "6501:2:12",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6486:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "6486:3:12"
																		},
																		"nativeSrc": "6486:18:12",
																		"nodeType": "YulFunctionCall",
																		"src": "6486:18:12"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "6433:43:12",
																	"nodeType": "YulIdentifier",
																	"src": "6433:43:12"
																},
																"nativeSrc": "6433:72:12",
																"nodeType": "YulFunctionCall",
																"src": "6433:72:12"
															},
															"nativeSrc": "6433:72:12",
															"nodeType": "YulExpressionStatement",
															"src": "6433:72:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value3",
																		"nativeSrc": "6559:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "6559:6:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "6572:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "6572:9:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6583:2:12",
																				"nodeType": "YulLiteral",
																				"src": "6583:2:12",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6568:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "6568:3:12"
																		},
																		"nativeSrc": "6568:18:12",
																		"nodeType": "YulFunctionCall",
																		"src": "6568:18:12"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "6515:43:12",
																	"nodeType": "YulIdentifier",
																	"src": "6515:43:12"
																},
																"nativeSrc": "6515:72:12",
																"nodeType": "YulFunctionCall",
																"src": "6515:72:12"
															},
															"nativeSrc": "6515:72:12",
															"nodeType": "YulExpressionStatement",
															"src": "6515:72:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value4",
																		"nativeSrc": "6641:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "6641:6:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "6654:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "6654:9:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6665:3:12",
																				"nodeType": "YulLiteral",
																				"src": "6665:3:12",
																				"type": "",
																				"value": "128"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6650:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "6650:3:12"
																		},
																		"nativeSrc": "6650:19:12",
																		"nodeType": "YulFunctionCall",
																		"src": "6650:19:12"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "6597:43:12",
																	"nodeType": "YulIdentifier",
																	"src": "6597:43:12"
																},
																"nativeSrc": "6597:73:12",
																"nodeType": "YulFunctionCall",
																"src": "6597:73:12"
															},
															"nativeSrc": "6597:73:12",
															"nodeType": "YulExpressionStatement",
															"src": "6597:73:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value5",
																		"nativeSrc": "6722:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "6722:6:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "6735:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "6735:9:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6746:3:12",
																				"nodeType": "YulLiteral",
																				"src": "6746:3:12",
																				"type": "",
																				"value": "160"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6731:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "6731:3:12"
																		},
																		"nativeSrc": "6731:19:12",
																		"nodeType": "YulFunctionCall",
																		"src": "6731:19:12"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint48_to_t_uint48_fromStack",
																	"nativeSrc": "6680:41:12",
																	"nodeType": "YulIdentifier",
																	"src": "6680:41:12"
																},
																"nativeSrc": "6680:71:12",
																"nodeType": "YulFunctionCall",
																"src": "6680:71:12"
															},
															"nativeSrc": "6680:71:12",
															"nodeType": "YulExpressionStatement",
															"src": "6680:71:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "6772:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "6772:9:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6783:3:12",
																				"nodeType": "YulLiteral",
																				"src": "6783:3:12",
																				"type": "",
																				"value": "192"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6768:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "6768:3:12"
																		},
																		"nativeSrc": "6768:19:12",
																		"nodeType": "YulFunctionCall",
																		"src": "6768:19:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "6793:4:12",
																				"nodeType": "YulIdentifier",
																				"src": "6793:4:12"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "6799:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "6799:9:12"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "6789:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "6789:3:12"
																		},
																		"nativeSrc": "6789:20:12",
																		"nodeType": "YulFunctionCall",
																		"src": "6789:20:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6761:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "6761:6:12"
																},
																"nativeSrc": "6761:49:12",
																"nodeType": "YulFunctionCall",
																"src": "6761:49:12"
															},
															"nativeSrc": "6761:49:12",
															"nodeType": "YulExpressionStatement",
															"src": "6761:49:12"
														},
														{
															"nativeSrc": "6819:86:12",
															"nodeType": "YulAssignment",
															"src": "6819:86:12",
															"value": {
																"arguments": [
																	{
																		"name": "value6",
																		"nativeSrc": "6891:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "6891:6:12"
																	},
																	{
																		"name": "tail",
																		"nativeSrc": "6900:4:12",
																		"nodeType": "YulIdentifier",
																		"src": "6900:4:12"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "6827:63:12",
																	"nodeType": "YulIdentifier",
																	"src": "6827:63:12"
																},
																"nativeSrc": "6827:78:12",
																"nodeType": "YulFunctionCall",
																"src": "6827:78:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "6819:4:12",
																	"nodeType": "YulIdentifier",
																	"src": "6819:4:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value7",
																		"nativeSrc": "6959:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "6959:6:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "6972:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "6972:9:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6983:3:12",
																				"nodeType": "YulLiteral",
																				"src": "6983:3:12",
																				"type": "",
																				"value": "224"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6968:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "6968:3:12"
																		},
																		"nativeSrc": "6968:19:12",
																		"nodeType": "YulFunctionCall",
																		"src": "6968:19:12"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "6915:43:12",
																	"nodeType": "YulIdentifier",
																	"src": "6915:43:12"
																},
																"nativeSrc": "6915:73:12",
																"nodeType": "YulFunctionCall",
																"src": "6915:73:12"
															},
															"nativeSrc": "6915:73:12",
															"nodeType": "YulExpressionStatement",
															"src": "6915:73:12"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_address_t_uint256_t_uint256_t_uint256_t_uint48_t_string_memory_ptr_t_address__to_t_address_t_address_t_uint256_t_uint256_t_uint256_t_uint48_t_string_memory_ptr_t_address__fromStack_reversed",
												"nativeSrc": "5911:1084:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "6139:9:12",
														"nodeType": "YulTypedName",
														"src": "6139:9:12",
														"type": ""
													},
													{
														"name": "value7",
														"nativeSrc": "6151:6:12",
														"nodeType": "YulTypedName",
														"src": "6151:6:12",
														"type": ""
													},
													{
														"name": "value6",
														"nativeSrc": "6159:6:12",
														"nodeType": "YulTypedName",
														"src": "6159:6:12",
														"type": ""
													},
													{
														"name": "value5",
														"nativeSrc": "6167:6:12",
														"nodeType": "YulTypedName",
														"src": "6167:6:12",
														"type": ""
													},
													{
														"name": "value4",
														"nativeSrc": "6175:6:12",
														"nodeType": "YulTypedName",
														"src": "6175:6:12",
														"type": ""
													},
													{
														"name": "value3",
														"nativeSrc": "6183:6:12",
														"nodeType": "YulTypedName",
														"src": "6183:6:12",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "6191:6:12",
														"nodeType": "YulTypedName",
														"src": "6191:6:12",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "6199:6:12",
														"nodeType": "YulTypedName",
														"src": "6199:6:12",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "6207:6:12",
														"nodeType": "YulTypedName",
														"src": "6207:6:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "6218:4:12",
														"nodeType": "YulTypedName",
														"src": "6218:4:12",
														"type": ""
													}
												],
												"src": "5911:1084:12"
											},
											{
												"body": {
													"nativeSrc": "7067:263:12",
													"nodeType": "YulBlock",
													"src": "7067:263:12",
													"statements": [
														{
															"body": {
																"nativeSrc": "7113:83:12",
																"nodeType": "YulBlock",
																"src": "7113:83:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "7115:77:12",
																				"nodeType": "YulIdentifier",
																				"src": "7115:77:12"
																			},
																			"nativeSrc": "7115:79:12",
																			"nodeType": "YulFunctionCall",
																			"src": "7115:79:12"
																		},
																		"nativeSrc": "7115:79:12",
																		"nodeType": "YulExpressionStatement",
																		"src": "7115:79:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "7088:7:12",
																				"nodeType": "YulIdentifier",
																				"src": "7088:7:12"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "7097:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "7097:9:12"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "7084:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "7084:3:12"
																		},
																		"nativeSrc": "7084:23:12",
																		"nodeType": "YulFunctionCall",
																		"src": "7084:23:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7109:2:12",
																		"nodeType": "YulLiteral",
																		"src": "7109:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "7080:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "7080:3:12"
																},
																"nativeSrc": "7080:32:12",
																"nodeType": "YulFunctionCall",
																"src": "7080:32:12"
															},
															"nativeSrc": "7077:119:12",
															"nodeType": "YulIf",
															"src": "7077:119:12"
														},
														{
															"nativeSrc": "7206:117:12",
															"nodeType": "YulBlock",
															"src": "7206:117:12",
															"statements": [
																{
																	"nativeSrc": "7221:15:12",
																	"nodeType": "YulVariableDeclaration",
																	"src": "7221:15:12",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "7235:1:12",
																		"nodeType": "YulLiteral",
																		"src": "7235:1:12",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "7225:6:12",
																			"nodeType": "YulTypedName",
																			"src": "7225:6:12",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "7250:63:12",
																	"nodeType": "YulAssignment",
																	"src": "7250:63:12",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "7285:9:12",
																						"nodeType": "YulIdentifier",
																						"src": "7285:9:12"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "7296:6:12",
																						"nodeType": "YulIdentifier",
																						"src": "7296:6:12"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "7281:3:12",
																					"nodeType": "YulIdentifier",
																					"src": "7281:3:12"
																				},
																				"nativeSrc": "7281:22:12",
																				"nodeType": "YulFunctionCall",
																				"src": "7281:22:12"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "7305:7:12",
																				"nodeType": "YulIdentifier",
																				"src": "7305:7:12"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "7260:20:12",
																			"nodeType": "YulIdentifier",
																			"src": "7260:20:12"
																		},
																		"nativeSrc": "7260:53:12",
																		"nodeType": "YulFunctionCall",
																		"src": "7260:53:12"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "7250:6:12",
																			"nodeType": "YulIdentifier",
																			"src": "7250:6:12"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nativeSrc": "7001:329:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "7037:9:12",
														"nodeType": "YulTypedName",
														"src": "7037:9:12",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "7048:7:12",
														"nodeType": "YulTypedName",
														"src": "7048:7:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "7060:6:12",
														"nodeType": "YulTypedName",
														"src": "7060:6:12",
														"type": ""
													}
												],
												"src": "7001:329:12"
											},
											{
												"body": {
													"nativeSrc": "7389:32:12",
													"nodeType": "YulBlock",
													"src": "7389:32:12",
													"statements": [
														{
															"nativeSrc": "7399:16:12",
															"nodeType": "YulAssignment",
															"src": "7399:16:12",
															"value": {
																"name": "value",
																"nativeSrc": "7410:5:12",
																"nodeType": "YulIdentifier",
																"src": "7410:5:12"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "7399:7:12",
																	"nodeType": "YulIdentifier",
																	"src": "7399:7:12"
																}
															]
														}
													]
												},
												"name": "cleanup_t_rational_1_by_1",
												"nativeSrc": "7336:85:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "7371:5:12",
														"nodeType": "YulTypedName",
														"src": "7371:5:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "7381:7:12",
														"nodeType": "YulTypedName",
														"src": "7381:7:12",
														"type": ""
													}
												],
												"src": "7336:85:12"
											},
											{
												"body": {
													"nativeSrc": "7471:57:12",
													"nodeType": "YulBlock",
													"src": "7471:57:12",
													"statements": [
														{
															"nativeSrc": "7481:41:12",
															"nodeType": "YulAssignment",
															"src": "7481:41:12",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "7496:5:12",
																		"nodeType": "YulIdentifier",
																		"src": "7496:5:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7503:18:12",
																		"nodeType": "YulLiteral",
																		"src": "7503:18:12",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "7492:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "7492:3:12"
																},
																"nativeSrc": "7492:30:12",
																"nodeType": "YulFunctionCall",
																"src": "7492:30:12"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "7481:7:12",
																	"nodeType": "YulIdentifier",
																	"src": "7481:7:12"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint64",
												"nativeSrc": "7427:101:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "7453:5:12",
														"nodeType": "YulTypedName",
														"src": "7453:5:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "7463:7:12",
														"nodeType": "YulTypedName",
														"src": "7463:7:12",
														"type": ""
													}
												],
												"src": "7427:101:12"
											},
											{
												"body": {
													"nativeSrc": "7566:28:12",
													"nodeType": "YulBlock",
													"src": "7566:28:12",
													"statements": [
														{
															"nativeSrc": "7576:12:12",
															"nodeType": "YulAssignment",
															"src": "7576:12:12",
															"value": {
																"name": "value",
																"nativeSrc": "7583:5:12",
																"nodeType": "YulIdentifier",
																"src": "7583:5:12"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nativeSrc": "7576:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "7576:3:12"
																}
															]
														}
													]
												},
												"name": "identity",
												"nativeSrc": "7534:60:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "7552:5:12",
														"nodeType": "YulTypedName",
														"src": "7552:5:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "7562:3:12",
														"nodeType": "YulTypedName",
														"src": "7562:3:12",
														"type": ""
													}
												],
												"src": "7534:60:12"
											},
											{
												"body": {
													"nativeSrc": "7667:89:12",
													"nodeType": "YulBlock",
													"src": "7667:89:12",
													"statements": [
														{
															"nativeSrc": "7677:73:12",
															"nodeType": "YulAssignment",
															"src": "7677:73:12",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "7742:5:12",
																						"nodeType": "YulIdentifier",
																						"src": "7742:5:12"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_rational_1_by_1",
																					"nativeSrc": "7716:25:12",
																					"nodeType": "YulIdentifier",
																					"src": "7716:25:12"
																				},
																				"nativeSrc": "7716:32:12",
																				"nodeType": "YulFunctionCall",
																				"src": "7716:32:12"
																			}
																		],
																		"functionName": {
																			"name": "identity",
																			"nativeSrc": "7707:8:12",
																			"nodeType": "YulIdentifier",
																			"src": "7707:8:12"
																		},
																		"nativeSrc": "7707:42:12",
																		"nodeType": "YulFunctionCall",
																		"src": "7707:42:12"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint64",
																	"nativeSrc": "7690:16:12",
																	"nodeType": "YulIdentifier",
																	"src": "7690:16:12"
																},
																"nativeSrc": "7690:60:12",
																"nodeType": "YulFunctionCall",
																"src": "7690:60:12"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nativeSrc": "7677:9:12",
																	"nodeType": "YulIdentifier",
																	"src": "7677:9:12"
																}
															]
														}
													]
												},
												"name": "convert_t_rational_1_by_1_to_t_uint64",
												"nativeSrc": "7600:156:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "7647:5:12",
														"nodeType": "YulTypedName",
														"src": "7647:5:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nativeSrc": "7657:9:12",
														"nodeType": "YulTypedName",
														"src": "7657:9:12",
														"type": ""
													}
												],
												"src": "7600:156:12"
											},
											{
												"body": {
													"nativeSrc": "7834:73:12",
													"nodeType": "YulBlock",
													"src": "7834:73:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "7851:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "7851:3:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "7894:5:12",
																				"nodeType": "YulIdentifier",
																				"src": "7894:5:12"
																			}
																		],
																		"functionName": {
																			"name": "convert_t_rational_1_by_1_to_t_uint64",
																			"nativeSrc": "7856:37:12",
																			"nodeType": "YulIdentifier",
																			"src": "7856:37:12"
																		},
																		"nativeSrc": "7856:44:12",
																		"nodeType": "YulFunctionCall",
																		"src": "7856:44:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7844:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "7844:6:12"
																},
																"nativeSrc": "7844:57:12",
																"nodeType": "YulFunctionCall",
																"src": "7844:57:12"
															},
															"nativeSrc": "7844:57:12",
															"nodeType": "YulExpressionStatement",
															"src": "7844:57:12"
														}
													]
												},
												"name": "abi_encode_t_rational_1_by_1_to_t_uint64_fromStack",
												"nativeSrc": "7762:145:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "7822:5:12",
														"nodeType": "YulTypedName",
														"src": "7822:5:12",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "7829:3:12",
														"nodeType": "YulTypedName",
														"src": "7829:3:12",
														"type": ""
													}
												],
												"src": "7762:145:12"
											},
											{
												"body": {
													"nativeSrc": "8018:131:12",
													"nodeType": "YulBlock",
													"src": "8018:131:12",
													"statements": [
														{
															"nativeSrc": "8028:26:12",
															"nodeType": "YulAssignment",
															"src": "8028:26:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "8040:9:12",
																		"nodeType": "YulIdentifier",
																		"src": "8040:9:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8051:2:12",
																		"nodeType": "YulLiteral",
																		"src": "8051:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "8036:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "8036:3:12"
																},
																"nativeSrc": "8036:18:12",
																"nodeType": "YulFunctionCall",
																"src": "8036:18:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "8028:4:12",
																	"nodeType": "YulIdentifier",
																	"src": "8028:4:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "8115:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "8115:6:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "8128:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "8128:9:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8139:1:12",
																				"nodeType": "YulLiteral",
																				"src": "8139:1:12",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "8124:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "8124:3:12"
																		},
																		"nativeSrc": "8124:17:12",
																		"nodeType": "YulFunctionCall",
																		"src": "8124:17:12"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_rational_1_by_1_to_t_uint64_fromStack",
																	"nativeSrc": "8064:50:12",
																	"nodeType": "YulIdentifier",
																	"src": "8064:50:12"
																},
																"nativeSrc": "8064:78:12",
																"nodeType": "YulFunctionCall",
																"src": "8064:78:12"
															},
															"nativeSrc": "8064:78:12",
															"nodeType": "YulExpressionStatement",
															"src": "8064:78:12"
														}
													]
												},
												"name": "abi_encode_tuple_t_rational_1_by_1__to_t_uint64__fromStack_reversed",
												"nativeSrc": "7913:236:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "7990:9:12",
														"nodeType": "YulTypedName",
														"src": "7990:9:12",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "8002:6:12",
														"nodeType": "YulTypedName",
														"src": "8002:6:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "8013:4:12",
														"nodeType": "YulTypedName",
														"src": "8013:4:12",
														"type": ""
													}
												],
												"src": "7913:236:12"
											},
											{
												"body": {
													"nativeSrc": "8261:59:12",
													"nodeType": "YulBlock",
													"src": "8261:59:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "8283:6:12",
																				"nodeType": "YulIdentifier",
																				"src": "8283:6:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8291:1:12",
																				"nodeType": "YulLiteral",
																				"src": "8291:1:12",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "8279:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "8279:3:12"
																		},
																		"nativeSrc": "8279:14:12",
																		"nodeType": "YulFunctionCall",
																		"src": "8279:14:12"
																	},
																	{
																		"hexValue": "496e76616c69642061646472657373",
																		"kind": "string",
																		"nativeSrc": "8295:17:12",
																		"nodeType": "YulLiteral",
																		"src": "8295:17:12",
																		"type": "",
																		"value": "Invalid address"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8272:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "8272:6:12"
																},
																"nativeSrc": "8272:41:12",
																"nodeType": "YulFunctionCall",
																"src": "8272:41:12"
															},
															"nativeSrc": "8272:41:12",
															"nodeType": "YulExpressionStatement",
															"src": "8272:41:12"
														}
													]
												},
												"name": "store_literal_in_memory_1462473b7a4b33d32b109b815fd2324d00c9e5839b707ecf16d0ab5744f99226",
												"nativeSrc": "8155:165:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "8253:6:12",
														"nodeType": "YulTypedName",
														"src": "8253:6:12",
														"type": ""
													}
												],
												"src": "8155:165:12"
											},
											{
												"body": {
													"nativeSrc": "8472:220:12",
													"nodeType": "YulBlock",
													"src": "8472:220:12",
													"statements": [
														{
															"nativeSrc": "8482:74:12",
															"nodeType": "YulAssignment",
															"src": "8482:74:12",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "8548:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "8548:3:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8553:2:12",
																		"nodeType": "YulLiteral",
																		"src": "8553:2:12",
																		"type": "",
																		"value": "15"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "8489:58:12",
																	"nodeType": "YulIdentifier",
																	"src": "8489:58:12"
																},
																"nativeSrc": "8489:67:12",
																"nodeType": "YulFunctionCall",
																"src": "8489:67:12"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "8482:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "8482:3:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "8654:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "8654:3:12"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_1462473b7a4b33d32b109b815fd2324d00c9e5839b707ecf16d0ab5744f99226",
																	"nativeSrc": "8565:88:12",
																	"nodeType": "YulIdentifier",
																	"src": "8565:88:12"
																},
																"nativeSrc": "8565:93:12",
																"nodeType": "YulFunctionCall",
																"src": "8565:93:12"
															},
															"nativeSrc": "8565:93:12",
															"nodeType": "YulExpressionStatement",
															"src": "8565:93:12"
														},
														{
															"nativeSrc": "8667:19:12",
															"nodeType": "YulAssignment",
															"src": "8667:19:12",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "8678:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "8678:3:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8683:2:12",
																		"nodeType": "YulLiteral",
																		"src": "8683:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "8674:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "8674:3:12"
																},
																"nativeSrc": "8674:12:12",
																"nodeType": "YulFunctionCall",
																"src": "8674:12:12"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "8667:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "8667:3:12"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_1462473b7a4b33d32b109b815fd2324d00c9e5839b707ecf16d0ab5744f99226_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "8326:366:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "8460:3:12",
														"nodeType": "YulTypedName",
														"src": "8460:3:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "8468:3:12",
														"nodeType": "YulTypedName",
														"src": "8468:3:12",
														"type": ""
													}
												],
												"src": "8326:366:12"
											},
											{
												"body": {
													"nativeSrc": "8869:248:12",
													"nodeType": "YulBlock",
													"src": "8869:248:12",
													"statements": [
														{
															"nativeSrc": "8879:26:12",
															"nodeType": "YulAssignment",
															"src": "8879:26:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "8891:9:12",
																		"nodeType": "YulIdentifier",
																		"src": "8891:9:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8902:2:12",
																		"nodeType": "YulLiteral",
																		"src": "8902:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "8887:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "8887:3:12"
																},
																"nativeSrc": "8887:18:12",
																"nodeType": "YulFunctionCall",
																"src": "8887:18:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "8879:4:12",
																	"nodeType": "YulIdentifier",
																	"src": "8879:4:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "8926:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "8926:9:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8937:1:12",
																				"nodeType": "YulLiteral",
																				"src": "8937:1:12",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "8922:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "8922:3:12"
																		},
																		"nativeSrc": "8922:17:12",
																		"nodeType": "YulFunctionCall",
																		"src": "8922:17:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "8945:4:12",
																				"nodeType": "YulIdentifier",
																				"src": "8945:4:12"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "8951:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "8951:9:12"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "8941:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "8941:3:12"
																		},
																		"nativeSrc": "8941:20:12",
																		"nodeType": "YulFunctionCall",
																		"src": "8941:20:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8915:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "8915:6:12"
																},
																"nativeSrc": "8915:47:12",
																"nodeType": "YulFunctionCall",
																"src": "8915:47:12"
															},
															"nativeSrc": "8915:47:12",
															"nodeType": "YulExpressionStatement",
															"src": "8915:47:12"
														},
														{
															"nativeSrc": "8971:139:12",
															"nodeType": "YulAssignment",
															"src": "8971:139:12",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "9105:4:12",
																		"nodeType": "YulIdentifier",
																		"src": "9105:4:12"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_1462473b7a4b33d32b109b815fd2324d00c9e5839b707ecf16d0ab5744f99226_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "8979:124:12",
																	"nodeType": "YulIdentifier",
																	"src": "8979:124:12"
																},
																"nativeSrc": "8979:131:12",
																"nodeType": "YulFunctionCall",
																"src": "8979:131:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "8971:4:12",
																	"nodeType": "YulIdentifier",
																	"src": "8971:4:12"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_1462473b7a4b33d32b109b815fd2324d00c9e5839b707ecf16d0ab5744f99226__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "8698:419:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "8849:9:12",
														"nodeType": "YulTypedName",
														"src": "8849:9:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "8864:4:12",
														"nodeType": "YulTypedName",
														"src": "8864:4:12",
														"type": ""
													}
												],
												"src": "8698:419:12"
											},
											{
												"body": {
													"nativeSrc": "9151:152:12",
													"nodeType": "YulBlock",
													"src": "9151:152:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "9168:1:12",
																		"nodeType": "YulLiteral",
																		"src": "9168:1:12",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9171:77:12",
																		"nodeType": "YulLiteral",
																		"src": "9171:77:12",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9161:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "9161:6:12"
																},
																"nativeSrc": "9161:88:12",
																"nodeType": "YulFunctionCall",
																"src": "9161:88:12"
															},
															"nativeSrc": "9161:88:12",
															"nodeType": "YulExpressionStatement",
															"src": "9161:88:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "9265:1:12",
																		"nodeType": "YulLiteral",
																		"src": "9265:1:12",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9268:4:12",
																		"nodeType": "YulLiteral",
																		"src": "9268:4:12",
																		"type": "",
																		"value": "0x41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9258:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "9258:6:12"
																},
																"nativeSrc": "9258:15:12",
																"nodeType": "YulFunctionCall",
																"src": "9258:15:12"
															},
															"nativeSrc": "9258:15:12",
															"nodeType": "YulExpressionStatement",
															"src": "9258:15:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "9289:1:12",
																		"nodeType": "YulLiteral",
																		"src": "9289:1:12",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9292:4:12",
																		"nodeType": "YulLiteral",
																		"src": "9292:4:12",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "9282:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "9282:6:12"
																},
																"nativeSrc": "9282:15:12",
																"nodeType": "YulFunctionCall",
																"src": "9282:15:12"
															},
															"nativeSrc": "9282:15:12",
															"nodeType": "YulExpressionStatement",
															"src": "9282:15:12"
														}
													]
												},
												"name": "panic_error_0x41",
												"nativeSrc": "9123:180:12",
												"nodeType": "YulFunctionDefinition",
												"src": "9123:180:12"
											},
											{
												"body": {
													"nativeSrc": "9337:152:12",
													"nodeType": "YulBlock",
													"src": "9337:152:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "9354:1:12",
																		"nodeType": "YulLiteral",
																		"src": "9354:1:12",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9357:77:12",
																		"nodeType": "YulLiteral",
																		"src": "9357:77:12",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9347:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "9347:6:12"
																},
																"nativeSrc": "9347:88:12",
																"nodeType": "YulFunctionCall",
																"src": "9347:88:12"
															},
															"nativeSrc": "9347:88:12",
															"nodeType": "YulExpressionStatement",
															"src": "9347:88:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "9451:1:12",
																		"nodeType": "YulLiteral",
																		"src": "9451:1:12",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9454:4:12",
																		"nodeType": "YulLiteral",
																		"src": "9454:4:12",
																		"type": "",
																		"value": "0x22"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9444:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "9444:6:12"
																},
																"nativeSrc": "9444:15:12",
																"nodeType": "YulFunctionCall",
																"src": "9444:15:12"
															},
															"nativeSrc": "9444:15:12",
															"nodeType": "YulExpressionStatement",
															"src": "9444:15:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "9475:1:12",
																		"nodeType": "YulLiteral",
																		"src": "9475:1:12",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9478:4:12",
																		"nodeType": "YulLiteral",
																		"src": "9478:4:12",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "9468:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "9468:6:12"
																},
																"nativeSrc": "9468:15:12",
																"nodeType": "YulFunctionCall",
																"src": "9468:15:12"
															},
															"nativeSrc": "9468:15:12",
															"nodeType": "YulExpressionStatement",
															"src": "9468:15:12"
														}
													]
												},
												"name": "panic_error_0x22",
												"nativeSrc": "9309:180:12",
												"nodeType": "YulFunctionDefinition",
												"src": "9309:180:12"
											},
											{
												"body": {
													"nativeSrc": "9546:269:12",
													"nodeType": "YulBlock",
													"src": "9546:269:12",
													"statements": [
														{
															"nativeSrc": "9556:22:12",
															"nodeType": "YulAssignment",
															"src": "9556:22:12",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "9570:4:12",
																		"nodeType": "YulIdentifier",
																		"src": "9570:4:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9576:1:12",
																		"nodeType": "YulLiteral",
																		"src": "9576:1:12",
																		"type": "",
																		"value": "2"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nativeSrc": "9566:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "9566:3:12"
																},
																"nativeSrc": "9566:12:12",
																"nodeType": "YulFunctionCall",
																"src": "9566:12:12"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "9556:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "9556:6:12"
																}
															]
														},
														{
															"nativeSrc": "9587:38:12",
															"nodeType": "YulVariableDeclaration",
															"src": "9587:38:12",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "9617:4:12",
																		"nodeType": "YulIdentifier",
																		"src": "9617:4:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9623:1:12",
																		"nodeType": "YulLiteral",
																		"src": "9623:1:12",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "9613:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "9613:3:12"
																},
																"nativeSrc": "9613:12:12",
																"nodeType": "YulFunctionCall",
																"src": "9613:12:12"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nativeSrc": "9591:18:12",
																	"nodeType": "YulTypedName",
																	"src": "9591:18:12",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "9664:51:12",
																"nodeType": "YulBlock",
																"src": "9664:51:12",
																"statements": [
																	{
																		"nativeSrc": "9678:27:12",
																		"nodeType": "YulAssignment",
																		"src": "9678:27:12",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nativeSrc": "9692:6:12",
																					"nodeType": "YulIdentifier",
																					"src": "9692:6:12"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "9700:4:12",
																					"nodeType": "YulLiteral",
																					"src": "9700:4:12",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nativeSrc": "9688:3:12",
																				"nodeType": "YulIdentifier",
																				"src": "9688:3:12"
																			},
																			"nativeSrc": "9688:17:12",
																			"nodeType": "YulFunctionCall",
																			"src": "9688:17:12"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nativeSrc": "9678:6:12",
																				"nodeType": "YulIdentifier",
																				"src": "9678:6:12"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "9644:18:12",
																		"nodeType": "YulIdentifier",
																		"src": "9644:18:12"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "9637:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "9637:6:12"
																},
																"nativeSrc": "9637:26:12",
																"nodeType": "YulFunctionCall",
																"src": "9637:26:12"
															},
															"nativeSrc": "9634:81:12",
															"nodeType": "YulIf",
															"src": "9634:81:12"
														},
														{
															"body": {
																"nativeSrc": "9767:42:12",
																"nodeType": "YulBlock",
																"src": "9767:42:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x22",
																				"nativeSrc": "9781:16:12",
																				"nodeType": "YulIdentifier",
																				"src": "9781:16:12"
																			},
																			"nativeSrc": "9781:18:12",
																			"nodeType": "YulFunctionCall",
																			"src": "9781:18:12"
																		},
																		"nativeSrc": "9781:18:12",
																		"nodeType": "YulExpressionStatement",
																		"src": "9781:18:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "9731:18:12",
																		"nodeType": "YulIdentifier",
																		"src": "9731:18:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "9754:6:12",
																				"nodeType": "YulIdentifier",
																				"src": "9754:6:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9762:2:12",
																				"nodeType": "YulLiteral",
																				"src": "9762:2:12",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nativeSrc": "9751:2:12",
																			"nodeType": "YulIdentifier",
																			"src": "9751:2:12"
																		},
																		"nativeSrc": "9751:14:12",
																		"nodeType": "YulFunctionCall",
																		"src": "9751:14:12"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nativeSrc": "9728:2:12",
																	"nodeType": "YulIdentifier",
																	"src": "9728:2:12"
																},
																"nativeSrc": "9728:38:12",
																"nodeType": "YulFunctionCall",
																"src": "9728:38:12"
															},
															"nativeSrc": "9725:84:12",
															"nodeType": "YulIf",
															"src": "9725:84:12"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nativeSrc": "9495:320:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "9530:4:12",
														"nodeType": "YulTypedName",
														"src": "9530:4:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "9539:6:12",
														"nodeType": "YulTypedName",
														"src": "9539:6:12",
														"type": ""
													}
												],
												"src": "9495:320:12"
											},
											{
												"body": {
													"nativeSrc": "9875:87:12",
													"nodeType": "YulBlock",
													"src": "9875:87:12",
													"statements": [
														{
															"nativeSrc": "9885:11:12",
															"nodeType": "YulAssignment",
															"src": "9885:11:12",
															"value": {
																"name": "ptr",
																"nativeSrc": "9893:3:12",
																"nodeType": "YulIdentifier",
																"src": "9893:3:12"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nativeSrc": "9885:4:12",
																	"nodeType": "YulIdentifier",
																	"src": "9885:4:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "9913:1:12",
																		"nodeType": "YulLiteral",
																		"src": "9913:1:12",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"name": "ptr",
																		"nativeSrc": "9916:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "9916:3:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9906:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "9906:6:12"
																},
																"nativeSrc": "9906:14:12",
																"nodeType": "YulFunctionCall",
																"src": "9906:14:12"
															},
															"nativeSrc": "9906:14:12",
															"nodeType": "YulExpressionStatement",
															"src": "9906:14:12"
														},
														{
															"nativeSrc": "9929:26:12",
															"nodeType": "YulAssignment",
															"src": "9929:26:12",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "9947:1:12",
																		"nodeType": "YulLiteral",
																		"src": "9947:1:12",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9950:4:12",
																		"nodeType": "YulLiteral",
																		"src": "9950:4:12",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "keccak256",
																	"nativeSrc": "9937:9:12",
																	"nodeType": "YulIdentifier",
																	"src": "9937:9:12"
																},
																"nativeSrc": "9937:18:12",
																"nodeType": "YulFunctionCall",
																"src": "9937:18:12"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nativeSrc": "9929:4:12",
																	"nodeType": "YulIdentifier",
																	"src": "9929:4:12"
																}
															]
														}
													]
												},
												"name": "array_dataslot_t_string_storage",
												"nativeSrc": "9821:141:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "ptr",
														"nativeSrc": "9862:3:12",
														"nodeType": "YulTypedName",
														"src": "9862:3:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "data",
														"nativeSrc": "9870:4:12",
														"nodeType": "YulTypedName",
														"src": "9870:4:12",
														"type": ""
													}
												],
												"src": "9821:141:12"
											},
											{
												"body": {
													"nativeSrc": "10012:49:12",
													"nodeType": "YulBlock",
													"src": "10012:49:12",
													"statements": [
														{
															"nativeSrc": "10022:33:12",
															"nodeType": "YulAssignment",
															"src": "10022:33:12",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "10040:5:12",
																				"nodeType": "YulIdentifier",
																				"src": "10040:5:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "10047:2:12",
																				"nodeType": "YulLiteral",
																				"src": "10047:2:12",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "10036:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "10036:3:12"
																		},
																		"nativeSrc": "10036:14:12",
																		"nodeType": "YulFunctionCall",
																		"src": "10036:14:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10052:2:12",
																		"nodeType": "YulLiteral",
																		"src": "10052:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nativeSrc": "10032:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "10032:3:12"
																},
																"nativeSrc": "10032:23:12",
																"nodeType": "YulFunctionCall",
																"src": "10032:23:12"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "10022:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "10022:6:12"
																}
															]
														}
													]
												},
												"name": "divide_by_32_ceil",
												"nativeSrc": "9968:93:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "9995:5:12",
														"nodeType": "YulTypedName",
														"src": "9995:5:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "10005:6:12",
														"nodeType": "YulTypedName",
														"src": "10005:6:12",
														"type": ""
													}
												],
												"src": "9968:93:12"
											},
											{
												"body": {
													"nativeSrc": "10120:54:12",
													"nodeType": "YulBlock",
													"src": "10120:54:12",
													"statements": [
														{
															"nativeSrc": "10130:37:12",
															"nodeType": "YulAssignment",
															"src": "10130:37:12",
															"value": {
																"arguments": [
																	{
																		"name": "bits",
																		"nativeSrc": "10155:4:12",
																		"nodeType": "YulIdentifier",
																		"src": "10155:4:12"
																	},
																	{
																		"name": "value",
																		"nativeSrc": "10161:5:12",
																		"nodeType": "YulIdentifier",
																		"src": "10161:5:12"
																	}
																],
																"functionName": {
																	"name": "shl",
																	"nativeSrc": "10151:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "10151:3:12"
																},
																"nativeSrc": "10151:16:12",
																"nodeType": "YulFunctionCall",
																"src": "10151:16:12"
															},
															"variableNames": [
																{
																	"name": "newValue",
																	"nativeSrc": "10130:8:12",
																	"nodeType": "YulIdentifier",
																	"src": "10130:8:12"
																}
															]
														}
													]
												},
												"name": "shift_left_dynamic",
												"nativeSrc": "10067:107:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "bits",
														"nativeSrc": "10095:4:12",
														"nodeType": "YulTypedName",
														"src": "10095:4:12",
														"type": ""
													},
													{
														"name": "value",
														"nativeSrc": "10101:5:12",
														"nodeType": "YulTypedName",
														"src": "10101:5:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "newValue",
														"nativeSrc": "10111:8:12",
														"nodeType": "YulTypedName",
														"src": "10111:8:12",
														"type": ""
													}
												],
												"src": "10067:107:12"
											},
											{
												"body": {
													"nativeSrc": "10256:317:12",
													"nodeType": "YulBlock",
													"src": "10256:317:12",
													"statements": [
														{
															"nativeSrc": "10266:35:12",
															"nodeType": "YulVariableDeclaration",
															"src": "10266:35:12",
															"value": {
																"arguments": [
																	{
																		"name": "shiftBytes",
																		"nativeSrc": "10287:10:12",
																		"nodeType": "YulIdentifier",
																		"src": "10287:10:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10299:1:12",
																		"nodeType": "YulLiteral",
																		"src": "10299:1:12",
																		"type": "",
																		"value": "8"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nativeSrc": "10283:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "10283:3:12"
																},
																"nativeSrc": "10283:18:12",
																"nodeType": "YulFunctionCall",
																"src": "10283:18:12"
															},
															"variables": [
																{
																	"name": "shiftBits",
																	"nativeSrc": "10270:9:12",
																	"nodeType": "YulTypedName",
																	"src": "10270:9:12",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "10310:109:12",
															"nodeType": "YulVariableDeclaration",
															"src": "10310:109:12",
															"value": {
																"arguments": [
																	{
																		"name": "shiftBits",
																		"nativeSrc": "10341:9:12",
																		"nodeType": "YulIdentifier",
																		"src": "10341:9:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10352:66:12",
																		"nodeType": "YulLiteral",
																		"src": "10352:66:12",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "shift_left_dynamic",
																	"nativeSrc": "10322:18:12",
																	"nodeType": "YulIdentifier",
																	"src": "10322:18:12"
																},
																"nativeSrc": "10322:97:12",
																"nodeType": "YulFunctionCall",
																"src": "10322:97:12"
															},
															"variables": [
																{
																	"name": "mask",
																	"nativeSrc": "10314:4:12",
																	"nodeType": "YulTypedName",
																	"src": "10314:4:12",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "10428:51:12",
															"nodeType": "YulAssignment",
															"src": "10428:51:12",
															"value": {
																"arguments": [
																	{
																		"name": "shiftBits",
																		"nativeSrc": "10459:9:12",
																		"nodeType": "YulIdentifier",
																		"src": "10459:9:12"
																	},
																	{
																		"name": "toInsert",
																		"nativeSrc": "10470:8:12",
																		"nodeType": "YulIdentifier",
																		"src": "10470:8:12"
																	}
																],
																"functionName": {
																	"name": "shift_left_dynamic",
																	"nativeSrc": "10440:18:12",
																	"nodeType": "YulIdentifier",
																	"src": "10440:18:12"
																},
																"nativeSrc": "10440:39:12",
																"nodeType": "YulFunctionCall",
																"src": "10440:39:12"
															},
															"variableNames": [
																{
																	"name": "toInsert",
																	"nativeSrc": "10428:8:12",
																	"nodeType": "YulIdentifier",
																	"src": "10428:8:12"
																}
															]
														},
														{
															"nativeSrc": "10488:30:12",
															"nodeType": "YulAssignment",
															"src": "10488:30:12",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "10501:5:12",
																		"nodeType": "YulIdentifier",
																		"src": "10501:5:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "mask",
																				"nativeSrc": "10512:4:12",
																				"nodeType": "YulIdentifier",
																				"src": "10512:4:12"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nativeSrc": "10508:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "10508:3:12"
																		},
																		"nativeSrc": "10508:9:12",
																		"nodeType": "YulFunctionCall",
																		"src": "10508:9:12"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "10497:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "10497:3:12"
																},
																"nativeSrc": "10497:21:12",
																"nodeType": "YulFunctionCall",
																"src": "10497:21:12"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "10488:5:12",
																	"nodeType": "YulIdentifier",
																	"src": "10488:5:12"
																}
															]
														},
														{
															"nativeSrc": "10527:40:12",
															"nodeType": "YulAssignment",
															"src": "10527:40:12",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "10540:5:12",
																		"nodeType": "YulIdentifier",
																		"src": "10540:5:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "toInsert",
																				"nativeSrc": "10551:8:12",
																				"nodeType": "YulIdentifier",
																				"src": "10551:8:12"
																			},
																			{
																				"name": "mask",
																				"nativeSrc": "10561:4:12",
																				"nodeType": "YulIdentifier",
																				"src": "10561:4:12"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "10547:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "10547:3:12"
																		},
																		"nativeSrc": "10547:19:12",
																		"nodeType": "YulFunctionCall",
																		"src": "10547:19:12"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "10537:2:12",
																	"nodeType": "YulIdentifier",
																	"src": "10537:2:12"
																},
																"nativeSrc": "10537:30:12",
																"nodeType": "YulFunctionCall",
																"src": "10537:30:12"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "10527:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "10527:6:12"
																}
															]
														}
													]
												},
												"name": "update_byte_slice_dynamic32",
												"nativeSrc": "10180:393:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "10217:5:12",
														"nodeType": "YulTypedName",
														"src": "10217:5:12",
														"type": ""
													},
													{
														"name": "shiftBytes",
														"nativeSrc": "10224:10:12",
														"nodeType": "YulTypedName",
														"src": "10224:10:12",
														"type": ""
													},
													{
														"name": "toInsert",
														"nativeSrc": "10236:8:12",
														"nodeType": "YulTypedName",
														"src": "10236:8:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "10249:6:12",
														"nodeType": "YulTypedName",
														"src": "10249:6:12",
														"type": ""
													}
												],
												"src": "10180:393:12"
											},
											{
												"body": {
													"nativeSrc": "10639:82:12",
													"nodeType": "YulBlock",
													"src": "10639:82:12",
													"statements": [
														{
															"nativeSrc": "10649:66:12",
															"nodeType": "YulAssignment",
															"src": "10649:66:12",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "10707:5:12",
																						"nodeType": "YulIdentifier",
																						"src": "10707:5:12"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nativeSrc": "10689:17:12",
																					"nodeType": "YulIdentifier",
																					"src": "10689:17:12"
																				},
																				"nativeSrc": "10689:24:12",
																				"nodeType": "YulFunctionCall",
																				"src": "10689:24:12"
																			}
																		],
																		"functionName": {
																			"name": "identity",
																			"nativeSrc": "10680:8:12",
																			"nodeType": "YulIdentifier",
																			"src": "10680:8:12"
																		},
																		"nativeSrc": "10680:34:12",
																		"nodeType": "YulFunctionCall",
																		"src": "10680:34:12"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "10662:17:12",
																	"nodeType": "YulIdentifier",
																	"src": "10662:17:12"
																},
																"nativeSrc": "10662:53:12",
																"nodeType": "YulFunctionCall",
																"src": "10662:53:12"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nativeSrc": "10649:9:12",
																	"nodeType": "YulIdentifier",
																	"src": "10649:9:12"
																}
															]
														}
													]
												},
												"name": "convert_t_uint256_to_t_uint256",
												"nativeSrc": "10579:142:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "10619:5:12",
														"nodeType": "YulTypedName",
														"src": "10619:5:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nativeSrc": "10629:9:12",
														"nodeType": "YulTypedName",
														"src": "10629:9:12",
														"type": ""
													}
												],
												"src": "10579:142:12"
											},
											{
												"body": {
													"nativeSrc": "10774:28:12",
													"nodeType": "YulBlock",
													"src": "10774:28:12",
													"statements": [
														{
															"nativeSrc": "10784:12:12",
															"nodeType": "YulAssignment",
															"src": "10784:12:12",
															"value": {
																"name": "value",
																"nativeSrc": "10791:5:12",
																"nodeType": "YulIdentifier",
																"src": "10791:5:12"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nativeSrc": "10784:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "10784:3:12"
																}
															]
														}
													]
												},
												"name": "prepare_store_t_uint256",
												"nativeSrc": "10727:75:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "10760:5:12",
														"nodeType": "YulTypedName",
														"src": "10760:5:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "10770:3:12",
														"nodeType": "YulTypedName",
														"src": "10770:3:12",
														"type": ""
													}
												],
												"src": "10727:75:12"
											},
											{
												"body": {
													"nativeSrc": "10884:193:12",
													"nodeType": "YulBlock",
													"src": "10884:193:12",
													"statements": [
														{
															"nativeSrc": "10894:63:12",
															"nodeType": "YulVariableDeclaration",
															"src": "10894:63:12",
															"value": {
																"arguments": [
																	{
																		"name": "value_0",
																		"nativeSrc": "10949:7:12",
																		"nodeType": "YulIdentifier",
																		"src": "10949:7:12"
																	}
																],
																"functionName": {
																	"name": "convert_t_uint256_to_t_uint256",
																	"nativeSrc": "10918:30:12",
																	"nodeType": "YulIdentifier",
																	"src": "10918:30:12"
																},
																"nativeSrc": "10918:39:12",
																"nodeType": "YulFunctionCall",
																"src": "10918:39:12"
															},
															"variables": [
																{
																	"name": "convertedValue_0",
																	"nativeSrc": "10898:16:12",
																	"nodeType": "YulTypedName",
																	"src": "10898:16:12",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nativeSrc": "10973:4:12",
																		"nodeType": "YulIdentifier",
																		"src": "10973:4:12"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "slot",
																						"nativeSrc": "11013:4:12",
																						"nodeType": "YulIdentifier",
																						"src": "11013:4:12"
																					}
																				],
																				"functionName": {
																					"name": "sload",
																					"nativeSrc": "11007:5:12",
																					"nodeType": "YulIdentifier",
																					"src": "11007:5:12"
																				},
																				"nativeSrc": "11007:11:12",
																				"nodeType": "YulFunctionCall",
																				"src": "11007:11:12"
																			},
																			{
																				"name": "offset",
																				"nativeSrc": "11020:6:12",
																				"nodeType": "YulIdentifier",
																				"src": "11020:6:12"
																			},
																			{
																				"arguments": [
																					{
																						"name": "convertedValue_0",
																						"nativeSrc": "11052:16:12",
																						"nodeType": "YulIdentifier",
																						"src": "11052:16:12"
																					}
																				],
																				"functionName": {
																					"name": "prepare_store_t_uint256",
																					"nativeSrc": "11028:23:12",
																					"nodeType": "YulIdentifier",
																					"src": "11028:23:12"
																				},
																				"nativeSrc": "11028:41:12",
																				"nodeType": "YulFunctionCall",
																				"src": "11028:41:12"
																			}
																		],
																		"functionName": {
																			"name": "update_byte_slice_dynamic32",
																			"nativeSrc": "10979:27:12",
																			"nodeType": "YulIdentifier",
																			"src": "10979:27:12"
																		},
																		"nativeSrc": "10979:91:12",
																		"nodeType": "YulFunctionCall",
																		"src": "10979:91:12"
																	}
																],
																"functionName": {
																	"name": "sstore",
																	"nativeSrc": "10966:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "10966:6:12"
																},
																"nativeSrc": "10966:105:12",
																"nodeType": "YulFunctionCall",
																"src": "10966:105:12"
															},
															"nativeSrc": "10966:105:12",
															"nodeType": "YulExpressionStatement",
															"src": "10966:105:12"
														}
													]
												},
												"name": "update_storage_value_t_uint256_to_t_uint256",
												"nativeSrc": "10808:269:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nativeSrc": "10861:4:12",
														"nodeType": "YulTypedName",
														"src": "10861:4:12",
														"type": ""
													},
													{
														"name": "offset",
														"nativeSrc": "10867:6:12",
														"nodeType": "YulTypedName",
														"src": "10867:6:12",
														"type": ""
													},
													{
														"name": "value_0",
														"nativeSrc": "10875:7:12",
														"nodeType": "YulTypedName",
														"src": "10875:7:12",
														"type": ""
													}
												],
												"src": "10808:269:12"
											},
											{
												"body": {
													"nativeSrc": "11132:24:12",
													"nodeType": "YulBlock",
													"src": "11132:24:12",
													"statements": [
														{
															"nativeSrc": "11142:8:12",
															"nodeType": "YulAssignment",
															"src": "11142:8:12",
															"value": {
																"kind": "number",
																"nativeSrc": "11149:1:12",
																"nodeType": "YulLiteral",
																"src": "11149:1:12",
																"type": "",
																"value": "0"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nativeSrc": "11142:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "11142:3:12"
																}
															]
														}
													]
												},
												"name": "zero_value_for_split_t_uint256",
												"nativeSrc": "11083:73:12",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "11128:3:12",
														"nodeType": "YulTypedName",
														"src": "11128:3:12",
														"type": ""
													}
												],
												"src": "11083:73:12"
											},
											{
												"body": {
													"nativeSrc": "11215:136:12",
													"nodeType": "YulBlock",
													"src": "11215:136:12",
													"statements": [
														{
															"nativeSrc": "11225:46:12",
															"nodeType": "YulVariableDeclaration",
															"src": "11225:46:12",
															"value": {
																"arguments": [],
																"functionName": {
																	"name": "zero_value_for_split_t_uint256",
																	"nativeSrc": "11239:30:12",
																	"nodeType": "YulIdentifier",
																	"src": "11239:30:12"
																},
																"nativeSrc": "11239:32:12",
																"nodeType": "YulFunctionCall",
																"src": "11239:32:12"
															},
															"variables": [
																{
																	"name": "zero_0",
																	"nativeSrc": "11229:6:12",
																	"nodeType": "YulTypedName",
																	"src": "11229:6:12",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nativeSrc": "11324:4:12",
																		"nodeType": "YulIdentifier",
																		"src": "11324:4:12"
																	},
																	{
																		"name": "offset",
																		"nativeSrc": "11330:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "11330:6:12"
																	},
																	{
																		"name": "zero_0",
																		"nativeSrc": "11338:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "11338:6:12"
																	}
																],
																"functionName": {
																	"name": "update_storage_value_t_uint256_to_t_uint256",
																	"nativeSrc": "11280:43:12",
																	"nodeType": "YulIdentifier",
																	"src": "11280:43:12"
																},
																"nativeSrc": "11280:65:12",
																"nodeType": "YulFunctionCall",
																"src": "11280:65:12"
															},
															"nativeSrc": "11280:65:12",
															"nodeType": "YulExpressionStatement",
															"src": "11280:65:12"
														}
													]
												},
												"name": "storage_set_to_zero_t_uint256",
												"nativeSrc": "11162:189:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nativeSrc": "11201:4:12",
														"nodeType": "YulTypedName",
														"src": "11201:4:12",
														"type": ""
													},
													{
														"name": "offset",
														"nativeSrc": "11207:6:12",
														"nodeType": "YulTypedName",
														"src": "11207:6:12",
														"type": ""
													}
												],
												"src": "11162:189:12"
											},
											{
												"body": {
													"nativeSrc": "11407:136:12",
													"nodeType": "YulBlock",
													"src": "11407:136:12",
													"statements": [
														{
															"body": {
																"nativeSrc": "11474:63:12",
																"nodeType": "YulBlock",
																"src": "11474:63:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "start",
																					"nativeSrc": "11518:5:12",
																					"nodeType": "YulIdentifier",
																					"src": "11518:5:12"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "11525:1:12",
																					"nodeType": "YulLiteral",
																					"src": "11525:1:12",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "storage_set_to_zero_t_uint256",
																				"nativeSrc": "11488:29:12",
																				"nodeType": "YulIdentifier",
																				"src": "11488:29:12"
																			},
																			"nativeSrc": "11488:39:12",
																			"nodeType": "YulFunctionCall",
																			"src": "11488:39:12"
																		},
																		"nativeSrc": "11488:39:12",
																		"nodeType": "YulExpressionStatement",
																		"src": "11488:39:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "start",
																		"nativeSrc": "11427:5:12",
																		"nodeType": "YulIdentifier",
																		"src": "11427:5:12"
																	},
																	{
																		"name": "end",
																		"nativeSrc": "11434:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "11434:3:12"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nativeSrc": "11424:2:12",
																	"nodeType": "YulIdentifier",
																	"src": "11424:2:12"
																},
																"nativeSrc": "11424:14:12",
																"nodeType": "YulFunctionCall",
																"src": "11424:14:12"
															},
															"nativeSrc": "11417:120:12",
															"nodeType": "YulForLoop",
															"post": {
																"nativeSrc": "11439:26:12",
																"nodeType": "YulBlock",
																"src": "11439:26:12",
																"statements": [
																	{
																		"nativeSrc": "11441:22:12",
																		"nodeType": "YulAssignment",
																		"src": "11441:22:12",
																		"value": {
																			"arguments": [
																				{
																					"name": "start",
																					"nativeSrc": "11454:5:12",
																					"nodeType": "YulIdentifier",
																					"src": "11454:5:12"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "11461:1:12",
																					"nodeType": "YulLiteral",
																					"src": "11461:1:12",
																					"type": "",
																					"value": "1"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "11450:3:12",
																				"nodeType": "YulIdentifier",
																				"src": "11450:3:12"
																			},
																			"nativeSrc": "11450:13:12",
																			"nodeType": "YulFunctionCall",
																			"src": "11450:13:12"
																		},
																		"variableNames": [
																			{
																				"name": "start",
																				"nativeSrc": "11441:5:12",
																				"nodeType": "YulIdentifier",
																				"src": "11441:5:12"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nativeSrc": "11421:2:12",
																"nodeType": "YulBlock",
																"src": "11421:2:12",
																"statements": []
															},
															"src": "11417:120:12"
														}
													]
												},
												"name": "clear_storage_range_t_bytes1",
												"nativeSrc": "11357:186:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "start",
														"nativeSrc": "11395:5:12",
														"nodeType": "YulTypedName",
														"src": "11395:5:12",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "11402:3:12",
														"nodeType": "YulTypedName",
														"src": "11402:3:12",
														"type": ""
													}
												],
												"src": "11357:186:12"
											},
											{
												"body": {
													"nativeSrc": "11628:464:12",
													"nodeType": "YulBlock",
													"src": "11628:464:12",
													"statements": [
														{
															"body": {
																"nativeSrc": "11654:431:12",
																"nodeType": "YulBlock",
																"src": "11654:431:12",
																"statements": [
																	{
																		"nativeSrc": "11668:54:12",
																		"nodeType": "YulVariableDeclaration",
																		"src": "11668:54:12",
																		"value": {
																			"arguments": [
																				{
																					"name": "array",
																					"nativeSrc": "11716:5:12",
																					"nodeType": "YulIdentifier",
																					"src": "11716:5:12"
																				}
																			],
																			"functionName": {
																				"name": "array_dataslot_t_string_storage",
																				"nativeSrc": "11684:31:12",
																				"nodeType": "YulIdentifier",
																				"src": "11684:31:12"
																			},
																			"nativeSrc": "11684:38:12",
																			"nodeType": "YulFunctionCall",
																			"src": "11684:38:12"
																		},
																		"variables": [
																			{
																				"name": "dataArea",
																				"nativeSrc": "11672:8:12",
																				"nodeType": "YulTypedName",
																				"src": "11672:8:12",
																				"type": ""
																			}
																		]
																	},
																	{
																		"nativeSrc": "11735:63:12",
																		"nodeType": "YulVariableDeclaration",
																		"src": "11735:63:12",
																		"value": {
																			"arguments": [
																				{
																					"name": "dataArea",
																					"nativeSrc": "11758:8:12",
																					"nodeType": "YulIdentifier",
																					"src": "11758:8:12"
																				},
																				{
																					"arguments": [
																						{
																							"name": "startIndex",
																							"nativeSrc": "11786:10:12",
																							"nodeType": "YulIdentifier",
																							"src": "11786:10:12"
																						}
																					],
																					"functionName": {
																						"name": "divide_by_32_ceil",
																						"nativeSrc": "11768:17:12",
																						"nodeType": "YulIdentifier",
																						"src": "11768:17:12"
																					},
																					"nativeSrc": "11768:29:12",
																					"nodeType": "YulFunctionCall",
																					"src": "11768:29:12"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "11754:3:12",
																				"nodeType": "YulIdentifier",
																				"src": "11754:3:12"
																			},
																			"nativeSrc": "11754:44:12",
																			"nodeType": "YulFunctionCall",
																			"src": "11754:44:12"
																		},
																		"variables": [
																			{
																				"name": "deleteStart",
																				"nativeSrc": "11739:11:12",
																				"nodeType": "YulTypedName",
																				"src": "11739:11:12",
																				"type": ""
																			}
																		]
																	},
																	{
																		"body": {
																			"nativeSrc": "11955:27:12",
																			"nodeType": "YulBlock",
																			"src": "11955:27:12",
																			"statements": [
																				{
																					"nativeSrc": "11957:23:12",
																					"nodeType": "YulAssignment",
																					"src": "11957:23:12",
																					"value": {
																						"name": "dataArea",
																						"nativeSrc": "11972:8:12",
																						"nodeType": "YulIdentifier",
																						"src": "11972:8:12"
																					},
																					"variableNames": [
																						{
																							"name": "deleteStart",
																							"nativeSrc": "11957:11:12",
																							"nodeType": "YulIdentifier",
																							"src": "11957:11:12"
																						}
																					]
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "startIndex",
																					"nativeSrc": "11939:10:12",
																					"nodeType": "YulIdentifier",
																					"src": "11939:10:12"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "11951:2:12",
																					"nodeType": "YulLiteral",
																					"src": "11951:2:12",
																					"type": "",
																					"value": "32"
																				}
																			],
																			"functionName": {
																				"name": "lt",
																				"nativeSrc": "11936:2:12",
																				"nodeType": "YulIdentifier",
																				"src": "11936:2:12"
																			},
																			"nativeSrc": "11936:18:12",
																			"nodeType": "YulFunctionCall",
																			"src": "11936:18:12"
																		},
																		"nativeSrc": "11933:49:12",
																		"nodeType": "YulIf",
																		"src": "11933:49:12"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "deleteStart",
																					"nativeSrc": "12024:11:12",
																					"nodeType": "YulIdentifier",
																					"src": "12024:11:12"
																				},
																				{
																					"arguments": [
																						{
																							"name": "dataArea",
																							"nativeSrc": "12041:8:12",
																							"nodeType": "YulIdentifier",
																							"src": "12041:8:12"
																						},
																						{
																							"arguments": [
																								{
																									"name": "len",
																									"nativeSrc": "12069:3:12",
																									"nodeType": "YulIdentifier",
																									"src": "12069:3:12"
																								}
																							],
																							"functionName": {
																								"name": "divide_by_32_ceil",
																								"nativeSrc": "12051:17:12",
																								"nodeType": "YulIdentifier",
																								"src": "12051:17:12"
																							},
																							"nativeSrc": "12051:22:12",
																							"nodeType": "YulFunctionCall",
																							"src": "12051:22:12"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nativeSrc": "12037:3:12",
																						"nodeType": "YulIdentifier",
																						"src": "12037:3:12"
																					},
																					"nativeSrc": "12037:37:12",
																					"nodeType": "YulFunctionCall",
																					"src": "12037:37:12"
																				}
																			],
																			"functionName": {
																				"name": "clear_storage_range_t_bytes1",
																				"nativeSrc": "11995:28:12",
																				"nodeType": "YulIdentifier",
																				"src": "11995:28:12"
																			},
																			"nativeSrc": "11995:80:12",
																			"nodeType": "YulFunctionCall",
																			"src": "11995:80:12"
																		},
																		"nativeSrc": "11995:80:12",
																		"nodeType": "YulExpressionStatement",
																		"src": "11995:80:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "len",
																		"nativeSrc": "11645:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "11645:3:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11650:2:12",
																		"nodeType": "YulLiteral",
																		"src": "11650:2:12",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "11642:2:12",
																	"nodeType": "YulIdentifier",
																	"src": "11642:2:12"
																},
																"nativeSrc": "11642:11:12",
																"nodeType": "YulFunctionCall",
																"src": "11642:11:12"
															},
															"nativeSrc": "11639:446:12",
															"nodeType": "YulIf",
															"src": "11639:446:12"
														}
													]
												},
												"name": "clean_up_bytearray_end_slots_t_string_storage",
												"nativeSrc": "11549:543:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "array",
														"nativeSrc": "11604:5:12",
														"nodeType": "YulTypedName",
														"src": "11604:5:12",
														"type": ""
													},
													{
														"name": "len",
														"nativeSrc": "11611:3:12",
														"nodeType": "YulTypedName",
														"src": "11611:3:12",
														"type": ""
													},
													{
														"name": "startIndex",
														"nativeSrc": "11616:10:12",
														"nodeType": "YulTypedName",
														"src": "11616:10:12",
														"type": ""
													}
												],
												"src": "11549:543:12"
											},
											{
												"body": {
													"nativeSrc": "12161:54:12",
													"nodeType": "YulBlock",
													"src": "12161:54:12",
													"statements": [
														{
															"nativeSrc": "12171:37:12",
															"nodeType": "YulAssignment",
															"src": "12171:37:12",
															"value": {
																"arguments": [
																	{
																		"name": "bits",
																		"nativeSrc": "12196:4:12",
																		"nodeType": "YulIdentifier",
																		"src": "12196:4:12"
																	},
																	{
																		"name": "value",
																		"nativeSrc": "12202:5:12",
																		"nodeType": "YulIdentifier",
																		"src": "12202:5:12"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nativeSrc": "12192:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "12192:3:12"
																},
																"nativeSrc": "12192:16:12",
																"nodeType": "YulFunctionCall",
																"src": "12192:16:12"
															},
															"variableNames": [
																{
																	"name": "newValue",
																	"nativeSrc": "12171:8:12",
																	"nodeType": "YulIdentifier",
																	"src": "12171:8:12"
																}
															]
														}
													]
												},
												"name": "shift_right_unsigned_dynamic",
												"nativeSrc": "12098:117:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "bits",
														"nativeSrc": "12136:4:12",
														"nodeType": "YulTypedName",
														"src": "12136:4:12",
														"type": ""
													},
													{
														"name": "value",
														"nativeSrc": "12142:5:12",
														"nodeType": "YulTypedName",
														"src": "12142:5:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "newValue",
														"nativeSrc": "12152:8:12",
														"nodeType": "YulTypedName",
														"src": "12152:8:12",
														"type": ""
													}
												],
												"src": "12098:117:12"
											},
											{
												"body": {
													"nativeSrc": "12272:118:12",
													"nodeType": "YulBlock",
													"src": "12272:118:12",
													"statements": [
														{
															"nativeSrc": "12282:68:12",
															"nodeType": "YulVariableDeclaration",
															"src": "12282:68:12",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "12331:1:12",
																						"nodeType": "YulLiteral",
																						"src": "12331:1:12",
																						"type": "",
																						"value": "8"
																					},
																					{
																						"name": "bytes",
																						"nativeSrc": "12334:5:12",
																						"nodeType": "YulIdentifier",
																						"src": "12334:5:12"
																					}
																				],
																				"functionName": {
																					"name": "mul",
																					"nativeSrc": "12327:3:12",
																					"nodeType": "YulIdentifier",
																					"src": "12327:3:12"
																				},
																				"nativeSrc": "12327:13:12",
																				"nodeType": "YulFunctionCall",
																				"src": "12327:13:12"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "12346:1:12",
																						"nodeType": "YulLiteral",
																						"src": "12346:1:12",
																						"type": "",
																						"value": "0"
																					}
																				],
																				"functionName": {
																					"name": "not",
																					"nativeSrc": "12342:3:12",
																					"nodeType": "YulIdentifier",
																					"src": "12342:3:12"
																				},
																				"nativeSrc": "12342:6:12",
																				"nodeType": "YulFunctionCall",
																				"src": "12342:6:12"
																			}
																		],
																		"functionName": {
																			"name": "shift_right_unsigned_dynamic",
																			"nativeSrc": "12298:28:12",
																			"nodeType": "YulIdentifier",
																			"src": "12298:28:12"
																		},
																		"nativeSrc": "12298:51:12",
																		"nodeType": "YulFunctionCall",
																		"src": "12298:51:12"
																	}
																],
																"functionName": {
																	"name": "not",
																	"nativeSrc": "12294:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "12294:3:12"
																},
																"nativeSrc": "12294:56:12",
																"nodeType": "YulFunctionCall",
																"src": "12294:56:12"
															},
															"variables": [
																{
																	"name": "mask",
																	"nativeSrc": "12286:4:12",
																	"nodeType": "YulTypedName",
																	"src": "12286:4:12",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "12359:25:12",
															"nodeType": "YulAssignment",
															"src": "12359:25:12",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "12373:4:12",
																		"nodeType": "YulIdentifier",
																		"src": "12373:4:12"
																	},
																	{
																		"name": "mask",
																		"nativeSrc": "12379:4:12",
																		"nodeType": "YulIdentifier",
																		"src": "12379:4:12"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "12369:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "12369:3:12"
																},
																"nativeSrc": "12369:15:12",
																"nodeType": "YulFunctionCall",
																"src": "12369:15:12"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "12359:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "12359:6:12"
																}
															]
														}
													]
												},
												"name": "mask_bytes_dynamic",
												"nativeSrc": "12221:169:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "12249:4:12",
														"nodeType": "YulTypedName",
														"src": "12249:4:12",
														"type": ""
													},
													{
														"name": "bytes",
														"nativeSrc": "12255:5:12",
														"nodeType": "YulTypedName",
														"src": "12255:5:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "12265:6:12",
														"nodeType": "YulTypedName",
														"src": "12265:6:12",
														"type": ""
													}
												],
												"src": "12221:169:12"
											},
											{
												"body": {
													"nativeSrc": "12476:214:12",
													"nodeType": "YulBlock",
													"src": "12476:214:12",
													"statements": [
														{
															"nativeSrc": "12609:37:12",
															"nodeType": "YulAssignment",
															"src": "12609:37:12",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "12636:4:12",
																		"nodeType": "YulIdentifier",
																		"src": "12636:4:12"
																	},
																	{
																		"name": "len",
																		"nativeSrc": "12642:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "12642:3:12"
																	}
																],
																"functionName": {
																	"name": "mask_bytes_dynamic",
																	"nativeSrc": "12617:18:12",
																	"nodeType": "YulIdentifier",
																	"src": "12617:18:12"
																},
																"nativeSrc": "12617:29:12",
																"nodeType": "YulFunctionCall",
																"src": "12617:29:12"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nativeSrc": "12609:4:12",
																	"nodeType": "YulIdentifier",
																	"src": "12609:4:12"
																}
															]
														},
														{
															"nativeSrc": "12655:29:12",
															"nodeType": "YulAssignment",
															"src": "12655:29:12",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "12666:4:12",
																		"nodeType": "YulIdentifier",
																		"src": "12666:4:12"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "12676:1:12",
																				"nodeType": "YulLiteral",
																				"src": "12676:1:12",
																				"type": "",
																				"value": "2"
																			},
																			{
																				"name": "len",
																				"nativeSrc": "12679:3:12",
																				"nodeType": "YulIdentifier",
																				"src": "12679:3:12"
																			}
																		],
																		"functionName": {
																			"name": "mul",
																			"nativeSrc": "12672:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "12672:3:12"
																		},
																		"nativeSrc": "12672:11:12",
																		"nodeType": "YulFunctionCall",
																		"src": "12672:11:12"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "12663:2:12",
																	"nodeType": "YulIdentifier",
																	"src": "12663:2:12"
																},
																"nativeSrc": "12663:21:12",
																"nodeType": "YulFunctionCall",
																"src": "12663:21:12"
															},
															"variableNames": [
																{
																	"name": "used",
																	"nativeSrc": "12655:4:12",
																	"nodeType": "YulIdentifier",
																	"src": "12655:4:12"
																}
															]
														}
													]
												},
												"name": "extract_used_part_and_set_length_of_short_byte_array",
												"nativeSrc": "12395:295:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "12457:4:12",
														"nodeType": "YulTypedName",
														"src": "12457:4:12",
														"type": ""
													},
													{
														"name": "len",
														"nativeSrc": "12463:3:12",
														"nodeType": "YulTypedName",
														"src": "12463:3:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "used",
														"nativeSrc": "12471:4:12",
														"nodeType": "YulTypedName",
														"src": "12471:4:12",
														"type": ""
													}
												],
												"src": "12395:295:12"
											},
											{
												"body": {
													"nativeSrc": "12787:1303:12",
													"nodeType": "YulBlock",
													"src": "12787:1303:12",
													"statements": [
														{
															"nativeSrc": "12798:51:12",
															"nodeType": "YulVariableDeclaration",
															"src": "12798:51:12",
															"value": {
																"arguments": [
																	{
																		"name": "src",
																		"nativeSrc": "12845:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "12845:3:12"
																	}
																],
																"functionName": {
																	"name": "array_length_t_string_memory_ptr",
																	"nativeSrc": "12812:32:12",
																	"nodeType": "YulIdentifier",
																	"src": "12812:32:12"
																},
																"nativeSrc": "12812:37:12",
																"nodeType": "YulFunctionCall",
																"src": "12812:37:12"
															},
															"variables": [
																{
																	"name": "newLen",
																	"nativeSrc": "12802:6:12",
																	"nodeType": "YulTypedName",
																	"src": "12802:6:12",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "12934:22:12",
																"nodeType": "YulBlock",
																"src": "12934:22:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nativeSrc": "12936:16:12",
																				"nodeType": "YulIdentifier",
																				"src": "12936:16:12"
																			},
																			"nativeSrc": "12936:18:12",
																			"nodeType": "YulFunctionCall",
																			"src": "12936:18:12"
																		},
																		"nativeSrc": "12936:18:12",
																		"nodeType": "YulExpressionStatement",
																		"src": "12936:18:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "newLen",
																		"nativeSrc": "12906:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "12906:6:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "12914:18:12",
																		"nodeType": "YulLiteral",
																		"src": "12914:18:12",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "12903:2:12",
																	"nodeType": "YulIdentifier",
																	"src": "12903:2:12"
																},
																"nativeSrc": "12903:30:12",
																"nodeType": "YulFunctionCall",
																"src": "12903:30:12"
															},
															"nativeSrc": "12900:56:12",
															"nodeType": "YulIf",
															"src": "12900:56:12"
														},
														{
															"nativeSrc": "12966:52:12",
															"nodeType": "YulVariableDeclaration",
															"src": "12966:52:12",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "slot",
																				"nativeSrc": "13012:4:12",
																				"nodeType": "YulIdentifier",
																				"src": "13012:4:12"
																			}
																		],
																		"functionName": {
																			"name": "sload",
																			"nativeSrc": "13006:5:12",
																			"nodeType": "YulIdentifier",
																			"src": "13006:5:12"
																		},
																		"nativeSrc": "13006:11:12",
																		"nodeType": "YulFunctionCall",
																		"src": "13006:11:12"
																	}
																],
																"functionName": {
																	"name": "extract_byte_array_length",
																	"nativeSrc": "12980:25:12",
																	"nodeType": "YulIdentifier",
																	"src": "12980:25:12"
																},
																"nativeSrc": "12980:38:12",
																"nodeType": "YulFunctionCall",
																"src": "12980:38:12"
															},
															"variables": [
																{
																	"name": "oldLen",
																	"nativeSrc": "12970:6:12",
																	"nodeType": "YulTypedName",
																	"src": "12970:6:12",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nativeSrc": "13111:4:12",
																		"nodeType": "YulIdentifier",
																		"src": "13111:4:12"
																	},
																	{
																		"name": "oldLen",
																		"nativeSrc": "13117:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "13117:6:12"
																	},
																	{
																		"name": "newLen",
																		"nativeSrc": "13125:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "13125:6:12"
																	}
																],
																"functionName": {
																	"name": "clean_up_bytearray_end_slots_t_string_storage",
																	"nativeSrc": "13065:45:12",
																	"nodeType": "YulIdentifier",
																	"src": "13065:45:12"
																},
																"nativeSrc": "13065:67:12",
																"nodeType": "YulFunctionCall",
																"src": "13065:67:12"
															},
															"nativeSrc": "13065:67:12",
															"nodeType": "YulExpressionStatement",
															"src": "13065:67:12"
														},
														{
															"nativeSrc": "13142:18:12",
															"nodeType": "YulVariableDeclaration",
															"src": "13142:18:12",
															"value": {
																"kind": "number",
																"nativeSrc": "13159:1:12",
																"nodeType": "YulLiteral",
																"src": "13159:1:12",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "srcOffset",
																	"nativeSrc": "13146:9:12",
																	"nodeType": "YulTypedName",
																	"src": "13146:9:12",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "13170:17:12",
															"nodeType": "YulAssignment",
															"src": "13170:17:12",
															"value": {
																"kind": "number",
																"nativeSrc": "13183:4:12",
																"nodeType": "YulLiteral",
																"src": "13183:4:12",
																"type": "",
																"value": "0x20"
															},
															"variableNames": [
																{
																	"name": "srcOffset",
																	"nativeSrc": "13170:9:12",
																	"nodeType": "YulIdentifier",
																	"src": "13170:9:12"
																}
															]
														},
														{
															"cases": [
																{
																	"body": {
																		"nativeSrc": "13234:611:12",
																		"nodeType": "YulBlock",
																		"src": "13234:611:12",
																		"statements": [
																			{
																				"nativeSrc": "13248:37:12",
																				"nodeType": "YulVariableDeclaration",
																				"src": "13248:37:12",
																				"value": {
																					"arguments": [
																						{
																							"name": "newLen",
																							"nativeSrc": "13267:6:12",
																							"nodeType": "YulIdentifier",
																							"src": "13267:6:12"
																						},
																						{
																							"arguments": [
																								{
																									"kind": "number",
																									"nativeSrc": "13279:4:12",
																									"nodeType": "YulLiteral",
																									"src": "13279:4:12",
																									"type": "",
																									"value": "0x1f"
																								}
																							],
																							"functionName": {
																								"name": "not",
																								"nativeSrc": "13275:3:12",
																								"nodeType": "YulIdentifier",
																								"src": "13275:3:12"
																							},
																							"nativeSrc": "13275:9:12",
																							"nodeType": "YulFunctionCall",
																							"src": "13275:9:12"
																						}
																					],
																					"functionName": {
																						"name": "and",
																						"nativeSrc": "13263:3:12",
																						"nodeType": "YulIdentifier",
																						"src": "13263:3:12"
																					},
																					"nativeSrc": "13263:22:12",
																					"nodeType": "YulFunctionCall",
																					"src": "13263:22:12"
																				},
																				"variables": [
																					{
																						"name": "loopEnd",
																						"nativeSrc": "13252:7:12",
																						"nodeType": "YulTypedName",
																						"src": "13252:7:12",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nativeSrc": "13299:51:12",
																				"nodeType": "YulVariableDeclaration",
																				"src": "13299:51:12",
																				"value": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "13345:4:12",
																							"nodeType": "YulIdentifier",
																							"src": "13345:4:12"
																						}
																					],
																					"functionName": {
																						"name": "array_dataslot_t_string_storage",
																						"nativeSrc": "13313:31:12",
																						"nodeType": "YulIdentifier",
																						"src": "13313:31:12"
																					},
																					"nativeSrc": "13313:37:12",
																					"nodeType": "YulFunctionCall",
																					"src": "13313:37:12"
																				},
																				"variables": [
																					{
																						"name": "dstPtr",
																						"nativeSrc": "13303:6:12",
																						"nodeType": "YulTypedName",
																						"src": "13303:6:12",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nativeSrc": "13363:10:12",
																				"nodeType": "YulVariableDeclaration",
																				"src": "13363:10:12",
																				"value": {
																					"kind": "number",
																					"nativeSrc": "13372:1:12",
																					"nodeType": "YulLiteral",
																					"src": "13372:1:12",
																					"type": "",
																					"value": "0"
																				},
																				"variables": [
																					{
																						"name": "i",
																						"nativeSrc": "13367:1:12",
																						"nodeType": "YulTypedName",
																						"src": "13367:1:12",
																						"type": ""
																					}
																				]
																			},
																			{
																				"body": {
																					"nativeSrc": "13431:163:12",
																					"nodeType": "YulBlock",
																					"src": "13431:163:12",
																					"statements": [
																						{
																							"expression": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "13456:6:12",
																										"nodeType": "YulIdentifier",
																										"src": "13456:6:12"
																									},
																									{
																										"arguments": [
																											{
																												"arguments": [
																													{
																														"name": "src",
																														"nativeSrc": "13474:3:12",
																														"nodeType": "YulIdentifier",
																														"src": "13474:3:12"
																													},
																													{
																														"name": "srcOffset",
																														"nativeSrc": "13479:9:12",
																														"nodeType": "YulIdentifier",
																														"src": "13479:9:12"
																													}
																												],
																												"functionName": {
																													"name": "add",
																													"nativeSrc": "13470:3:12",
																													"nodeType": "YulIdentifier",
																													"src": "13470:3:12"
																												},
																												"nativeSrc": "13470:19:12",
																												"nodeType": "YulFunctionCall",
																												"src": "13470:19:12"
																											}
																										],
																										"functionName": {
																											"name": "mload",
																											"nativeSrc": "13464:5:12",
																											"nodeType": "YulIdentifier",
																											"src": "13464:5:12"
																										},
																										"nativeSrc": "13464:26:12",
																										"nodeType": "YulFunctionCall",
																										"src": "13464:26:12"
																									}
																								],
																								"functionName": {
																									"name": "sstore",
																									"nativeSrc": "13449:6:12",
																									"nodeType": "YulIdentifier",
																									"src": "13449:6:12"
																								},
																								"nativeSrc": "13449:42:12",
																								"nodeType": "YulFunctionCall",
																								"src": "13449:42:12"
																							},
																							"nativeSrc": "13449:42:12",
																							"nodeType": "YulExpressionStatement",
																							"src": "13449:42:12"
																						},
																						{
																							"nativeSrc": "13508:24:12",
																							"nodeType": "YulAssignment",
																							"src": "13508:24:12",
																							"value": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "13522:6:12",
																										"nodeType": "YulIdentifier",
																										"src": "13522:6:12"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "13530:1:12",
																										"nodeType": "YulLiteral",
																										"src": "13530:1:12",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "13518:3:12",
																									"nodeType": "YulIdentifier",
																									"src": "13518:3:12"
																								},
																								"nativeSrc": "13518:14:12",
																								"nodeType": "YulFunctionCall",
																								"src": "13518:14:12"
																							},
																							"variableNames": [
																								{
																									"name": "dstPtr",
																									"nativeSrc": "13508:6:12",
																									"nodeType": "YulIdentifier",
																									"src": "13508:6:12"
																								}
																							]
																						},
																						{
																							"nativeSrc": "13549:31:12",
																							"nodeType": "YulAssignment",
																							"src": "13549:31:12",
																							"value": {
																								"arguments": [
																									{
																										"name": "srcOffset",
																										"nativeSrc": "13566:9:12",
																										"nodeType": "YulIdentifier",
																										"src": "13566:9:12"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "13577:2:12",
																										"nodeType": "YulLiteral",
																										"src": "13577:2:12",
																										"type": "",
																										"value": "32"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "13562:3:12",
																									"nodeType": "YulIdentifier",
																									"src": "13562:3:12"
																								},
																								"nativeSrc": "13562:18:12",
																								"nodeType": "YulFunctionCall",
																								"src": "13562:18:12"
																							},
																							"variableNames": [
																								{
																									"name": "srcOffset",
																									"nativeSrc": "13549:9:12",
																									"nodeType": "YulIdentifier",
																									"src": "13549:9:12"
																								}
																							]
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "i",
																							"nativeSrc": "13397:1:12",
																							"nodeType": "YulIdentifier",
																							"src": "13397:1:12"
																						},
																						{
																							"name": "loopEnd",
																							"nativeSrc": "13400:7:12",
																							"nodeType": "YulIdentifier",
																							"src": "13400:7:12"
																						}
																					],
																					"functionName": {
																						"name": "lt",
																						"nativeSrc": "13394:2:12",
																						"nodeType": "YulIdentifier",
																						"src": "13394:2:12"
																					},
																					"nativeSrc": "13394:14:12",
																					"nodeType": "YulFunctionCall",
																					"src": "13394:14:12"
																				},
																				"nativeSrc": "13386:208:12",
																				"nodeType": "YulForLoop",
																				"post": {
																					"nativeSrc": "13409:21:12",
																					"nodeType": "YulBlock",
																					"src": "13409:21:12",
																					"statements": [
																						{
																							"nativeSrc": "13411:17:12",
																							"nodeType": "YulAssignment",
																							"src": "13411:17:12",
																							"value": {
																								"arguments": [
																									{
																										"name": "i",
																										"nativeSrc": "13420:1:12",
																										"nodeType": "YulIdentifier",
																										"src": "13420:1:12"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "13423:4:12",
																										"nodeType": "YulLiteral",
																										"src": "13423:4:12",
																										"type": "",
																										"value": "0x20"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "13416:3:12",
																									"nodeType": "YulIdentifier",
																									"src": "13416:3:12"
																								},
																								"nativeSrc": "13416:12:12",
																								"nodeType": "YulFunctionCall",
																								"src": "13416:12:12"
																							},
																							"variableNames": [
																								{
																									"name": "i",
																									"nativeSrc": "13411:1:12",
																									"nodeType": "YulIdentifier",
																									"src": "13411:1:12"
																								}
																							]
																						}
																					]
																				},
																				"pre": {
																					"nativeSrc": "13390:3:12",
																					"nodeType": "YulBlock",
																					"src": "13390:3:12",
																					"statements": []
																				},
																				"src": "13386:208:12"
																			},
																			{
																				"body": {
																					"nativeSrc": "13630:156:12",
																					"nodeType": "YulBlock",
																					"src": "13630:156:12",
																					"statements": [
																						{
																							"nativeSrc": "13648:43:12",
																							"nodeType": "YulVariableDeclaration",
																							"src": "13648:43:12",
																							"value": {
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"name": "src",
																												"nativeSrc": "13675:3:12",
																												"nodeType": "YulIdentifier",
																												"src": "13675:3:12"
																											},
																											{
																												"name": "srcOffset",
																												"nativeSrc": "13680:9:12",
																												"nodeType": "YulIdentifier",
																												"src": "13680:9:12"
																											}
																										],
																										"functionName": {
																											"name": "add",
																											"nativeSrc": "13671:3:12",
																											"nodeType": "YulIdentifier",
																											"src": "13671:3:12"
																										},
																										"nativeSrc": "13671:19:12",
																										"nodeType": "YulFunctionCall",
																										"src": "13671:19:12"
																									}
																								],
																								"functionName": {
																									"name": "mload",
																									"nativeSrc": "13665:5:12",
																									"nodeType": "YulIdentifier",
																									"src": "13665:5:12"
																								},
																								"nativeSrc": "13665:26:12",
																								"nodeType": "YulFunctionCall",
																								"src": "13665:26:12"
																							},
																							"variables": [
																								{
																									"name": "lastValue",
																									"nativeSrc": "13652:9:12",
																									"nodeType": "YulTypedName",
																									"src": "13652:9:12",
																									"type": ""
																								}
																							]
																						},
																						{
																							"expression": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "13715:6:12",
																										"nodeType": "YulIdentifier",
																										"src": "13715:6:12"
																									},
																									{
																										"arguments": [
																											{
																												"name": "lastValue",
																												"nativeSrc": "13742:9:12",
																												"nodeType": "YulIdentifier",
																												"src": "13742:9:12"
																											},
																											{
																												"arguments": [
																													{
																														"name": "newLen",
																														"nativeSrc": "13757:6:12",
																														"nodeType": "YulIdentifier",
																														"src": "13757:6:12"
																													},
																													{
																														"kind": "number",
																														"nativeSrc": "13765:4:12",
																														"nodeType": "YulLiteral",
																														"src": "13765:4:12",
																														"type": "",
																														"value": "0x1f"
																													}
																												],
																												"functionName": {
																													"name": "and",
																													"nativeSrc": "13753:3:12",
																													"nodeType": "YulIdentifier",
																													"src": "13753:3:12"
																												},
																												"nativeSrc": "13753:17:12",
																												"nodeType": "YulFunctionCall",
																												"src": "13753:17:12"
																											}
																										],
																										"functionName": {
																											"name": "mask_bytes_dynamic",
																											"nativeSrc": "13723:18:12",
																											"nodeType": "YulIdentifier",
																											"src": "13723:18:12"
																										},
																										"nativeSrc": "13723:48:12",
																										"nodeType": "YulFunctionCall",
																										"src": "13723:48:12"
																									}
																								],
																								"functionName": {
																									"name": "sstore",
																									"nativeSrc": "13708:6:12",
																									"nodeType": "YulIdentifier",
																									"src": "13708:6:12"
																								},
																								"nativeSrc": "13708:64:12",
																								"nodeType": "YulFunctionCall",
																								"src": "13708:64:12"
																							},
																							"nativeSrc": "13708:64:12",
																							"nodeType": "YulExpressionStatement",
																							"src": "13708:64:12"
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "loopEnd",
																							"nativeSrc": "13613:7:12",
																							"nodeType": "YulIdentifier",
																							"src": "13613:7:12"
																						},
																						{
																							"name": "newLen",
																							"nativeSrc": "13622:6:12",
																							"nodeType": "YulIdentifier",
																							"src": "13622:6:12"
																						}
																					],
																					"functionName": {
																						"name": "lt",
																						"nativeSrc": "13610:2:12",
																						"nodeType": "YulIdentifier",
																						"src": "13610:2:12"
																					},
																					"nativeSrc": "13610:19:12",
																					"nodeType": "YulFunctionCall",
																					"src": "13610:19:12"
																				},
																				"nativeSrc": "13607:179:12",
																				"nodeType": "YulIf",
																				"src": "13607:179:12"
																			},
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "13806:4:12",
																							"nodeType": "YulIdentifier",
																							"src": "13806:4:12"
																						},
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"name": "newLen",
																											"nativeSrc": "13820:6:12",
																											"nodeType": "YulIdentifier",
																											"src": "13820:6:12"
																										},
																										{
																											"kind": "number",
																											"nativeSrc": "13828:1:12",
																											"nodeType": "YulLiteral",
																											"src": "13828:1:12",
																											"type": "",
																											"value": "2"
																										}
																									],
																									"functionName": {
																										"name": "mul",
																										"nativeSrc": "13816:3:12",
																										"nodeType": "YulIdentifier",
																										"src": "13816:3:12"
																									},
																									"nativeSrc": "13816:14:12",
																									"nodeType": "YulFunctionCall",
																									"src": "13816:14:12"
																								},
																								{
																									"kind": "number",
																									"nativeSrc": "13832:1:12",
																									"nodeType": "YulLiteral",
																									"src": "13832:1:12",
																									"type": "",
																									"value": "1"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nativeSrc": "13812:3:12",
																								"nodeType": "YulIdentifier",
																								"src": "13812:3:12"
																							},
																							"nativeSrc": "13812:22:12",
																							"nodeType": "YulFunctionCall",
																							"src": "13812:22:12"
																						}
																					],
																					"functionName": {
																						"name": "sstore",
																						"nativeSrc": "13799:6:12",
																						"nodeType": "YulIdentifier",
																						"src": "13799:6:12"
																					},
																					"nativeSrc": "13799:36:12",
																					"nodeType": "YulFunctionCall",
																					"src": "13799:36:12"
																				},
																				"nativeSrc": "13799:36:12",
																				"nodeType": "YulExpressionStatement",
																				"src": "13799:36:12"
																			}
																		]
																	},
																	"nativeSrc": "13227:618:12",
																	"nodeType": "YulCase",
																	"src": "13227:618:12",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "13232:1:12",
																		"nodeType": "YulLiteral",
																		"src": "13232:1:12",
																		"type": "",
																		"value": "1"
																	}
																},
																{
																	"body": {
																		"nativeSrc": "13862:222:12",
																		"nodeType": "YulBlock",
																		"src": "13862:222:12",
																		"statements": [
																			{
																				"nativeSrc": "13876:14:12",
																				"nodeType": "YulVariableDeclaration",
																				"src": "13876:14:12",
																				"value": {
																					"kind": "number",
																					"nativeSrc": "13889:1:12",
																					"nodeType": "YulLiteral",
																					"src": "13889:1:12",
																					"type": "",
																					"value": "0"
																				},
																				"variables": [
																					{
																						"name": "value",
																						"nativeSrc": "13880:5:12",
																						"nodeType": "YulTypedName",
																						"src": "13880:5:12",
																						"type": ""
																					}
																				]
																			},
																			{
																				"body": {
																					"nativeSrc": "13913:67:12",
																					"nodeType": "YulBlock",
																					"src": "13913:67:12",
																					"statements": [
																						{
																							"nativeSrc": "13931:35:12",
																							"nodeType": "YulAssignment",
																							"src": "13931:35:12",
																							"value": {
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"name": "src",
																												"nativeSrc": "13950:3:12",
																												"nodeType": "YulIdentifier",
																												"src": "13950:3:12"
																											},
																											{
																												"name": "srcOffset",
																												"nativeSrc": "13955:9:12",
																												"nodeType": "YulIdentifier",
																												"src": "13955:9:12"
																											}
																										],
																										"functionName": {
																											"name": "add",
																											"nativeSrc": "13946:3:12",
																											"nodeType": "YulIdentifier",
																											"src": "13946:3:12"
																										},
																										"nativeSrc": "13946:19:12",
																										"nodeType": "YulFunctionCall",
																										"src": "13946:19:12"
																									}
																								],
																								"functionName": {
																									"name": "mload",
																									"nativeSrc": "13940:5:12",
																									"nodeType": "YulIdentifier",
																									"src": "13940:5:12"
																								},
																								"nativeSrc": "13940:26:12",
																								"nodeType": "YulFunctionCall",
																								"src": "13940:26:12"
																							},
																							"variableNames": [
																								{
																									"name": "value",
																									"nativeSrc": "13931:5:12",
																									"nodeType": "YulIdentifier",
																									"src": "13931:5:12"
																								}
																							]
																						}
																					]
																				},
																				"condition": {
																					"name": "newLen",
																					"nativeSrc": "13906:6:12",
																					"nodeType": "YulIdentifier",
																					"src": "13906:6:12"
																				},
																				"nativeSrc": "13903:77:12",
																				"nodeType": "YulIf",
																				"src": "13903:77:12"
																			},
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "14000:4:12",
																							"nodeType": "YulIdentifier",
																							"src": "14000:4:12"
																						},
																						{
																							"arguments": [
																								{
																									"name": "value",
																									"nativeSrc": "14059:5:12",
																									"nodeType": "YulIdentifier",
																									"src": "14059:5:12"
																								},
																								{
																									"name": "newLen",
																									"nativeSrc": "14066:6:12",
																									"nodeType": "YulIdentifier",
																									"src": "14066:6:12"
																								}
																							],
																							"functionName": {
																								"name": "extract_used_part_and_set_length_of_short_byte_array",
																								"nativeSrc": "14006:52:12",
																								"nodeType": "YulIdentifier",
																								"src": "14006:52:12"
																							},
																							"nativeSrc": "14006:67:12",
																							"nodeType": "YulFunctionCall",
																							"src": "14006:67:12"
																						}
																					],
																					"functionName": {
																						"name": "sstore",
																						"nativeSrc": "13993:6:12",
																						"nodeType": "YulIdentifier",
																						"src": "13993:6:12"
																					},
																					"nativeSrc": "13993:81:12",
																					"nodeType": "YulFunctionCall",
																					"src": "13993:81:12"
																				},
																				"nativeSrc": "13993:81:12",
																				"nodeType": "YulExpressionStatement",
																				"src": "13993:81:12"
																			}
																		]
																	},
																	"nativeSrc": "13854:230:12",
																	"nodeType": "YulCase",
																	"src": "13854:230:12",
																	"value": "default"
																}
															],
															"expression": {
																"arguments": [
																	{
																		"name": "newLen",
																		"nativeSrc": "13207:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "13207:6:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "13215:2:12",
																		"nodeType": "YulLiteral",
																		"src": "13215:2:12",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "13204:2:12",
																	"nodeType": "YulIdentifier",
																	"src": "13204:2:12"
																},
																"nativeSrc": "13204:14:12",
																"nodeType": "YulFunctionCall",
																"src": "13204:14:12"
															},
															"nativeSrc": "13197:887:12",
															"nodeType": "YulSwitch",
															"src": "13197:887:12"
														}
													]
												},
												"name": "copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage",
												"nativeSrc": "12695:1395:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nativeSrc": "12776:4:12",
														"nodeType": "YulTypedName",
														"src": "12776:4:12",
														"type": ""
													},
													{
														"name": "src",
														"nativeSrc": "12782:3:12",
														"nodeType": "YulTypedName",
														"src": "12782:3:12",
														"type": ""
													}
												],
												"src": "12695:1395:12"
											},
											{
												"body": {
													"nativeSrc": "14194:124:12",
													"nodeType": "YulBlock",
													"src": "14194:124:12",
													"statements": [
														{
															"nativeSrc": "14204:26:12",
															"nodeType": "YulAssignment",
															"src": "14204:26:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "14216:9:12",
																		"nodeType": "YulIdentifier",
																		"src": "14216:9:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "14227:2:12",
																		"nodeType": "YulLiteral",
																		"src": "14227:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "14212:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "14212:3:12"
																},
																"nativeSrc": "14212:18:12",
																"nodeType": "YulFunctionCall",
																"src": "14212:18:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "14204:4:12",
																	"nodeType": "YulIdentifier",
																	"src": "14204:4:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "14284:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "14284:6:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "14297:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "14297:9:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "14308:1:12",
																				"nodeType": "YulLiteral",
																				"src": "14308:1:12",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "14293:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "14293:3:12"
																		},
																		"nativeSrc": "14293:17:12",
																		"nodeType": "YulFunctionCall",
																		"src": "14293:17:12"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "14240:43:12",
																	"nodeType": "YulIdentifier",
																	"src": "14240:43:12"
																},
																"nativeSrc": "14240:71:12",
																"nodeType": "YulFunctionCall",
																"src": "14240:71:12"
															},
															"nativeSrc": "14240:71:12",
															"nodeType": "YulExpressionStatement",
															"src": "14240:71:12"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nativeSrc": "14096:222:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "14166:9:12",
														"nodeType": "YulTypedName",
														"src": "14166:9:12",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "14178:6:12",
														"nodeType": "YulTypedName",
														"src": "14178:6:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "14189:4:12",
														"nodeType": "YulTypedName",
														"src": "14189:4:12",
														"type": ""
													}
												],
												"src": "14096:222:12"
											}
										]
									},
									"contents": "{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint48(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffff)\n    }\n\n    function validator_revert_t_uint48(value) {\n        if iszero(eq(value, cleanup_t_uint48(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint48(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint48(value)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() {\n        revert(0, 0)\n    }\n\n    function revert_error_15abf5612cd996bc235ba1e55a4a30ac60e6bb601ff7ba4ad3f179b6be8d0490() {\n        revert(0, 0)\n    }\n\n    function revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef() {\n        revert(0, 0)\n    }\n\n    // string\n    function abi_decode_t_string_calldata_ptr(offset, end) -> arrayPos, length {\n        if iszero(slt(add(offset, 0x1f), end)) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\n        length := calldataload(offset)\n        if gt(length, 0xffffffffffffffff) { revert_error_15abf5612cd996bc235ba1e55a4a30ac60e6bb601ff7ba4ad3f179b6be8d0490() }\n        arrayPos := add(offset, 0x20)\n        if gt(add(arrayPos, mul(length, 0x01)), end) { revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef() }\n    }\n\n    function abi_decode_tuple_t_uint48t_addresst_uint256t_uint256t_uint256t_string_calldata_ptrt_address(headStart, dataEnd) -> value0, value1, value2, value3, value4, value5, value6, value7 {\n        if slt(sub(dataEnd, headStart), 224) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint48(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 96\n\n            value3 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 128\n\n            value4 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := calldataload(add(headStart, 160))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value5, value6 := abi_decode_t_string_calldata_ptr(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 192\n\n            value7 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_t_uint48_to_t_uint48_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint48(value))\n    }\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function copy_memory_to_memory_with_cleanup(src, dst, length) {\n\n        mcopy(dst, src, length)\n        mstore(add(dst, length), 0)\n\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value, pos) -> end {\n        let length := array_length_t_string_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length)\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function abi_encode_tuple_t_address_t_address_t_uint256_t_uint256_t_uint256_t_uint48_t_string_memory_ptr_t_address__to_t_address_t_address_t_uint256_t_uint256_t_uint256_t_uint48_t_string_memory_ptr_t_address__fromStack_reversed(headStart , value7, value6, value5, value4, value3, value2, value1, value0) -> tail {\n        tail := add(headStart, 256)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_address_to_t_address_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value3,  add(headStart, 96))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value4,  add(headStart, 128))\n\n        abi_encode_t_uint48_to_t_uint48_fromStack(value5,  add(headStart, 160))\n\n        mstore(add(headStart, 192), sub(tail, headStart))\n        tail := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value6,  tail)\n\n        abi_encode_t_address_to_t_address_fromStack(value7,  add(headStart, 224))\n\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_rational_1_by_1(value) -> cleaned {\n        cleaned := value\n    }\n\n    function cleanup_t_uint64(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffff)\n    }\n\n    function identity(value) -> ret {\n        ret := value\n    }\n\n    function convert_t_rational_1_by_1_to_t_uint64(value) -> converted {\n        converted := cleanup_t_uint64(identity(cleanup_t_rational_1_by_1(value)))\n    }\n\n    function abi_encode_t_rational_1_by_1_to_t_uint64_fromStack(value, pos) {\n        mstore(pos, convert_t_rational_1_by_1_to_t_uint64(value))\n    }\n\n    function abi_encode_tuple_t_rational_1_by_1__to_t_uint64__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_rational_1_by_1_to_t_uint64_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function store_literal_in_memory_1462473b7a4b33d32b109b815fd2324d00c9e5839b707ecf16d0ab5744f99226(memPtr) {\n\n        mstore(add(memPtr, 0), \"Invalid address\")\n\n    }\n\n    function abi_encode_t_stringliteral_1462473b7a4b33d32b109b815fd2324d00c9e5839b707ecf16d0ab5744f99226_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 15)\n        store_literal_in_memory_1462473b7a4b33d32b109b815fd2324d00c9e5839b707ecf16d0ab5744f99226(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_1462473b7a4b33d32b109b815fd2324d00c9e5839b707ecf16d0ab5744f99226__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_1462473b7a4b33d32b109b815fd2324d00c9e5839b707ecf16d0ab5744f99226_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function panic_error_0x41() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n\n    function panic_error_0x22() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x22)\n        revert(0, 0x24)\n    }\n\n    function extract_byte_array_length(data) -> length {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) {\n            length := and(length, 0x7f)\n        }\n\n        if eq(outOfPlaceEncoding, lt(length, 32)) {\n            panic_error_0x22()\n        }\n    }\n\n    function array_dataslot_t_string_storage(ptr) -> data {\n        data := ptr\n\n        mstore(0, ptr)\n        data := keccak256(0, 0x20)\n\n    }\n\n    function divide_by_32_ceil(value) -> result {\n        result := div(add(value, 31), 32)\n    }\n\n    function shift_left_dynamic(bits, value) -> newValue {\n        newValue :=\n\n        shl(bits, value)\n\n    }\n\n    function update_byte_slice_dynamic32(value, shiftBytes, toInsert) -> result {\n        let shiftBits := mul(shiftBytes, 8)\n        let mask := shift_left_dynamic(shiftBits, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n        toInsert := shift_left_dynamic(shiftBits, toInsert)\n        value := and(value, not(mask))\n        result := or(value, and(toInsert, mask))\n    }\n\n    function convert_t_uint256_to_t_uint256(value) -> converted {\n        converted := cleanup_t_uint256(identity(cleanup_t_uint256(value)))\n    }\n\n    function prepare_store_t_uint256(value) -> ret {\n        ret := value\n    }\n\n    function update_storage_value_t_uint256_to_t_uint256(slot, offset, value_0) {\n        let convertedValue_0 := convert_t_uint256_to_t_uint256(value_0)\n        sstore(slot, update_byte_slice_dynamic32(sload(slot), offset, prepare_store_t_uint256(convertedValue_0)))\n    }\n\n    function zero_value_for_split_t_uint256() -> ret {\n        ret := 0\n    }\n\n    function storage_set_to_zero_t_uint256(slot, offset) {\n        let zero_0 := zero_value_for_split_t_uint256()\n        update_storage_value_t_uint256_to_t_uint256(slot, offset, zero_0)\n    }\n\n    function clear_storage_range_t_bytes1(start, end) {\n        for {} lt(start, end) { start := add(start, 1) }\n        {\n            storage_set_to_zero_t_uint256(start, 0)\n        }\n    }\n\n    function clean_up_bytearray_end_slots_t_string_storage(array, len, startIndex) {\n\n        if gt(len, 31) {\n            let dataArea := array_dataslot_t_string_storage(array)\n            let deleteStart := add(dataArea, divide_by_32_ceil(startIndex))\n            // If we are clearing array to be short byte array, we want to clear only data starting from array data area.\n            if lt(startIndex, 32) { deleteStart := dataArea }\n            clear_storage_range_t_bytes1(deleteStart, add(dataArea, divide_by_32_ceil(len)))\n        }\n\n    }\n\n    function shift_right_unsigned_dynamic(bits, value) -> newValue {\n        newValue :=\n\n        shr(bits, value)\n\n    }\n\n    function mask_bytes_dynamic(data, bytes) -> result {\n        let mask := not(shift_right_unsigned_dynamic(mul(8, bytes), not(0)))\n        result := and(data, mask)\n    }\n    function extract_used_part_and_set_length_of_short_byte_array(data, len) -> used {\n        // we want to save only elements that are part of the array after resizing\n        // others should be set to zero\n        data := mask_bytes_dynamic(data, len)\n        used := or(data, mul(2, len))\n    }\n    function copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage(slot, src) {\n\n        let newLen := array_length_t_string_memory_ptr(src)\n        // Make sure array length is sane\n        if gt(newLen, 0xffffffffffffffff) { panic_error_0x41() }\n\n        let oldLen := extract_byte_array_length(sload(slot))\n\n        // potentially truncate data\n        clean_up_bytearray_end_slots_t_string_storage(slot, oldLen, newLen)\n\n        let srcOffset := 0\n\n        srcOffset := 0x20\n\n        switch gt(newLen, 31)\n        case 1 {\n            let loopEnd := and(newLen, not(0x1f))\n\n            let dstPtr := array_dataslot_t_string_storage(slot)\n            let i := 0\n            for { } lt(i, loopEnd) { i := add(i, 0x20) } {\n                sstore(dstPtr, mload(add(src, srcOffset)))\n                dstPtr := add(dstPtr, 1)\n                srcOffset := add(srcOffset, 32)\n            }\n            if lt(loopEnd, newLen) {\n                let lastValue := mload(add(src, srcOffset))\n                sstore(dstPtr, mask_bytes_dynamic(lastValue, and(newLen, 0x1f)))\n            }\n            sstore(slot, add(mul(newLen, 2), 1))\n        }\n        default {\n            let value := 0\n            if newLen {\n                value := mload(add(src, srcOffset))\n            }\n            sstore(slot, extract_used_part_and_set_length_of_short_byte_array(value, newLen))\n        }\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n}\n",
									"id": 12,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561000f575f5ffd5b5060043610610060575f3560e01c8063715018a6146100645780638129fc1c1461006e57806383dc65f2146100785780638da5cb5b14610094578063b842ec44146100b2578063f2fde38b146100e9575b5f5ffd5b61006c610105565b005b610076610118565b005b610092600480360381019061008d9190610bfa565b610298565b005b61009c610607565b6040516100a99190610cc6565b60405180910390f35b6100cc60048036038101906100c79190610cdf565b61063c565b6040516100e0989796959493929190610dab565b60405180910390f35b61010360048036038101906100fe9190610e2e565b61078d565b005b61010d610811565b6101165f610898565b565b5f610121610969565b90505f815f0160089054906101000a900460ff161590505f825f015f9054906101000a900467ffffffffffffffff1690505f5f8267ffffffffffffffff161480156101695750825b90505f60018367ffffffffffffffff1614801561019c57505f3073ffffffffffffffffffffffffffffffffffffffff163b145b9050811580156101aa575080155b156101e1576040517ff92ee8a900000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6001855f015f6101000a81548167ffffffffffffffff021916908367ffffffffffffffff160217905550831561022e576001855f0160086101000a81548160ff0219169083151502179055505b6102373361097c565b8315610291575f855f0160086101000a81548160ff0219169083151502179055507fc7f505b2f371ae2175ee4913f4499e1f2633a7b5936321eed1cdaeb6115181d260016040516102889190610eae565b60405180910390a15b5050505050565b5f73ffffffffffffffffffffffffffffffffffffffff168773ffffffffffffffffffffffffffffffffffffffff161415801561030057505f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614155b61033f576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161033690610f11565b60405180910390fd5b5f5f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f206040518061010001604052803373ffffffffffffffffffffffffffffffffffffffff1681526020018973ffffffffffffffffffffffffffffffffffffffff1681526020018881526020018781526020018681526020018a65ffffffffffff16815260200185858080601f0160208091040260200160405190810160405280939291908181526020018383808284375f81840152601f19601f8201169050808301925050505050505081526020018373ffffffffffffffffffffffffffffffffffffffff16815250908060018154018082558091505060019003905f5260205f2090600802015f909190919091505f820151815f015f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506020820151816001015f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060408201518160020155606082015181600301556080820151816004015560a0820151816005015f6101000a81548165ffffffffffff021916908365ffffffffffff16021790555060c082015181600601908161054f9190611150565b5060e0820151816007015f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050508673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167fc46393c51fb2221caaec70cc70adecd0bbd1f605f3a19747f4ec3a8aff00cf7c886040516105f5919061121f565b60405180910390a35050505050505050565b5f5f610611610990565b9050805f015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1691505090565b5f602052815f5260405f208181548110610654575f80fd5b905f5260205f2090600802015f9150915050805f015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690806001015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690806002015490806003015490806004015490806005015f9054906101000a900465ffffffffffff16908060060180546106e790610f89565b80601f016020809104026020016040519081016040528092919081815260200182805461071390610f89565b801561075e5780601f106107355761010080835404028352916020019161075e565b820191905f5260205f20905b81548152906001019060200180831161074157829003601f168201915b505050505090806007015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905088565b610795610811565b5f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603610805575f6040517f1e4fbdf70000000000000000000000000000000000000000000000000000000081526004016107fc9190610cc6565b60405180910390fd5b61080e81610898565b50565b6108196109b7565b73ffffffffffffffffffffffffffffffffffffffff16610837610607565b73ffffffffffffffffffffffffffffffffffffffff16146108965761085a6109b7565b6040517f118cdaa700000000000000000000000000000000000000000000000000000000815260040161088d9190610cc6565b60405180910390fd5b565b5f6108a1610990565b90505f815f015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905082825f015f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508273ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a3505050565b5f5f6109736109be565b90508091505090565b6109846109e7565b61098d81610a27565b50565b5f7f9016d09d72d40fdae2fd8ceac6b6234c7706214fd39c1cd1e609a0528c199300905090565b5f33905090565b5f7ff0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a005f1b905090565b6109ef610aab565b610a25576040517fd7e6bcf800000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b565b610a2f6109e7565b5f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603610a9f575f6040517f1e4fbdf7000000000000000000000000000000000000000000000000000000008152600401610a969190610cc6565b60405180910390fd5b610aa881610898565b50565b5f610ab4610969565b5f0160089054906101000a900460ff16905090565b5f5ffd5b5f5ffd5b5f65ffffffffffff82169050919050565b610aeb81610ad1565b8114610af5575f5ffd5b50565b5f81359050610b0681610ae2565b92915050565b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f610b3582610b0c565b9050919050565b610b4581610b2b565b8114610b4f575f5ffd5b50565b5f81359050610b6081610b3c565b92915050565b5f819050919050565b610b7881610b66565b8114610b82575f5ffd5b50565b5f81359050610b9381610b6f565b92915050565b5f5ffd5b5f5ffd5b5f5ffd5b5f5f83601f840112610bba57610bb9610b99565b5b8235905067ffffffffffffffff811115610bd757610bd6610b9d565b5b602083019150836001820283011115610bf357610bf2610ba1565b5b9250929050565b5f5f5f5f5f5f5f5f60e0898b031215610c1657610c15610ac9565b5b5f610c238b828c01610af8565b9850506020610c348b828c01610b52565b9750506040610c458b828c01610b85565b9650506060610c568b828c01610b85565b9550506080610c678b828c01610b85565b94505060a089013567ffffffffffffffff811115610c8857610c87610acd565b5b610c948b828c01610ba5565b935093505060c0610ca78b828c01610b52565b9150509295985092959890939650565b610cc081610b2b565b82525050565b5f602082019050610cd95f830184610cb7565b92915050565b5f5f60408385031215610cf557610cf4610ac9565b5b5f610d0285828601610b52565b9250506020610d1385828601610b85565b9150509250929050565b610d2681610b66565b82525050565b610d3581610ad1565b82525050565b5f81519050919050565b5f82825260208201905092915050565b8281835e5f83830152505050565b5f601f19601f8301169050919050565b5f610d7d82610d3b565b610d878185610d45565b9350610d97818560208601610d55565b610da081610d63565b840191505092915050565b5f61010082019050610dbf5f83018b610cb7565b610dcc602083018a610cb7565b610dd96040830189610d1d565b610de66060830188610d1d565b610df36080830187610d1d565b610e0060a0830186610d2c565b81810360c0830152610e128185610d73565b9050610e2160e0830184610cb7565b9998505050505050505050565b5f60208284031215610e4357610e42610ac9565b5b5f610e5084828501610b52565b91505092915050565b5f819050919050565b5f67ffffffffffffffff82169050919050565b5f819050919050565b5f610e98610e93610e8e84610e59565b610e75565b610e62565b9050919050565b610ea881610e7e565b82525050565b5f602082019050610ec15f830184610e9f565b92915050565b7f496e76616c6964206164647265737300000000000000000000000000000000005f82015250565b5f610efb600f83610d45565b9150610f0682610ec7565b602082019050919050565b5f6020820190508181035f830152610f2881610eef565b9050919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52604160045260245ffd5b7f4e487b71000000000000000000000000000000000000000000000000000000005f52602260045260245ffd5b5f6002820490506001821680610fa057607f821691505b602082108103610fb357610fb2610f5c565b5b50919050565b5f819050815f5260205f209050919050565b5f6020601f8301049050919050565b5f82821b905092915050565b5f600883026110157fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82610fda565b61101f8683610fda565b95508019841693508086168417925050509392505050565b5f61105161104c61104784610b66565b610e75565b610b66565b9050919050565b5f819050919050565b61106a83611037565b61107e61107682611058565b848454610fe6565b825550505050565b5f5f905090565b611095611086565b6110a0818484611061565b505050565b5b818110156110c3576110b85f8261108d565b6001810190506110a6565b5050565b601f821115611108576110d981610fb9565b6110e284610fcb565b810160208510156110f1578190505b6111056110fd85610fcb565b8301826110a5565b50505b505050565b5f82821c905092915050565b5f6111285f198460080261110d565b1980831691505092915050565b5f6111408383611119565b9150826002028217905092915050565b61115982610d3b565b67ffffffffffffffff81111561117257611171610f2f565b5b61117c8254610f89565b6111878282856110c7565b5f60209050601f8311600181146111b8575f84156111a6578287015190505b6111b08582611135565b865550611217565b601f1984166111c686610fb9565b5f5b828110156111ed578489015182556001820191506020850194506020810190506111c8565b8683101561120a5784890151611206601f891682611119565b8355505b6001600288020188555050505b505050505050565b5f6020820190506112325f830184610d1d565b9291505056fea2646970667358221220d5242b8c9d47dd81af19fa7adbe60b865414a51554862264e102bbff2a397dab64736f6c634300081e0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x60 JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x715018A6 EQ PUSH2 0x64 JUMPI DUP1 PUSH4 0x8129FC1C EQ PUSH2 0x6E JUMPI DUP1 PUSH4 0x83DC65F2 EQ PUSH2 0x78 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x94 JUMPI DUP1 PUSH4 0xB842EC44 EQ PUSH2 0xB2 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0xE9 JUMPI JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH2 0x6C PUSH2 0x105 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x76 PUSH2 0x118 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x92 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x8D SWAP2 SWAP1 PUSH2 0xBFA JUMP JUMPDEST PUSH2 0x298 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x9C PUSH2 0x607 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xA9 SWAP2 SWAP1 PUSH2 0xCC6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xCC PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xC7 SWAP2 SWAP1 PUSH2 0xCDF JUMP JUMPDEST PUSH2 0x63C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xE0 SWAP9 SWAP8 SWAP7 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0xDAB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x103 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xFE SWAP2 SWAP1 PUSH2 0xE2E JUMP JUMPDEST PUSH2 0x78D JUMP JUMPDEST STOP JUMPDEST PUSH2 0x10D PUSH2 0x811 JUMP JUMPDEST PUSH2 0x116 PUSH0 PUSH2 0x898 JUMP JUMPDEST JUMP JUMPDEST PUSH0 PUSH2 0x121 PUSH2 0x969 JUMP JUMPDEST SWAP1 POP PUSH0 DUP2 PUSH0 ADD PUSH1 0x8 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO SWAP1 POP PUSH0 DUP3 PUSH0 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH8 0xFFFFFFFFFFFFFFFF AND SWAP1 POP PUSH0 PUSH0 DUP3 PUSH8 0xFFFFFFFFFFFFFFFF AND EQ DUP1 ISZERO PUSH2 0x169 JUMPI POP DUP3 JUMPDEST SWAP1 POP PUSH0 PUSH1 0x1 DUP4 PUSH8 0xFFFFFFFFFFFFFFFF AND EQ DUP1 ISZERO PUSH2 0x19C JUMPI POP PUSH0 ADDRESS PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EXTCODESIZE EQ JUMPDEST SWAP1 POP DUP2 ISZERO DUP1 ISZERO PUSH2 0x1AA JUMPI POP DUP1 ISZERO JUMPDEST ISZERO PUSH2 0x1E1 JUMPI PUSH1 0x40 MLOAD PUSH32 0xF92EE8A900000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 DUP6 PUSH0 ADD PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH8 0xFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH8 0xFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP4 ISZERO PUSH2 0x22E JUMPI PUSH1 0x1 DUP6 PUSH0 ADD PUSH1 0x8 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP JUMPDEST PUSH2 0x237 CALLER PUSH2 0x97C JUMP JUMPDEST DUP4 ISZERO PUSH2 0x291 JUMPI PUSH0 DUP6 PUSH0 ADD PUSH1 0x8 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH32 0xC7F505B2F371AE2175EE4913F4499E1F2633A7B5936321EED1CDAEB6115181D2 PUSH1 0x1 PUSH1 0x40 MLOAD PUSH2 0x288 SWAP2 SWAP1 PUSH2 0xEAE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO DUP1 ISZERO PUSH2 0x300 JUMPI POP PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO JUMPDEST PUSH2 0x33F JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x336 SWAP1 PUSH2 0xF11 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH1 0x40 MLOAD DUP1 PUSH2 0x100 ADD PUSH1 0x40 MSTORE DUP1 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP10 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP9 DUP2 MSTORE PUSH1 0x20 ADD DUP8 DUP2 MSTORE PUSH1 0x20 ADD DUP7 DUP2 MSTORE PUSH1 0x20 ADD DUP11 PUSH6 0xFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP6 DUP6 DUP1 DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP4 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP4 DUP1 DUP3 DUP5 CALLDATACOPY PUSH0 DUP2 DUP5 ADD MSTORE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND SWAP1 POP DUP1 DUP4 ADD SWAP3 POP POP POP POP POP POP POP DUP2 MSTORE PUSH1 0x20 ADD DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE POP SWAP1 DUP1 PUSH1 0x1 DUP2 SLOAD ADD DUP1 DUP3 SSTORE DUP1 SWAP2 POP POP PUSH1 0x1 SWAP1 SUB SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 PUSH1 0x8 MUL ADD PUSH0 SWAP1 SWAP2 SWAP1 SWAP2 SWAP1 SWAP2 POP PUSH0 DUP3 ADD MLOAD DUP2 PUSH0 ADD PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x20 DUP3 ADD MLOAD DUP2 PUSH1 0x1 ADD PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x40 DUP3 ADD MLOAD DUP2 PUSH1 0x2 ADD SSTORE PUSH1 0x60 DUP3 ADD MLOAD DUP2 PUSH1 0x3 ADD SSTORE PUSH1 0x80 DUP3 ADD MLOAD DUP2 PUSH1 0x4 ADD SSTORE PUSH1 0xA0 DUP3 ADD MLOAD DUP2 PUSH1 0x5 ADD PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH6 0xFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH6 0xFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0xC0 DUP3 ADD MLOAD DUP2 PUSH1 0x6 ADD SWAP1 DUP2 PUSH2 0x54F SWAP2 SWAP1 PUSH2 0x1150 JUMP JUMPDEST POP PUSH1 0xE0 DUP3 ADD MLOAD DUP2 PUSH1 0x7 ADD PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP POP DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xC46393C51FB2221CAAEC70CC70ADECD0BBD1F605F3A19747F4EC3A8AFF00CF7C DUP9 PUSH1 0x40 MLOAD PUSH2 0x5F5 SWAP2 SWAP1 PUSH2 0x121F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH2 0x611 PUSH2 0x990 JUMP JUMPDEST SWAP1 POP DUP1 PUSH0 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP2 POP POP SWAP1 JUMP JUMPDEST PUSH0 PUSH1 0x20 MSTORE DUP2 PUSH0 MSTORE PUSH1 0x40 PUSH0 KECCAK256 DUP2 DUP2 SLOAD DUP2 LT PUSH2 0x654 JUMPI PUSH0 DUP1 REVERT JUMPDEST SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 PUSH1 0x8 MUL ADD PUSH0 SWAP2 POP SWAP2 POP POP DUP1 PUSH0 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 DUP1 PUSH1 0x1 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 DUP1 PUSH1 0x2 ADD SLOAD SWAP1 DUP1 PUSH1 0x3 ADD SLOAD SWAP1 DUP1 PUSH1 0x4 ADD SLOAD SWAP1 DUP1 PUSH1 0x5 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH6 0xFFFFFFFFFFFF AND SWAP1 DUP1 PUSH1 0x6 ADD DUP1 SLOAD PUSH2 0x6E7 SWAP1 PUSH2 0xF89 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x713 SWAP1 PUSH2 0xF89 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x75E JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x735 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x75E JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x741 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 DUP1 PUSH1 0x7 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP9 JUMP JUMPDEST PUSH2 0x795 PUSH2 0x811 JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x805 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x1E4FBDF700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x7FC SWAP2 SWAP1 PUSH2 0xCC6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x80E DUP2 PUSH2 0x898 JUMP JUMPDEST POP JUMP JUMPDEST PUSH2 0x819 PUSH2 0x9B7 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x837 PUSH2 0x607 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x896 JUMPI PUSH2 0x85A PUSH2 0x9B7 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x118CDAA700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x88D SWAP2 SWAP1 PUSH2 0xCC6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH0 PUSH2 0x8A1 PUSH2 0x990 JUMP JUMPDEST SWAP1 POP PUSH0 DUP2 PUSH0 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP3 DUP3 PUSH0 ADD PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH2 0x973 PUSH2 0x9BE JUMP JUMPDEST SWAP1 POP DUP1 SWAP2 POP POP SWAP1 JUMP JUMPDEST PUSH2 0x984 PUSH2 0x9E7 JUMP JUMPDEST PUSH2 0x98D DUP2 PUSH2 0xA27 JUMP JUMPDEST POP JUMP JUMPDEST PUSH0 PUSH32 0x9016D09D72D40FDAE2FD8CEAC6B6234C7706214FD39C1CD1E609A0528C199300 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH32 0xF0C57E16840DF040F15088DC2F81FE391C3923BEC73E23A9662EFC9C229C6A00 PUSH0 SHL SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x9EF PUSH2 0xAAB JUMP JUMPDEST PUSH2 0xA25 JUMPI PUSH1 0x40 MLOAD PUSH32 0xD7E6BCF800000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH2 0xA2F PUSH2 0x9E7 JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xA9F JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x1E4FBDF700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xA96 SWAP2 SWAP1 PUSH2 0xCC6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xAA8 DUP2 PUSH2 0x898 JUMP JUMPDEST POP JUMP JUMPDEST PUSH0 PUSH2 0xAB4 PUSH2 0x969 JUMP JUMPDEST PUSH0 ADD PUSH1 0x8 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH0 PUSH6 0xFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xAEB DUP2 PUSH2 0xAD1 JUMP JUMPDEST DUP2 EQ PUSH2 0xAF5 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xB06 DUP2 PUSH2 0xAE2 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0xB35 DUP3 PUSH2 0xB0C JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xB45 DUP2 PUSH2 0xB2B JUMP JUMPDEST DUP2 EQ PUSH2 0xB4F JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xB60 DUP2 PUSH2 0xB3C JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xB78 DUP2 PUSH2 0xB66 JUMP JUMPDEST DUP2 EQ PUSH2 0xB82 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xB93 DUP2 PUSH2 0xB6F JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH0 PUSH0 DUP4 PUSH1 0x1F DUP5 ADD SLT PUSH2 0xBBA JUMPI PUSH2 0xBB9 PUSH2 0xB99 JUMP JUMPDEST JUMPDEST DUP3 CALLDATALOAD SWAP1 POP PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0xBD7 JUMPI PUSH2 0xBD6 PUSH2 0xB9D JUMP JUMPDEST JUMPDEST PUSH1 0x20 DUP4 ADD SWAP2 POP DUP4 PUSH1 0x1 DUP3 MUL DUP4 ADD GT ISZERO PUSH2 0xBF3 JUMPI PUSH2 0xBF2 PUSH2 0xBA1 JUMP JUMPDEST JUMPDEST SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH0 PUSH0 PUSH0 PUSH0 PUSH0 PUSH0 PUSH0 PUSH1 0xE0 DUP10 DUP12 SUB SLT ISZERO PUSH2 0xC16 JUMPI PUSH2 0xC15 PUSH2 0xAC9 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0xC23 DUP12 DUP3 DUP13 ADD PUSH2 0xAF8 JUMP JUMPDEST SWAP9 POP POP PUSH1 0x20 PUSH2 0xC34 DUP12 DUP3 DUP13 ADD PUSH2 0xB52 JUMP JUMPDEST SWAP8 POP POP PUSH1 0x40 PUSH2 0xC45 DUP12 DUP3 DUP13 ADD PUSH2 0xB85 JUMP JUMPDEST SWAP7 POP POP PUSH1 0x60 PUSH2 0xC56 DUP12 DUP3 DUP13 ADD PUSH2 0xB85 JUMP JUMPDEST SWAP6 POP POP PUSH1 0x80 PUSH2 0xC67 DUP12 DUP3 DUP13 ADD PUSH2 0xB85 JUMP JUMPDEST SWAP5 POP POP PUSH1 0xA0 DUP10 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0xC88 JUMPI PUSH2 0xC87 PUSH2 0xACD JUMP JUMPDEST JUMPDEST PUSH2 0xC94 DUP12 DUP3 DUP13 ADD PUSH2 0xBA5 JUMP JUMPDEST SWAP4 POP SWAP4 POP POP PUSH1 0xC0 PUSH2 0xCA7 DUP12 DUP3 DUP13 ADD PUSH2 0xB52 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP9 POP SWAP3 SWAP6 SWAP9 SWAP1 SWAP4 SWAP7 POP JUMP JUMPDEST PUSH2 0xCC0 DUP2 PUSH2 0xB2B JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xCD9 PUSH0 DUP4 ADD DUP5 PUSH2 0xCB7 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xCF5 JUMPI PUSH2 0xCF4 PUSH2 0xAC9 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0xD02 DUP6 DUP3 DUP7 ADD PUSH2 0xB52 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0xD13 DUP6 DUP3 DUP7 ADD PUSH2 0xB85 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH2 0xD26 DUP2 PUSH2 0xB66 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0xD35 DUP2 PUSH2 0xAD1 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP3 DUP2 DUP4 MCOPY PUSH0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0xD7D DUP3 PUSH2 0xD3B JUMP JUMPDEST PUSH2 0xD87 DUP2 DUP6 PUSH2 0xD45 JUMP JUMPDEST SWAP4 POP PUSH2 0xD97 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0xD55 JUMP JUMPDEST PUSH2 0xDA0 DUP2 PUSH2 0xD63 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x100 DUP3 ADD SWAP1 POP PUSH2 0xDBF PUSH0 DUP4 ADD DUP12 PUSH2 0xCB7 JUMP JUMPDEST PUSH2 0xDCC PUSH1 0x20 DUP4 ADD DUP11 PUSH2 0xCB7 JUMP JUMPDEST PUSH2 0xDD9 PUSH1 0x40 DUP4 ADD DUP10 PUSH2 0xD1D JUMP JUMPDEST PUSH2 0xDE6 PUSH1 0x60 DUP4 ADD DUP9 PUSH2 0xD1D JUMP JUMPDEST PUSH2 0xDF3 PUSH1 0x80 DUP4 ADD DUP8 PUSH2 0xD1D JUMP JUMPDEST PUSH2 0xE00 PUSH1 0xA0 DUP4 ADD DUP7 PUSH2 0xD2C JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0xC0 DUP4 ADD MSTORE PUSH2 0xE12 DUP2 DUP6 PUSH2 0xD73 JUMP JUMPDEST SWAP1 POP PUSH2 0xE21 PUSH1 0xE0 DUP4 ADD DUP5 PUSH2 0xCB7 JUMP JUMPDEST SWAP10 SWAP9 POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xE43 JUMPI PUSH2 0xE42 PUSH2 0xAC9 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0xE50 DUP5 DUP3 DUP6 ADD PUSH2 0xB52 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0xE98 PUSH2 0xE93 PUSH2 0xE8E DUP5 PUSH2 0xE59 JUMP JUMPDEST PUSH2 0xE75 JUMP JUMPDEST PUSH2 0xE62 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xEA8 DUP2 PUSH2 0xE7E JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xEC1 PUSH0 DUP4 ADD DUP5 PUSH2 0xE9F JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x496E76616C696420616464726573730000000000000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0xEFB PUSH1 0xF DUP4 PUSH2 0xD45 JUMP JUMPDEST SWAP2 POP PUSH2 0xF06 DUP3 PUSH2 0xEC7 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0xF28 DUP2 PUSH2 0xEEF JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0xFA0 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0xFB3 JUMPI PUSH2 0xFB2 PUSH2 0xF5C JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP DUP2 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 PUSH1 0x1F DUP4 ADD DIV SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 SHL SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x8 DUP4 MUL PUSH2 0x1015 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 PUSH2 0xFDA JUMP JUMPDEST PUSH2 0x101F DUP7 DUP4 PUSH2 0xFDA JUMP JUMPDEST SWAP6 POP DUP1 NOT DUP5 AND SWAP4 POP DUP1 DUP7 AND DUP5 OR SWAP3 POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x1051 PUSH2 0x104C PUSH2 0x1047 DUP5 PUSH2 0xB66 JUMP JUMPDEST PUSH2 0xE75 JUMP JUMPDEST PUSH2 0xB66 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x106A DUP4 PUSH2 0x1037 JUMP JUMPDEST PUSH2 0x107E PUSH2 0x1076 DUP3 PUSH2 0x1058 JUMP JUMPDEST DUP5 DUP5 SLOAD PUSH2 0xFE6 JUMP JUMPDEST DUP3 SSTORE POP POP POP POP JUMP JUMPDEST PUSH0 PUSH0 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x1095 PUSH2 0x1086 JUMP JUMPDEST PUSH2 0x10A0 DUP2 DUP5 DUP5 PUSH2 0x1061 JUMP JUMPDEST POP POP POP JUMP JUMPDEST JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x10C3 JUMPI PUSH2 0x10B8 PUSH0 DUP3 PUSH2 0x108D JUMP JUMPDEST PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x10A6 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH2 0x1108 JUMPI PUSH2 0x10D9 DUP2 PUSH2 0xFB9 JUMP JUMPDEST PUSH2 0x10E2 DUP5 PUSH2 0xFCB JUMP JUMPDEST DUP2 ADD PUSH1 0x20 DUP6 LT ISZERO PUSH2 0x10F1 JUMPI DUP2 SWAP1 POP JUMPDEST PUSH2 0x1105 PUSH2 0x10FD DUP6 PUSH2 0xFCB JUMP JUMPDEST DUP4 ADD DUP3 PUSH2 0x10A5 JUMP JUMPDEST POP POP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 DUP3 DUP3 SHR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x1128 PUSH0 NOT DUP5 PUSH1 0x8 MUL PUSH2 0x110D JUMP JUMPDEST NOT DUP1 DUP4 AND SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x1140 DUP4 DUP4 PUSH2 0x1119 JUMP JUMPDEST SWAP2 POP DUP3 PUSH1 0x2 MUL DUP3 OR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1159 DUP3 PUSH2 0xD3B JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1172 JUMPI PUSH2 0x1171 PUSH2 0xF2F JUMP JUMPDEST JUMPDEST PUSH2 0x117C DUP3 SLOAD PUSH2 0xF89 JUMP JUMPDEST PUSH2 0x1187 DUP3 DUP3 DUP6 PUSH2 0x10C7 JUMP JUMPDEST PUSH0 PUSH1 0x20 SWAP1 POP PUSH1 0x1F DUP4 GT PUSH1 0x1 DUP2 EQ PUSH2 0x11B8 JUMPI PUSH0 DUP5 ISZERO PUSH2 0x11A6 JUMPI DUP3 DUP8 ADD MLOAD SWAP1 POP JUMPDEST PUSH2 0x11B0 DUP6 DUP3 PUSH2 0x1135 JUMP JUMPDEST DUP7 SSTORE POP PUSH2 0x1217 JUMP JUMPDEST PUSH1 0x1F NOT DUP5 AND PUSH2 0x11C6 DUP7 PUSH2 0xFB9 JUMP JUMPDEST PUSH0 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x11ED JUMPI DUP5 DUP10 ADD MLOAD DUP3 SSTORE PUSH1 0x1 DUP3 ADD SWAP2 POP PUSH1 0x20 DUP6 ADD SWAP5 POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x11C8 JUMP JUMPDEST DUP7 DUP4 LT ISZERO PUSH2 0x120A JUMPI DUP5 DUP10 ADD MLOAD PUSH2 0x1206 PUSH1 0x1F DUP10 AND DUP3 PUSH2 0x1119 JUMP JUMPDEST DUP4 SSTORE POP JUMPDEST PUSH1 0x1 PUSH1 0x2 DUP9 MUL ADD DUP9 SSTORE POP POP POP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1232 PUSH0 DUP4 ADD DUP5 PUSH2 0xD1D JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xD5 0x24 0x2B DUP13 SWAP14 SELFBALANCE 0xDD DUP2 0xAF NOT STATICCALL PUSH27 0xDBE60B865414A51554862264E102BBFF2A397DAB64736F6C634300 ADDMOD 0x1E STOP CALLER ",
							"sourceMap": "297:1180:11:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3155:101:0;;;:::i;:::-;;757:86:11;;;:::i;:::-;;851:623;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;2441:144:0;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;592:57:11;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;;;;;;;:::i;:::-;;;;;;;;3405:215:0;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;3155:101;2334:13;:11;:13::i;:::-;3219:30:::1;3246:1;3219:18;:30::i;:::-;3155:101::o:0;757:86:11:-;4158:30:1;4191:26;:24;:26::i;:::-;4158:59;;4279:19;4302:1;:15;;;;;;;;;;;;4301:16;4279:38;;4327:18;4348:1;:14;;;;;;;;;;;;4327:35;;4704:17;4739:1;4724:11;:16;;;:34;;;;;4744:14;4724:34;4704:54;;4768:17;4803:1;4788:11;:16;;;:50;;;;;4837:1;4816:4;4808:25;;;:30;4788:50;4768:70;;4854:12;4853:13;:30;;;;;4871:12;4870:13;4853:30;4849:91;;;4906:23;;;;;;;;;;;;;;4849:91;4966:1;4949;:14;;;:18;;;;;;;;;;;;;;;;;;4981:14;4977:67;;;5029:4;5011:1;:15;;;:22;;;;;;;;;;;;;;;;;;4977:67;809:26:11::1;824:10;809:14;:26::i;:::-;5068:14:1::0;5064:101;;;5116:5;5098:1;:15;;;:23;;;;;;;;;;;;;;;;;;5140:14;5152:1;5140:14;;;;;;:::i;:::-;;;;;;;;5064:101;4092:1079;;;;;757:86:11:o;851:623::-;1047:1;1026:23;;:9;:23;;;;:46;;;;;1070:1;1053:19;;:5;:19;;;;1026:46;1018:74;;;;;;;;;;;;:::i;:::-;;;;;;;;;1103:16;:28;1120:10;1103:28;;;;;;;;;;;;;;;1137:264;;;;;;;;1172:10;1137:264;;;;;;1208:9;1137:264;;;;;;1240:6;1137:264;;;;1266:3;1137:264;;;;1292:6;1137:264;;;;1324:9;1137:264;;;;;;1356:6;;1137:264;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1384:5;1137:264;;;;;1103:299;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1448:9;1418:48;;1436:10;1418:48;;;1459:6;1418:48;;;;;;:::i;:::-;;;;;;;;851:623;;;;;;;;:::o;2441:144:0:-;2487:7;2506:24;2533:20;:18;:20::i;:::-;2506:47;;2570:1;:8;;;;;;;;;;;;2563:15;;;2441:144;:::o;592:57:11:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;3405:215:0:-;2334:13;:11;:13::i;:::-;3509:1:::1;3489:22;;:8;:22;;::::0;3485:91:::1;;3562:1;3534:31;;;;;;;;;;;:::i;:::-;;;;;;;;3485:91;3585:28;3604:8;3585:18;:28::i;:::-;3405:215:::0;:::o;2658:162::-;2728:12;:10;:12::i;:::-;2717:23;;:7;:5;:7::i;:::-;:23;;;2713:101;;2790:12;:10;:12::i;:::-;2763:40;;;;;;;;;;;:::i;:::-;;;;;;;;2713:101;2658:162::o;3774:248::-;3847:24;3874:20;:18;:20::i;:::-;3847:47;;3904:16;3923:1;:8;;;;;;;;;;;;3904:27;;3952:8;3941:1;:8;;;:19;;;;;;;;;;;;;;;;;;4006:8;3975:40;;3996:8;3975:40;;;;;;;;;;;;3837:185;;3774:248;:::o;9071:205:1:-;9129:30;9171:12;9186:27;:25;:27::i;:::-;9171:42;;9256:4;9246:14;;9232:38;9071:205;:::o;1847:127:0:-;6929:20:1;:18;:20::i;:::-;1929:38:0::1;1954:12;1929:24;:38::i;:::-;1847:127:::0;:::o;1192:159::-;1244:24;1313:22;1303:32;;1192:159;:::o;887:96:3:-;940:7;966:10;959:17;;887:96;:::o;8819:122:1:-;8887:7;3147:66;8913:21;;8906:28;;8819:122;:::o;7082:141::-;7149:17;:15;:17::i;:::-;7144:73;;7189:17;;;;;;;;;;;;;;7144:73;7082:141::o;1980:235:0:-;6929:20:1;:18;:20::i;:::-;2100:1:0::1;2076:26;;:12;:26;;::::0;2072:95:::1;;2153:1;2125:31;;;;;;;;;;;:::i;:::-;;;;;;;;2072:95;2176:32;2195:12;2176:18;:32::i;:::-;1980:235:::0;:::o;8485:120:1:-;8535:4;8558:26;:24;:26::i;:::-;:40;;;;;;;;;;;;8551:47;;8485:120;:::o;88:117:12:-;197:1;194;187:12;211:117;320:1;317;310:12;334:97;370:7;410:14;403:5;399:26;388:37;;334:97;;;:::o;437:120::-;509:23;526:5;509:23;:::i;:::-;502:5;499:34;489:62;;547:1;544;537:12;489:62;437:120;:::o;563:137::-;608:5;646:6;633:20;624:29;;662:32;688:5;662:32;:::i;:::-;563:137;;;;:::o;706:126::-;743:7;783:42;776:5;772:54;761:65;;706:126;;;:::o;838:96::-;875:7;904:24;922:5;904:24;:::i;:::-;893:35;;838:96;;;:::o;940:122::-;1013:24;1031:5;1013:24;:::i;:::-;1006:5;1003:35;993:63;;1052:1;1049;1042:12;993:63;940:122;:::o;1068:139::-;1114:5;1152:6;1139:20;1130:29;;1168:33;1195:5;1168:33;:::i;:::-;1068:139;;;;:::o;1213:77::-;1250:7;1279:5;1268:16;;1213:77;;;:::o;1296:122::-;1369:24;1387:5;1369:24;:::i;:::-;1362:5;1359:35;1349:63;;1408:1;1405;1398:12;1349:63;1296:122;:::o;1424:139::-;1470:5;1508:6;1495:20;1486:29;;1524:33;1551:5;1524:33;:::i;:::-;1424:139;;;;:::o;1569:117::-;1678:1;1675;1668:12;1692:117;1801:1;1798;1791:12;1815:117;1924:1;1921;1914:12;1952:553;2010:8;2020:6;2070:3;2063:4;2055:6;2051:17;2047:27;2037:122;;2078:79;;:::i;:::-;2037:122;2191:6;2178:20;2168:30;;2221:18;2213:6;2210:30;2207:117;;;2243:79;;:::i;:::-;2207:117;2357:4;2349:6;2345:17;2333:29;;2411:3;2403:4;2395:6;2391:17;2381:8;2377:32;2374:41;2371:128;;;2418:79;;:::i;:::-;2371:128;1952:553;;;;;:::o;2511:1401::-;2635:6;2643;2651;2659;2667;2675;2683;2691;2740:3;2728:9;2719:7;2715:23;2711:33;2708:120;;;2747:79;;:::i;:::-;2708:120;2867:1;2892:52;2936:7;2927:6;2916:9;2912:22;2892:52;:::i;:::-;2882:62;;2838:116;2993:2;3019:53;3064:7;3055:6;3044:9;3040:22;3019:53;:::i;:::-;3009:63;;2964:118;3121:2;3147:53;3192:7;3183:6;3172:9;3168:22;3147:53;:::i;:::-;3137:63;;3092:118;3249:2;3275:53;3320:7;3311:6;3300:9;3296:22;3275:53;:::i;:::-;3265:63;;3220:118;3377:3;3404:53;3449:7;3440:6;3429:9;3425:22;3404:53;:::i;:::-;3394:63;;3348:119;3534:3;3523:9;3519:19;3506:33;3566:18;3558:6;3555:30;3552:117;;;3588:79;;:::i;:::-;3552:117;3701:65;3758:7;3749:6;3738:9;3734:22;3701:65;:::i;:::-;3683:83;;;;3477:299;3815:3;3842:53;3887:7;3878:6;3867:9;3863:22;3842:53;:::i;:::-;3832:63;;3786:119;2511:1401;;;;;;;;;;;:::o;3918:118::-;4005:24;4023:5;4005:24;:::i;:::-;4000:3;3993:37;3918:118;;:::o;4042:222::-;4135:4;4173:2;4162:9;4158:18;4150:26;;4186:71;4254:1;4243:9;4239:17;4230:6;4186:71;:::i;:::-;4042:222;;;;:::o;4270:474::-;4338:6;4346;4395:2;4383:9;4374:7;4370:23;4366:32;4363:119;;;4401:79;;:::i;:::-;4363:119;4521:1;4546:53;4591:7;4582:6;4571:9;4567:22;4546:53;:::i;:::-;4536:63;;4492:117;4648:2;4674:53;4719:7;4710:6;4699:9;4695:22;4674:53;:::i;:::-;4664:63;;4619:118;4270:474;;;;;:::o;4750:118::-;4837:24;4855:5;4837:24;:::i;:::-;4832:3;4825:37;4750:118;;:::o;4874:115::-;4959:23;4976:5;4959:23;:::i;:::-;4954:3;4947:36;4874:115;;:::o;4995:99::-;5047:6;5081:5;5075:12;5065:22;;4995:99;;;:::o;5100:169::-;5184:11;5218:6;5213:3;5206:19;5258:4;5253:3;5249:14;5234:29;;5100:169;;;;:::o;5275:139::-;5364:6;5359:3;5354;5348:23;5405:1;5396:6;5391:3;5387:16;5380:27;5275:139;;;:::o;5420:102::-;5461:6;5512:2;5508:7;5503:2;5496:5;5492:14;5488:28;5478:38;;5420:102;;;:::o;5528:377::-;5616:3;5644:39;5677:5;5644:39;:::i;:::-;5699:71;5763:6;5758:3;5699:71;:::i;:::-;5692:78;;5779:65;5837:6;5832:3;5825:4;5818:5;5814:16;5779:65;:::i;:::-;5869:29;5891:6;5869:29;:::i;:::-;5864:3;5860:39;5853:46;;5620:285;5528:377;;;;:::o;5911:1084::-;6218:4;6256:3;6245:9;6241:19;6233:27;;6270:71;6338:1;6327:9;6323:17;6314:6;6270:71;:::i;:::-;6351:72;6419:2;6408:9;6404:18;6395:6;6351:72;:::i;:::-;6433;6501:2;6490:9;6486:18;6477:6;6433:72;:::i;:::-;6515;6583:2;6572:9;6568:18;6559:6;6515:72;:::i;:::-;6597:73;6665:3;6654:9;6650:19;6641:6;6597:73;:::i;:::-;6680:71;6746:3;6735:9;6731:19;6722:6;6680:71;:::i;:::-;6799:9;6793:4;6789:20;6783:3;6772:9;6768:19;6761:49;6827:78;6900:4;6891:6;6827:78;:::i;:::-;6819:86;;6915:73;6983:3;6972:9;6968:19;6959:6;6915:73;:::i;:::-;5911:1084;;;;;;;;;;;:::o;7001:329::-;7060:6;7109:2;7097:9;7088:7;7084:23;7080:32;7077:119;;;7115:79;;:::i;:::-;7077:119;7235:1;7260:53;7305:7;7296:6;7285:9;7281:22;7260:53;:::i;:::-;7250:63;;7206:117;7001:329;;;;:::o;7336:85::-;7381:7;7410:5;7399:16;;7336:85;;;:::o;7427:101::-;7463:7;7503:18;7496:5;7492:30;7481:41;;7427:101;;;:::o;7534:60::-;7562:3;7583:5;7576:12;;7534:60;;;:::o;7600:156::-;7657:9;7690:60;7707:42;7716:32;7742:5;7716:32;:::i;:::-;7707:42;:::i;:::-;7690:60;:::i;:::-;7677:73;;7600:156;;;:::o;7762:145::-;7856:44;7894:5;7856:44;:::i;:::-;7851:3;7844:57;7762:145;;:::o;7913:236::-;8013:4;8051:2;8040:9;8036:18;8028:26;;8064:78;8139:1;8128:9;8124:17;8115:6;8064:78;:::i;:::-;7913:236;;;;:::o;8155:165::-;8295:17;8291:1;8283:6;8279:14;8272:41;8155:165;:::o;8326:366::-;8468:3;8489:67;8553:2;8548:3;8489:67;:::i;:::-;8482:74;;8565:93;8654:3;8565:93;:::i;:::-;8683:2;8678:3;8674:12;8667:19;;8326:366;;;:::o;8698:419::-;8864:4;8902:2;8891:9;8887:18;8879:26;;8951:9;8945:4;8941:20;8937:1;8926:9;8922:17;8915:47;8979:131;9105:4;8979:131;:::i;:::-;8971:139;;8698:419;;;:::o;9123:180::-;9171:77;9168:1;9161:88;9268:4;9265:1;9258:15;9292:4;9289:1;9282:15;9309:180;9357:77;9354:1;9347:88;9454:4;9451:1;9444:15;9478:4;9475:1;9468:15;9495:320;9539:6;9576:1;9570:4;9566:12;9556:22;;9623:1;9617:4;9613:12;9644:18;9634:81;;9700:4;9692:6;9688:17;9678:27;;9634:81;9762:2;9754:6;9751:14;9731:18;9728:38;9725:84;;9781:18;;:::i;:::-;9725:84;9546:269;9495:320;;;:::o;9821:141::-;9870:4;9893:3;9885:11;;9916:3;9913:1;9906:14;9950:4;9947:1;9937:18;9929:26;;9821:141;;;:::o;9968:93::-;10005:6;10052:2;10047;10040:5;10036:14;10032:23;10022:33;;9968:93;;;:::o;10067:107::-;10111:8;10161:5;10155:4;10151:16;10130:37;;10067:107;;;;:::o;10180:393::-;10249:6;10299:1;10287:10;10283:18;10322:97;10352:66;10341:9;10322:97;:::i;:::-;10440:39;10470:8;10459:9;10440:39;:::i;:::-;10428:51;;10512:4;10508:9;10501:5;10497:21;10488:30;;10561:4;10551:8;10547:19;10540:5;10537:30;10527:40;;10256:317;;10180:393;;;;;:::o;10579:142::-;10629:9;10662:53;10680:34;10689:24;10707:5;10689:24;:::i;:::-;10680:34;:::i;:::-;10662:53;:::i;:::-;10649:66;;10579:142;;;:::o;10727:75::-;10770:3;10791:5;10784:12;;10727:75;;;:::o;10808:269::-;10918:39;10949:7;10918:39;:::i;:::-;10979:91;11028:41;11052:16;11028:41;:::i;:::-;11020:6;11013:4;11007:11;10979:91;:::i;:::-;10973:4;10966:105;10884:193;10808:269;;;:::o;11083:73::-;11128:3;11149:1;11142:8;;11083:73;:::o;11162:189::-;11239:32;;:::i;:::-;11280:65;11338:6;11330;11324:4;11280:65;:::i;:::-;11215:136;11162:189;;:::o;11357:186::-;11417:120;11434:3;11427:5;11424:14;11417:120;;;11488:39;11525:1;11518:5;11488:39;:::i;:::-;11461:1;11454:5;11450:13;11441:22;;11417:120;;;11357:186;;:::o;11549:543::-;11650:2;11645:3;11642:11;11639:446;;;11684:38;11716:5;11684:38;:::i;:::-;11768:29;11786:10;11768:29;:::i;:::-;11758:8;11754:44;11951:2;11939:10;11936:18;11933:49;;;11972:8;11957:23;;11933:49;11995:80;12051:22;12069:3;12051:22;:::i;:::-;12041:8;12037:37;12024:11;11995:80;:::i;:::-;11654:431;;11639:446;11549:543;;;:::o;12098:117::-;12152:8;12202:5;12196:4;12192:16;12171:37;;12098:117;;;;:::o;12221:169::-;12265:6;12298:51;12346:1;12342:6;12334:5;12331:1;12327:13;12298:51;:::i;:::-;12294:56;12379:4;12373;12369:15;12359:25;;12272:118;12221:169;;;;:::o;12395:295::-;12471:4;12617:29;12642:3;12636:4;12617:29;:::i;:::-;12609:37;;12679:3;12676:1;12672:11;12666:4;12663:21;12655:29;;12395:295;;;;:::o;12695:1395::-;12812:37;12845:3;12812:37;:::i;:::-;12914:18;12906:6;12903:30;12900:56;;;12936:18;;:::i;:::-;12900:56;12980:38;13012:4;13006:11;12980:38;:::i;:::-;13065:67;13125:6;13117;13111:4;13065:67;:::i;:::-;13159:1;13183:4;13170:17;;13215:2;13207:6;13204:14;13232:1;13227:618;;;;13889:1;13906:6;13903:77;;;13955:9;13950:3;13946:19;13940:26;13931:35;;13903:77;14006:67;14066:6;14059:5;14006:67;:::i;:::-;14000:4;13993:81;13862:222;13197:887;;13227:618;13279:4;13275:9;13267:6;13263:22;13313:37;13345:4;13313:37;:::i;:::-;13372:1;13386:208;13400:7;13397:1;13394:14;13386:208;;;13479:9;13474:3;13470:19;13464:26;13456:6;13449:42;13530:1;13522:6;13518:14;13508:24;;13577:2;13566:9;13562:18;13549:31;;13423:4;13420:1;13416:12;13411:17;;13386:208;;;13622:6;13613:7;13610:19;13607:179;;;13680:9;13675:3;13671:19;13665:26;13723:48;13765:4;13757:6;13753:17;13742:9;13723:48;:::i;:::-;13715:6;13708:64;13630:156;13607:179;13832:1;13828;13820:6;13816:14;13812:22;13806:4;13799:36;13234:611;;;13197:887;;12787:1303;;;12695:1395;;:::o;14096:222::-;14189:4;14227:2;14216:9;14212:18;14204:26;;14240:71;14308:1;14297:9;14293:17;14284:6;14240:71;:::i;:::-;14096:222;;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "943600",
								"executionCost": "979",
								"totalCost": "944579"
							},
							"external": {
								"initialize()": "infinite",
								"logTransaction(uint48,address,uint256,uint256,uint256,string,address)": "infinite",
								"owner()": "2610",
								"renounceOwnership()": "infinite",
								"transferOwnership(address)": "infinite",
								"userTransactions(address,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 297,
									"end": 1477,
									"name": "PUSH",
									"source": 11,
									"value": "80"
								},
								{
									"begin": 297,
									"end": 1477,
									"name": "PUSH",
									"source": 11,
									"value": "40"
								},
								{
									"begin": 297,
									"end": 1477,
									"name": "MSTORE",
									"source": 11
								},
								{
									"begin": 297,
									"end": 1477,
									"name": "CALLVALUE",
									"source": 11
								},
								{
									"begin": 297,
									"end": 1477,
									"name": "DUP1",
									"source": 11
								},
								{
									"begin": 297,
									"end": 1477,
									"name": "ISZERO",
									"source": 11
								},
								{
									"begin": 297,
									"end": 1477,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "1"
								},
								{
									"begin": 297,
									"end": 1477,
									"name": "JUMPI",
									"source": 11
								},
								{
									"begin": 297,
									"end": 1477,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 297,
									"end": 1477,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 297,
									"end": 1477,
									"name": "REVERT",
									"source": 11
								},
								{
									"begin": 297,
									"end": 1477,
									"name": "tag",
									"source": 11,
									"value": "1"
								},
								{
									"begin": 297,
									"end": 1477,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 297,
									"end": 1477,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 297,
									"end": 1477,
									"name": "PUSH #[$]",
									"source": 11,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 297,
									"end": 1477,
									"name": "DUP1",
									"source": 11
								},
								{
									"begin": 297,
									"end": 1477,
									"name": "PUSH [$]",
									"source": 11,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 297,
									"end": 1477,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 297,
									"end": 1477,
									"name": "CODECOPY",
									"source": 11
								},
								{
									"begin": 297,
									"end": 1477,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 297,
									"end": 1477,
									"name": "RETURN",
									"source": 11
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220d5242b8c9d47dd81af19fa7adbe60b865414a51554862264e102bbff2a397dab64736f6c634300081e0033",
									".code": [
										{
											"begin": 297,
											"end": 1477,
											"name": "PUSH",
											"source": 11,
											"value": "80"
										},
										{
											"begin": 297,
											"end": 1477,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 297,
											"end": 1477,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 297,
											"end": 1477,
											"name": "CALLVALUE",
											"source": 11
										},
										{
											"begin": 297,
											"end": 1477,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 297,
											"end": 1477,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 297,
											"end": 1477,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "1"
										},
										{
											"begin": 297,
											"end": 1477,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 297,
											"end": 1477,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 297,
											"end": 1477,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 297,
											"end": 1477,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 297,
											"end": 1477,
											"name": "tag",
											"source": 11,
											"value": "1"
										},
										{
											"begin": 297,
											"end": 1477,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 297,
											"end": 1477,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 297,
											"end": 1477,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 297,
											"end": 1477,
											"name": "CALLDATASIZE",
											"source": 11
										},
										{
											"begin": 297,
											"end": 1477,
											"name": "LT",
											"source": 11
										},
										{
											"begin": 297,
											"end": 1477,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "2"
										},
										{
											"begin": 297,
											"end": 1477,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 297,
											"end": 1477,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 297,
											"end": 1477,
											"name": "CALLDATALOAD",
											"source": 11
										},
										{
											"begin": 297,
											"end": 1477,
											"name": "PUSH",
											"source": 11,
											"value": "E0"
										},
										{
											"begin": 297,
											"end": 1477,
											"name": "SHR",
											"source": 11
										},
										{
											"begin": 297,
											"end": 1477,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 297,
											"end": 1477,
											"name": "PUSH",
											"source": 11,
											"value": "715018A6"
										},
										{
											"begin": 297,
											"end": 1477,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 297,
											"end": 1477,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "3"
										},
										{
											"begin": 297,
											"end": 1477,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 297,
											"end": 1477,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 297,
											"end": 1477,
											"name": "PUSH",
											"source": 11,
											"value": "8129FC1C"
										},
										{
											"begin": 297,
											"end": 1477,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 297,
											"end": 1477,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 297,
											"end": 1477,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 297,
											"end": 1477,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 297,
											"end": 1477,
											"name": "PUSH",
											"source": 11,
											"value": "83DC65F2"
										},
										{
											"begin": 297,
											"end": 1477,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 297,
											"end": 1477,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "5"
										},
										{
											"begin": 297,
											"end": 1477,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 297,
											"end": 1477,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 297,
											"end": 1477,
											"name": "PUSH",
											"source": 11,
											"value": "8DA5CB5B"
										},
										{
											"begin": 297,
											"end": 1477,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 297,
											"end": 1477,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "6"
										},
										{
											"begin": 297,
											"end": 1477,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 297,
											"end": 1477,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 297,
											"end": 1477,
											"name": "PUSH",
											"source": 11,
											"value": "B842EC44"
										},
										{
											"begin": 297,
											"end": 1477,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 297,
											"end": 1477,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "7"
										},
										{
											"begin": 297,
											"end": 1477,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 297,
											"end": 1477,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 297,
											"end": 1477,
											"name": "PUSH",
											"source": 11,
											"value": "F2FDE38B"
										},
										{
											"begin": 297,
											"end": 1477,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 297,
											"end": 1477,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "8"
										},
										{
											"begin": 297,
											"end": 1477,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 297,
											"end": 1477,
											"name": "tag",
											"source": 11,
											"value": "2"
										},
										{
											"begin": 297,
											"end": 1477,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 297,
											"end": 1477,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 297,
											"end": 1477,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 297,
											"end": 1477,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 3155,
											"end": 3256,
											"name": "tag",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 3155,
											"end": 3256,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3155,
											"end": 3256,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 3155,
											"end": 3256,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 3155,
											"end": 3256,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3155,
											"end": 3256,
											"name": "tag",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 3155,
											"end": 3256,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3155,
											"end": 3256,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 757,
											"end": 843,
											"name": "tag",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 757,
											"end": 843,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 757,
											"end": 843,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "11"
										},
										{
											"begin": 757,
											"end": 843,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "12"
										},
										{
											"begin": 757,
											"end": 843,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 757,
											"end": 843,
											"name": "tag",
											"source": 11,
											"value": "11"
										},
										{
											"begin": 757,
											"end": 843,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 757,
											"end": 843,
											"name": "STOP",
											"source": 11
										},
										{
											"begin": 851,
											"end": 1474,
											"name": "tag",
											"source": 11,
											"value": "5"
										},
										{
											"begin": 851,
											"end": 1474,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 851,
											"end": 1474,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "13"
										},
										{
											"begin": 851,
											"end": 1474,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 851,
											"end": 1474,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 851,
											"end": 1474,
											"name": "CALLDATASIZE",
											"source": 11
										},
										{
											"begin": 851,
											"end": 1474,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 851,
											"end": 1474,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 851,
											"end": 1474,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 851,
											"end": 1474,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 851,
											"end": 1474,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "14"
										},
										{
											"begin": 851,
											"end": 1474,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 851,
											"end": 1474,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 851,
											"end": 1474,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "15"
										},
										{
											"begin": 851,
											"end": 1474,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 851,
											"end": 1474,
											"name": "tag",
											"source": 11,
											"value": "14"
										},
										{
											"begin": 851,
											"end": 1474,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 851,
											"end": 1474,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "16"
										},
										{
											"begin": 851,
											"end": 1474,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 851,
											"end": 1474,
											"name": "tag",
											"source": 11,
											"value": "13"
										},
										{
											"begin": 851,
											"end": 1474,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 851,
											"end": 1474,
											"name": "STOP",
											"source": 11
										},
										{
											"begin": 2441,
											"end": 2585,
											"name": "tag",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 2441,
											"end": 2585,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2441,
											"end": 2585,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 2441,
											"end": 2585,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 2441,
											"end": 2585,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2441,
											"end": 2585,
											"name": "tag",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 2441,
											"end": 2585,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2441,
											"end": 2585,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2441,
											"end": 2585,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2441,
											"end": 2585,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 2441,
											"end": 2585,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2441,
											"end": 2585,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2441,
											"end": 2585,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2441,
											"end": 2585,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2441,
											"end": 2585,
											"name": "tag",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 2441,
											"end": 2585,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2441,
											"end": 2585,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2441,
											"end": 2585,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2441,
											"end": 2585,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2441,
											"end": 2585,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2441,
											"end": 2585,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2441,
											"end": 2585,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2441,
											"end": 2585,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 592,
											"end": 649,
											"name": "tag",
											"source": 11,
											"value": "7"
										},
										{
											"begin": 592,
											"end": 649,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 592,
											"end": 649,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "21"
										},
										{
											"begin": 592,
											"end": 649,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 592,
											"end": 649,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 592,
											"end": 649,
											"name": "CALLDATASIZE",
											"source": 11
										},
										{
											"begin": 592,
											"end": 649,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 592,
											"end": 649,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 592,
											"end": 649,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 592,
											"end": 649,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 592,
											"end": 649,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "22"
										},
										{
											"begin": 592,
											"end": 649,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 592,
											"end": 649,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 592,
											"end": 649,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "23"
										},
										{
											"begin": 592,
											"end": 649,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 592,
											"end": 649,
											"name": "tag",
											"source": 11,
											"value": "22"
										},
										{
											"begin": 592,
											"end": 649,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 592,
											"end": 649,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "24"
										},
										{
											"begin": 592,
											"end": 649,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 592,
											"end": 649,
											"name": "tag",
											"source": 11,
											"value": "21"
										},
										{
											"begin": 592,
											"end": 649,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 592,
											"end": 649,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 592,
											"end": 649,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 592,
											"end": 649,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "25"
										},
										{
											"begin": 592,
											"end": 649,
											"name": "SWAP9",
											"source": 11
										},
										{
											"begin": 592,
											"end": 649,
											"name": "SWAP8",
											"source": 11
										},
										{
											"begin": 592,
											"end": 649,
											"name": "SWAP7",
											"source": 11
										},
										{
											"begin": 592,
											"end": 649,
											"name": "SWAP6",
											"source": 11
										},
										{
											"begin": 592,
											"end": 649,
											"name": "SWAP5",
											"source": 11
										},
										{
											"begin": 592,
											"end": 649,
											"name": "SWAP4",
											"source": 11
										},
										{
											"begin": 592,
											"end": 649,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 592,
											"end": 649,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 592,
											"end": 649,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 592,
											"end": 649,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "26"
										},
										{
											"begin": 592,
											"end": 649,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 592,
											"end": 649,
											"name": "tag",
											"source": 11,
											"value": "25"
										},
										{
											"begin": 592,
											"end": 649,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 592,
											"end": 649,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 592,
											"end": 649,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 592,
											"end": 649,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 592,
											"end": 649,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 592,
											"end": 649,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 592,
											"end": 649,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 592,
											"end": 649,
											"name": "RETURN",
											"source": 11
										},
										{
											"begin": 3405,
											"end": 3620,
											"name": "tag",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 3405,
											"end": 3620,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3405,
											"end": 3620,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "27"
										},
										{
											"begin": 3405,
											"end": 3620,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 3405,
											"end": 3620,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3405,
											"end": 3620,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 3405,
											"end": 3620,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 3405,
											"end": 3620,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3405,
											"end": 3620,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3405,
											"end": 3620,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3405,
											"end": 3620,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "28"
										},
										{
											"begin": 3405,
											"end": 3620,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3405,
											"end": 3620,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3405,
											"end": 3620,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "29"
										},
										{
											"begin": 3405,
											"end": 3620,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3405,
											"end": 3620,
											"name": "tag",
											"source": 0,
											"value": "28"
										},
										{
											"begin": 3405,
											"end": 3620,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3405,
											"end": 3620,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "30"
										},
										{
											"begin": 3405,
											"end": 3620,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3405,
											"end": 3620,
											"name": "tag",
											"source": 0,
											"value": "27"
										},
										{
											"begin": 3405,
											"end": 3620,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3405,
											"end": 3620,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 3155,
											"end": 3256,
											"name": "tag",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 3155,
											"end": 3256,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2334,
											"end": 2347,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "32"
										},
										{
											"begin": 2334,
											"end": 2345,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "33"
										},
										{
											"begin": 2334,
											"end": 2347,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2334,
											"end": 2347,
											"name": "tag",
											"source": 0,
											"value": "32"
										},
										{
											"begin": 2334,
											"end": 2347,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3219,
											"end": 3249,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "35"
										},
										{
											"begin": 3246,
											"end": 3247,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3219,
											"end": 3237,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "36"
										},
										{
											"begin": 3219,
											"end": 3249,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3219,
											"end": 3249,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "35"
										},
										{
											"begin": 3219,
											"end": 3249,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3155,
											"end": 3256,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 757,
											"end": 843,
											"name": "tag",
											"source": 11,
											"value": "12"
										},
										{
											"begin": 757,
											"end": 843,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 4158,
											"end": 4188,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4191,
											"end": 4217,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "38"
										},
										{
											"begin": 4191,
											"end": 4215,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "39"
										},
										{
											"begin": 4191,
											"end": 4217,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4191,
											"end": 4217,
											"name": "tag",
											"source": 1,
											"value": "38"
										},
										{
											"begin": 4191,
											"end": 4217,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4158,
											"end": 4217,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4158,
											"end": 4217,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4279,
											"end": 4298,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4302,
											"end": 4303,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4302,
											"end": 4317,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4302,
											"end": 4317,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4302,
											"end": 4317,
											"name": "PUSH",
											"source": 1,
											"value": "8"
										},
										{
											"begin": 4302,
											"end": 4317,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4302,
											"end": 4317,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 4302,
											"end": 4317,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4302,
											"end": 4317,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 4302,
											"end": 4317,
											"name": "EXP",
											"source": 1
										},
										{
											"begin": 4302,
											"end": 4317,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4302,
											"end": 4317,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 4302,
											"end": 4317,
											"name": "PUSH",
											"source": 1,
											"value": "FF"
										},
										{
											"begin": 4302,
											"end": 4317,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 4301,
											"end": 4317,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 4279,
											"end": 4317,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4279,
											"end": 4317,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4327,
											"end": 4345,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4348,
											"end": 4349,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4348,
											"end": 4362,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4348,
											"end": 4362,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4348,
											"end": 4362,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4348,
											"end": 4362,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4348,
											"end": 4362,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 4348,
											"end": 4362,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4348,
											"end": 4362,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 4348,
											"end": 4362,
											"name": "EXP",
											"source": 1
										},
										{
											"begin": 4348,
											"end": 4362,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4348,
											"end": 4362,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 4348,
											"end": 4362,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4348,
											"end": 4362,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 4327,
											"end": 4362,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4327,
											"end": 4362,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4704,
											"end": 4721,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4739,
											"end": 4740,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4724,
											"end": 4735,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4724,
											"end": 4740,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4724,
											"end": 4740,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 4724,
											"end": 4740,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 4724,
											"end": 4758,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4724,
											"end": 4758,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 4724,
											"end": 4758,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 4724,
											"end": 4758,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 4724,
											"end": 4758,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4744,
											"end": 4758,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4724,
											"end": 4758,
											"name": "tag",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 4724,
											"end": 4758,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4704,
											"end": 4758,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4704,
											"end": 4758,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4768,
											"end": 4785,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4803,
											"end": 4804,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 4788,
											"end": 4799,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 4788,
											"end": 4804,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4788,
											"end": 4804,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 4788,
											"end": 4804,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 4788,
											"end": 4838,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4788,
											"end": 4838,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 4788,
											"end": 4838,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "41"
										},
										{
											"begin": 4788,
											"end": 4838,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 4788,
											"end": 4838,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4837,
											"end": 4838,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4816,
											"end": 4820,
											"name": "ADDRESS",
											"source": 1
										},
										{
											"begin": 4808,
											"end": 4833,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4808,
											"end": 4833,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 4808,
											"end": 4833,
											"name": "EXTCODESIZE",
											"source": 1
										},
										{
											"begin": 4808,
											"end": 4838,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 4788,
											"end": 4838,
											"name": "tag",
											"source": 1,
											"value": "41"
										},
										{
											"begin": 4788,
											"end": 4838,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4768,
											"end": 4838,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4768,
											"end": 4838,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4854,
											"end": 4866,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4853,
											"end": 4866,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 4853,
											"end": 4883,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4853,
											"end": 4883,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 4853,
											"end": 4883,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "42"
										},
										{
											"begin": 4853,
											"end": 4883,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 4853,
											"end": 4883,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4871,
											"end": 4883,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4870,
											"end": 4883,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 4853,
											"end": 4883,
											"name": "tag",
											"source": 1,
											"value": "42"
										},
										{
											"begin": 4853,
											"end": 4883,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4849,
											"end": 4940,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 4849,
											"end": 4940,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "43"
										},
										{
											"begin": 4849,
											"end": 4940,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 4906,
											"end": 4929,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 4906,
											"end": 4929,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 4906,
											"end": 4929,
											"name": "PUSH",
											"source": 1,
											"value": "F92EE8A900000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 4906,
											"end": 4929,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4906,
											"end": 4929,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4906,
											"end": 4929,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 4906,
											"end": 4929,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4906,
											"end": 4929,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 4906,
											"end": 4929,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 4906,
											"end": 4929,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4906,
											"end": 4929,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4906,
											"end": 4929,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 4906,
											"end": 4929,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4906,
											"end": 4929,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 4849,
											"end": 4940,
											"name": "tag",
											"source": 1,
											"value": "43"
										},
										{
											"begin": 4849,
											"end": 4940,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4966,
											"end": 4967,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 4949,
											"end": 4950,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 4949,
											"end": 4963,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4949,
											"end": 4963,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4949,
											"end": 4963,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4949,
											"end": 4967,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 4949,
											"end": 4967,
											"name": "EXP",
											"source": 1
										},
										{
											"begin": 4949,
											"end": 4967,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4949,
											"end": 4967,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 4949,
											"end": 4967,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4949,
											"end": 4967,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4949,
											"end": 4967,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 4949,
											"end": 4967,
											"name": "NOT",
											"source": 1
										},
										{
											"begin": 4949,
											"end": 4967,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 4949,
											"end": 4967,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4949,
											"end": 4967,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 4949,
											"end": 4967,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4949,
											"end": 4967,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 4949,
											"end": 4967,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 4949,
											"end": 4967,
											"name": "OR",
											"source": 1
										},
										{
											"begin": 4949,
											"end": 4967,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4949,
											"end": 4967,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 4949,
											"end": 4967,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4981,
											"end": 4995,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 4977,
											"end": 5044,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 4977,
											"end": 5044,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 4977,
											"end": 5044,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 5029,
											"end": 5033,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 5011,
											"end": 5012,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 5011,
											"end": 5026,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5011,
											"end": 5026,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5011,
											"end": 5026,
											"name": "PUSH",
											"source": 1,
											"value": "8"
										},
										{
											"begin": 5011,
											"end": 5033,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 5011,
											"end": 5033,
											"name": "EXP",
											"source": 1
										},
										{
											"begin": 5011,
											"end": 5033,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5011,
											"end": 5033,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 5011,
											"end": 5033,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5011,
											"end": 5033,
											"name": "PUSH",
											"source": 1,
											"value": "FF"
										},
										{
											"begin": 5011,
											"end": 5033,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 5011,
											"end": 5033,
											"name": "NOT",
											"source": 1
										},
										{
											"begin": 5011,
											"end": 5033,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 5011,
											"end": 5033,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5011,
											"end": 5033,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 5011,
											"end": 5033,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 5011,
											"end": 5033,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 5011,
											"end": 5033,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 5011,
											"end": 5033,
											"name": "OR",
											"source": 1
										},
										{
											"begin": 5011,
											"end": 5033,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5011,
											"end": 5033,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 5011,
											"end": 5033,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4977,
											"end": 5044,
											"name": "tag",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 4977,
											"end": 5044,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 809,
											"end": 835,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "46"
										},
										{
											"begin": 824,
											"end": 834,
											"modifierDepth": 1,
											"name": "CALLER",
											"source": 11
										},
										{
											"begin": 809,
											"end": 823,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "47"
										},
										{
											"begin": 809,
											"end": 835,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 809,
											"end": 835,
											"modifierDepth": 1,
											"name": "tag",
											"source": 11,
											"value": "46"
										},
										{
											"begin": 809,
											"end": 835,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 5068,
											"end": 5082,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 5064,
											"end": 5165,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 5064,
											"end": 5165,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "48"
										},
										{
											"begin": 5064,
											"end": 5165,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 5116,
											"end": 5121,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5098,
											"end": 5099,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 5098,
											"end": 5113,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5098,
											"end": 5113,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5098,
											"end": 5113,
											"name": "PUSH",
											"source": 1,
											"value": "8"
										},
										{
											"begin": 5098,
											"end": 5121,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 5098,
											"end": 5121,
											"name": "EXP",
											"source": 1
										},
										{
											"begin": 5098,
											"end": 5121,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5098,
											"end": 5121,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 5098,
											"end": 5121,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5098,
											"end": 5121,
											"name": "PUSH",
											"source": 1,
											"value": "FF"
										},
										{
											"begin": 5098,
											"end": 5121,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 5098,
											"end": 5121,
											"name": "NOT",
											"source": 1
										},
										{
											"begin": 5098,
											"end": 5121,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 5098,
											"end": 5121,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5098,
											"end": 5121,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 5098,
											"end": 5121,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 5098,
											"end": 5121,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 5098,
											"end": 5121,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 5098,
											"end": 5121,
											"name": "OR",
											"source": 1
										},
										{
											"begin": 5098,
											"end": 5121,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5098,
											"end": 5121,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 5098,
											"end": 5121,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5140,
											"end": 5154,
											"name": "PUSH",
											"source": 1,
											"value": "C7F505B2F371AE2175EE4913F4499E1F2633A7B5936321EED1CDAEB6115181D2"
										},
										{
											"begin": 5152,
											"end": 5153,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 5140,
											"end": 5154,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 5140,
											"end": 5154,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 5140,
											"end": 5154,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "49"
										},
										{
											"begin": 5140,
											"end": 5154,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 5140,
											"end": 5154,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5140,
											"end": 5154,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "50"
										},
										{
											"begin": 5140,
											"end": 5154,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5140,
											"end": 5154,
											"name": "tag",
											"source": 1,
											"value": "49"
										},
										{
											"begin": 5140,
											"end": 5154,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5140,
											"end": 5154,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 5140,
											"end": 5154,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 5140,
											"end": 5154,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 5140,
											"end": 5154,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 5140,
											"end": 5154,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 5140,
											"end": 5154,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5140,
											"end": 5154,
											"name": "LOG1",
											"source": 1
										},
										{
											"begin": 5064,
											"end": 5165,
											"name": "tag",
											"source": 1,
											"value": "48"
										},
										{
											"begin": 5064,
											"end": 5165,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4092,
											"end": 5171,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4092,
											"end": 5171,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4092,
											"end": 5171,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4092,
											"end": 5171,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4092,
											"end": 5171,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 757,
											"end": 843,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 851,
											"end": 1474,
											"name": "tag",
											"source": 11,
											"value": "16"
										},
										{
											"begin": 851,
											"end": 1474,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1047,
											"end": 1048,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 1026,
											"end": 1049,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1026,
											"end": 1049,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 1026,
											"end": 1035,
											"name": "DUP8",
											"source": 11
										},
										{
											"begin": 1026,
											"end": 1049,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1026,
											"end": 1049,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 1026,
											"end": 1049,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 1026,
											"end": 1049,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 1026,
											"end": 1072,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 1026,
											"end": 1072,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 1026,
											"end": 1072,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "52"
										},
										{
											"begin": 1026,
											"end": 1072,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 1026,
											"end": 1072,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 1070,
											"end": 1071,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 1053,
											"end": 1072,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1053,
											"end": 1072,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 1053,
											"end": 1058,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 1053,
											"end": 1072,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1053,
											"end": 1072,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 1053,
											"end": 1072,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 1053,
											"end": 1072,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 1026,
											"end": 1072,
											"name": "tag",
											"source": 11,
											"value": "52"
										},
										{
											"begin": 1026,
											"end": 1072,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1018,
											"end": 1092,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "53"
										},
										{
											"begin": 1018,
											"end": 1092,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 1018,
											"end": 1092,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 1018,
											"end": 1092,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 1018,
											"end": 1092,
											"name": "PUSH",
											"source": 11,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1018,
											"end": 1092,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 1018,
											"end": 1092,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 1018,
											"end": 1092,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 1018,
											"end": 1092,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 1018,
											"end": 1092,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "54"
										},
										{
											"begin": 1018,
											"end": 1092,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 1018,
											"end": 1092,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "55"
										},
										{
											"begin": 1018,
											"end": 1092,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 1018,
											"end": 1092,
											"name": "tag",
											"source": 11,
											"value": "54"
										},
										{
											"begin": 1018,
											"end": 1092,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1018,
											"end": 1092,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 1018,
											"end": 1092,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 1018,
											"end": 1092,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 1018,
											"end": 1092,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 1018,
											"end": 1092,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 1018,
											"end": 1092,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 1018,
											"end": 1092,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 1018,
											"end": 1092,
											"name": "tag",
											"source": 11,
											"value": "53"
										},
										{
											"begin": 1018,
											"end": 1092,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1103,
											"end": 1119,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 1103,
											"end": 1131,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 1120,
											"end": 1130,
											"name": "CALLER",
											"source": 11
										},
										{
											"begin": 1103,
											"end": 1131,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1103,
											"end": 1131,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 1103,
											"end": 1131,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1103,
											"end": 1131,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 1103,
											"end": 1131,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 1103,
											"end": 1131,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 1103,
											"end": 1131,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 1103,
											"end": 1131,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 1103,
											"end": 1131,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 1103,
											"end": 1131,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 1103,
											"end": 1131,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 1103,
											"end": 1131,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 1103,
											"end": 1131,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 1103,
											"end": 1131,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 1103,
											"end": 1131,
											"name": "KECCAK256",
											"source": 11
										},
										{
											"begin": 1137,
											"end": 1401,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 1137,
											"end": 1401,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 1137,
											"end": 1401,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 1137,
											"end": 1401,
											"name": "PUSH",
											"source": 11,
											"value": "100"
										},
										{
											"begin": 1137,
											"end": 1401,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 1137,
											"end": 1401,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 1137,
											"end": 1401,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 1137,
											"end": 1401,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 1172,
											"end": 1182,
											"name": "CALLER",
											"source": 11
										},
										{
											"begin": 1137,
											"end": 1401,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1137,
											"end": 1401,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 1137,
											"end": 1401,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 1137,
											"end": 1401,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 1137,
											"end": 1401,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 1137,
											"end": 1401,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 1208,
											"end": 1217,
											"name": "DUP10",
											"source": 11
										},
										{
											"begin": 1137,
											"end": 1401,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1137,
											"end": 1401,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 1137,
											"end": 1401,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 1137,
											"end": 1401,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 1137,
											"end": 1401,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 1137,
											"end": 1401,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 1240,
											"end": 1246,
											"name": "DUP9",
											"source": 11
										},
										{
											"begin": 1137,
											"end": 1401,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 1137,
											"end": 1401,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 1137,
											"end": 1401,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 1137,
											"end": 1401,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 1266,
											"end": 1269,
											"name": "DUP8",
											"source": 11
										},
										{
											"begin": 1137,
											"end": 1401,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 1137,
											"end": 1401,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 1137,
											"end": 1401,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 1137,
											"end": 1401,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 1292,
											"end": 1298,
											"name": "DUP7",
											"source": 11
										},
										{
											"begin": 1137,
											"end": 1401,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 1137,
											"end": 1401,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 1137,
											"end": 1401,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 1137,
											"end": 1401,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 1324,
											"end": 1333,
											"name": "DUP11",
											"source": 11
										},
										{
											"begin": 1137,
											"end": 1401,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFF"
										},
										{
											"begin": 1137,
											"end": 1401,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 1137,
											"end": 1401,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 1137,
											"end": 1401,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 1137,
											"end": 1401,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 1137,
											"end": 1401,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 1356,
											"end": 1362,
											"name": "DUP6",
											"source": 11
										},
										{
											"begin": 1356,
											"end": 1362,
											"name": "DUP6",
											"source": 11
										},
										{
											"begin": 1137,
											"end": 1401,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 1137,
											"end": 1401,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 1137,
											"end": 1401,
											"name": "PUSH",
											"source": 11,
											"value": "1F"
										},
										{
											"begin": 1137,
											"end": 1401,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 1137,
											"end": 1401,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 1137,
											"end": 1401,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 1137,
											"end": 1401,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 1137,
											"end": 1401,
											"name": "DIV",
											"source": 11
										},
										{
											"begin": 1137,
											"end": 1401,
											"name": "MUL",
											"source": 11
										},
										{
											"begin": 1137,
											"end": 1401,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 1137,
											"end": 1401,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 1137,
											"end": 1401,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 1137,
											"end": 1401,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 1137,
											"end": 1401,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 1137,
											"end": 1401,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 1137,
											"end": 1401,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 1137,
											"end": 1401,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 1137,
											"end": 1401,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 1137,
											"end": 1401,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 1137,
											"end": 1401,
											"name": "SWAP4",
											"source": 11
										},
										{
											"begin": 1137,
											"end": 1401,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 1137,
											"end": 1401,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 1137,
											"end": 1401,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 1137,
											"end": 1401,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 1137,
											"end": 1401,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 1137,
											"end": 1401,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 1137,
											"end": 1401,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 1137,
											"end": 1401,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 1137,
											"end": 1401,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 1137,
											"end": 1401,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 1137,
											"end": 1401,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 1137,
											"end": 1401,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 1137,
											"end": 1401,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 1137,
											"end": 1401,
											"name": "CALLDATACOPY",
											"source": 11
										},
										{
											"begin": 1137,
											"end": 1401,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 1137,
											"end": 1401,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 1137,
											"end": 1401,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 1137,
											"end": 1401,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 1137,
											"end": 1401,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 1137,
											"end": 1401,
											"name": "PUSH",
											"source": 11,
											"value": "1F"
										},
										{
											"begin": 1137,
											"end": 1401,
											"name": "NOT",
											"source": 11
										},
										{
											"begin": 1137,
											"end": 1401,
											"name": "PUSH",
											"source": 11,
											"value": "1F"
										},
										{
											"begin": 1137,
											"end": 1401,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 1137,
											"end": 1401,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 1137,
											"end": 1401,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 1137,
											"end": 1401,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 1137,
											"end": 1401,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 1137,
											"end": 1401,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 1137,
											"end": 1401,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 1137,
											"end": 1401,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 1137,
											"end": 1401,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 1137,
											"end": 1401,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 1137,
											"end": 1401,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 1137,
											"end": 1401,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 1137,
											"end": 1401,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 1137,
											"end": 1401,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 1137,
											"end": 1401,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 1137,
											"end": 1401,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 1137,
											"end": 1401,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 1137,
											"end": 1401,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 1137,
											"end": 1401,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 1137,
											"end": 1401,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 1384,
											"end": 1389,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 1137,
											"end": 1401,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1137,
											"end": 1401,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 1137,
											"end": 1401,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 1137,
											"end": 1401,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 1137,
											"end": 1401,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 1103,
											"end": 1402,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 1103,
											"end": 1402,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 1103,
											"end": 1402,
											"name": "PUSH",
											"source": 11,
											"value": "1"
										},
										{
											"begin": 1103,
											"end": 1402,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 1103,
											"end": 1402,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 1103,
											"end": 1402,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 1103,
											"end": 1402,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 1103,
											"end": 1402,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 1103,
											"end": 1402,
											"name": "SSTORE",
											"source": 11
										},
										{
											"begin": 1103,
											"end": 1402,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 1103,
											"end": 1402,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 1103,
											"end": 1402,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 1103,
											"end": 1402,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 1103,
											"end": 1402,
											"name": "PUSH",
											"source": 11,
											"value": "1"
										},
										{
											"begin": 1103,
											"end": 1402,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 1103,
											"end": 1402,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 1103,
											"end": 1402,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 1103,
											"end": 1402,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 1103,
											"end": 1402,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 1103,
											"end": 1402,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 1103,
											"end": 1402,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 1103,
											"end": 1402,
											"name": "KECCAK256",
											"source": 11
										},
										{
											"begin": 1103,
											"end": 1402,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 1103,
											"end": 1402,
											"name": "PUSH",
											"source": 11,
											"value": "8"
										},
										{
											"begin": 1103,
											"end": 1402,
											"name": "MUL",
											"source": 11
										},
										{
											"begin": 1103,
											"end": 1402,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 1103,
											"end": 1402,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 1103,
											"end": 1402,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 1103,
											"end": 1402,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 1103,
											"end": 1402,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 1103,
											"end": 1402,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 1103,
											"end": 1402,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 1103,
											"end": 1402,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 1103,
											"end": 1402,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 1103,
											"end": 1402,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 1103,
											"end": 1402,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 1103,
											"end": 1402,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 1103,
											"end": 1402,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 1103,
											"end": 1402,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 1103,
											"end": 1402,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 1103,
											"end": 1402,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 1103,
											"end": 1402,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 1103,
											"end": 1402,
											"name": "PUSH",
											"source": 11,
											"value": "100"
										},
										{
											"begin": 1103,
											"end": 1402,
											"name": "EXP",
											"source": 11
										},
										{
											"begin": 1103,
											"end": 1402,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 1103,
											"end": 1402,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 1103,
											"end": 1402,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 1103,
											"end": 1402,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1103,
											"end": 1402,
											"name": "MUL",
											"source": 11
										},
										{
											"begin": 1103,
											"end": 1402,
											"name": "NOT",
											"source": 11
										},
										{
											"begin": 1103,
											"end": 1402,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 1103,
											"end": 1402,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 1103,
											"end": 1402,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 1103,
											"end": 1402,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1103,
											"end": 1402,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 1103,
											"end": 1402,
											"name": "MUL",
											"source": 11
										},
										{
											"begin": 1103,
											"end": 1402,
											"name": "OR",
											"source": 11
										},
										{
											"begin": 1103,
											"end": 1402,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 1103,
											"end": 1402,
											"name": "SSTORE",
											"source": 11
										},
										{
											"begin": 1103,
											"end": 1402,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 1103,
											"end": 1402,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 1103,
											"end": 1402,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 1103,
											"end": 1402,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 1103,
											"end": 1402,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 1103,
											"end": 1402,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 1103,
											"end": 1402,
											"name": "PUSH",
											"source": 11,
											"value": "1"
										},
										{
											"begin": 1103,
											"end": 1402,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 1103,
											"end": 1402,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 1103,
											"end": 1402,
											"name": "PUSH",
											"source": 11,
											"value": "100"
										},
										{
											"begin": 1103,
											"end": 1402,
											"name": "EXP",
											"source": 11
										},
										{
											"begin": 1103,
											"end": 1402,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 1103,
											"end": 1402,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 1103,
											"end": 1402,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 1103,
											"end": 1402,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1103,
											"end": 1402,
											"name": "MUL",
											"source": 11
										},
										{
											"begin": 1103,
											"end": 1402,
											"name": "NOT",
											"source": 11
										},
										{
											"begin": 1103,
											"end": 1402,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 1103,
											"end": 1402,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 1103,
											"end": 1402,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 1103,
											"end": 1402,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1103,
											"end": 1402,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 1103,
											"end": 1402,
											"name": "MUL",
											"source": 11
										},
										{
											"begin": 1103,
											"end": 1402,
											"name": "OR",
											"source": 11
										},
										{
											"begin": 1103,
											"end": 1402,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 1103,
											"end": 1402,
											"name": "SSTORE",
											"source": 11
										},
										{
											"begin": 1103,
											"end": 1402,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 1103,
											"end": 1402,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 1103,
											"end": 1402,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 1103,
											"end": 1402,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 1103,
											"end": 1402,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 1103,
											"end": 1402,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 1103,
											"end": 1402,
											"name": "PUSH",
											"source": 11,
											"value": "2"
										},
										{
											"begin": 1103,
											"end": 1402,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 1103,
											"end": 1402,
											"name": "SSTORE",
											"source": 11
										},
										{
											"begin": 1103,
											"end": 1402,
											"name": "PUSH",
											"source": 11,
											"value": "60"
										},
										{
											"begin": 1103,
											"end": 1402,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 1103,
											"end": 1402,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 1103,
											"end": 1402,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 1103,
											"end": 1402,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 1103,
											"end": 1402,
											"name": "PUSH",
											"source": 11,
											"value": "3"
										},
										{
											"begin": 1103,
											"end": 1402,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 1103,
											"end": 1402,
											"name": "SSTORE",
											"source": 11
										},
										{
											"begin": 1103,
											"end": 1402,
											"name": "PUSH",
											"source": 11,
											"value": "80"
										},
										{
											"begin": 1103,
											"end": 1402,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 1103,
											"end": 1402,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 1103,
											"end": 1402,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 1103,
											"end": 1402,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 1103,
											"end": 1402,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 1103,
											"end": 1402,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 1103,
											"end": 1402,
											"name": "SSTORE",
											"source": 11
										},
										{
											"begin": 1103,
											"end": 1402,
											"name": "PUSH",
											"source": 11,
											"value": "A0"
										},
										{
											"begin": 1103,
											"end": 1402,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 1103,
											"end": 1402,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 1103,
											"end": 1402,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 1103,
											"end": 1402,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 1103,
											"end": 1402,
											"name": "PUSH",
											"source": 11,
											"value": "5"
										},
										{
											"begin": 1103,
											"end": 1402,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 1103,
											"end": 1402,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 1103,
											"end": 1402,
											"name": "PUSH",
											"source": 11,
											"value": "100"
										},
										{
											"begin": 1103,
											"end": 1402,
											"name": "EXP",
											"source": 11
										},
										{
											"begin": 1103,
											"end": 1402,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 1103,
											"end": 1402,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 1103,
											"end": 1402,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 1103,
											"end": 1402,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFF"
										},
										{
											"begin": 1103,
											"end": 1402,
											"name": "MUL",
											"source": 11
										},
										{
											"begin": 1103,
											"end": 1402,
											"name": "NOT",
											"source": 11
										},
										{
											"begin": 1103,
											"end": 1402,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 1103,
											"end": 1402,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 1103,
											"end": 1402,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 1103,
											"end": 1402,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFF"
										},
										{
											"begin": 1103,
											"end": 1402,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 1103,
											"end": 1402,
											"name": "MUL",
											"source": 11
										},
										{
											"begin": 1103,
											"end": 1402,
											"name": "OR",
											"source": 11
										},
										{
											"begin": 1103,
											"end": 1402,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 1103,
											"end": 1402,
											"name": "SSTORE",
											"source": 11
										},
										{
											"begin": 1103,
											"end": 1402,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 1103,
											"end": 1402,
											"name": "PUSH",
											"source": 11,
											"value": "C0"
										},
										{
											"begin": 1103,
											"end": 1402,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 1103,
											"end": 1402,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 1103,
											"end": 1402,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 1103,
											"end": 1402,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 1103,
											"end": 1402,
											"name": "PUSH",
											"source": 11,
											"value": "6"
										},
										{
											"begin": 1103,
											"end": 1402,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 1103,
											"end": 1402,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 1103,
											"end": 1402,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 1103,
											"end": 1402,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "57"
										},
										{
											"begin": 1103,
											"end": 1402,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 1103,
											"end": 1402,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 1103,
											"end": 1402,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "58"
										},
										{
											"begin": 1103,
											"end": 1402,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 1103,
											"end": 1402,
											"name": "tag",
											"source": 11,
											"value": "57"
										},
										{
											"begin": 1103,
											"end": 1402,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1103,
											"end": 1402,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 1103,
											"end": 1402,
											"name": "PUSH",
											"source": 11,
											"value": "E0"
										},
										{
											"begin": 1103,
											"end": 1402,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 1103,
											"end": 1402,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 1103,
											"end": 1402,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 1103,
											"end": 1402,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 1103,
											"end": 1402,
											"name": "PUSH",
											"source": 11,
											"value": "7"
										},
										{
											"begin": 1103,
											"end": 1402,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 1103,
											"end": 1402,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 1103,
											"end": 1402,
											"name": "PUSH",
											"source": 11,
											"value": "100"
										},
										{
											"begin": 1103,
											"end": 1402,
											"name": "EXP",
											"source": 11
										},
										{
											"begin": 1103,
											"end": 1402,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 1103,
											"end": 1402,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 1103,
											"end": 1402,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 1103,
											"end": 1402,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1103,
											"end": 1402,
											"name": "MUL",
											"source": 11
										},
										{
											"begin": 1103,
											"end": 1402,
											"name": "NOT",
											"source": 11
										},
										{
											"begin": 1103,
											"end": 1402,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 1103,
											"end": 1402,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 1103,
											"end": 1402,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 1103,
											"end": 1402,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1103,
											"end": 1402,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 1103,
											"end": 1402,
											"name": "MUL",
											"source": 11
										},
										{
											"begin": 1103,
											"end": 1402,
											"name": "OR",
											"source": 11
										},
										{
											"begin": 1103,
											"end": 1402,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 1103,
											"end": 1402,
											"name": "SSTORE",
											"source": 11
										},
										{
											"begin": 1103,
											"end": 1402,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 1103,
											"end": 1402,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 1103,
											"end": 1402,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 1448,
											"end": 1457,
											"name": "DUP7",
											"source": 11
										},
										{
											"begin": 1418,
											"end": 1466,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1418,
											"end": 1466,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 1436,
											"end": 1446,
											"name": "CALLER",
											"source": 11
										},
										{
											"begin": 1418,
											"end": 1466,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1418,
											"end": 1466,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 1418,
											"end": 1466,
											"name": "PUSH",
											"source": 11,
											"value": "C46393C51FB2221CAAEC70CC70ADECD0BBD1F605F3A19747F4EC3A8AFF00CF7C"
										},
										{
											"begin": 1459,
											"end": 1465,
											"name": "DUP9",
											"source": 11
										},
										{
											"begin": 1418,
											"end": 1466,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 1418,
											"end": 1466,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 1418,
											"end": 1466,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "59"
										},
										{
											"begin": 1418,
											"end": 1466,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 1418,
											"end": 1466,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 1418,
											"end": 1466,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "60"
										},
										{
											"begin": 1418,
											"end": 1466,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 1418,
											"end": 1466,
											"name": "tag",
											"source": 11,
											"value": "59"
										},
										{
											"begin": 1418,
											"end": 1466,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1418,
											"end": 1466,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 1418,
											"end": 1466,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 1418,
											"end": 1466,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 1418,
											"end": 1466,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 1418,
											"end": 1466,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 1418,
											"end": 1466,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 1418,
											"end": 1466,
											"name": "LOG3",
											"source": 11
										},
										{
											"begin": 851,
											"end": 1474,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 851,
											"end": 1474,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 851,
											"end": 1474,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 851,
											"end": 1474,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 851,
											"end": 1474,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 851,
											"end": 1474,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 851,
											"end": 1474,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 851,
											"end": 1474,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 851,
											"end": 1474,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 2441,
											"end": 2585,
											"name": "tag",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 2441,
											"end": 2585,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2487,
											"end": 2494,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2506,
											"end": 2530,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2533,
											"end": 2553,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "62"
										},
										{
											"begin": 2533,
											"end": 2551,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "63"
										},
										{
											"begin": 2533,
											"end": 2553,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2533,
											"end": 2553,
											"name": "tag",
											"source": 0,
											"value": "62"
										},
										{
											"begin": 2533,
											"end": 2553,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2506,
											"end": 2553,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2506,
											"end": 2553,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2570,
											"end": 2571,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2570,
											"end": 2578,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2570,
											"end": 2578,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2570,
											"end": 2578,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2570,
											"end": 2578,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2570,
											"end": 2578,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 2570,
											"end": 2578,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2570,
											"end": 2578,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 2570,
											"end": 2578,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 2570,
											"end": 2578,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2570,
											"end": 2578,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 2570,
											"end": 2578,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2570,
											"end": 2578,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2563,
											"end": 2578,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2563,
											"end": 2578,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2563,
											"end": 2578,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2441,
											"end": 2585,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2441,
											"end": 2585,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 592,
											"end": 649,
											"name": "tag",
											"source": 11,
											"value": "24"
										},
										{
											"begin": 592,
											"end": 649,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 592,
											"end": 649,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 592,
											"end": 649,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 592,
											"end": 649,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 592,
											"end": 649,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 592,
											"end": 649,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 592,
											"end": 649,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 592,
											"end": 649,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 592,
											"end": 649,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 592,
											"end": 649,
											"name": "KECCAK256",
											"source": 11
										},
										{
											"begin": 592,
											"end": 649,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 592,
											"end": 649,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 592,
											"end": 649,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 592,
											"end": 649,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 592,
											"end": 649,
											"name": "LT",
											"source": 11
										},
										{
											"begin": 592,
											"end": 649,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "64"
										},
										{
											"begin": 592,
											"end": 649,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 592,
											"end": 649,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 592,
											"end": 649,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 592,
											"end": 649,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 592,
											"end": 649,
											"name": "tag",
											"source": 11,
											"value": "64"
										},
										{
											"begin": 592,
											"end": 649,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 592,
											"end": 649,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 592,
											"end": 649,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 592,
											"end": 649,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 592,
											"end": 649,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 592,
											"end": 649,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 592,
											"end": 649,
											"name": "KECCAK256",
											"source": 11
										},
										{
											"begin": 592,
											"end": 649,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 592,
											"end": 649,
											"name": "PUSH",
											"source": 11,
											"value": "8"
										},
										{
											"begin": 592,
											"end": 649,
											"name": "MUL",
											"source": 11
										},
										{
											"begin": 592,
											"end": 649,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 592,
											"end": 649,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 592,
											"end": 649,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 592,
											"end": 649,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 592,
											"end": 649,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 592,
											"end": 649,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 592,
											"end": 649,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 592,
											"end": 649,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 592,
											"end": 649,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 592,
											"end": 649,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 592,
											"end": 649,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 592,
											"end": 649,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 592,
											"end": 649,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 592,
											"end": 649,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 592,
											"end": 649,
											"name": "PUSH",
											"source": 11,
											"value": "100"
										},
										{
											"begin": 592,
											"end": 649,
											"name": "EXP",
											"source": 11
										},
										{
											"begin": 592,
											"end": 649,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 592,
											"end": 649,
											"name": "DIV",
											"source": 11
										},
										{
											"begin": 592,
											"end": 649,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 592,
											"end": 649,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 592,
											"end": 649,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 592,
											"end": 649,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 592,
											"end": 649,
											"name": "PUSH",
											"source": 11,
											"value": "1"
										},
										{
											"begin": 592,
											"end": 649,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 592,
											"end": 649,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 592,
											"end": 649,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 592,
											"end": 649,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 592,
											"end": 649,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 592,
											"end": 649,
											"name": "PUSH",
											"source": 11,
											"value": "100"
										},
										{
											"begin": 592,
											"end": 649,
											"name": "EXP",
											"source": 11
										},
										{
											"begin": 592,
											"end": 649,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 592,
											"end": 649,
											"name": "DIV",
											"source": 11
										},
										{
											"begin": 592,
											"end": 649,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 592,
											"end": 649,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 592,
											"end": 649,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 592,
											"end": 649,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 592,
											"end": 649,
											"name": "PUSH",
											"source": 11,
											"value": "2"
										},
										{
											"begin": 592,
											"end": 649,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 592,
											"end": 649,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 592,
											"end": 649,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 592,
											"end": 649,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 592,
											"end": 649,
											"name": "PUSH",
											"source": 11,
											"value": "3"
										},
										{
											"begin": 592,
											"end": 649,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 592,
											"end": 649,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 592,
											"end": 649,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 592,
											"end": 649,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 592,
											"end": 649,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 592,
											"end": 649,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 592,
											"end": 649,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 592,
											"end": 649,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 592,
											"end": 649,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 592,
											"end": 649,
											"name": "PUSH",
											"source": 11,
											"value": "5"
										},
										{
											"begin": 592,
											"end": 649,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 592,
											"end": 649,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 592,
											"end": 649,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 592,
											"end": 649,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 592,
											"end": 649,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 592,
											"end": 649,
											"name": "PUSH",
											"source": 11,
											"value": "100"
										},
										{
											"begin": 592,
											"end": 649,
											"name": "EXP",
											"source": 11
										},
										{
											"begin": 592,
											"end": 649,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 592,
											"end": 649,
											"name": "DIV",
											"source": 11
										},
										{
											"begin": 592,
											"end": 649,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFF"
										},
										{
											"begin": 592,
											"end": 649,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 592,
											"end": 649,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 592,
											"end": 649,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 592,
											"end": 649,
											"name": "PUSH",
											"source": 11,
											"value": "6"
										},
										{
											"begin": 592,
											"end": 649,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 592,
											"end": 649,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 592,
											"end": 649,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 592,
											"end": 649,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "66"
										},
										{
											"begin": 592,
											"end": 649,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 592,
											"end": 649,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "67"
										},
										{
											"begin": 592,
											"end": 649,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 592,
											"end": 649,
											"name": "tag",
											"source": 11,
											"value": "66"
										},
										{
											"begin": 592,
											"end": 649,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 592,
											"end": 649,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 592,
											"end": 649,
											"name": "PUSH",
											"source": 11,
											"value": "1F"
										},
										{
											"begin": 592,
											"end": 649,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 592,
											"end": 649,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 592,
											"end": 649,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 592,
											"end": 649,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 592,
											"end": 649,
											"name": "DIV",
											"source": 11
										},
										{
											"begin": 592,
											"end": 649,
											"name": "MUL",
											"source": 11
										},
										{
											"begin": 592,
											"end": 649,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 592,
											"end": 649,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 592,
											"end": 649,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 592,
											"end": 649,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 592,
											"end": 649,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 592,
											"end": 649,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 592,
											"end": 649,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 592,
											"end": 649,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 592,
											"end": 649,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 592,
											"end": 649,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 592,
											"end": 649,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 592,
											"end": 649,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 592,
											"end": 649,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 592,
											"end": 649,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 592,
											"end": 649,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 592,
											"end": 649,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 592,
											"end": 649,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 592,
											"end": 649,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 592,
											"end": 649,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 592,
											"end": 649,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 592,
											"end": 649,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 592,
											"end": 649,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "68"
										},
										{
											"begin": 592,
											"end": 649,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 592,
											"end": 649,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "67"
										},
										{
											"begin": 592,
											"end": 649,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 592,
											"end": 649,
											"name": "tag",
											"source": 11,
											"value": "68"
										},
										{
											"begin": 592,
											"end": 649,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 592,
											"end": 649,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 592,
											"end": 649,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 592,
											"end": 649,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "69"
										},
										{
											"begin": 592,
											"end": 649,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 592,
											"end": 649,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 592,
											"end": 649,
											"name": "PUSH",
											"source": 11,
											"value": "1F"
										},
										{
											"begin": 592,
											"end": 649,
											"name": "LT",
											"source": 11
										},
										{
											"begin": 592,
											"end": 649,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "70"
										},
										{
											"begin": 592,
											"end": 649,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 592,
											"end": 649,
											"name": "PUSH",
											"source": 11,
											"value": "100"
										},
										{
											"begin": 592,
											"end": 649,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 592,
											"end": 649,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 592,
											"end": 649,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 592,
											"end": 649,
											"name": "DIV",
											"source": 11
										},
										{
											"begin": 592,
											"end": 649,
											"name": "MUL",
											"source": 11
										},
										{
											"begin": 592,
											"end": 649,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 592,
											"end": 649,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 592,
											"end": 649,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 592,
											"end": 649,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 592,
											"end": 649,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 592,
											"end": 649,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 592,
											"end": 649,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "69"
										},
										{
											"begin": 592,
											"end": 649,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 592,
											"end": 649,
											"name": "tag",
											"source": 11,
											"value": "70"
										},
										{
											"begin": 592,
											"end": 649,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 592,
											"end": 649,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 592,
											"end": 649,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 592,
											"end": 649,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 592,
											"end": 649,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 592,
											"end": 649,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 592,
											"end": 649,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 592,
											"end": 649,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 592,
											"end": 649,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 592,
											"end": 649,
											"name": "KECCAK256",
											"source": 11
										},
										{
											"begin": 592,
											"end": 649,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 592,
											"end": 649,
											"name": "tag",
											"source": 11,
											"value": "71"
										},
										{
											"begin": 592,
											"end": 649,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 592,
											"end": 649,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 592,
											"end": 649,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 592,
											"end": 649,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 592,
											"end": 649,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 592,
											"end": 649,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 592,
											"end": 649,
											"name": "PUSH",
											"source": 11,
											"value": "1"
										},
										{
											"begin": 592,
											"end": 649,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 592,
											"end": 649,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 592,
											"end": 649,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 592,
											"end": 649,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 592,
											"end": 649,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 592,
											"end": 649,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 592,
											"end": 649,
											"name": "GT",
											"source": 11
										},
										{
											"begin": 592,
											"end": 649,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "71"
										},
										{
											"begin": 592,
											"end": 649,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 592,
											"end": 649,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 592,
											"end": 649,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 592,
											"end": 649,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 592,
											"end": 649,
											"name": "PUSH",
											"source": 11,
											"value": "1F"
										},
										{
											"begin": 592,
											"end": 649,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 592,
											"end": 649,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 592,
											"end": 649,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 592,
											"end": 649,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 592,
											"end": 649,
											"name": "tag",
											"source": 11,
											"value": "69"
										},
										{
											"begin": 592,
											"end": 649,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 592,
											"end": 649,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 592,
											"end": 649,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 592,
											"end": 649,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 592,
											"end": 649,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 592,
											"end": 649,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 592,
											"end": 649,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 592,
											"end": 649,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 592,
											"end": 649,
											"name": "PUSH",
											"source": 11,
											"value": "7"
										},
										{
											"begin": 592,
											"end": 649,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 592,
											"end": 649,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 592,
											"end": 649,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 592,
											"end": 649,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 592,
											"end": 649,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 592,
											"end": 649,
											"name": "PUSH",
											"source": 11,
											"value": "100"
										},
										{
											"begin": 592,
											"end": 649,
											"name": "EXP",
											"source": 11
										},
										{
											"begin": 592,
											"end": 649,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 592,
											"end": 649,
											"name": "DIV",
											"source": 11
										},
										{
											"begin": 592,
											"end": 649,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 592,
											"end": 649,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 592,
											"end": 649,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 592,
											"end": 649,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 592,
											"end": 649,
											"name": "DUP9",
											"source": 11
										},
										{
											"begin": 592,
											"end": 649,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 3405,
											"end": 3620,
											"name": "tag",
											"source": 0,
											"value": "30"
										},
										{
											"begin": 3405,
											"end": 3620,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2334,
											"end": 2347,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "73"
										},
										{
											"begin": 2334,
											"end": 2345,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "33"
										},
										{
											"begin": 2334,
											"end": 2347,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2334,
											"end": 2347,
											"name": "tag",
											"source": 0,
											"value": "73"
										},
										{
											"begin": 2334,
											"end": 2347,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3509,
											"end": 3510,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3489,
											"end": 3511,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3489,
											"end": 3511,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3489,
											"end": 3497,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3489,
											"end": 3511,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3489,
											"end": 3511,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3489,
											"end": 3511,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 3485,
											"end": 3576,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "75"
										},
										{
											"begin": 3485,
											"end": 3576,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 3562,
											"end": 3563,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3534,
											"end": 3565,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3534,
											"end": 3565,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3534,
											"end": 3565,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "1E4FBDF700000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 3534,
											"end": 3565,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3534,
											"end": 3565,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3534,
											"end": 3565,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 3534,
											"end": 3565,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3534,
											"end": 3565,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "76"
										},
										{
											"begin": 3534,
											"end": 3565,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3534,
											"end": 3565,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3534,
											"end": 3565,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 3534,
											"end": 3565,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3534,
											"end": 3565,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "76"
										},
										{
											"begin": 3534,
											"end": 3565,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3534,
											"end": 3565,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3534,
											"end": 3565,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3534,
											"end": 3565,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3534,
											"end": 3565,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3534,
											"end": 3565,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 3534,
											"end": 3565,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3534,
											"end": 3565,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 3485,
											"end": 3576,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "75"
										},
										{
											"begin": 3485,
											"end": 3576,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3585,
											"end": 3613,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "77"
										},
										{
											"begin": 3604,
											"end": 3612,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3585,
											"end": 3603,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "36"
										},
										{
											"begin": 3585,
											"end": 3613,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3585,
											"end": 3613,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "77"
										},
										{
											"begin": 3585,
											"end": 3613,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3405,
											"end": 3620,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3405,
											"end": 3620,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2658,
											"end": 2820,
											"name": "tag",
											"source": 0,
											"value": "33"
										},
										{
											"begin": 2658,
											"end": 2820,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2728,
											"end": 2740,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "79"
										},
										{
											"begin": 2728,
											"end": 2738,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 2728,
											"end": 2740,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2728,
											"end": 2740,
											"name": "tag",
											"source": 0,
											"value": "79"
										},
										{
											"begin": 2728,
											"end": 2740,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2717,
											"end": 2740,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2717,
											"end": 2740,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2717,
											"end": 2724,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "81"
										},
										{
											"begin": 2717,
											"end": 2722,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 2717,
											"end": 2724,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2717,
											"end": 2724,
											"name": "tag",
											"source": 0,
											"value": "81"
										},
										{
											"begin": 2717,
											"end": 2724,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2717,
											"end": 2740,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2717,
											"end": 2740,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2717,
											"end": 2740,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 2713,
											"end": 2814,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "82"
										},
										{
											"begin": 2713,
											"end": 2814,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2790,
											"end": 2802,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "83"
										},
										{
											"begin": 2790,
											"end": 2800,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 2790,
											"end": 2802,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2790,
											"end": 2802,
											"name": "tag",
											"source": 0,
											"value": "83"
										},
										{
											"begin": 2790,
											"end": 2802,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2763,
											"end": 2803,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2763,
											"end": 2803,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2763,
											"end": 2803,
											"name": "PUSH",
											"source": 0,
											"value": "118CDAA700000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2763,
											"end": 2803,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2763,
											"end": 2803,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2763,
											"end": 2803,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2763,
											"end": 2803,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2763,
											"end": 2803,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "84"
										},
										{
											"begin": 2763,
											"end": 2803,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2763,
											"end": 2803,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2763,
											"end": 2803,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2763,
											"end": 2803,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2763,
											"end": 2803,
											"name": "tag",
											"source": 0,
											"value": "84"
										},
										{
											"begin": 2763,
											"end": 2803,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2763,
											"end": 2803,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2763,
											"end": 2803,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2763,
											"end": 2803,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2763,
											"end": 2803,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2763,
											"end": 2803,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2763,
											"end": 2803,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2763,
											"end": 2803,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 2713,
											"end": 2814,
											"name": "tag",
											"source": 0,
											"value": "82"
										},
										{
											"begin": 2713,
											"end": 2814,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2658,
											"end": 2820,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3774,
											"end": 4022,
											"name": "tag",
											"source": 0,
											"value": "36"
										},
										{
											"begin": 3774,
											"end": 4022,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3847,
											"end": 3871,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3874,
											"end": 3894,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "86"
										},
										{
											"begin": 3874,
											"end": 3892,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "63"
										},
										{
											"begin": 3874,
											"end": 3894,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3874,
											"end": 3894,
											"name": "tag",
											"source": 0,
											"value": "86"
										},
										{
											"begin": 3874,
											"end": 3894,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3847,
											"end": 3894,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3847,
											"end": 3894,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3904,
											"end": 3920,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3923,
											"end": 3924,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3923,
											"end": 3931,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3923,
											"end": 3931,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3923,
											"end": 3931,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3923,
											"end": 3931,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3923,
											"end": 3931,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 3923,
											"end": 3931,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3923,
											"end": 3931,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 3923,
											"end": 3931,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 3923,
											"end": 3931,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3923,
											"end": 3931,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 3923,
											"end": 3931,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3923,
											"end": 3931,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3904,
											"end": 3931,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3904,
											"end": 3931,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3952,
											"end": 3960,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 3941,
											"end": 3942,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 3941,
											"end": 3949,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3941,
											"end": 3949,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3941,
											"end": 3949,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3941,
											"end": 3960,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 3941,
											"end": 3960,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 3941,
											"end": 3960,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3941,
											"end": 3960,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 3941,
											"end": 3960,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3941,
											"end": 3960,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3941,
											"end": 3960,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 3941,
											"end": 3960,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 3941,
											"end": 3960,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3941,
											"end": 3960,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3941,
											"end": 3960,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 3941,
											"end": 3960,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3941,
											"end": 3960,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3941,
											"end": 3960,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 3941,
											"end": 3960,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 3941,
											"end": 3960,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3941,
											"end": 3960,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 3941,
											"end": 3960,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4006,
											"end": 4014,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 3975,
											"end": 4015,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3975,
											"end": 4015,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3996,
											"end": 4004,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3975,
											"end": 4015,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3975,
											"end": 4015,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3975,
											"end": 4015,
											"name": "PUSH",
											"source": 0,
											"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
										},
										{
											"begin": 3975,
											"end": 4015,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3975,
											"end": 4015,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3975,
											"end": 4015,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3975,
											"end": 4015,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3975,
											"end": 4015,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3975,
											"end": 4015,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3975,
											"end": 4015,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 3975,
											"end": 4015,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3975,
											"end": 4015,
											"name": "LOG3",
											"source": 0
										},
										{
											"begin": 3837,
											"end": 4022,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3837,
											"end": 4022,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3774,
											"end": 4022,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3774,
											"end": 4022,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 9071,
											"end": 9276,
											"name": "tag",
											"source": 1,
											"value": "39"
										},
										{
											"begin": 9071,
											"end": 9276,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 9129,
											"end": 9159,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 9171,
											"end": 9183,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 9186,
											"end": 9213,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "88"
										},
										{
											"begin": 9186,
											"end": 9211,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "89"
										},
										{
											"begin": 9186,
											"end": 9213,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 9186,
											"end": 9213,
											"name": "tag",
											"source": 1,
											"value": "88"
										},
										{
											"begin": 9186,
											"end": 9213,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 9171,
											"end": 9213,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 9171,
											"end": 9213,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 9256,
											"end": 9260,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 9246,
											"end": 9260,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 9246,
											"end": 9260,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 9232,
											"end": 9270,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 9071,
											"end": 9276,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 9071,
											"end": 9276,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1847,
											"end": 1974,
											"name": "tag",
											"source": 0,
											"value": "47"
										},
										{
											"begin": 1847,
											"end": 1974,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6929,
											"end": 6949,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "91"
										},
										{
											"begin": 6929,
											"end": 6947,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "92"
										},
										{
											"begin": 6929,
											"end": 6949,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6929,
											"end": 6949,
											"name": "tag",
											"source": 1,
											"value": "91"
										},
										{
											"begin": 6929,
											"end": 6949,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1929,
											"end": 1967,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "94"
										},
										{
											"begin": 1954,
											"end": 1966,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1929,
											"end": 1953,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "95"
										},
										{
											"begin": 1929,
											"end": 1967,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1929,
											"end": 1967,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "94"
										},
										{
											"begin": 1929,
											"end": 1967,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1847,
											"end": 1974,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1847,
											"end": 1974,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1192,
											"end": 1351,
											"name": "tag",
											"source": 0,
											"value": "63"
										},
										{
											"begin": 1192,
											"end": 1351,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1244,
											"end": 1268,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1313,
											"end": 1335,
											"name": "PUSH",
											"source": 0,
											"value": "9016D09D72D40FDAE2FD8CEAC6B6234C7706214FD39C1CD1E609A0528C199300"
										},
										{
											"begin": 1303,
											"end": 1335,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1303,
											"end": 1335,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1192,
											"end": 1351,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1192,
											"end": 1351,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 887,
											"end": 983,
											"name": "tag",
											"source": 3,
											"value": "80"
										},
										{
											"begin": 887,
											"end": 983,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 940,
											"end": 947,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 966,
											"end": 976,
											"name": "CALLER",
											"source": 3
										},
										{
											"begin": 959,
											"end": 976,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 959,
											"end": 976,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 887,
											"end": 983,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 887,
											"end": 983,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 8819,
											"end": 8941,
											"name": "tag",
											"source": 1,
											"value": "89"
										},
										{
											"begin": 8819,
											"end": 8941,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8887,
											"end": 8894,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3147,
											"end": 3213,
											"name": "PUSH",
											"source": 1,
											"value": "F0C57E16840DF040F15088DC2F81FE391C3923BEC73E23A9662EFC9C229C6A00"
										},
										{
											"begin": 8913,
											"end": 8934,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 8913,
											"end": 8934,
											"name": "SHL",
											"source": 1
										},
										{
											"begin": 8906,
											"end": 8934,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 8906,
											"end": 8934,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 8819,
											"end": 8941,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 8819,
											"end": 8941,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 7082,
											"end": 7223,
											"name": "tag",
											"source": 1,
											"value": "92"
										},
										{
											"begin": 7082,
											"end": 7223,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7149,
											"end": 7166,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 7149,
											"end": 7164,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "101"
										},
										{
											"begin": 7149,
											"end": 7166,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 7149,
											"end": 7166,
											"name": "tag",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 7149,
											"end": 7166,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7144,
											"end": 7217,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "102"
										},
										{
											"begin": 7144,
											"end": 7217,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 7189,
											"end": 7206,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 7189,
											"end": 7206,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 7189,
											"end": 7206,
											"name": "PUSH",
											"source": 1,
											"value": "D7E6BCF800000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 7189,
											"end": 7206,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7189,
											"end": 7206,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 7189,
											"end": 7206,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 7189,
											"end": 7206,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7189,
											"end": 7206,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 7189,
											"end": 7206,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 7189,
											"end": 7206,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 7189,
											"end": 7206,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 7189,
											"end": 7206,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 7189,
											"end": 7206,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7189,
											"end": 7206,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 7144,
											"end": 7217,
											"name": "tag",
											"source": 1,
											"value": "102"
										},
										{
											"begin": 7144,
											"end": 7217,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7082,
											"end": 7223,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1980,
											"end": 2215,
											"name": "tag",
											"source": 0,
											"value": "95"
										},
										{
											"begin": 1980,
											"end": 2215,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6929,
											"end": 6949,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "104"
										},
										{
											"begin": 6929,
											"end": 6947,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "92"
										},
										{
											"begin": 6929,
											"end": 6949,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6929,
											"end": 6949,
											"name": "tag",
											"source": 1,
											"value": "104"
										},
										{
											"begin": 6929,
											"end": 6949,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2100,
											"end": 2101,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2076,
											"end": 2102,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2076,
											"end": 2102,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2076,
											"end": 2088,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2076,
											"end": 2102,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2076,
											"end": 2102,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2076,
											"end": 2102,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2072,
											"end": 2167,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "106"
										},
										{
											"begin": 2072,
											"end": 2167,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2153,
											"end": 2154,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2125,
											"end": 2156,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2125,
											"end": 2156,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2125,
											"end": 2156,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "1E4FBDF700000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2125,
											"end": 2156,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2125,
											"end": 2156,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2125,
											"end": 2156,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2125,
											"end": 2156,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2125,
											"end": 2156,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "107"
										},
										{
											"begin": 2125,
											"end": 2156,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2125,
											"end": 2156,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2125,
											"end": 2156,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2125,
											"end": 2156,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2125,
											"end": 2156,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "107"
										},
										{
											"begin": 2125,
											"end": 2156,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2125,
											"end": 2156,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2125,
											"end": 2156,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2125,
											"end": 2156,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2125,
											"end": 2156,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2125,
											"end": 2156,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2125,
											"end": 2156,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2125,
											"end": 2156,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 2072,
											"end": 2167,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "106"
										},
										{
											"begin": 2072,
											"end": 2167,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2176,
											"end": 2208,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "108"
										},
										{
											"begin": 2195,
											"end": 2207,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2176,
											"end": 2194,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "36"
										},
										{
											"begin": 2176,
											"end": 2208,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2176,
											"end": 2208,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "108"
										},
										{
											"begin": 2176,
											"end": 2208,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1980,
											"end": 2215,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1980,
											"end": 2215,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 8485,
											"end": 8605,
											"name": "tag",
											"source": 1,
											"value": "101"
										},
										{
											"begin": 8485,
											"end": 8605,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8535,
											"end": 8539,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 8558,
											"end": 8584,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "110"
										},
										{
											"begin": 8558,
											"end": 8582,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "39"
										},
										{
											"begin": 8558,
											"end": 8584,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 8558,
											"end": 8584,
											"name": "tag",
											"source": 1,
											"value": "110"
										},
										{
											"begin": 8558,
											"end": 8584,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8558,
											"end": 8598,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 8558,
											"end": 8598,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 8558,
											"end": 8598,
											"name": "PUSH",
											"source": 1,
											"value": "8"
										},
										{
											"begin": 8558,
											"end": 8598,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 8558,
											"end": 8598,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 8558,
											"end": 8598,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 8558,
											"end": 8598,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 8558,
											"end": 8598,
											"name": "EXP",
											"source": 1
										},
										{
											"begin": 8558,
											"end": 8598,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 8558,
											"end": 8598,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 8558,
											"end": 8598,
											"name": "PUSH",
											"source": 1,
											"value": "FF"
										},
										{
											"begin": 8558,
											"end": 8598,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 8551,
											"end": 8598,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 8551,
											"end": 8598,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 8485,
											"end": 8605,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 8485,
											"end": 8605,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 88,
											"end": 205,
											"name": "tag",
											"source": 12,
											"value": "112"
										},
										{
											"begin": 88,
											"end": 205,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 197,
											"end": 198,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 194,
											"end": 195,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 187,
											"end": 199,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 211,
											"end": 328,
											"name": "tag",
											"source": 12,
											"value": "113"
										},
										{
											"begin": 211,
											"end": 328,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 320,
											"end": 321,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 317,
											"end": 318,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 310,
											"end": 322,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 334,
											"end": 431,
											"name": "tag",
											"source": 12,
											"value": "114"
										},
										{
											"begin": 334,
											"end": 431,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 370,
											"end": 377,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 410,
											"end": 424,
											"name": "PUSH",
											"source": 12,
											"value": "FFFFFFFFFFFF"
										},
										{
											"begin": 403,
											"end": 408,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 399,
											"end": 425,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 388,
											"end": 425,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 388,
											"end": 425,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 334,
											"end": 431,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 334,
											"end": 431,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 334,
											"end": 431,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 334,
											"end": 431,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 437,
											"end": 557,
											"name": "tag",
											"source": 12,
											"value": "115"
										},
										{
											"begin": 437,
											"end": 557,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 509,
											"end": 532,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "165"
										},
										{
											"begin": 526,
											"end": 531,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 509,
											"end": 532,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "114"
										},
										{
											"begin": 509,
											"end": 532,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 509,
											"end": 532,
											"name": "tag",
											"source": 12,
											"value": "165"
										},
										{
											"begin": 509,
											"end": 532,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 502,
											"end": 507,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 499,
											"end": 533,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 489,
											"end": 551,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "166"
										},
										{
											"begin": 489,
											"end": 551,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 547,
											"end": 548,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 544,
											"end": 545,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 537,
											"end": 549,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 489,
											"end": 551,
											"name": "tag",
											"source": 12,
											"value": "166"
										},
										{
											"begin": 489,
											"end": 551,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 437,
											"end": 557,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 437,
											"end": 557,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 563,
											"end": 700,
											"name": "tag",
											"source": 12,
											"value": "116"
										},
										{
											"begin": 563,
											"end": 700,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 608,
											"end": 613,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 646,
											"end": 652,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 633,
											"end": 653,
											"name": "CALLDATALOAD",
											"source": 12
										},
										{
											"begin": 624,
											"end": 653,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 624,
											"end": 653,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 662,
											"end": 694,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "168"
										},
										{
											"begin": 688,
											"end": 693,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 662,
											"end": 694,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "115"
										},
										{
											"begin": 662,
											"end": 694,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 662,
											"end": 694,
											"name": "tag",
											"source": 12,
											"value": "168"
										},
										{
											"begin": 662,
											"end": 694,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 563,
											"end": 700,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 563,
											"end": 700,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 563,
											"end": 700,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 563,
											"end": 700,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 563,
											"end": 700,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 706,
											"end": 832,
											"name": "tag",
											"source": 12,
											"value": "117"
										},
										{
											"begin": 706,
											"end": 832,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 743,
											"end": 750,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 783,
											"end": 825,
											"name": "PUSH",
											"source": 12,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 776,
											"end": 781,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 772,
											"end": 826,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 761,
											"end": 826,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 761,
											"end": 826,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 706,
											"end": 832,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 706,
											"end": 832,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 706,
											"end": 832,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 706,
											"end": 832,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 838,
											"end": 934,
											"name": "tag",
											"source": 12,
											"value": "118"
										},
										{
											"begin": 838,
											"end": 934,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 875,
											"end": 882,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 904,
											"end": 928,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "171"
										},
										{
											"begin": 922,
											"end": 927,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 904,
											"end": 928,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "117"
										},
										{
											"begin": 904,
											"end": 928,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 904,
											"end": 928,
											"name": "tag",
											"source": 12,
											"value": "171"
										},
										{
											"begin": 904,
											"end": 928,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 893,
											"end": 928,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 893,
											"end": 928,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 838,
											"end": 934,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 838,
											"end": 934,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 838,
											"end": 934,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 838,
											"end": 934,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 940,
											"end": 1062,
											"name": "tag",
											"source": 12,
											"value": "119"
										},
										{
											"begin": 940,
											"end": 1062,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1013,
											"end": 1037,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "173"
										},
										{
											"begin": 1031,
											"end": 1036,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 1013,
											"end": 1037,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "118"
										},
										{
											"begin": 1013,
											"end": 1037,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 1013,
											"end": 1037,
											"name": "tag",
											"source": 12,
											"value": "173"
										},
										{
											"begin": 1013,
											"end": 1037,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1006,
											"end": 1011,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 1003,
											"end": 1038,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 993,
											"end": 1056,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "174"
										},
										{
											"begin": 993,
											"end": 1056,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 1052,
											"end": 1053,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 1049,
											"end": 1050,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 1042,
											"end": 1054,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 993,
											"end": 1056,
											"name": "tag",
											"source": 12,
											"value": "174"
										},
										{
											"begin": 993,
											"end": 1056,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 940,
											"end": 1062,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 940,
											"end": 1062,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 1068,
											"end": 1207,
											"name": "tag",
											"source": 12,
											"value": "120"
										},
										{
											"begin": 1068,
											"end": 1207,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1114,
											"end": 1119,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 1152,
											"end": 1158,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 1139,
											"end": 1159,
											"name": "CALLDATALOAD",
											"source": 12
										},
										{
											"begin": 1130,
											"end": 1159,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1130,
											"end": 1159,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1168,
											"end": 1201,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "176"
										},
										{
											"begin": 1195,
											"end": 1200,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 1168,
											"end": 1201,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "119"
										},
										{
											"begin": 1168,
											"end": 1201,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 1168,
											"end": 1201,
											"name": "tag",
											"source": 12,
											"value": "176"
										},
										{
											"begin": 1168,
											"end": 1201,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1068,
											"end": 1207,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 1068,
											"end": 1207,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 1068,
											"end": 1207,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1068,
											"end": 1207,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1068,
											"end": 1207,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 1213,
											"end": 1290,
											"name": "tag",
											"source": 12,
											"value": "121"
										},
										{
											"begin": 1213,
											"end": 1290,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1250,
											"end": 1257,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 1279,
											"end": 1284,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 1268,
											"end": 1284,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1268,
											"end": 1284,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1213,
											"end": 1290,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 1213,
											"end": 1290,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1213,
											"end": 1290,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1213,
											"end": 1290,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 1296,
											"end": 1418,
											"name": "tag",
											"source": 12,
											"value": "122"
										},
										{
											"begin": 1296,
											"end": 1418,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1369,
											"end": 1393,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "179"
										},
										{
											"begin": 1387,
											"end": 1392,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 1369,
											"end": 1393,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "121"
										},
										{
											"begin": 1369,
											"end": 1393,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 1369,
											"end": 1393,
											"name": "tag",
											"source": 12,
											"value": "179"
										},
										{
											"begin": 1369,
											"end": 1393,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1362,
											"end": 1367,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 1359,
											"end": 1394,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 1349,
											"end": 1412,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "180"
										},
										{
											"begin": 1349,
											"end": 1412,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 1408,
											"end": 1409,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 1405,
											"end": 1406,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 1398,
											"end": 1410,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 1349,
											"end": 1412,
											"name": "tag",
											"source": 12,
											"value": "180"
										},
										{
											"begin": 1349,
											"end": 1412,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1296,
											"end": 1418,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1296,
											"end": 1418,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 1424,
											"end": 1563,
											"name": "tag",
											"source": 12,
											"value": "123"
										},
										{
											"begin": 1424,
											"end": 1563,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1470,
											"end": 1475,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 1508,
											"end": 1514,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 1495,
											"end": 1515,
											"name": "CALLDATALOAD",
											"source": 12
										},
										{
											"begin": 1486,
											"end": 1515,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1486,
											"end": 1515,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1524,
											"end": 1557,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "182"
										},
										{
											"begin": 1551,
											"end": 1556,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 1524,
											"end": 1557,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "122"
										},
										{
											"begin": 1524,
											"end": 1557,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 1524,
											"end": 1557,
											"name": "tag",
											"source": 12,
											"value": "182"
										},
										{
											"begin": 1524,
											"end": 1557,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1424,
											"end": 1563,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 1424,
											"end": 1563,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 1424,
											"end": 1563,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1424,
											"end": 1563,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1424,
											"end": 1563,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 1569,
											"end": 1686,
											"name": "tag",
											"source": 12,
											"value": "124"
										},
										{
											"begin": 1569,
											"end": 1686,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1678,
											"end": 1679,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 1675,
											"end": 1676,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 1668,
											"end": 1680,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 1692,
											"end": 1809,
											"name": "tag",
											"source": 12,
											"value": "125"
										},
										{
											"begin": 1692,
											"end": 1809,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1801,
											"end": 1802,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 1798,
											"end": 1799,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 1791,
											"end": 1803,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 1815,
											"end": 1932,
											"name": "tag",
											"source": 12,
											"value": "126"
										},
										{
											"begin": 1815,
											"end": 1932,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1924,
											"end": 1925,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 1921,
											"end": 1922,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 1914,
											"end": 1926,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 1952,
											"end": 2505,
											"name": "tag",
											"source": 12,
											"value": "127"
										},
										{
											"begin": 1952,
											"end": 2505,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2010,
											"end": 2018,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 2020,
											"end": 2026,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 2070,
											"end": 2073,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 2063,
											"end": 2067,
											"name": "PUSH",
											"source": 12,
											"value": "1F"
										},
										{
											"begin": 2055,
											"end": 2061,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 2051,
											"end": 2068,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 2047,
											"end": 2074,
											"name": "SLT",
											"source": 12
										},
										{
											"begin": 2037,
											"end": 2159,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "187"
										},
										{
											"begin": 2037,
											"end": 2159,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 2078,
											"end": 2157,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "188"
										},
										{
											"begin": 2078,
											"end": 2157,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "124"
										},
										{
											"begin": 2078,
											"end": 2157,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 2078,
											"end": 2157,
											"name": "tag",
											"source": 12,
											"value": "188"
										},
										{
											"begin": 2078,
											"end": 2157,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2037,
											"end": 2159,
											"name": "tag",
											"source": 12,
											"value": "187"
										},
										{
											"begin": 2037,
											"end": 2159,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2191,
											"end": 2197,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 2178,
											"end": 2198,
											"name": "CALLDATALOAD",
											"source": 12
										},
										{
											"begin": 2168,
											"end": 2198,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 2168,
											"end": 2198,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 2221,
											"end": 2239,
											"name": "PUSH",
											"source": 12,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2213,
											"end": 2219,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 2210,
											"end": 2240,
											"name": "GT",
											"source": 12
										},
										{
											"begin": 2207,
											"end": 2324,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 2207,
											"end": 2324,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "189"
										},
										{
											"begin": 2207,
											"end": 2324,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 2243,
											"end": 2322,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "190"
										},
										{
											"begin": 2243,
											"end": 2322,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "125"
										},
										{
											"begin": 2243,
											"end": 2322,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 2243,
											"end": 2322,
											"name": "tag",
											"source": 12,
											"value": "190"
										},
										{
											"begin": 2243,
											"end": 2322,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2207,
											"end": 2324,
											"name": "tag",
											"source": 12,
											"value": "189"
										},
										{
											"begin": 2207,
											"end": 2324,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2357,
											"end": 2361,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 2349,
											"end": 2355,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 2345,
											"end": 2362,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 2333,
											"end": 2362,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 2333,
											"end": 2362,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 2411,
											"end": 2414,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 2403,
											"end": 2407,
											"name": "PUSH",
											"source": 12,
											"value": "1"
										},
										{
											"begin": 2395,
											"end": 2401,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 2391,
											"end": 2408,
											"name": "MUL",
											"source": 12
										},
										{
											"begin": 2381,
											"end": 2389,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 2377,
											"end": 2409,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 2374,
											"end": 2415,
											"name": "GT",
											"source": 12
										},
										{
											"begin": 2371,
											"end": 2499,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 2371,
											"end": 2499,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "191"
										},
										{
											"begin": 2371,
											"end": 2499,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 2418,
											"end": 2497,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "192"
										},
										{
											"begin": 2418,
											"end": 2497,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "126"
										},
										{
											"begin": 2418,
											"end": 2497,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 2418,
											"end": 2497,
											"name": "tag",
											"source": 12,
											"value": "192"
										},
										{
											"begin": 2418,
											"end": 2497,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2371,
											"end": 2499,
											"name": "tag",
											"source": 12,
											"value": "191"
										},
										{
											"begin": 2371,
											"end": 2499,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1952,
											"end": 2505,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 1952,
											"end": 2505,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1952,
											"end": 2505,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 1952,
											"end": 2505,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1952,
											"end": 2505,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1952,
											"end": 2505,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 2511,
											"end": 3912,
											"name": "tag",
											"source": 12,
											"value": "15"
										},
										{
											"begin": 2511,
											"end": 3912,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2635,
											"end": 2641,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 2643,
											"end": 2649,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 2651,
											"end": 2657,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 2659,
											"end": 2665,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 2667,
											"end": 2673,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 2675,
											"end": 2681,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 2683,
											"end": 2689,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 2691,
											"end": 2697,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 2740,
											"end": 2743,
											"name": "PUSH",
											"source": 12,
											"value": "E0"
										},
										{
											"begin": 2728,
											"end": 2737,
											"name": "DUP10",
											"source": 12
										},
										{
											"begin": 2719,
											"end": 2726,
											"name": "DUP12",
											"source": 12
										},
										{
											"begin": 2715,
											"end": 2738,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 2711,
											"end": 2744,
											"name": "SLT",
											"source": 12
										},
										{
											"begin": 2708,
											"end": 2828,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 2708,
											"end": 2828,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "194"
										},
										{
											"begin": 2708,
											"end": 2828,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 2747,
											"end": 2826,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "195"
										},
										{
											"begin": 2747,
											"end": 2826,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "112"
										},
										{
											"begin": 2747,
											"end": 2826,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 2747,
											"end": 2826,
											"name": "tag",
											"source": 12,
											"value": "195"
										},
										{
											"begin": 2747,
											"end": 2826,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2708,
											"end": 2828,
											"name": "tag",
											"source": 12,
											"value": "194"
										},
										{
											"begin": 2708,
											"end": 2828,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2867,
											"end": 2868,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 2892,
											"end": 2944,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "196"
										},
										{
											"begin": 2936,
											"end": 2943,
											"name": "DUP12",
											"source": 12
										},
										{
											"begin": 2927,
											"end": 2933,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 2916,
											"end": 2925,
											"name": "DUP13",
											"source": 12
										},
										{
											"begin": 2912,
											"end": 2934,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 2892,
											"end": 2944,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "116"
										},
										{
											"begin": 2892,
											"end": 2944,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 2892,
											"end": 2944,
											"name": "tag",
											"source": 12,
											"value": "196"
										},
										{
											"begin": 2892,
											"end": 2944,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2882,
											"end": 2944,
											"name": "SWAP9",
											"source": 12
										},
										{
											"begin": 2882,
											"end": 2944,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 2838,
											"end": 2954,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 2993,
											"end": 2995,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 3019,
											"end": 3072,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "197"
										},
										{
											"begin": 3064,
											"end": 3071,
											"name": "DUP12",
											"source": 12
										},
										{
											"begin": 3055,
											"end": 3061,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 3044,
											"end": 3053,
											"name": "DUP13",
											"source": 12
										},
										{
											"begin": 3040,
											"end": 3062,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 3019,
											"end": 3072,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "120"
										},
										{
											"begin": 3019,
											"end": 3072,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 3019,
											"end": 3072,
											"name": "tag",
											"source": 12,
											"value": "197"
										},
										{
											"begin": 3019,
											"end": 3072,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 3009,
											"end": 3072,
											"name": "SWAP8",
											"source": 12
										},
										{
											"begin": 3009,
											"end": 3072,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 2964,
											"end": 3082,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 3121,
											"end": 3123,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 3147,
											"end": 3200,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "198"
										},
										{
											"begin": 3192,
											"end": 3199,
											"name": "DUP12",
											"source": 12
										},
										{
											"begin": 3183,
											"end": 3189,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 3172,
											"end": 3181,
											"name": "DUP13",
											"source": 12
										},
										{
											"begin": 3168,
											"end": 3190,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 3147,
											"end": 3200,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "123"
										},
										{
											"begin": 3147,
											"end": 3200,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 3147,
											"end": 3200,
											"name": "tag",
											"source": 12,
											"value": "198"
										},
										{
											"begin": 3147,
											"end": 3200,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 3137,
											"end": 3200,
											"name": "SWAP7",
											"source": 12
										},
										{
											"begin": 3137,
											"end": 3200,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 3092,
											"end": 3210,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 3249,
											"end": 3251,
											"name": "PUSH",
											"source": 12,
											"value": "60"
										},
										{
											"begin": 3275,
											"end": 3328,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "199"
										},
										{
											"begin": 3320,
											"end": 3327,
											"name": "DUP12",
											"source": 12
										},
										{
											"begin": 3311,
											"end": 3317,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 3300,
											"end": 3309,
											"name": "DUP13",
											"source": 12
										},
										{
											"begin": 3296,
											"end": 3318,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 3275,
											"end": 3328,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "123"
										},
										{
											"begin": 3275,
											"end": 3328,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 3275,
											"end": 3328,
											"name": "tag",
											"source": 12,
											"value": "199"
										},
										{
											"begin": 3275,
											"end": 3328,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 3265,
											"end": 3328,
											"name": "SWAP6",
											"source": 12
										},
										{
											"begin": 3265,
											"end": 3328,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 3220,
											"end": 3338,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 3377,
											"end": 3380,
											"name": "PUSH",
											"source": 12,
											"value": "80"
										},
										{
											"begin": 3404,
											"end": 3457,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "200"
										},
										{
											"begin": 3449,
											"end": 3456,
											"name": "DUP12",
											"source": 12
										},
										{
											"begin": 3440,
											"end": 3446,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 3429,
											"end": 3438,
											"name": "DUP13",
											"source": 12
										},
										{
											"begin": 3425,
											"end": 3447,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 3404,
											"end": 3457,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "123"
										},
										{
											"begin": 3404,
											"end": 3457,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 3404,
											"end": 3457,
											"name": "tag",
											"source": 12,
											"value": "200"
										},
										{
											"begin": 3404,
											"end": 3457,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 3394,
											"end": 3457,
											"name": "SWAP5",
											"source": 12
										},
										{
											"begin": 3394,
											"end": 3457,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 3348,
											"end": 3467,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 3534,
											"end": 3537,
											"name": "PUSH",
											"source": 12,
											"value": "A0"
										},
										{
											"begin": 3523,
											"end": 3532,
											"name": "DUP10",
											"source": 12
										},
										{
											"begin": 3519,
											"end": 3538,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 3506,
											"end": 3539,
											"name": "CALLDATALOAD",
											"source": 12
										},
										{
											"begin": 3566,
											"end": 3584,
											"name": "PUSH",
											"source": 12,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3558,
											"end": 3564,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 3555,
											"end": 3585,
											"name": "GT",
											"source": 12
										},
										{
											"begin": 3552,
											"end": 3669,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 3552,
											"end": 3669,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "201"
										},
										{
											"begin": 3552,
											"end": 3669,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 3588,
											"end": 3667,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "202"
										},
										{
											"begin": 3588,
											"end": 3667,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "113"
										},
										{
											"begin": 3588,
											"end": 3667,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 3588,
											"end": 3667,
											"name": "tag",
											"source": 12,
											"value": "202"
										},
										{
											"begin": 3588,
											"end": 3667,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 3552,
											"end": 3669,
											"name": "tag",
											"source": 12,
											"value": "201"
										},
										{
											"begin": 3552,
											"end": 3669,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 3701,
											"end": 3766,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "203"
										},
										{
											"begin": 3758,
											"end": 3765,
											"name": "DUP12",
											"source": 12
										},
										{
											"begin": 3749,
											"end": 3755,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 3738,
											"end": 3747,
											"name": "DUP13",
											"source": 12
										},
										{
											"begin": 3734,
											"end": 3756,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 3701,
											"end": 3766,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "127"
										},
										{
											"begin": 3701,
											"end": 3766,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 3701,
											"end": 3766,
											"name": "tag",
											"source": 12,
											"value": "203"
										},
										{
											"begin": 3701,
											"end": 3766,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 3683,
											"end": 3766,
											"name": "SWAP4",
											"source": 12
										},
										{
											"begin": 3683,
											"end": 3766,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 3683,
											"end": 3766,
											"name": "SWAP4",
											"source": 12
										},
										{
											"begin": 3683,
											"end": 3766,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 3477,
											"end": 3776,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 3815,
											"end": 3818,
											"name": "PUSH",
											"source": 12,
											"value": "C0"
										},
										{
											"begin": 3842,
											"end": 3895,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "204"
										},
										{
											"begin": 3887,
											"end": 3894,
											"name": "DUP12",
											"source": 12
										},
										{
											"begin": 3878,
											"end": 3884,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 3867,
											"end": 3876,
											"name": "DUP13",
											"source": 12
										},
										{
											"begin": 3863,
											"end": 3885,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 3842,
											"end": 3895,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "120"
										},
										{
											"begin": 3842,
											"end": 3895,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 3842,
											"end": 3895,
											"name": "tag",
											"source": 12,
											"value": "204"
										},
										{
											"begin": 3842,
											"end": 3895,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 3832,
											"end": 3895,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 3832,
											"end": 3895,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 3786,
											"end": 3905,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 2511,
											"end": 3912,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 2511,
											"end": 3912,
											"name": "SWAP6",
											"source": 12
										},
										{
											"begin": 2511,
											"end": 3912,
											"name": "SWAP9",
											"source": 12
										},
										{
											"begin": 2511,
											"end": 3912,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 2511,
											"end": 3912,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 2511,
											"end": 3912,
											"name": "SWAP6",
											"source": 12
										},
										{
											"begin": 2511,
											"end": 3912,
											"name": "SWAP9",
											"source": 12
										},
										{
											"begin": 2511,
											"end": 3912,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 2511,
											"end": 3912,
											"name": "SWAP4",
											"source": 12
										},
										{
											"begin": 2511,
											"end": 3912,
											"name": "SWAP7",
											"source": 12
										},
										{
											"begin": 2511,
											"end": 3912,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 2511,
											"end": 3912,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 3918,
											"end": 4036,
											"name": "tag",
											"source": 12,
											"value": "128"
										},
										{
											"begin": 3918,
											"end": 4036,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 4005,
											"end": 4029,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "206"
										},
										{
											"begin": 4023,
											"end": 4028,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 4005,
											"end": 4029,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "118"
										},
										{
											"begin": 4005,
											"end": 4029,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 4005,
											"end": 4029,
											"name": "tag",
											"source": 12,
											"value": "206"
										},
										{
											"begin": 4005,
											"end": 4029,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 4000,
											"end": 4003,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 3993,
											"end": 4030,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 3918,
											"end": 4036,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 3918,
											"end": 4036,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 3918,
											"end": 4036,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 4042,
											"end": 4264,
											"name": "tag",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 4042,
											"end": 4264,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 4135,
											"end": 4139,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 4173,
											"end": 4175,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 4162,
											"end": 4171,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 4158,
											"end": 4176,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 4150,
											"end": 4176,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 4150,
											"end": 4176,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 4186,
											"end": 4257,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "208"
										},
										{
											"begin": 4254,
											"end": 4255,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 4243,
											"end": 4252,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 4239,
											"end": 4256,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 4230,
											"end": 4236,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 4186,
											"end": 4257,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "128"
										},
										{
											"begin": 4186,
											"end": 4257,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 4186,
											"end": 4257,
											"name": "tag",
											"source": 12,
											"value": "208"
										},
										{
											"begin": 4186,
											"end": 4257,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 4042,
											"end": 4264,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 4042,
											"end": 4264,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 4042,
											"end": 4264,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 4042,
											"end": 4264,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 4042,
											"end": 4264,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 4270,
											"end": 4744,
											"name": "tag",
											"source": 12,
											"value": "23"
										},
										{
											"begin": 4270,
											"end": 4744,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 4338,
											"end": 4344,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 4346,
											"end": 4352,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 4395,
											"end": 4397,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 4383,
											"end": 4392,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 4374,
											"end": 4381,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 4370,
											"end": 4393,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 4366,
											"end": 4398,
											"name": "SLT",
											"source": 12
										},
										{
											"begin": 4363,
											"end": 4482,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 4363,
											"end": 4482,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "210"
										},
										{
											"begin": 4363,
											"end": 4482,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 4401,
											"end": 4480,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "211"
										},
										{
											"begin": 4401,
											"end": 4480,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "112"
										},
										{
											"begin": 4401,
											"end": 4480,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 4401,
											"end": 4480,
											"name": "tag",
											"source": 12,
											"value": "211"
										},
										{
											"begin": 4401,
											"end": 4480,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 4363,
											"end": 4482,
											"name": "tag",
											"source": 12,
											"value": "210"
										},
										{
											"begin": 4363,
											"end": 4482,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 4521,
											"end": 4522,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 4546,
											"end": 4599,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "212"
										},
										{
											"begin": 4591,
											"end": 4598,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 4582,
											"end": 4588,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 4571,
											"end": 4580,
											"name": "DUP7",
											"source": 12
										},
										{
											"begin": 4567,
											"end": 4589,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 4546,
											"end": 4599,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "120"
										},
										{
											"begin": 4546,
											"end": 4599,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 4546,
											"end": 4599,
											"name": "tag",
											"source": 12,
											"value": "212"
										},
										{
											"begin": 4546,
											"end": 4599,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 4536,
											"end": 4599,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 4536,
											"end": 4599,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 4492,
											"end": 4609,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 4648,
											"end": 4650,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 4674,
											"end": 4727,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "213"
										},
										{
											"begin": 4719,
											"end": 4726,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 4710,
											"end": 4716,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 4699,
											"end": 4708,
											"name": "DUP7",
											"source": 12
										},
										{
											"begin": 4695,
											"end": 4717,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 4674,
											"end": 4727,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "123"
										},
										{
											"begin": 4674,
											"end": 4727,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 4674,
											"end": 4727,
											"name": "tag",
											"source": 12,
											"value": "213"
										},
										{
											"begin": 4674,
											"end": 4727,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 4664,
											"end": 4727,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 4664,
											"end": 4727,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 4619,
											"end": 4737,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 4270,
											"end": 4744,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 4270,
											"end": 4744,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 4270,
											"end": 4744,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 4270,
											"end": 4744,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 4270,
											"end": 4744,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 4270,
											"end": 4744,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 4750,
											"end": 4868,
											"name": "tag",
											"source": 12,
											"value": "129"
										},
										{
											"begin": 4750,
											"end": 4868,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 4837,
											"end": 4861,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "215"
										},
										{
											"begin": 4855,
											"end": 4860,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 4837,
											"end": 4861,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "121"
										},
										{
											"begin": 4837,
											"end": 4861,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 4837,
											"end": 4861,
											"name": "tag",
											"source": 12,
											"value": "215"
										},
										{
											"begin": 4837,
											"end": 4861,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 4832,
											"end": 4835,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 4825,
											"end": 4862,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 4750,
											"end": 4868,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 4750,
											"end": 4868,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 4750,
											"end": 4868,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 4874,
											"end": 4989,
											"name": "tag",
											"source": 12,
											"value": "130"
										},
										{
											"begin": 4874,
											"end": 4989,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 4959,
											"end": 4982,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "217"
										},
										{
											"begin": 4976,
											"end": 4981,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 4959,
											"end": 4982,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "114"
										},
										{
											"begin": 4959,
											"end": 4982,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 4959,
											"end": 4982,
											"name": "tag",
											"source": 12,
											"value": "217"
										},
										{
											"begin": 4959,
											"end": 4982,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 4954,
											"end": 4957,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 4947,
											"end": 4983,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 4874,
											"end": 4989,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 4874,
											"end": 4989,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 4874,
											"end": 4989,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 4995,
											"end": 5094,
											"name": "tag",
											"source": 12,
											"value": "131"
										},
										{
											"begin": 4995,
											"end": 5094,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 5047,
											"end": 5053,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 5081,
											"end": 5086,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 5075,
											"end": 5087,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 5065,
											"end": 5087,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 5065,
											"end": 5087,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 4995,
											"end": 5094,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 4995,
											"end": 5094,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 4995,
											"end": 5094,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 4995,
											"end": 5094,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 5100,
											"end": 5269,
											"name": "tag",
											"source": 12,
											"value": "132"
										},
										{
											"begin": 5100,
											"end": 5269,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 5184,
											"end": 5195,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 5218,
											"end": 5224,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 5213,
											"end": 5216,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 5206,
											"end": 5225,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 5258,
											"end": 5262,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 5253,
											"end": 5256,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 5249,
											"end": 5263,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 5234,
											"end": 5263,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 5234,
											"end": 5263,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 5100,
											"end": 5269,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 5100,
											"end": 5269,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 5100,
											"end": 5269,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 5100,
											"end": 5269,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 5100,
											"end": 5269,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 5275,
											"end": 5414,
											"name": "tag",
											"source": 12,
											"value": "133"
										},
										{
											"begin": 5275,
											"end": 5414,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 5364,
											"end": 5370,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 5359,
											"end": 5362,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 5354,
											"end": 5357,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 5348,
											"end": 5371,
											"name": "MCOPY",
											"source": 12
										},
										{
											"begin": 5405,
											"end": 5406,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 5396,
											"end": 5402,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 5391,
											"end": 5394,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 5387,
											"end": 5403,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 5380,
											"end": 5407,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 5275,
											"end": 5414,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 5275,
											"end": 5414,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 5275,
											"end": 5414,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 5275,
											"end": 5414,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 5420,
											"end": 5522,
											"name": "tag",
											"source": 12,
											"value": "134"
										},
										{
											"begin": 5420,
											"end": 5522,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 5461,
											"end": 5467,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 5512,
											"end": 5514,
											"name": "PUSH",
											"source": 12,
											"value": "1F"
										},
										{
											"begin": 5508,
											"end": 5515,
											"name": "NOT",
											"source": 12
										},
										{
											"begin": 5503,
											"end": 5505,
											"name": "PUSH",
											"source": 12,
											"value": "1F"
										},
										{
											"begin": 5496,
											"end": 5501,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 5492,
											"end": 5506,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 5488,
											"end": 5516,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 5478,
											"end": 5516,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 5478,
											"end": 5516,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 5420,
											"end": 5522,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 5420,
											"end": 5522,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 5420,
											"end": 5522,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 5420,
											"end": 5522,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 5528,
											"end": 5905,
											"name": "tag",
											"source": 12,
											"value": "135"
										},
										{
											"begin": 5528,
											"end": 5905,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 5616,
											"end": 5619,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 5644,
											"end": 5683,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "223"
										},
										{
											"begin": 5677,
											"end": 5682,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 5644,
											"end": 5683,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "131"
										},
										{
											"begin": 5644,
											"end": 5683,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 5644,
											"end": 5683,
											"name": "tag",
											"source": 12,
											"value": "223"
										},
										{
											"begin": 5644,
											"end": 5683,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 5699,
											"end": 5770,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "224"
										},
										{
											"begin": 5763,
											"end": 5769,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 5758,
											"end": 5761,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 5699,
											"end": 5770,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "132"
										},
										{
											"begin": 5699,
											"end": 5770,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 5699,
											"end": 5770,
											"name": "tag",
											"source": 12,
											"value": "224"
										},
										{
											"begin": 5699,
											"end": 5770,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 5692,
											"end": 5770,
											"name": "SWAP4",
											"source": 12
										},
										{
											"begin": 5692,
											"end": 5770,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 5779,
											"end": 5844,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "225"
										},
										{
											"begin": 5837,
											"end": 5843,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 5832,
											"end": 5835,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 5825,
											"end": 5829,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 5818,
											"end": 5823,
											"name": "DUP7",
											"source": 12
										},
										{
											"begin": 5814,
											"end": 5830,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 5779,
											"end": 5844,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "133"
										},
										{
											"begin": 5779,
											"end": 5844,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 5779,
											"end": 5844,
											"name": "tag",
											"source": 12,
											"value": "225"
										},
										{
											"begin": 5779,
											"end": 5844,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 5869,
											"end": 5898,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "226"
										},
										{
											"begin": 5891,
											"end": 5897,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 5869,
											"end": 5898,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "134"
										},
										{
											"begin": 5869,
											"end": 5898,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 5869,
											"end": 5898,
											"name": "tag",
											"source": 12,
											"value": "226"
										},
										{
											"begin": 5869,
											"end": 5898,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 5864,
											"end": 5867,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 5860,
											"end": 5899,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 5853,
											"end": 5899,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 5853,
											"end": 5899,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 5620,
											"end": 5905,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 5528,
											"end": 5905,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 5528,
											"end": 5905,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 5528,
											"end": 5905,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 5528,
											"end": 5905,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 5528,
											"end": 5905,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 5911,
											"end": 6995,
											"name": "tag",
											"source": 12,
											"value": "26"
										},
										{
											"begin": 5911,
											"end": 6995,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 6218,
											"end": 6222,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 6256,
											"end": 6259,
											"name": "PUSH",
											"source": 12,
											"value": "100"
										},
										{
											"begin": 6245,
											"end": 6254,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 6241,
											"end": 6260,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 6233,
											"end": 6260,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 6233,
											"end": 6260,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 6270,
											"end": 6341,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "228"
										},
										{
											"begin": 6338,
											"end": 6339,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 6327,
											"end": 6336,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 6323,
											"end": 6340,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 6314,
											"end": 6320,
											"name": "DUP12",
											"source": 12
										},
										{
											"begin": 6270,
											"end": 6341,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "128"
										},
										{
											"begin": 6270,
											"end": 6341,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 6270,
											"end": 6341,
											"name": "tag",
											"source": 12,
											"value": "228"
										},
										{
											"begin": 6270,
											"end": 6341,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 6351,
											"end": 6423,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "229"
										},
										{
											"begin": 6419,
											"end": 6421,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 6408,
											"end": 6417,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 6404,
											"end": 6422,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 6395,
											"end": 6401,
											"name": "DUP11",
											"source": 12
										},
										{
											"begin": 6351,
											"end": 6423,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "128"
										},
										{
											"begin": 6351,
											"end": 6423,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 6351,
											"end": 6423,
											"name": "tag",
											"source": 12,
											"value": "229"
										},
										{
											"begin": 6351,
											"end": 6423,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 6433,
											"end": 6505,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "230"
										},
										{
											"begin": 6501,
											"end": 6503,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 6490,
											"end": 6499,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 6486,
											"end": 6504,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 6477,
											"end": 6483,
											"name": "DUP10",
											"source": 12
										},
										{
											"begin": 6433,
											"end": 6505,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "129"
										},
										{
											"begin": 6433,
											"end": 6505,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 6433,
											"end": 6505,
											"name": "tag",
											"source": 12,
											"value": "230"
										},
										{
											"begin": 6433,
											"end": 6505,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 6515,
											"end": 6587,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "231"
										},
										{
											"begin": 6583,
											"end": 6585,
											"name": "PUSH",
											"source": 12,
											"value": "60"
										},
										{
											"begin": 6572,
											"end": 6581,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 6568,
											"end": 6586,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 6559,
											"end": 6565,
											"name": "DUP9",
											"source": 12
										},
										{
											"begin": 6515,
											"end": 6587,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "129"
										},
										{
											"begin": 6515,
											"end": 6587,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 6515,
											"end": 6587,
											"name": "tag",
											"source": 12,
											"value": "231"
										},
										{
											"begin": 6515,
											"end": 6587,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 6597,
											"end": 6670,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "232"
										},
										{
											"begin": 6665,
											"end": 6668,
											"name": "PUSH",
											"source": 12,
											"value": "80"
										},
										{
											"begin": 6654,
											"end": 6663,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 6650,
											"end": 6669,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 6641,
											"end": 6647,
											"name": "DUP8",
											"source": 12
										},
										{
											"begin": 6597,
											"end": 6670,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "129"
										},
										{
											"begin": 6597,
											"end": 6670,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 6597,
											"end": 6670,
											"name": "tag",
											"source": 12,
											"value": "232"
										},
										{
											"begin": 6597,
											"end": 6670,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 6680,
											"end": 6751,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "233"
										},
										{
											"begin": 6746,
											"end": 6749,
											"name": "PUSH",
											"source": 12,
											"value": "A0"
										},
										{
											"begin": 6735,
											"end": 6744,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 6731,
											"end": 6750,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 6722,
											"end": 6728,
											"name": "DUP7",
											"source": 12
										},
										{
											"begin": 6680,
											"end": 6751,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "130"
										},
										{
											"begin": 6680,
											"end": 6751,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 6680,
											"end": 6751,
											"name": "tag",
											"source": 12,
											"value": "233"
										},
										{
											"begin": 6680,
											"end": 6751,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 6799,
											"end": 6808,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 6793,
											"end": 6797,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 6789,
											"end": 6809,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 6783,
											"end": 6786,
											"name": "PUSH",
											"source": 12,
											"value": "C0"
										},
										{
											"begin": 6772,
											"end": 6781,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 6768,
											"end": 6787,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 6761,
											"end": 6810,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 6827,
											"end": 6905,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "234"
										},
										{
											"begin": 6900,
											"end": 6904,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 6891,
											"end": 6897,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 6827,
											"end": 6905,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "135"
										},
										{
											"begin": 6827,
											"end": 6905,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 6827,
											"end": 6905,
											"name": "tag",
											"source": 12,
											"value": "234"
										},
										{
											"begin": 6827,
											"end": 6905,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 6819,
											"end": 6905,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 6819,
											"end": 6905,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 6915,
											"end": 6988,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "235"
										},
										{
											"begin": 6983,
											"end": 6986,
											"name": "PUSH",
											"source": 12,
											"value": "E0"
										},
										{
											"begin": 6972,
											"end": 6981,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 6968,
											"end": 6987,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 6959,
											"end": 6965,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 6915,
											"end": 6988,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "128"
										},
										{
											"begin": 6915,
											"end": 6988,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 6915,
											"end": 6988,
											"name": "tag",
											"source": 12,
											"value": "235"
										},
										{
											"begin": 6915,
											"end": 6988,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 5911,
											"end": 6995,
											"name": "SWAP10",
											"source": 12
										},
										{
											"begin": 5911,
											"end": 6995,
											"name": "SWAP9",
											"source": 12
										},
										{
											"begin": 5911,
											"end": 6995,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 5911,
											"end": 6995,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 5911,
											"end": 6995,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 5911,
											"end": 6995,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 5911,
											"end": 6995,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 5911,
											"end": 6995,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 5911,
											"end": 6995,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 5911,
											"end": 6995,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 5911,
											"end": 6995,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 5911,
											"end": 6995,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 7001,
											"end": 7330,
											"name": "tag",
											"source": 12,
											"value": "29"
										},
										{
											"begin": 7001,
											"end": 7330,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 7060,
											"end": 7066,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 7109,
											"end": 7111,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 7097,
											"end": 7106,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 7088,
											"end": 7095,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 7084,
											"end": 7107,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 7080,
											"end": 7112,
											"name": "SLT",
											"source": 12
										},
										{
											"begin": 7077,
											"end": 7196,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 7077,
											"end": 7196,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "237"
										},
										{
											"begin": 7077,
											"end": 7196,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 7115,
											"end": 7194,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "238"
										},
										{
											"begin": 7115,
											"end": 7194,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "112"
										},
										{
											"begin": 7115,
											"end": 7194,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 7115,
											"end": 7194,
											"name": "tag",
											"source": 12,
											"value": "238"
										},
										{
											"begin": 7115,
											"end": 7194,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 7077,
											"end": 7196,
											"name": "tag",
											"source": 12,
											"value": "237"
										},
										{
											"begin": 7077,
											"end": 7196,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 7235,
											"end": 7236,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 7260,
											"end": 7313,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "239"
										},
										{
											"begin": 7305,
											"end": 7312,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 7296,
											"end": 7302,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 7285,
											"end": 7294,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 7281,
											"end": 7303,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 7260,
											"end": 7313,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "120"
										},
										{
											"begin": 7260,
											"end": 7313,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 7260,
											"end": 7313,
											"name": "tag",
											"source": 12,
											"value": "239"
										},
										{
											"begin": 7260,
											"end": 7313,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 7250,
											"end": 7313,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 7250,
											"end": 7313,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 7206,
											"end": 7323,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 7001,
											"end": 7330,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 7001,
											"end": 7330,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 7001,
											"end": 7330,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 7001,
											"end": 7330,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 7001,
											"end": 7330,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 7336,
											"end": 7421,
											"name": "tag",
											"source": 12,
											"value": "136"
										},
										{
											"begin": 7336,
											"end": 7421,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 7381,
											"end": 7388,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 7410,
											"end": 7415,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 7399,
											"end": 7415,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 7399,
											"end": 7415,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 7336,
											"end": 7421,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 7336,
											"end": 7421,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 7336,
											"end": 7421,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 7336,
											"end": 7421,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 7427,
											"end": 7528,
											"name": "tag",
											"source": 12,
											"value": "137"
										},
										{
											"begin": 7427,
											"end": 7528,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 7463,
											"end": 7470,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 7503,
											"end": 7521,
											"name": "PUSH",
											"source": 12,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7496,
											"end": 7501,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 7492,
											"end": 7522,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 7481,
											"end": 7522,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 7481,
											"end": 7522,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 7427,
											"end": 7528,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 7427,
											"end": 7528,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 7427,
											"end": 7528,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 7427,
											"end": 7528,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 7534,
											"end": 7594,
											"name": "tag",
											"source": 12,
											"value": "138"
										},
										{
											"begin": 7534,
											"end": 7594,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 7562,
											"end": 7565,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 7583,
											"end": 7588,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 7576,
											"end": 7588,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 7576,
											"end": 7588,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 7534,
											"end": 7594,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 7534,
											"end": 7594,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 7534,
											"end": 7594,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 7534,
											"end": 7594,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 7600,
											"end": 7756,
											"name": "tag",
											"source": 12,
											"value": "139"
										},
										{
											"begin": 7600,
											"end": 7756,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 7657,
											"end": 7666,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 7690,
											"end": 7750,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "244"
										},
										{
											"begin": 7707,
											"end": 7749,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "245"
										},
										{
											"begin": 7716,
											"end": 7748,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "246"
										},
										{
											"begin": 7742,
											"end": 7747,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 7716,
											"end": 7748,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "136"
										},
										{
											"begin": 7716,
											"end": 7748,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 7716,
											"end": 7748,
											"name": "tag",
											"source": 12,
											"value": "246"
										},
										{
											"begin": 7716,
											"end": 7748,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 7707,
											"end": 7749,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "138"
										},
										{
											"begin": 7707,
											"end": 7749,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 7707,
											"end": 7749,
											"name": "tag",
											"source": 12,
											"value": "245"
										},
										{
											"begin": 7707,
											"end": 7749,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 7690,
											"end": 7750,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "137"
										},
										{
											"begin": 7690,
											"end": 7750,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 7690,
											"end": 7750,
											"name": "tag",
											"source": 12,
											"value": "244"
										},
										{
											"begin": 7690,
											"end": 7750,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 7677,
											"end": 7750,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 7677,
											"end": 7750,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 7600,
											"end": 7756,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 7600,
											"end": 7756,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 7600,
											"end": 7756,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 7600,
											"end": 7756,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 7762,
											"end": 7907,
											"name": "tag",
											"source": 12,
											"value": "140"
										},
										{
											"begin": 7762,
											"end": 7907,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 7856,
											"end": 7900,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "248"
										},
										{
											"begin": 7894,
											"end": 7899,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 7856,
											"end": 7900,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "139"
										},
										{
											"begin": 7856,
											"end": 7900,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 7856,
											"end": 7900,
											"name": "tag",
											"source": 12,
											"value": "248"
										},
										{
											"begin": 7856,
											"end": 7900,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 7851,
											"end": 7854,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 7844,
											"end": 7901,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 7762,
											"end": 7907,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 7762,
											"end": 7907,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 7762,
											"end": 7907,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 7913,
											"end": 8149,
											"name": "tag",
											"source": 12,
											"value": "50"
										},
										{
											"begin": 7913,
											"end": 8149,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 8013,
											"end": 8017,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 8051,
											"end": 8053,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 8040,
											"end": 8049,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 8036,
											"end": 8054,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 8028,
											"end": 8054,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 8028,
											"end": 8054,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 8064,
											"end": 8142,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "250"
										},
										{
											"begin": 8139,
											"end": 8140,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 8128,
											"end": 8137,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 8124,
											"end": 8141,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 8115,
											"end": 8121,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 8064,
											"end": 8142,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "140"
										},
										{
											"begin": 8064,
											"end": 8142,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 8064,
											"end": 8142,
											"name": "tag",
											"source": 12,
											"value": "250"
										},
										{
											"begin": 8064,
											"end": 8142,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 7913,
											"end": 8149,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 7913,
											"end": 8149,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 7913,
											"end": 8149,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 7913,
											"end": 8149,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 7913,
											"end": 8149,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 8155,
											"end": 8320,
											"name": "tag",
											"source": 12,
											"value": "141"
										},
										{
											"begin": 8155,
											"end": 8320,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 8295,
											"end": 8312,
											"name": "PUSH",
											"source": 12,
											"value": "496E76616C696420616464726573730000000000000000000000000000000000"
										},
										{
											"begin": 8291,
											"end": 8292,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 8283,
											"end": 8289,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 8279,
											"end": 8293,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 8272,
											"end": 8313,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 8155,
											"end": 8320,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 8155,
											"end": 8320,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 8326,
											"end": 8692,
											"name": "tag",
											"source": 12,
											"value": "142"
										},
										{
											"begin": 8326,
											"end": 8692,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 8468,
											"end": 8471,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 8489,
											"end": 8556,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "253"
										},
										{
											"begin": 8553,
											"end": 8555,
											"name": "PUSH",
											"source": 12,
											"value": "F"
										},
										{
											"begin": 8548,
											"end": 8551,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 8489,
											"end": 8556,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "132"
										},
										{
											"begin": 8489,
											"end": 8556,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 8489,
											"end": 8556,
											"name": "tag",
											"source": 12,
											"value": "253"
										},
										{
											"begin": 8489,
											"end": 8556,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 8482,
											"end": 8556,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 8482,
											"end": 8556,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 8565,
											"end": 8658,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "254"
										},
										{
											"begin": 8654,
											"end": 8657,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 8565,
											"end": 8658,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "141"
										},
										{
											"begin": 8565,
											"end": 8658,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 8565,
											"end": 8658,
											"name": "tag",
											"source": 12,
											"value": "254"
										},
										{
											"begin": 8565,
											"end": 8658,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 8683,
											"end": 8685,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 8678,
											"end": 8681,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 8674,
											"end": 8686,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 8667,
											"end": 8686,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 8667,
											"end": 8686,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 8326,
											"end": 8692,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 8326,
											"end": 8692,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 8326,
											"end": 8692,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 8326,
											"end": 8692,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 8698,
											"end": 9117,
											"name": "tag",
											"source": 12,
											"value": "55"
										},
										{
											"begin": 8698,
											"end": 9117,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 8864,
											"end": 8868,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 8902,
											"end": 8904,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 8891,
											"end": 8900,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 8887,
											"end": 8905,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 8879,
											"end": 8905,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 8879,
											"end": 8905,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 8951,
											"end": 8960,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 8945,
											"end": 8949,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 8941,
											"end": 8961,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 8937,
											"end": 8938,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 8926,
											"end": 8935,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 8922,
											"end": 8939,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 8915,
											"end": 8962,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 8979,
											"end": 9110,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "256"
										},
										{
											"begin": 9105,
											"end": 9109,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 8979,
											"end": 9110,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "142"
										},
										{
											"begin": 8979,
											"end": 9110,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 8979,
											"end": 9110,
											"name": "tag",
											"source": 12,
											"value": "256"
										},
										{
											"begin": 8979,
											"end": 9110,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 8971,
											"end": 9110,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 8971,
											"end": 9110,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 8698,
											"end": 9117,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 8698,
											"end": 9117,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 8698,
											"end": 9117,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 8698,
											"end": 9117,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 9123,
											"end": 9303,
											"name": "tag",
											"source": 12,
											"value": "143"
										},
										{
											"begin": 9123,
											"end": 9303,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 9171,
											"end": 9248,
											"name": "PUSH",
											"source": 12,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 9168,
											"end": 9169,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 9161,
											"end": 9249,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 9268,
											"end": 9272,
											"name": "PUSH",
											"source": 12,
											"value": "41"
										},
										{
											"begin": 9265,
											"end": 9266,
											"name": "PUSH",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 9258,
											"end": 9273,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 9292,
											"end": 9296,
											"name": "PUSH",
											"source": 12,
											"value": "24"
										},
										{
											"begin": 9289,
											"end": 9290,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 9282,
											"end": 9297,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 9309,
											"end": 9489,
											"name": "tag",
											"source": 12,
											"value": "144"
										},
										{
											"begin": 9309,
											"end": 9489,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 9357,
											"end": 9434,
											"name": "PUSH",
											"source": 12,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 9354,
											"end": 9355,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 9347,
											"end": 9435,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 9454,
											"end": 9458,
											"name": "PUSH",
											"source": 12,
											"value": "22"
										},
										{
											"begin": 9451,
											"end": 9452,
											"name": "PUSH",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 9444,
											"end": 9459,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 9478,
											"end": 9482,
											"name": "PUSH",
											"source": 12,
											"value": "24"
										},
										{
											"begin": 9475,
											"end": 9476,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 9468,
											"end": 9483,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 9495,
											"end": 9815,
											"name": "tag",
											"source": 12,
											"value": "67"
										},
										{
											"begin": 9495,
											"end": 9815,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 9539,
											"end": 9545,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 9576,
											"end": 9577,
											"name": "PUSH",
											"source": 12,
											"value": "2"
										},
										{
											"begin": 9570,
											"end": 9574,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 9566,
											"end": 9578,
											"name": "DIV",
											"source": 12
										},
										{
											"begin": 9556,
											"end": 9578,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 9556,
											"end": 9578,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 9623,
											"end": 9624,
											"name": "PUSH",
											"source": 12,
											"value": "1"
										},
										{
											"begin": 9617,
											"end": 9621,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 9613,
											"end": 9625,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 9644,
											"end": 9662,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 9634,
											"end": 9715,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "260"
										},
										{
											"begin": 9634,
											"end": 9715,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 9700,
											"end": 9704,
											"name": "PUSH",
											"source": 12,
											"value": "7F"
										},
										{
											"begin": 9692,
											"end": 9698,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 9688,
											"end": 9705,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 9678,
											"end": 9705,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 9678,
											"end": 9705,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 9634,
											"end": 9715,
											"name": "tag",
											"source": 12,
											"value": "260"
										},
										{
											"begin": 9634,
											"end": 9715,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 9762,
											"end": 9764,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 9754,
											"end": 9760,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 9751,
											"end": 9765,
											"name": "LT",
											"source": 12
										},
										{
											"begin": 9731,
											"end": 9749,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 9728,
											"end": 9766,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 9725,
											"end": 9809,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "261"
										},
										{
											"begin": 9725,
											"end": 9809,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 9781,
											"end": 9799,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "262"
										},
										{
											"begin": 9781,
											"end": 9799,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "144"
										},
										{
											"begin": 9781,
											"end": 9799,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 9781,
											"end": 9799,
											"name": "tag",
											"source": 12,
											"value": "262"
										},
										{
											"begin": 9781,
											"end": 9799,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 9725,
											"end": 9809,
											"name": "tag",
											"source": 12,
											"value": "261"
										},
										{
											"begin": 9725,
											"end": 9809,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 9546,
											"end": 9815,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 9495,
											"end": 9815,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 9495,
											"end": 9815,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 9495,
											"end": 9815,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 9495,
											"end": 9815,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 9821,
											"end": 9962,
											"name": "tag",
											"source": 12,
											"value": "145"
										},
										{
											"begin": 9821,
											"end": 9962,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 9870,
											"end": 9874,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 9893,
											"end": 9896,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 9885,
											"end": 9896,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 9885,
											"end": 9896,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 9916,
											"end": 9919,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 9913,
											"end": 9914,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 9906,
											"end": 9920,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 9950,
											"end": 9954,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 9947,
											"end": 9948,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 9937,
											"end": 9955,
											"name": "KECCAK256",
											"source": 12
										},
										{
											"begin": 9929,
											"end": 9955,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 9929,
											"end": 9955,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 9821,
											"end": 9962,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 9821,
											"end": 9962,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 9821,
											"end": 9962,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 9821,
											"end": 9962,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 9968,
											"end": 10061,
											"name": "tag",
											"source": 12,
											"value": "146"
										},
										{
											"begin": 9968,
											"end": 10061,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 10005,
											"end": 10011,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 10052,
											"end": 10054,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 10047,
											"end": 10049,
											"name": "PUSH",
											"source": 12,
											"value": "1F"
										},
										{
											"begin": 10040,
											"end": 10045,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 10036,
											"end": 10050,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 10032,
											"end": 10055,
											"name": "DIV",
											"source": 12
										},
										{
											"begin": 10022,
											"end": 10055,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 10022,
											"end": 10055,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 9968,
											"end": 10061,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 9968,
											"end": 10061,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 9968,
											"end": 10061,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 9968,
											"end": 10061,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 10067,
											"end": 10174,
											"name": "tag",
											"source": 12,
											"value": "147"
										},
										{
											"begin": 10067,
											"end": 10174,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 10111,
											"end": 10119,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 10161,
											"end": 10166,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 10155,
											"end": 10159,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 10151,
											"end": 10167,
											"name": "SHL",
											"source": 12
										},
										{
											"begin": 10130,
											"end": 10167,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 10130,
											"end": 10167,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 10067,
											"end": 10174,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 10067,
											"end": 10174,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 10067,
											"end": 10174,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 10067,
											"end": 10174,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 10067,
											"end": 10174,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 10180,
											"end": 10573,
											"name": "tag",
											"source": 12,
											"value": "148"
										},
										{
											"begin": 10180,
											"end": 10573,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 10249,
											"end": 10255,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 10299,
											"end": 10300,
											"name": "PUSH",
											"source": 12,
											"value": "8"
										},
										{
											"begin": 10287,
											"end": 10297,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 10283,
											"end": 10301,
											"name": "MUL",
											"source": 12
										},
										{
											"begin": 10322,
											"end": 10419,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "267"
										},
										{
											"begin": 10352,
											"end": 10418,
											"name": "PUSH",
											"source": 12,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10341,
											"end": 10350,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 10322,
											"end": 10419,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "147"
										},
										{
											"begin": 10322,
											"end": 10419,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 10322,
											"end": 10419,
											"name": "tag",
											"source": 12,
											"value": "267"
										},
										{
											"begin": 10322,
											"end": 10419,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 10440,
											"end": 10479,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "268"
										},
										{
											"begin": 10470,
											"end": 10478,
											"name": "DUP7",
											"source": 12
										},
										{
											"begin": 10459,
											"end": 10468,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 10440,
											"end": 10479,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "147"
										},
										{
											"begin": 10440,
											"end": 10479,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 10440,
											"end": 10479,
											"name": "tag",
											"source": 12,
											"value": "268"
										},
										{
											"begin": 10440,
											"end": 10479,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 10428,
											"end": 10479,
											"name": "SWAP6",
											"source": 12
										},
										{
											"begin": 10428,
											"end": 10479,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 10512,
											"end": 10516,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 10508,
											"end": 10517,
											"name": "NOT",
											"source": 12
										},
										{
											"begin": 10501,
											"end": 10506,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 10497,
											"end": 10518,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 10488,
											"end": 10518,
											"name": "SWAP4",
											"source": 12
										},
										{
											"begin": 10488,
											"end": 10518,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 10561,
											"end": 10565,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 10551,
											"end": 10559,
											"name": "DUP7",
											"source": 12
										},
										{
											"begin": 10547,
											"end": 10566,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 10540,
											"end": 10545,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 10537,
											"end": 10567,
											"name": "OR",
											"source": 12
										},
										{
											"begin": 10527,
											"end": 10567,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 10527,
											"end": 10567,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 10256,
											"end": 10573,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 10256,
											"end": 10573,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 10180,
											"end": 10573,
											"name": "SWAP4",
											"source": 12
										},
										{
											"begin": 10180,
											"end": 10573,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 10180,
											"end": 10573,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 10180,
											"end": 10573,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 10180,
											"end": 10573,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 10180,
											"end": 10573,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 10579,
											"end": 10721,
											"name": "tag",
											"source": 12,
											"value": "149"
										},
										{
											"begin": 10579,
											"end": 10721,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 10629,
											"end": 10638,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 10662,
											"end": 10715,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "270"
										},
										{
											"begin": 10680,
											"end": 10714,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "271"
										},
										{
											"begin": 10689,
											"end": 10713,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "272"
										},
										{
											"begin": 10707,
											"end": 10712,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 10689,
											"end": 10713,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "121"
										},
										{
											"begin": 10689,
											"end": 10713,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 10689,
											"end": 10713,
											"name": "tag",
											"source": 12,
											"value": "272"
										},
										{
											"begin": 10689,
											"end": 10713,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 10680,
											"end": 10714,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "138"
										},
										{
											"begin": 10680,
											"end": 10714,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 10680,
											"end": 10714,
											"name": "tag",
											"source": 12,
											"value": "271"
										},
										{
											"begin": 10680,
											"end": 10714,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 10662,
											"end": 10715,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "121"
										},
										{
											"begin": 10662,
											"end": 10715,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 10662,
											"end": 10715,
											"name": "tag",
											"source": 12,
											"value": "270"
										},
										{
											"begin": 10662,
											"end": 10715,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 10649,
											"end": 10715,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 10649,
											"end": 10715,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 10579,
											"end": 10721,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 10579,
											"end": 10721,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 10579,
											"end": 10721,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 10579,
											"end": 10721,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 10727,
											"end": 10802,
											"name": "tag",
											"source": 12,
											"value": "150"
										},
										{
											"begin": 10727,
											"end": 10802,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 10770,
											"end": 10773,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 10791,
											"end": 10796,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 10784,
											"end": 10796,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 10784,
											"end": 10796,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 10727,
											"end": 10802,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 10727,
											"end": 10802,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 10727,
											"end": 10802,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 10727,
											"end": 10802,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 10808,
											"end": 11077,
											"name": "tag",
											"source": 12,
											"value": "151"
										},
										{
											"begin": 10808,
											"end": 11077,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 10918,
											"end": 10957,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "275"
										},
										{
											"begin": 10949,
											"end": 10956,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 10918,
											"end": 10957,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "149"
										},
										{
											"begin": 10918,
											"end": 10957,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 10918,
											"end": 10957,
											"name": "tag",
											"source": 12,
											"value": "275"
										},
										{
											"begin": 10918,
											"end": 10957,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 10979,
											"end": 11070,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "276"
										},
										{
											"begin": 11028,
											"end": 11069,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "277"
										},
										{
											"begin": 11052,
											"end": 11068,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 11028,
											"end": 11069,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "150"
										},
										{
											"begin": 11028,
											"end": 11069,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 11028,
											"end": 11069,
											"name": "tag",
											"source": 12,
											"value": "277"
										},
										{
											"begin": 11028,
											"end": 11069,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 11020,
											"end": 11026,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 11013,
											"end": 11017,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 11007,
											"end": 11018,
											"name": "SLOAD",
											"source": 12
										},
										{
											"begin": 10979,
											"end": 11070,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "148"
										},
										{
											"begin": 10979,
											"end": 11070,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 10979,
											"end": 11070,
											"name": "tag",
											"source": 12,
											"value": "276"
										},
										{
											"begin": 10979,
											"end": 11070,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 10973,
											"end": 10977,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 10966,
											"end": 11071,
											"name": "SSTORE",
											"source": 12
										},
										{
											"begin": 10884,
											"end": 11077,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 10808,
											"end": 11077,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 10808,
											"end": 11077,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 10808,
											"end": 11077,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 10808,
											"end": 11077,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 11083,
											"end": 11156,
											"name": "tag",
											"source": 12,
											"value": "152"
										},
										{
											"begin": 11083,
											"end": 11156,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 11128,
											"end": 11131,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 11149,
											"end": 11150,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 11142,
											"end": 11150,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 11142,
											"end": 11150,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 11083,
											"end": 11156,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 11083,
											"end": 11156,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 11162,
											"end": 11351,
											"name": "tag",
											"source": 12,
											"value": "153"
										},
										{
											"begin": 11162,
											"end": 11351,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 11239,
											"end": 11271,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "280"
										},
										{
											"begin": 11239,
											"end": 11271,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "152"
										},
										{
											"begin": 11239,
											"end": 11271,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 11239,
											"end": 11271,
											"name": "tag",
											"source": 12,
											"value": "280"
										},
										{
											"begin": 11239,
											"end": 11271,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 11280,
											"end": 11345,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "281"
										},
										{
											"begin": 11338,
											"end": 11344,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 11330,
											"end": 11336,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 11324,
											"end": 11328,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 11280,
											"end": 11345,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "151"
										},
										{
											"begin": 11280,
											"end": 11345,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 11280,
											"end": 11345,
											"name": "tag",
											"source": 12,
											"value": "281"
										},
										{
											"begin": 11280,
											"end": 11345,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 11215,
											"end": 11351,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 11162,
											"end": 11351,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 11162,
											"end": 11351,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 11162,
											"end": 11351,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 11357,
											"end": 11543,
											"name": "tag",
											"source": 12,
											"value": "154"
										},
										{
											"begin": 11357,
											"end": 11543,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 11417,
											"end": 11537,
											"name": "tag",
											"source": 12,
											"value": "283"
										},
										{
											"begin": 11417,
											"end": 11537,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 11434,
											"end": 11437,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 11427,
											"end": 11432,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 11424,
											"end": 11438,
											"name": "LT",
											"source": 12
										},
										{
											"begin": 11417,
											"end": 11537,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 11417,
											"end": 11537,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "285"
										},
										{
											"begin": 11417,
											"end": 11537,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 11488,
											"end": 11527,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "286"
										},
										{
											"begin": 11525,
											"end": 11526,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 11518,
											"end": 11523,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 11488,
											"end": 11527,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "153"
										},
										{
											"begin": 11488,
											"end": 11527,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 11488,
											"end": 11527,
											"name": "tag",
											"source": 12,
											"value": "286"
										},
										{
											"begin": 11488,
											"end": 11527,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 11461,
											"end": 11462,
											"name": "PUSH",
											"source": 12,
											"value": "1"
										},
										{
											"begin": 11454,
											"end": 11459,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 11450,
											"end": 11463,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 11441,
											"end": 11463,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 11441,
											"end": 11463,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 11417,
											"end": 11537,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "283"
										},
										{
											"begin": 11417,
											"end": 11537,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 11417,
											"end": 11537,
											"name": "tag",
											"source": 12,
											"value": "285"
										},
										{
											"begin": 11417,
											"end": 11537,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 11357,
											"end": 11543,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 11357,
											"end": 11543,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 11357,
											"end": 11543,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 11549,
											"end": 12092,
											"name": "tag",
											"source": 12,
											"value": "155"
										},
										{
											"begin": 11549,
											"end": 12092,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 11650,
											"end": 11652,
											"name": "PUSH",
											"source": 12,
											"value": "1F"
										},
										{
											"begin": 11645,
											"end": 11648,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 11642,
											"end": 11653,
											"name": "GT",
											"source": 12
										},
										{
											"begin": 11639,
											"end": 12085,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 11639,
											"end": 12085,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "288"
										},
										{
											"begin": 11639,
											"end": 12085,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 11684,
											"end": 11722,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "289"
										},
										{
											"begin": 11716,
											"end": 11721,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 11684,
											"end": 11722,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "145"
										},
										{
											"begin": 11684,
											"end": 11722,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 11684,
											"end": 11722,
											"name": "tag",
											"source": 12,
											"value": "289"
										},
										{
											"begin": 11684,
											"end": 11722,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 11768,
											"end": 11797,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "290"
										},
										{
											"begin": 11786,
											"end": 11796,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 11768,
											"end": 11797,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "146"
										},
										{
											"begin": 11768,
											"end": 11797,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 11768,
											"end": 11797,
											"name": "tag",
											"source": 12,
											"value": "290"
										},
										{
											"begin": 11768,
											"end": 11797,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 11758,
											"end": 11766,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 11754,
											"end": 11798,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 11951,
											"end": 11953,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 11939,
											"end": 11949,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 11936,
											"end": 11954,
											"name": "LT",
											"source": 12
										},
										{
											"begin": 11933,
											"end": 11982,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 11933,
											"end": 11982,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "291"
										},
										{
											"begin": 11933,
											"end": 11982,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 11972,
											"end": 11980,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 11957,
											"end": 11980,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 11957,
											"end": 11980,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 11933,
											"end": 11982,
											"name": "tag",
											"source": 12,
											"value": "291"
										},
										{
											"begin": 11933,
											"end": 11982,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 11995,
											"end": 12075,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "292"
										},
										{
											"begin": 12051,
											"end": 12073,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "293"
										},
										{
											"begin": 12069,
											"end": 12072,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 12051,
											"end": 12073,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "146"
										},
										{
											"begin": 12051,
											"end": 12073,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 12051,
											"end": 12073,
											"name": "tag",
											"source": 12,
											"value": "293"
										},
										{
											"begin": 12051,
											"end": 12073,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 12041,
											"end": 12049,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 12037,
											"end": 12074,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 12024,
											"end": 12035,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 11995,
											"end": 12075,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "154"
										},
										{
											"begin": 11995,
											"end": 12075,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 11995,
											"end": 12075,
											"name": "tag",
											"source": 12,
											"value": "292"
										},
										{
											"begin": 11995,
											"end": 12075,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 11654,
											"end": 12085,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 11654,
											"end": 12085,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 11639,
											"end": 12085,
											"name": "tag",
											"source": 12,
											"value": "288"
										},
										{
											"begin": 11639,
											"end": 12085,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 11549,
											"end": 12092,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 11549,
											"end": 12092,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 11549,
											"end": 12092,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 11549,
											"end": 12092,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 12098,
											"end": 12215,
											"name": "tag",
											"source": 12,
											"value": "156"
										},
										{
											"begin": 12098,
											"end": 12215,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 12152,
											"end": 12160,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 12202,
											"end": 12207,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 12196,
											"end": 12200,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 12192,
											"end": 12208,
											"name": "SHR",
											"source": 12
										},
										{
											"begin": 12171,
											"end": 12208,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 12171,
											"end": 12208,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 12098,
											"end": 12215,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 12098,
											"end": 12215,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 12098,
											"end": 12215,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 12098,
											"end": 12215,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 12098,
											"end": 12215,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 12221,
											"end": 12390,
											"name": "tag",
											"source": 12,
											"value": "157"
										},
										{
											"begin": 12221,
											"end": 12390,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 12265,
											"end": 12271,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 12298,
											"end": 12349,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "296"
										},
										{
											"begin": 12346,
											"end": 12347,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 12342,
											"end": 12348,
											"name": "NOT",
											"source": 12
										},
										{
											"begin": 12334,
											"end": 12339,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 12331,
											"end": 12332,
											"name": "PUSH",
											"source": 12,
											"value": "8"
										},
										{
											"begin": 12327,
											"end": 12340,
											"name": "MUL",
											"source": 12
										},
										{
											"begin": 12298,
											"end": 12349,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "156"
										},
										{
											"begin": 12298,
											"end": 12349,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 12298,
											"end": 12349,
											"name": "tag",
											"source": 12,
											"value": "296"
										},
										{
											"begin": 12298,
											"end": 12349,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 12294,
											"end": 12350,
											"name": "NOT",
											"source": 12
										},
										{
											"begin": 12379,
											"end": 12383,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 12373,
											"end": 12377,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 12369,
											"end": 12384,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 12359,
											"end": 12384,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 12359,
											"end": 12384,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 12272,
											"end": 12390,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 12221,
											"end": 12390,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 12221,
											"end": 12390,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 12221,
											"end": 12390,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 12221,
											"end": 12390,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 12221,
											"end": 12390,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 12395,
											"end": 12690,
											"name": "tag",
											"source": 12,
											"value": "158"
										},
										{
											"begin": 12395,
											"end": 12690,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 12471,
											"end": 12475,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 12617,
											"end": 12646,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "298"
										},
										{
											"begin": 12642,
											"end": 12645,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 12636,
											"end": 12640,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 12617,
											"end": 12646,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "157"
										},
										{
											"begin": 12617,
											"end": 12646,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 12617,
											"end": 12646,
											"name": "tag",
											"source": 12,
											"value": "298"
										},
										{
											"begin": 12617,
											"end": 12646,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 12609,
											"end": 12646,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 12609,
											"end": 12646,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 12679,
											"end": 12682,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 12676,
											"end": 12677,
											"name": "PUSH",
											"source": 12,
											"value": "2"
										},
										{
											"begin": 12672,
											"end": 12683,
											"name": "MUL",
											"source": 12
										},
										{
											"begin": 12666,
											"end": 12670,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 12663,
											"end": 12684,
											"name": "OR",
											"source": 12
										},
										{
											"begin": 12655,
											"end": 12684,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 12655,
											"end": 12684,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 12395,
											"end": 12690,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 12395,
											"end": 12690,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 12395,
											"end": 12690,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 12395,
											"end": 12690,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 12395,
											"end": 12690,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 12695,
											"end": 14090,
											"name": "tag",
											"source": 12,
											"value": "58"
										},
										{
											"begin": 12695,
											"end": 14090,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 12812,
											"end": 12849,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "300"
										},
										{
											"begin": 12845,
											"end": 12848,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 12812,
											"end": 12849,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "131"
										},
										{
											"begin": 12812,
											"end": 12849,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 12812,
											"end": 12849,
											"name": "tag",
											"source": 12,
											"value": "300"
										},
										{
											"begin": 12812,
											"end": 12849,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 12914,
											"end": 12932,
											"name": "PUSH",
											"source": 12,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 12906,
											"end": 12912,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 12903,
											"end": 12933,
											"name": "GT",
											"source": 12
										},
										{
											"begin": 12900,
											"end": 12956,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 12900,
											"end": 12956,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "301"
										},
										{
											"begin": 12900,
											"end": 12956,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 12936,
											"end": 12954,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "302"
										},
										{
											"begin": 12936,
											"end": 12954,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "143"
										},
										{
											"begin": 12936,
											"end": 12954,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 12936,
											"end": 12954,
											"name": "tag",
											"source": 12,
											"value": "302"
										},
										{
											"begin": 12936,
											"end": 12954,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 12900,
											"end": 12956,
											"name": "tag",
											"source": 12,
											"value": "301"
										},
										{
											"begin": 12900,
											"end": 12956,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 12980,
											"end": 13018,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "303"
										},
										{
											"begin": 13012,
											"end": 13016,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 13006,
											"end": 13017,
											"name": "SLOAD",
											"source": 12
										},
										{
											"begin": 12980,
											"end": 13018,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "67"
										},
										{
											"begin": 12980,
											"end": 13018,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 12980,
											"end": 13018,
											"name": "tag",
											"source": 12,
											"value": "303"
										},
										{
											"begin": 12980,
											"end": 13018,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 13065,
											"end": 13132,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "304"
										},
										{
											"begin": 13125,
											"end": 13131,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 13117,
											"end": 13123,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 13111,
											"end": 13115,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 13065,
											"end": 13132,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "155"
										},
										{
											"begin": 13065,
											"end": 13132,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 13065,
											"end": 13132,
											"name": "tag",
											"source": 12,
											"value": "304"
										},
										{
											"begin": 13065,
											"end": 13132,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 13159,
											"end": 13160,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 13183,
											"end": 13187,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 13170,
											"end": 13187,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 13170,
											"end": 13187,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 13215,
											"end": 13217,
											"name": "PUSH",
											"source": 12,
											"value": "1F"
										},
										{
											"begin": 13207,
											"end": 13213,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 13204,
											"end": 13218,
											"name": "GT",
											"source": 12
										},
										{
											"begin": 13232,
											"end": 13233,
											"name": "PUSH",
											"source": 12,
											"value": "1"
										},
										{
											"begin": 13227,
											"end": 13845,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 13227,
											"end": 13845,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 13227,
											"end": 13845,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "306"
										},
										{
											"begin": 13227,
											"end": 13845,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 13889,
											"end": 13890,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 13906,
											"end": 13912,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 13903,
											"end": 13980,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 13903,
											"end": 13980,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "307"
										},
										{
											"begin": 13903,
											"end": 13980,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 13955,
											"end": 13964,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 13950,
											"end": 13953,
											"name": "DUP8",
											"source": 12
										},
										{
											"begin": 13946,
											"end": 13965,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 13940,
											"end": 13966,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 13931,
											"end": 13966,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 13931,
											"end": 13966,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 13903,
											"end": 13980,
											"name": "tag",
											"source": 12,
											"value": "307"
										},
										{
											"begin": 13903,
											"end": 13980,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 14006,
											"end": 14073,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "308"
										},
										{
											"begin": 14066,
											"end": 14072,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 14059,
											"end": 14064,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 14006,
											"end": 14073,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "158"
										},
										{
											"begin": 14006,
											"end": 14073,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 14006,
											"end": 14073,
											"name": "tag",
											"source": 12,
											"value": "308"
										},
										{
											"begin": 14006,
											"end": 14073,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 14000,
											"end": 14004,
											"name": "DUP7",
											"source": 12
										},
										{
											"begin": 13993,
											"end": 14074,
											"name": "SSTORE",
											"source": 12
										},
										{
											"begin": 13862,
											"end": 14084,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 13197,
											"end": 14084,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "305"
										},
										{
											"begin": 13197,
											"end": 14084,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 13227,
											"end": 13845,
											"name": "tag",
											"source": 12,
											"value": "306"
										},
										{
											"begin": 13227,
											"end": 13845,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 13279,
											"end": 13283,
											"name": "PUSH",
											"source": 12,
											"value": "1F"
										},
										{
											"begin": 13275,
											"end": 13284,
											"name": "NOT",
											"source": 12
										},
										{
											"begin": 13267,
											"end": 13273,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 13263,
											"end": 13285,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 13313,
											"end": 13350,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "309"
										},
										{
											"begin": 13345,
											"end": 13349,
											"name": "DUP7",
											"source": 12
										},
										{
											"begin": 13313,
											"end": 13350,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "145"
										},
										{
											"begin": 13313,
											"end": 13350,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 13313,
											"end": 13350,
											"name": "tag",
											"source": 12,
											"value": "309"
										},
										{
											"begin": 13313,
											"end": 13350,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 13372,
											"end": 13373,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 13386,
											"end": 13594,
											"name": "tag",
											"source": 12,
											"value": "310"
										},
										{
											"begin": 13386,
											"end": 13594,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 13400,
											"end": 13407,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 13397,
											"end": 13398,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 13394,
											"end": 13408,
											"name": "LT",
											"source": 12
										},
										{
											"begin": 13386,
											"end": 13594,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 13386,
											"end": 13594,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "312"
										},
										{
											"begin": 13386,
											"end": 13594,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 13479,
											"end": 13488,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 13474,
											"end": 13477,
											"name": "DUP10",
											"source": 12
										},
										{
											"begin": 13470,
											"end": 13489,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 13464,
											"end": 13490,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 13456,
											"end": 13462,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 13449,
											"end": 13491,
											"name": "SSTORE",
											"source": 12
										},
										{
											"begin": 13530,
											"end": 13531,
											"name": "PUSH",
											"source": 12,
											"value": "1"
										},
										{
											"begin": 13522,
											"end": 13528,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 13518,
											"end": 13532,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 13508,
											"end": 13532,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 13508,
											"end": 13532,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 13577,
											"end": 13579,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 13566,
											"end": 13575,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 13562,
											"end": 13580,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 13549,
											"end": 13580,
											"name": "SWAP5",
											"source": 12
										},
										{
											"begin": 13549,
											"end": 13580,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 13423,
											"end": 13427,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 13420,
											"end": 13421,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 13416,
											"end": 13428,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 13411,
											"end": 13428,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 13411,
											"end": 13428,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 13386,
											"end": 13594,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "310"
										},
										{
											"begin": 13386,
											"end": 13594,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 13386,
											"end": 13594,
											"name": "tag",
											"source": 12,
											"value": "312"
										},
										{
											"begin": 13386,
											"end": 13594,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 13622,
											"end": 13628,
											"name": "DUP7",
											"source": 12
										},
										{
											"begin": 13613,
											"end": 13620,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 13610,
											"end": 13629,
											"name": "LT",
											"source": 12
										},
										{
											"begin": 13607,
											"end": 13786,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 13607,
											"end": 13786,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "313"
										},
										{
											"begin": 13607,
											"end": 13786,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 13680,
											"end": 13689,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 13675,
											"end": 13678,
											"name": "DUP10",
											"source": 12
										},
										{
											"begin": 13671,
											"end": 13690,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 13665,
											"end": 13691,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 13723,
											"end": 13771,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "314"
										},
										{
											"begin": 13765,
											"end": 13769,
											"name": "PUSH",
											"source": 12,
											"value": "1F"
										},
										{
											"begin": 13757,
											"end": 13763,
											"name": "DUP10",
											"source": 12
										},
										{
											"begin": 13753,
											"end": 13770,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 13742,
											"end": 13751,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 13723,
											"end": 13771,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "157"
										},
										{
											"begin": 13723,
											"end": 13771,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 13723,
											"end": 13771,
											"name": "tag",
											"source": 12,
											"value": "314"
										},
										{
											"begin": 13723,
											"end": 13771,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 13715,
											"end": 13721,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 13708,
											"end": 13772,
											"name": "SSTORE",
											"source": 12
										},
										{
											"begin": 13630,
											"end": 13786,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 13607,
											"end": 13786,
											"name": "tag",
											"source": 12,
											"value": "313"
										},
										{
											"begin": 13607,
											"end": 13786,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 13832,
											"end": 13833,
											"name": "PUSH",
											"source": 12,
											"value": "1"
										},
										{
											"begin": 13828,
											"end": 13829,
											"name": "PUSH",
											"source": 12,
											"value": "2"
										},
										{
											"begin": 13820,
											"end": 13826,
											"name": "DUP9",
											"source": 12
										},
										{
											"begin": 13816,
											"end": 13830,
											"name": "MUL",
											"source": 12
										},
										{
											"begin": 13812,
											"end": 13834,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 13806,
											"end": 13810,
											"name": "DUP9",
											"source": 12
										},
										{
											"begin": 13799,
											"end": 13835,
											"name": "SSTORE",
											"source": 12
										},
										{
											"begin": 13234,
											"end": 13845,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 13234,
											"end": 13845,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 13234,
											"end": 13845,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 13197,
											"end": 14084,
											"name": "tag",
											"source": 12,
											"value": "305"
										},
										{
											"begin": 13197,
											"end": 14084,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 13197,
											"end": 14084,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 12787,
											"end": 14090,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 12787,
											"end": 14090,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 12787,
											"end": 14090,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 12695,
											"end": 14090,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 12695,
											"end": 14090,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 12695,
											"end": 14090,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 14096,
											"end": 14318,
											"name": "tag",
											"source": 12,
											"value": "60"
										},
										{
											"begin": 14096,
											"end": 14318,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 14189,
											"end": 14193,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 14227,
											"end": 14229,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 14216,
											"end": 14225,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 14212,
											"end": 14230,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 14204,
											"end": 14230,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 14204,
											"end": 14230,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 14240,
											"end": 14311,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "316"
										},
										{
											"begin": 14308,
											"end": 14309,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 14297,
											"end": 14306,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 14293,
											"end": 14310,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 14284,
											"end": 14290,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 14240,
											"end": 14311,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "129"
										},
										{
											"begin": 14240,
											"end": 14311,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 14240,
											"end": 14311,
											"name": "tag",
											"source": 12,
											"value": "316"
										},
										{
											"begin": 14240,
											"end": 14311,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 14096,
											"end": 14318,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 14096,
											"end": 14318,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 14096,
											"end": 14318,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 14096,
											"end": 14318,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 14096,
											"end": 14318,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol",
								"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol",
								"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol",
								"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol",
								"@openzeppelin/contracts/interfaces/IERC1967.sol",
								"@openzeppelin/contracts/interfaces/draft-IERC1822.sol",
								"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol",
								"@openzeppelin/contracts/proxy/beacon/IBeacon.sol",
								"@openzeppelin/contracts/utils/Address.sol",
								"@openzeppelin/contracts/utils/Errors.sol",
								"@openzeppelin/contracts/utils/StorageSlot.sol",
								"contracts/Logger.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"initialize()": "8129fc1c",
							"logTransaction(uint48,address,uint256,uint256,uint256,string,address)": "83dc65f2",
							"owner()": "8da5cb5b",
							"renounceOwnership()": "715018a6",
							"transferOwnership(address)": "f2fde38b",
							"userTransactions(address,uint256)": "b842ec44"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.30+commit.73712a01\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"InvalidInitialization\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NotInitializing\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint64\",\"name\":\"version\",\"type\":\"uint64\"}],\"name\":\"Initialized\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"TransactionLogged\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"initialize\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint48\",\"name\":\"timestamp\",\"type\":\"uint48\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"fee\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"reward\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"txHash\",\"type\":\"string\"},{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"}],\"name\":\"logTransaction\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"userTransactions\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"fee\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"reward\",\"type\":\"uint256\"},{\"internalType\":\"uint48\",\"name\":\"timestamp\",\"type\":\"uint48\"},{\"internalType\":\"string\",\"name\":\"txHash\",\"type\":\"string\"},{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"errors\":{\"InvalidInitialization()\":[{\"details\":\"The contract is already initialized.\"}],\"NotInitializing()\":[{\"details\":\"The contract is not initializing.\"}],\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}]},\"events\":{\"Initialized(uint64)\":{\"details\":\"Triggered when the contract has been initialized or reinitialized.\"}},\"kind\":\"dev\",\"methods\":{\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/Logger.sol\":\"Logger\"},\"evmVersion\":\"prague\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":{\"keccak256\":\"0xc163fcf9bb10138631a9ba5564df1fa25db9adff73bd9ee868a8ae1858fe093a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9706d43a0124053d9880f6e31a59f31bc0a6a3dc1acd66ce0a16e1111658c5f6\",\"dweb:/ipfs/QmUFmfowzkRwGtDu36cXV9SPTBHJ3n7dG9xQiK5B28jTf2\"]},\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":{\"keccak256\":\"0xdb4d24ee2c087c391d587cd17adfe5b3f9d93b3110b1388c2ab6c7c0ad1dcd05\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ab7b6d5b9e2b88176312967fe0f0e78f3d9a1422fa5e4b64e2440c35869b5d08\",\"dweb:/ipfs/QmXKYWWyzcLg1B2k7Sb1qkEXgLCYfXecR9wYW5obRzWP1Q\"]},\"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":{\"keccak256\":\"0x574a7451e42724f7de29e2855c392a8a5020acd695169466a18459467d719d63\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5bc189f63b639ee173dd7b6fecc39baf7113bf161776aea22b34c57fdd1872ec\",\"dweb:/ipfs/QmZAf2VtjDLRULqjJkde6LNsxAg12tUqpPqgUQQZbAjgtZ\"]},\"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":{\"keccak256\":\"0xdbef5f0c787055227243a7318ef74c8a5a1108ca3a07f2b3a00ef67769e1e397\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://08e39f23d5b4692f9a40803e53a8156b72b4c1f9902a88cd65ba964db103dab9\",\"dweb:/ipfs/QmPKn6EYDgpga7KtpkA8wV2yJCYGMtc9K4LkJfhKX2RVSV\"]},\"@openzeppelin/contracts/interfaces/IERC1967.sol\":{\"keccak256\":\"0xb25a4f11fa80c702bf5cd85adec90e6f6f507f32f4a8e6f5dbc31e8c10029486\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6917f8a323e7811f041aecd4d9fd6e92455a6fba38a797ac6f6e208c7912b79d\",\"dweb:/ipfs/QmShuYv55wYHGi4EFkDB8QfF7ZCHoKk2efyz3AWY1ExSq7\"]},\"@openzeppelin/contracts/interfaces/draft-IERC1822.sol\":{\"keccak256\":\"0xc42facb5094f2f35f066a7155bda23545e39a3156faef3ddc00185544443ba7d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d3b36282ab029b46bd082619a308a2ea11c309967b9425b7b7a6eb0b0c1c3196\",\"dweb:/ipfs/QmP2YVfDB2FoREax3vJu7QhDnyYRMw52WPrCD4vdT2kuDA\"]},\"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":{\"keccak256\":\"0x8decfa54cec979c824b044b8128cd91d713f72c71fd7dfa54974624d8c949898\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://271f914261a19d87117a777e0924ada545c16191ef9b00cc40b0134fc14ebc70\",\"dweb:/ipfs/QmdvVNWHGHQrGGPonZJs5NuzTevTjZRM2zayKrDJf7WBA2\"]},\"@openzeppelin/contracts/proxy/beacon/IBeacon.sol\":{\"keccak256\":\"0xc59a78b07b44b2cf2e8ab4175fca91e8eca1eee2df7357b8d2a8833e5ea1f64c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5aa4f07e65444784c29cd7bfcc2341b34381e4e5b5da9f0c5bd00d7f430e66fa\",\"dweb:/ipfs/QmWRMh4Q9DpaU9GvsiXmDdoNYMyyece9if7hnfLz7uqzWM\"]},\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0xaaa1d17c1129b127a4a401db2fbd72960e2671474be3d08cae71ccdc42f7624c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://cb2f27cd3952aa667e198fba0d9b7bcec52fbb12c16f013c25fe6fb52b29cc0e\",\"dweb:/ipfs/QmeuohBFoeyDPZA9JNCTEDz3VBfBD4EABWuWXVhHAuEpKR\"]},\"@openzeppelin/contracts/utils/Errors.sol\":{\"keccak256\":\"0x6afa713bfd42cf0f7656efa91201007ac465e42049d7de1d50753a373648c123\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ba1d02f4847670a1b83dec9f7d37f0b0418d6043447b69f3a29a5f9efc547fcf\",\"dweb:/ipfs/QmQ7iH2keLNUKgq2xSWcRmuBE5eZ3F5whYAkAGzCNNoEWB\"]},\"@openzeppelin/contracts/utils/StorageSlot.sol\":{\"keccak256\":\"0xcf74f855663ce2ae00ed8352666b7935f6cddea2932fdf2c3ecd30a9b1cd0e97\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9f660b1f351b757dfe01438e59888f31f33ded3afcf5cb5b0d9bf9aa6f320a8b\",\"dweb:/ipfs/QmarDJ5hZEgBtCmmrVzEZWjub9769eD686jmzb2XpSU1cM\"]},\"contracts/Logger.sol\":{\"keccak256\":\"0xc25f48f4d6be2d96b64f4842f33c45b38d1a8954b983668093c0c9403e386d02\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://37a7e4de96ab8450c4770924a1522279a2ece7afc5118cea45c943d614a2909b\",\"dweb:/ipfs/QmNmXSTZWEbmCkrVE2gt6GLzCvAv7TnEmJmE1kpAiv1C4q\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 1463,
								"contract": "contracts/Logger.sol:Logger",
								"label": "userTransactions",
								"offset": 0,
								"slot": "0",
								"type": "t_mapping(t_address,t_array(t_struct(Transaction)1457_storage)dyn_storage)"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_array(t_struct(Transaction)1457_storage)dyn_storage": {
								"base": "t_struct(Transaction)1457_storage",
								"encoding": "dynamic_array",
								"label": "struct Logger.Transaction[]",
								"numberOfBytes": "32"
							},
							"t_mapping(t_address,t_array(t_struct(Transaction)1457_storage)dyn_storage)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => struct Logger.Transaction[])",
								"numberOfBytes": "32",
								"value": "t_array(t_struct(Transaction)1457_storage)dyn_storage"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_struct(Transaction)1457_storage": {
								"encoding": "inplace",
								"label": "struct Logger.Transaction",
								"members": [
									{
										"astId": 1442,
										"contract": "contracts/Logger.sol:Logger",
										"label": "sender",
										"offset": 0,
										"slot": "0",
										"type": "t_address"
									},
									{
										"astId": 1444,
										"contract": "contracts/Logger.sol:Logger",
										"label": "recipient",
										"offset": 0,
										"slot": "1",
										"type": "t_address"
									},
									{
										"astId": 1446,
										"contract": "contracts/Logger.sol:Logger",
										"label": "amount",
										"offset": 0,
										"slot": "2",
										"type": "t_uint256"
									},
									{
										"astId": 1448,
										"contract": "contracts/Logger.sol:Logger",
										"label": "fee",
										"offset": 0,
										"slot": "3",
										"type": "t_uint256"
									},
									{
										"astId": 1450,
										"contract": "contracts/Logger.sol:Logger",
										"label": "reward",
										"offset": 0,
										"slot": "4",
										"type": "t_uint256"
									},
									{
										"astId": 1452,
										"contract": "contracts/Logger.sol:Logger",
										"label": "timestamp",
										"offset": 0,
										"slot": "5",
										"type": "t_uint48"
									},
									{
										"astId": 1454,
										"contract": "contracts/Logger.sol:Logger",
										"label": "txHash",
										"offset": 0,
										"slot": "6",
										"type": "t_string_storage"
									},
									{
										"astId": 1456,
										"contract": "contracts/Logger.sol:Logger",
										"label": "token",
										"offset": 0,
										"slot": "7",
										"type": "t_address"
									}
								],
								"numberOfBytes": "256"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							},
							"t_uint48": {
								"encoding": "inplace",
								"label": "uint48",
								"numberOfBytes": "6"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol",
					"exportedSymbols": {
						"ContextUpgradeable": [
							690
						],
						"Initializable": [
							462
						],
						"OwnableUpgradeable": [
							194
						]
					},
					"id": 195,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "102:24:0"
						},
						{
							"absolutePath": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol",
							"file": "../utils/ContextUpgradeable.sol",
							"id": 3,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 195,
							"sourceUnit": 691,
							"src": "128:67:0",
							"symbolAliases": [
								{
									"foreign": {
										"id": 2,
										"name": "ContextUpgradeable",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 690,
										"src": "136:18:0",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol",
							"file": "../proxy/utils/Initializable.sol",
							"id": 5,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 195,
							"sourceUnit": 463,
							"src": "196:63:0",
							"symbolAliases": [
								{
									"foreign": {
										"id": 4,
										"name": "Initializable",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 462,
										"src": "204:13:0",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 7,
										"name": "Initializable",
										"nameLocations": [
											"789:13:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 462,
										"src": "789:13:0"
									},
									"id": 8,
									"nodeType": "InheritanceSpecifier",
									"src": "789:13:0"
								},
								{
									"baseName": {
										"id": 9,
										"name": "ContextUpgradeable",
										"nameLocations": [
											"804:18:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 690,
										"src": "804:18:0"
									},
									"id": 10,
									"nodeType": "InheritanceSpecifier",
									"src": "804:18:0"
								}
							],
							"canonicalName": "OwnableUpgradeable",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 6,
								"nodeType": "StructuredDocumentation",
								"src": "261:487:0",
								"text": " @dev Contract module which provides a basic access control mechanism, where\n there is an account (an owner) that can be granted exclusive access to\n specific functions.\n The initial owner is set to the address provided by the deployer. This can\n later be changed with {transferOwnership}.\n This module is used through inheritance. It will make available the modifier\n `onlyOwner`, which can be applied to your functions to restrict their use to\n the owner."
							},
							"fullyImplemented": true,
							"id": 194,
							"linearizedBaseContracts": [
								194,
								690,
								462
							],
							"name": "OwnableUpgradeable",
							"nameLocation": "767:18:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"canonicalName": "OwnableUpgradeable.OwnableStorage",
									"documentation": {
										"id": 11,
										"nodeType": "StructuredDocumentation",
										"src": "829:65:0",
										"text": "@custom:storage-location erc7201:openzeppelin.storage.Ownable"
									},
									"id": 14,
									"members": [
										{
											"constant": false,
											"id": 13,
											"mutability": "mutable",
											"name": "_owner",
											"nameLocation": "939:6:0",
											"nodeType": "VariableDeclaration",
											"scope": 14,
											"src": "931:14:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 12,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "931:7:0",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "OwnableStorage",
									"nameLocation": "906:14:0",
									"nodeType": "StructDefinition",
									"scope": 194,
									"src": "899:53:0",
									"visibility": "public"
								},
								{
									"constant": true,
									"id": 17,
									"mutability": "constant",
									"name": "OwnableStorageLocation",
									"nameLocation": "1094:22:0",
									"nodeType": "VariableDeclaration",
									"scope": 194,
									"src": "1069:116:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes32",
										"typeString": "bytes32"
									},
									"typeName": {
										"id": 15,
										"name": "bytes32",
										"nodeType": "ElementaryTypeName",
										"src": "1069:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"value": {
										"hexValue": "307839303136643039643732643430666461653266643863656163366236323334633737303632313466643339633163643165363039613035323863313939333030",
										"id": 16,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1119:66:0",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_65173360639460082030725920392146925864023520599682862633725751242436743107328_by_1",
											"typeString": "int_const 6517...(69 digits omitted)...7328"
										},
										"value": "0x9016d09d72d40fdae2fd8ceac6b6234c7706214fd39c1cd1e609a0528c199300"
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 24,
										"nodeType": "Block",
										"src": "1270:81:0",
										"statements": [
											{
												"AST": {
													"nativeSrc": "1289:56:0",
													"nodeType": "YulBlock",
													"src": "1289:56:0",
													"statements": [
														{
															"nativeSrc": "1303:32:0",
															"nodeType": "YulAssignment",
															"src": "1303:32:0",
															"value": {
																"name": "OwnableStorageLocation",
																"nativeSrc": "1313:22:0",
																"nodeType": "YulIdentifier",
																"src": "1313:22:0"
															},
															"variableNames": [
																{
																	"name": "$.slot",
																	"nativeSrc": "1303:6:0",
																	"nodeType": "YulIdentifier",
																	"src": "1303:6:0"
																}
															]
														}
													]
												},
												"evmVersion": "prague",
												"externalReferences": [
													{
														"declaration": 21,
														"isOffset": false,
														"isSlot": true,
														"src": "1303:6:0",
														"suffix": "slot",
														"valueSize": 1
													},
													{
														"declaration": 17,
														"isOffset": false,
														"isSlot": false,
														"src": "1313:22:0",
														"valueSize": 1
													}
												],
												"id": 23,
												"nodeType": "InlineAssembly",
												"src": "1280:65:0"
											}
										]
									},
									"id": 25,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_getOwnableStorage",
									"nameLocation": "1201:18:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 18,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1219:2:0"
									},
									"returnParameters": {
										"id": 22,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 21,
												"mutability": "mutable",
												"name": "$",
												"nameLocation": "1267:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 25,
												"src": "1244:24:0",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_OwnableStorage_$14_storage_ptr",
													"typeString": "struct OwnableUpgradeable.OwnableStorage"
												},
												"typeName": {
													"id": 20,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 19,
														"name": "OwnableStorage",
														"nameLocations": [
															"1244:14:0"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 14,
														"src": "1244:14:0"
													},
													"referencedDeclaration": 14,
													"src": "1244:14:0",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_OwnableStorage_$14_storage_ptr",
														"typeString": "struct OwnableUpgradeable.OwnableStorage"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1243:26:0"
									},
									"scope": 194,
									"src": "1192:159:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "private"
								},
								{
									"documentation": {
										"id": 26,
										"nodeType": "StructuredDocumentation",
										"src": "1357:85:0",
										"text": " @dev The caller account is not authorized to perform an operation."
									},
									"errorSelector": "118cdaa7",
									"id": 30,
									"name": "OwnableUnauthorizedAccount",
									"nameLocation": "1453:26:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 29,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 28,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "1488:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 30,
												"src": "1480:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 27,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1480:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1479:17:0"
									},
									"src": "1447:50:0"
								},
								{
									"documentation": {
										"id": 31,
										"nodeType": "StructuredDocumentation",
										"src": "1503:82:0",
										"text": " @dev The owner is not a valid owner account. (eg. `address(0)`)"
									},
									"errorSelector": "1e4fbdf7",
									"id": 35,
									"name": "OwnableInvalidOwner",
									"nameLocation": "1596:19:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 34,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 33,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1624:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 35,
												"src": "1616:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 32,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1616:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1615:15:0"
									},
									"src": "1590:41:0"
								},
								{
									"anonymous": false,
									"eventSelector": "8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0",
									"id": 41,
									"name": "OwnershipTransferred",
									"nameLocation": "1643:20:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 40,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 37,
												"indexed": true,
												"mutability": "mutable",
												"name": "previousOwner",
												"nameLocation": "1680:13:0",
												"nodeType": "VariableDeclaration",
												"scope": 41,
												"src": "1664:29:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 36,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1664:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 39,
												"indexed": true,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "1711:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 41,
												"src": "1695:24:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 38,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1695:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1663:57:0"
									},
									"src": "1637:84:0"
								},
								{
									"body": {
										"id": 53,
										"nodeType": "Block",
										"src": "1919:55:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 50,
															"name": "initialOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 44,
															"src": "1954:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 49,
														"name": "__Ownable_init_unchained",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 81,
														"src": "1929:24:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 51,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1929:38:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 52,
												"nodeType": "ExpressionStatement",
												"src": "1929:38:0"
											}
										]
									},
									"documentation": {
										"id": 42,
										"nodeType": "StructuredDocumentation",
										"src": "1727:115:0",
										"text": " @dev Initializes the contract setting the address provided by the deployer as the initial owner."
									},
									"id": 54,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 47,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 46,
												"name": "onlyInitializing",
												"nameLocations": [
													"1902:16:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 357,
												"src": "1902:16:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "1902:16:0"
										}
									],
									"name": "__Ownable_init",
									"nameLocation": "1856:14:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 45,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 44,
												"mutability": "mutable",
												"name": "initialOwner",
												"nameLocation": "1879:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 54,
												"src": "1871:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 43,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1871:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1870:22:0"
									},
									"returnParameters": {
										"id": 48,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1919:0:0"
									},
									"scope": 194,
									"src": "1847:127:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 80,
										"nodeType": "Block",
										"src": "2062:153:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 66,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 61,
														"name": "initialOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 56,
														"src": "2076:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 64,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2100:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 63,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "2092:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 62,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "2092:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 65,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2092:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "2076:26:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 75,
												"nodeType": "IfStatement",
												"src": "2072:95:0",
												"trueBody": {
													"id": 74,
													"nodeType": "Block",
													"src": "2104:63:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 70,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "2153:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 69,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "2145:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 68,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "2145:7:0",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 71,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "2145:10:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 67,
																	"name": "OwnableInvalidOwner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 35,
																	"src": "2125:19:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 72,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2125:31:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 73,
															"nodeType": "RevertStatement",
															"src": "2118:38:0"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 77,
															"name": "initialOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 56,
															"src": "2195:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 76,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 193,
														"src": "2176:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 78,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2176:32:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 79,
												"nodeType": "ExpressionStatement",
												"src": "2176:32:0"
											}
										]
									},
									"id": 81,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 59,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 58,
												"name": "onlyInitializing",
												"nameLocations": [
													"2045:16:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 357,
												"src": "2045:16:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "2045:16:0"
										}
									],
									"name": "__Ownable_init_unchained",
									"nameLocation": "1989:24:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 57,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 56,
												"mutability": "mutable",
												"name": "initialOwner",
												"nameLocation": "2022:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 81,
												"src": "2014:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 55,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2014:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2013:22:0"
									},
									"returnParameters": {
										"id": 60,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2062:0:0"
									},
									"scope": 194,
									"src": "1980:235:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 88,
										"nodeType": "Block",
										"src": "2324:41:0",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 84,
														"name": "_checkOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 122,
														"src": "2334:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$__$",
															"typeString": "function () view"
														}
													},
													"id": 85,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2334:13:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 86,
												"nodeType": "ExpressionStatement",
												"src": "2334:13:0"
											},
											{
												"id": 87,
												"nodeType": "PlaceholderStatement",
												"src": "2357:1:0"
											}
										]
									},
									"documentation": {
										"id": 82,
										"nodeType": "StructuredDocumentation",
										"src": "2221:77:0",
										"text": " @dev Throws if called by any account other than the owner."
									},
									"id": 89,
									"name": "onlyOwner",
									"nameLocation": "2312:9:0",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 83,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2321:2:0"
									},
									"src": "2303:62:0",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 104,
										"nodeType": "Block",
										"src": "2496:89:0",
										"statements": [
											{
												"assignments": [
													97
												],
												"declarations": [
													{
														"constant": false,
														"id": 97,
														"mutability": "mutable",
														"name": "$",
														"nameLocation": "2529:1:0",
														"nodeType": "VariableDeclaration",
														"scope": 104,
														"src": "2506:24:0",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_OwnableStorage_$14_storage_ptr",
															"typeString": "struct OwnableUpgradeable.OwnableStorage"
														},
														"typeName": {
															"id": 96,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 95,
																"name": "OwnableStorage",
																"nameLocations": [
																	"2506:14:0"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 14,
																"src": "2506:14:0"
															},
															"referencedDeclaration": 14,
															"src": "2506:14:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_OwnableStorage_$14_storage_ptr",
																"typeString": "struct OwnableUpgradeable.OwnableStorage"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 100,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 98,
														"name": "_getOwnableStorage",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 25,
														"src": "2533:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$__$returns$_t_struct$_OwnableStorage_$14_storage_ptr_$",
															"typeString": "function () pure returns (struct OwnableUpgradeable.OwnableStorage storage pointer)"
														}
													},
													"id": 99,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2533:20:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_OwnableStorage_$14_storage_ptr",
														"typeString": "struct OwnableUpgradeable.OwnableStorage storage pointer"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2506:47:0"
											},
											{
												"expression": {
													"expression": {
														"id": 101,
														"name": "$",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 97,
														"src": "2570:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_OwnableStorage_$14_storage_ptr",
															"typeString": "struct OwnableUpgradeable.OwnableStorage storage pointer"
														}
													},
													"id": 102,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "2572:6:0",
													"memberName": "_owner",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 13,
													"src": "2570:8:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 94,
												"id": 103,
												"nodeType": "Return",
												"src": "2563:15:0"
											}
										]
									},
									"documentation": {
										"id": 90,
										"nodeType": "StructuredDocumentation",
										"src": "2371:65:0",
										"text": " @dev Returns the address of the current owner."
									},
									"functionSelector": "8da5cb5b",
									"id": 105,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "owner",
									"nameLocation": "2450:5:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 91,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2455:2:0"
									},
									"returnParameters": {
										"id": 94,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 93,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 105,
												"src": "2487:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 92,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2487:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2486:9:0"
									},
									"scope": 194,
									"src": "2441:144:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 121,
										"nodeType": "Block",
										"src": "2703:117:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 113,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 109,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 105,
															"src": "2717:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																"typeString": "function () view returns (address)"
															}
														},
														"id": 110,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2717:7:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 111,
															"name": "_msgSender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 672,
															"src": "2728:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																"typeString": "function () view returns (address)"
															}
														},
														"id": 112,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2728:12:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "2717:23:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 120,
												"nodeType": "IfStatement",
												"src": "2713:101:0",
												"trueBody": {
													"id": 119,
													"nodeType": "Block",
													"src": "2742:72:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 115,
																			"name": "_msgSender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 672,
																			"src": "2790:10:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																				"typeString": "function () view returns (address)"
																			}
																		},
																		"id": 116,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "2790:12:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 114,
																	"name": "OwnableUnauthorizedAccount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 30,
																	"src": "2763:26:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 117,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2763:40:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 118,
															"nodeType": "RevertStatement",
															"src": "2756:47:0"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 106,
										"nodeType": "StructuredDocumentation",
										"src": "2591:62:0",
										"text": " @dev Throws if the sender is not the owner."
									},
									"id": 122,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_checkOwner",
									"nameLocation": "2667:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 107,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2678:2:0"
									},
									"returnParameters": {
										"id": 108,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2703:0:0"
									},
									"scope": 194,
									"src": "2658:162:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 135,
										"nodeType": "Block",
										"src": "3209:47:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 131,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "3246:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 130,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "3238:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 129,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "3238:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 132,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3238:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 128,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 193,
														"src": "3219:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 133,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3219:30:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 134,
												"nodeType": "ExpressionStatement",
												"src": "3219:30:0"
											}
										]
									},
									"documentation": {
										"id": 123,
										"nodeType": "StructuredDocumentation",
										"src": "2826:324:0",
										"text": " @dev Leaves the contract without owner. It will not be possible to call\n `onlyOwner` functions. Can only be called by the current owner.\n NOTE: Renouncing ownership will leave the contract without an owner,\n thereby disabling any functionality that is only available to the owner."
									},
									"functionSelector": "715018a6",
									"id": 136,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 126,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 125,
												"name": "onlyOwner",
												"nameLocations": [
													"3199:9:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 89,
												"src": "3199:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "3199:9:0"
										}
									],
									"name": "renounceOwnership",
									"nameLocation": "3164:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 124,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3181:2:0"
									},
									"returnParameters": {
										"id": 127,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3209:0:0"
									},
									"scope": 194,
									"src": "3155:101:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 163,
										"nodeType": "Block",
										"src": "3475:145:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 149,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 144,
														"name": "newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 139,
														"src": "3489:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 147,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "3509:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 146,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "3501:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 145,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "3501:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 148,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "3501:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "3489:22:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 158,
												"nodeType": "IfStatement",
												"src": "3485:91:0",
												"trueBody": {
													"id": 157,
													"nodeType": "Block",
													"src": "3513:63:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 153,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "3562:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 152,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "3554:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 151,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "3554:7:0",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 154,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "3554:10:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 150,
																	"name": "OwnableInvalidOwner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 35,
																	"src": "3534:19:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 155,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3534:31:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 156,
															"nodeType": "RevertStatement",
															"src": "3527:38:0"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 160,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 139,
															"src": "3604:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 159,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 193,
														"src": "3585:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 161,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3585:28:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 162,
												"nodeType": "ExpressionStatement",
												"src": "3585:28:0"
											}
										]
									},
									"documentation": {
										"id": 137,
										"nodeType": "StructuredDocumentation",
										"src": "3262:138:0",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Can only be called by the current owner."
									},
									"functionSelector": "f2fde38b",
									"id": 164,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 142,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 141,
												"name": "onlyOwner",
												"nameLocations": [
													"3465:9:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 89,
												"src": "3465:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "3465:9:0"
										}
									],
									"name": "transferOwnership",
									"nameLocation": "3414:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 140,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 139,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "3440:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 164,
												"src": "3432:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 138,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3432:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3431:18:0"
									},
									"returnParameters": {
										"id": 143,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3475:0:0"
									},
									"scope": 194,
									"src": "3405:215:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 192,
										"nodeType": "Block",
										"src": "3837:185:0",
										"statements": [
											{
												"assignments": [
													172
												],
												"declarations": [
													{
														"constant": false,
														"id": 172,
														"mutability": "mutable",
														"name": "$",
														"nameLocation": "3870:1:0",
														"nodeType": "VariableDeclaration",
														"scope": 192,
														"src": "3847:24:0",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_OwnableStorage_$14_storage_ptr",
															"typeString": "struct OwnableUpgradeable.OwnableStorage"
														},
														"typeName": {
															"id": 171,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 170,
																"name": "OwnableStorage",
																"nameLocations": [
																	"3847:14:0"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 14,
																"src": "3847:14:0"
															},
															"referencedDeclaration": 14,
															"src": "3847:14:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_OwnableStorage_$14_storage_ptr",
																"typeString": "struct OwnableUpgradeable.OwnableStorage"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 175,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 173,
														"name": "_getOwnableStorage",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 25,
														"src": "3874:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$__$returns$_t_struct$_OwnableStorage_$14_storage_ptr_$",
															"typeString": "function () pure returns (struct OwnableUpgradeable.OwnableStorage storage pointer)"
														}
													},
													"id": 174,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3874:20:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_OwnableStorage_$14_storage_ptr",
														"typeString": "struct OwnableUpgradeable.OwnableStorage storage pointer"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3847:47:0"
											},
											{
												"assignments": [
													177
												],
												"declarations": [
													{
														"constant": false,
														"id": 177,
														"mutability": "mutable",
														"name": "oldOwner",
														"nameLocation": "3912:8:0",
														"nodeType": "VariableDeclaration",
														"scope": 192,
														"src": "3904:16:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 176,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "3904:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 180,
												"initialValue": {
													"expression": {
														"id": 178,
														"name": "$",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 172,
														"src": "3923:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_OwnableStorage_$14_storage_ptr",
															"typeString": "struct OwnableUpgradeable.OwnableStorage storage pointer"
														}
													},
													"id": 179,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "3925:6:0",
													"memberName": "_owner",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 13,
													"src": "3923:8:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3904:27:0"
											},
											{
												"expression": {
													"id": 185,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 181,
															"name": "$",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 172,
															"src": "3941:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_OwnableStorage_$14_storage_ptr",
																"typeString": "struct OwnableUpgradeable.OwnableStorage storage pointer"
															}
														},
														"id": 183,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "3943:6:0",
														"memberName": "_owner",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 13,
														"src": "3941:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 184,
														"name": "newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 167,
														"src": "3952:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "3941:19:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 186,
												"nodeType": "ExpressionStatement",
												"src": "3941:19:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 188,
															"name": "oldOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 177,
															"src": "3996:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 189,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 167,
															"src": "4006:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 187,
														"name": "OwnershipTransferred",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 41,
														"src": "3975:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 190,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3975:40:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 191,
												"nodeType": "EmitStatement",
												"src": "3970:45:0"
											}
										]
									},
									"documentation": {
										"id": 165,
										"nodeType": "StructuredDocumentation",
										"src": "3626:143:0",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Internal function without access restriction."
									},
									"id": 193,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transferOwnership",
									"nameLocation": "3783:18:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 168,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 167,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "3810:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 193,
												"src": "3802:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 166,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3802:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3801:18:0"
									},
									"returnParameters": {
										"id": 169,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3837:0:0"
									},
									"scope": 194,
									"src": "3774:248:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 195,
							"src": "749:3275:0",
							"usedErrors": [
								30,
								35,
								211,
								214
							],
							"usedEvents": [
								41,
								219
							]
						}
					],
					"src": "102:3923:0"
				},
				"id": 0
			},
			"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol",
					"exportedSymbols": {
						"Initializable": [
							462
						]
					},
					"id": 463,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 196,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "113:24:1"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"canonicalName": "Initializable",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 197,
								"nodeType": "StructuredDocumentation",
								"src": "139:2209:1",
								"text": " @dev This is a base contract to aid in writing upgradeable contracts, or any kind of contract that will be deployed\n behind a proxy. Since proxied contracts do not make use of a constructor, it's common to move constructor logic to an\n external initializer function, usually called `initialize`. It then becomes necessary to protect this initializer\n function so it can only be called once. The {initializer} modifier provided by this contract will have this effect.\n The initialization functions use a version number. Once a version number is used, it is consumed and cannot be\n reused. This mechanism prevents re-execution of each \"step\" but allows the creation of new initialization steps in\n case an upgrade adds a module that needs to be initialized.\n For example:\n [.hljs-theme-light.nopadding]\n ```solidity\n contract MyToken is ERC20Upgradeable {\n     function initialize() initializer public {\n         __ERC20_init(\"MyToken\", \"MTK\");\n     }\n }\n contract MyTokenV2 is MyToken, ERC20PermitUpgradeable {\n     function initializeV2() reinitializer(2) public {\n         __ERC20Permit_init(\"MyToken\");\n     }\n }\n ```\n TIP: To avoid leaving the proxy in an uninitialized state, the initializer function should be called as early as\n possible by providing the encoded function call as the `_data` argument to {ERC1967Proxy-constructor}.\n CAUTION: When used with inheritance, manual care must be taken to not invoke a parent initializer twice, or to ensure\n that all initializers are idempotent. This is not verified automatically as constructors are by Solidity.\n [CAUTION]\n ====\n Avoid leaving a contract uninitialized.\n An uninitialized contract can be taken over by an attacker. This applies to both a proxy and its implementation\n contract, which may impact the proxy. To prevent the implementation contract from being used, you should invoke\n the {_disableInitializers} function in the constructor to automatically lock it when it is deployed:\n [.hljs-theme-light.nopadding]\n ```\n /// @custom:oz-upgrades-unsafe-allow constructor\n constructor() {\n     _disableInitializers();\n }\n ```\n ===="
							},
							"fullyImplemented": true,
							"id": 462,
							"linearizedBaseContracts": [
								462
							],
							"name": "Initializable",
							"nameLocation": "2367:13:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"canonicalName": "Initializable.InitializableStorage",
									"documentation": {
										"id": 198,
										"nodeType": "StructuredDocumentation",
										"src": "2387:293:1",
										"text": " @dev Storage of the initializable contract.\n It's implemented on a custom ERC-7201 namespace to reduce the risk of storage collisions\n when using with upgradeable contracts.\n @custom:storage-location erc7201:openzeppelin.storage.Initializable"
									},
									"id": 205,
									"members": [
										{
											"constant": false,
											"id": 201,
											"mutability": "mutable",
											"name": "_initialized",
											"nameLocation": "2820:12:1",
											"nodeType": "VariableDeclaration",
											"scope": 205,
											"src": "2813:19:1",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint64",
												"typeString": "uint64"
											},
											"typeName": {
												"id": 200,
												"name": "uint64",
												"nodeType": "ElementaryTypeName",
												"src": "2813:6:1",
												"typeDescriptions": {
													"typeIdentifier": "t_uint64",
													"typeString": "uint64"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 204,
											"mutability": "mutable",
											"name": "_initializing",
											"nameLocation": "2955:13:1",
											"nodeType": "VariableDeclaration",
											"scope": 205,
											"src": "2950:18:1",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bool",
												"typeString": "bool"
											},
											"typeName": {
												"id": 203,
												"name": "bool",
												"nodeType": "ElementaryTypeName",
												"src": "2950:4:1",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "InitializableStorage",
									"nameLocation": "2692:20:1",
									"nodeType": "StructDefinition",
									"scope": 462,
									"src": "2685:290:1",
									"visibility": "public"
								},
								{
									"constant": true,
									"id": 208,
									"mutability": "constant",
									"name": "INITIALIZABLE_STORAGE",
									"nameLocation": "3123:21:1",
									"nodeType": "VariableDeclaration",
									"scope": 462,
									"src": "3098:115:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes32",
										"typeString": "bytes32"
									},
									"typeName": {
										"id": 206,
										"name": "bytes32",
										"nodeType": "ElementaryTypeName",
										"src": "3098:7:1",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"value": {
										"hexValue": "307866306335376531363834306466303430663135303838646332663831666533393163333932336265633733653233613936363265666339633232396336613030",
										"id": 207,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "3147:66:1",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_108904022758810753673719992590105913556127789646572562039383141376366747609600_by_1",
											"typeString": "int_const 1089...(70 digits omitted)...9600"
										},
										"value": "0xf0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a00"
									},
									"visibility": "private"
								},
								{
									"documentation": {
										"id": 209,
										"nodeType": "StructuredDocumentation",
										"src": "3220:60:1",
										"text": " @dev The contract is already initialized."
									},
									"errorSelector": "f92ee8a9",
									"id": 211,
									"name": "InvalidInitialization",
									"nameLocation": "3291:21:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 210,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3312:2:1"
									},
									"src": "3285:30:1"
								},
								{
									"documentation": {
										"id": 212,
										"nodeType": "StructuredDocumentation",
										"src": "3321:57:1",
										"text": " @dev The contract is not initializing."
									},
									"errorSelector": "d7e6bcf8",
									"id": 214,
									"name": "NotInitializing",
									"nameLocation": "3389:15:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 213,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3404:2:1"
									},
									"src": "3383:24:1"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 215,
										"nodeType": "StructuredDocumentation",
										"src": "3413:90:1",
										"text": " @dev Triggered when the contract has been initialized or reinitialized."
									},
									"eventSelector": "c7f505b2f371ae2175ee4913f4499e1f2633a7b5936321eed1cdaeb6115181d2",
									"id": 219,
									"name": "Initialized",
									"nameLocation": "3514:11:1",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 218,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 217,
												"indexed": false,
												"mutability": "mutable",
												"name": "version",
												"nameLocation": "3533:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 219,
												"src": "3526:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint64",
													"typeString": "uint64"
												},
												"typeName": {
													"id": 216,
													"name": "uint64",
													"nodeType": "ElementaryTypeName",
													"src": "3526:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3525:16:1"
									},
									"src": "3508:34:1"
								},
								{
									"body": {
										"id": 301,
										"nodeType": "Block",
										"src": "4092:1079:1",
										"statements": [
											{
												"assignments": [
													224
												],
												"declarations": [
													{
														"constant": false,
														"id": 224,
														"mutability": "mutable",
														"name": "$",
														"nameLocation": "4187:1:1",
														"nodeType": "VariableDeclaration",
														"scope": 301,
														"src": "4158:30:1",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_InitializableStorage_$205_storage_ptr",
															"typeString": "struct Initializable.InitializableStorage"
														},
														"typeName": {
															"id": 223,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 222,
																"name": "InitializableStorage",
																"nameLocations": [
																	"4158:20:1"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 205,
																"src": "4158:20:1"
															},
															"referencedDeclaration": 205,
															"src": "4158:20:1",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_InitializableStorage_$205_storage_ptr",
																"typeString": "struct Initializable.InitializableStorage"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 227,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 225,
														"name": "_getInitializableStorage",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 461,
														"src": "4191:24:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$__$returns$_t_struct$_InitializableStorage_$205_storage_ptr_$",
															"typeString": "function () pure returns (struct Initializable.InitializableStorage storage pointer)"
														}
													},
													"id": 226,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4191:26:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_InitializableStorage_$205_storage_ptr",
														"typeString": "struct Initializable.InitializableStorage storage pointer"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4158:59:1"
											},
											{
												"assignments": [
													229
												],
												"declarations": [
													{
														"constant": false,
														"id": 229,
														"mutability": "mutable",
														"name": "isTopLevelCall",
														"nameLocation": "4284:14:1",
														"nodeType": "VariableDeclaration",
														"scope": 301,
														"src": "4279:19:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 228,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "4279:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 233,
												"initialValue": {
													"id": 232,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "4301:16:1",
													"subExpression": {
														"expression": {
															"id": 230,
															"name": "$",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 224,
															"src": "4302:1:1",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_InitializableStorage_$205_storage_ptr",
																"typeString": "struct Initializable.InitializableStorage storage pointer"
															}
														},
														"id": 231,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "4304:13:1",
														"memberName": "_initializing",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 204,
														"src": "4302:15:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4279:38:1"
											},
											{
												"assignments": [
													235
												],
												"declarations": [
													{
														"constant": false,
														"id": 235,
														"mutability": "mutable",
														"name": "initialized",
														"nameLocation": "4334:11:1",
														"nodeType": "VariableDeclaration",
														"scope": 301,
														"src": "4327:18:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint64",
															"typeString": "uint64"
														},
														"typeName": {
															"id": 234,
															"name": "uint64",
															"nodeType": "ElementaryTypeName",
															"src": "4327:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint64",
																"typeString": "uint64"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 238,
												"initialValue": {
													"expression": {
														"id": 236,
														"name": "$",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 224,
														"src": "4348:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_InitializableStorage_$205_storage_ptr",
															"typeString": "struct Initializable.InitializableStorage storage pointer"
														}
													},
													"id": 237,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "4350:12:1",
													"memberName": "_initialized",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 201,
													"src": "4348:14:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4327:35:1"
											},
											{
												"assignments": [
													240
												],
												"declarations": [
													{
														"constant": false,
														"id": 240,
														"mutability": "mutable",
														"name": "initialSetup",
														"nameLocation": "4709:12:1",
														"nodeType": "VariableDeclaration",
														"scope": 301,
														"src": "4704:17:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 239,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "4704:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 246,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 245,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint64",
															"typeString": "uint64"
														},
														"id": 243,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 241,
															"name": "initialized",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 235,
															"src": "4724:11:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint64",
																"typeString": "uint64"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"hexValue": "30",
															"id": 242,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4739:1:1",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "4724:16:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"id": 244,
														"name": "isTopLevelCall",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 229,
														"src": "4744:14:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "4724:34:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4704:54:1"
											},
											{
												"assignments": [
													248
												],
												"declarations": [
													{
														"constant": false,
														"id": 248,
														"mutability": "mutable",
														"name": "construction",
														"nameLocation": "4773:12:1",
														"nodeType": "VariableDeclaration",
														"scope": 301,
														"src": "4768:17:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 247,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "4768:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 261,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 260,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint64",
															"typeString": "uint64"
														},
														"id": 251,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 249,
															"name": "initialized",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 235,
															"src": "4788:11:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint64",
																"typeString": "uint64"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"hexValue": "31",
															"id": 250,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4803:1:1",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														},
														"src": "4788:16:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 259,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"expression": {
																"expression": {
																	"arguments": [
																		{
																			"id": 254,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967268,
																			"src": "4816:4:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_Initializable_$462",
																				"typeString": "contract Initializable"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_Initializable_$462",
																				"typeString": "contract Initializable"
																			}
																		],
																		"id": 253,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "4808:7:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 252,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "4808:7:1",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 255,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "4808:13:1",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"id": 256,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "4822:4:1",
																"memberName": "code",
																"nodeType": "MemberAccess",
																"src": "4808:18:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"id": 257,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "4827:6:1",
															"memberName": "length",
															"nodeType": "MemberAccess",
															"src": "4808:25:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"hexValue": "30",
															"id": 258,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4837:1:1",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "4808:30:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "4788:50:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4768:70:1"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 266,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 263,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "!",
														"prefix": true,
														"src": "4853:13:1",
														"subExpression": {
															"id": 262,
															"name": "initialSetup",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 240,
															"src": "4854:12:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"id": 265,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "!",
														"prefix": true,
														"src": "4870:13:1",
														"subExpression": {
															"id": 264,
															"name": "construction",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 248,
															"src": "4871:12:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "4853:30:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 271,
												"nodeType": "IfStatement",
												"src": "4849:91:1",
												"trueBody": {
													"id": 270,
													"nodeType": "Block",
													"src": "4885:55:1",
													"statements": [
														{
															"errorCall": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 267,
																	"name": "InvalidInitialization",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 211,
																	"src": "4906:21:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
																		"typeString": "function () pure returns (error)"
																	}
																},
																"id": 268,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4906:23:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 269,
															"nodeType": "RevertStatement",
															"src": "4899:30:1"
														}
													]
												}
											},
											{
												"expression": {
													"id": 276,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 272,
															"name": "$",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 224,
															"src": "4949:1:1",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_InitializableStorage_$205_storage_ptr",
																"typeString": "struct Initializable.InitializableStorage storage pointer"
															}
														},
														"id": 274,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "4951:12:1",
														"memberName": "_initialized",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 201,
														"src": "4949:14:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint64",
															"typeString": "uint64"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "31",
														"id": 275,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "4966:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"src": "4949:18:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													}
												},
												"id": 277,
												"nodeType": "ExpressionStatement",
												"src": "4949:18:1"
											},
											{
												"condition": {
													"id": 278,
													"name": "isTopLevelCall",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 229,
													"src": "4981:14:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 286,
												"nodeType": "IfStatement",
												"src": "4977:67:1",
												"trueBody": {
													"id": 285,
													"nodeType": "Block",
													"src": "4997:47:1",
													"statements": [
														{
															"expression": {
																"id": 283,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"expression": {
																		"id": 279,
																		"name": "$",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 224,
																		"src": "5011:1:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_InitializableStorage_$205_storage_ptr",
																			"typeString": "struct Initializable.InitializableStorage storage pointer"
																		}
																	},
																	"id": 281,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"memberLocation": "5013:13:1",
																	"memberName": "_initializing",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 204,
																	"src": "5011:15:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"hexValue": "74727565",
																	"id": 282,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "5029:4:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																"src": "5011:22:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 284,
															"nodeType": "ExpressionStatement",
															"src": "5011:22:1"
														}
													]
												}
											},
											{
												"id": 287,
												"nodeType": "PlaceholderStatement",
												"src": "5053:1:1"
											},
											{
												"condition": {
													"id": 288,
													"name": "isTopLevelCall",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 229,
													"src": "5068:14:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 300,
												"nodeType": "IfStatement",
												"src": "5064:101:1",
												"trueBody": {
													"id": 299,
													"nodeType": "Block",
													"src": "5084:81:1",
													"statements": [
														{
															"expression": {
																"id": 293,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"expression": {
																		"id": 289,
																		"name": "$",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 224,
																		"src": "5098:1:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_InitializableStorage_$205_storage_ptr",
																			"typeString": "struct Initializable.InitializableStorage storage pointer"
																		}
																	},
																	"id": 291,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"memberLocation": "5100:13:1",
																	"memberName": "_initializing",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 204,
																	"src": "5098:15:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"hexValue": "66616c7365",
																	"id": 292,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "5116:5:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "false"
																},
																"src": "5098:23:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 294,
															"nodeType": "ExpressionStatement",
															"src": "5098:23:1"
														},
														{
															"eventCall": {
																"arguments": [
																	{
																		"hexValue": "31",
																		"id": 296,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "5152:1:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_1_by_1",
																			"typeString": "int_const 1"
																		},
																		"value": "1"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_1_by_1",
																			"typeString": "int_const 1"
																		}
																	],
																	"id": 295,
																	"name": "Initialized",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 219,
																	"src": "5140:11:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_event_nonpayable$_t_uint64_$returns$__$",
																		"typeString": "function (uint64)"
																	}
																},
																"id": 297,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5140:14:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 298,
															"nodeType": "EmitStatement",
															"src": "5135:19:1"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 220,
										"nodeType": "StructuredDocumentation",
										"src": "3548:516:1",
										"text": " @dev A modifier that defines a protected initializer function that can be invoked at most once. In its scope,\n `onlyInitializing` functions can be used to initialize parent contracts.\n Similar to `reinitializer(1)`, except that in the context of a constructor an `initializer` may be invoked any\n number of times. This behavior in the constructor can be useful during testing and is not expected to be used in\n production.\n Emits an {Initialized} event."
									},
									"id": 302,
									"name": "initializer",
									"nameLocation": "4078:11:1",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 221,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4089:2:1"
									},
									"src": "4069:1102:1",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 348,
										"nodeType": "Block",
										"src": "6289:392:1",
										"statements": [
											{
												"assignments": [
													309
												],
												"declarations": [
													{
														"constant": false,
														"id": 309,
														"mutability": "mutable",
														"name": "$",
														"nameLocation": "6384:1:1",
														"nodeType": "VariableDeclaration",
														"scope": 348,
														"src": "6355:30:1",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_InitializableStorage_$205_storage_ptr",
															"typeString": "struct Initializable.InitializableStorage"
														},
														"typeName": {
															"id": 308,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 307,
																"name": "InitializableStorage",
																"nameLocations": [
																	"6355:20:1"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 205,
																"src": "6355:20:1"
															},
															"referencedDeclaration": 205,
															"src": "6355:20:1",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_InitializableStorage_$205_storage_ptr",
																"typeString": "struct Initializable.InitializableStorage"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 312,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 310,
														"name": "_getInitializableStorage",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 461,
														"src": "6388:24:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$__$returns$_t_struct$_InitializableStorage_$205_storage_ptr_$",
															"typeString": "function () pure returns (struct Initializable.InitializableStorage storage pointer)"
														}
													},
													"id": 311,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6388:26:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_InitializableStorage_$205_storage_ptr",
														"typeString": "struct Initializable.InitializableStorage storage pointer"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6355:59:1"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 319,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 313,
															"name": "$",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 309,
															"src": "6429:1:1",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_InitializableStorage_$205_storage_ptr",
																"typeString": "struct Initializable.InitializableStorage storage pointer"
															}
														},
														"id": 314,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "6431:13:1",
														"memberName": "_initializing",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 204,
														"src": "6429:15:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "||",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_uint64",
															"typeString": "uint64"
														},
														"id": 318,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"expression": {
																"id": 315,
																"name": "$",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 309,
																"src": "6448:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_InitializableStorage_$205_storage_ptr",
																	"typeString": "struct Initializable.InitializableStorage storage pointer"
																}
															},
															"id": 316,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "6450:12:1",
															"memberName": "_initialized",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 201,
															"src": "6448:14:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint64",
																"typeString": "uint64"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">=",
														"rightExpression": {
															"id": 317,
															"name": "version",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 305,
															"src": "6466:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint64",
																"typeString": "uint64"
															}
														},
														"src": "6448:25:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "6429:44:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 324,
												"nodeType": "IfStatement",
												"src": "6425:105:1",
												"trueBody": {
													"id": 323,
													"nodeType": "Block",
													"src": "6475:55:1",
													"statements": [
														{
															"errorCall": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 320,
																	"name": "InvalidInitialization",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 211,
																	"src": "6496:21:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
																		"typeString": "function () pure returns (error)"
																	}
																},
																"id": 321,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "6496:23:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 322,
															"nodeType": "RevertStatement",
															"src": "6489:30:1"
														}
													]
												}
											},
											{
												"expression": {
													"id": 329,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 325,
															"name": "$",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 309,
															"src": "6539:1:1",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_InitializableStorage_$205_storage_ptr",
																"typeString": "struct Initializable.InitializableStorage storage pointer"
															}
														},
														"id": 327,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "6541:12:1",
														"memberName": "_initialized",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 201,
														"src": "6539:14:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint64",
															"typeString": "uint64"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 328,
														"name": "version",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 305,
														"src": "6556:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint64",
															"typeString": "uint64"
														}
													},
													"src": "6539:24:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													}
												},
												"id": 330,
												"nodeType": "ExpressionStatement",
												"src": "6539:24:1"
											},
											{
												"expression": {
													"id": 335,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 331,
															"name": "$",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 309,
															"src": "6573:1:1",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_InitializableStorage_$205_storage_ptr",
																"typeString": "struct Initializable.InitializableStorage storage pointer"
															}
														},
														"id": 333,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "6575:13:1",
														"memberName": "_initializing",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 204,
														"src": "6573:15:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "74727565",
														"id": 334,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "6591:4:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "true"
													},
													"src": "6573:22:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 336,
												"nodeType": "ExpressionStatement",
												"src": "6573:22:1"
											},
											{
												"id": 337,
												"nodeType": "PlaceholderStatement",
												"src": "6605:1:1"
											},
											{
												"expression": {
													"id": 342,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 338,
															"name": "$",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 309,
															"src": "6616:1:1",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_InitializableStorage_$205_storage_ptr",
																"typeString": "struct Initializable.InitializableStorage storage pointer"
															}
														},
														"id": 340,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "6618:13:1",
														"memberName": "_initializing",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 204,
														"src": "6616:15:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "66616c7365",
														"id": 341,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "6634:5:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "false"
													},
													"src": "6616:23:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 343,
												"nodeType": "ExpressionStatement",
												"src": "6616:23:1"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 345,
															"name": "version",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 305,
															"src": "6666:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint64",
																"typeString": "uint64"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint64",
																"typeString": "uint64"
															}
														],
														"id": 344,
														"name": "Initialized",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 219,
														"src": "6654:11:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_uint64_$returns$__$",
															"typeString": "function (uint64)"
														}
													},
													"id": 346,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6654:20:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 347,
												"nodeType": "EmitStatement",
												"src": "6649:25:1"
											}
										]
									},
									"documentation": {
										"id": 303,
										"nodeType": "StructuredDocumentation",
										"src": "5177:1068:1",
										"text": " @dev A modifier that defines a protected reinitializer function that can be invoked at most once, and only if the\n contract hasn't been initialized to a greater version before. In its scope, `onlyInitializing` functions can be\n used to initialize parent contracts.\n A reinitializer may be used after the original initialization step. This is essential to configure modules that\n are added through upgrades and that require initialization.\n When `version` is 1, this modifier is similar to `initializer`, except that functions marked with `reinitializer`\n cannot be nested. If one is invoked in the context of another, execution will revert.\n Note that versions can jump in increments greater than 1; this implies that if multiple reinitializers coexist in\n a contract, executing them in the right order is up to the developer or operator.\n WARNING: Setting the version to 2**64 - 1 will prevent any future reinitialization.\n Emits an {Initialized} event."
									},
									"id": 349,
									"name": "reinitializer",
									"nameLocation": "6259:13:1",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 306,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 305,
												"mutability": "mutable",
												"name": "version",
												"nameLocation": "6280:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 349,
												"src": "6273:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint64",
													"typeString": "uint64"
												},
												"typeName": {
													"id": 304,
													"name": "uint64",
													"nodeType": "ElementaryTypeName",
													"src": "6273:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6272:16:1"
									},
									"src": "6250:431:1",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 356,
										"nodeType": "Block",
										"src": "6919:48:1",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 352,
														"name": "_checkInitializing",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 370,
														"src": "6929:18:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$__$",
															"typeString": "function () view"
														}
													},
													"id": 353,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6929:20:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 354,
												"nodeType": "ExpressionStatement",
												"src": "6929:20:1"
											},
											{
												"id": 355,
												"nodeType": "PlaceholderStatement",
												"src": "6959:1:1"
											}
										]
									},
									"documentation": {
										"id": 350,
										"nodeType": "StructuredDocumentation",
										"src": "6687:199:1",
										"text": " @dev Modifier to protect an initialization function so that it can only be invoked by functions with the\n {initializer} and {reinitializer} modifiers, directly or indirectly."
									},
									"id": 357,
									"name": "onlyInitializing",
									"nameLocation": "6900:16:1",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 351,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6916:2:1"
									},
									"src": "6891:76:1",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 369,
										"nodeType": "Block",
										"src": "7134:89:1",
										"statements": [
											{
												"condition": {
													"id": 363,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "7148:18:1",
													"subExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 361,
															"name": "_isInitializing",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 438,
															"src": "7149:15:1",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_bool_$",
																"typeString": "function () view returns (bool)"
															}
														},
														"id": 362,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "7149:17:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 368,
												"nodeType": "IfStatement",
												"src": "7144:73:1",
												"trueBody": {
													"id": 367,
													"nodeType": "Block",
													"src": "7168:49:1",
													"statements": [
														{
															"errorCall": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 364,
																	"name": "NotInitializing",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 214,
																	"src": "7189:15:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
																		"typeString": "function () pure returns (error)"
																	}
																},
																"id": 365,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "7189:17:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 366,
															"nodeType": "RevertStatement",
															"src": "7182:24:1"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 358,
										"nodeType": "StructuredDocumentation",
										"src": "6973:104:1",
										"text": " @dev Reverts if the contract is not in an initializing state. See {onlyInitializing}."
									},
									"id": 370,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_checkInitializing",
									"nameLocation": "7091:18:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 359,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7109:2:1"
									},
									"returnParameters": {
										"id": 360,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7134:0:1"
									},
									"scope": 462,
									"src": "7082:141:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 415,
										"nodeType": "Block",
										"src": "7758:373:1",
										"statements": [
											{
												"assignments": [
													376
												],
												"declarations": [
													{
														"constant": false,
														"id": 376,
														"mutability": "mutable",
														"name": "$",
														"nameLocation": "7853:1:1",
														"nodeType": "VariableDeclaration",
														"scope": 415,
														"src": "7824:30:1",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_InitializableStorage_$205_storage_ptr",
															"typeString": "struct Initializable.InitializableStorage"
														},
														"typeName": {
															"id": 375,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 374,
																"name": "InitializableStorage",
																"nameLocations": [
																	"7824:20:1"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 205,
																"src": "7824:20:1"
															},
															"referencedDeclaration": 205,
															"src": "7824:20:1",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_InitializableStorage_$205_storage_ptr",
																"typeString": "struct Initializable.InitializableStorage"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 379,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 377,
														"name": "_getInitializableStorage",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 461,
														"src": "7857:24:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$__$returns$_t_struct$_InitializableStorage_$205_storage_ptr_$",
															"typeString": "function () pure returns (struct Initializable.InitializableStorage storage pointer)"
														}
													},
													"id": 378,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7857:26:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_InitializableStorage_$205_storage_ptr",
														"typeString": "struct Initializable.InitializableStorage storage pointer"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "7824:59:1"
											},
											{
												"condition": {
													"expression": {
														"id": 380,
														"name": "$",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 376,
														"src": "7898:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_InitializableStorage_$205_storage_ptr",
															"typeString": "struct Initializable.InitializableStorage storage pointer"
														}
													},
													"id": 381,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "7900:13:1",
													"memberName": "_initializing",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 204,
													"src": "7898:15:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 386,
												"nodeType": "IfStatement",
												"src": "7894:76:1",
												"trueBody": {
													"id": 385,
													"nodeType": "Block",
													"src": "7915:55:1",
													"statements": [
														{
															"errorCall": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 382,
																	"name": "InvalidInitialization",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 211,
																	"src": "7936:21:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
																		"typeString": "function () pure returns (error)"
																	}
																},
																"id": 383,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "7936:23:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 384,
															"nodeType": "RevertStatement",
															"src": "7929:30:1"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													},
													"id": 394,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 387,
															"name": "$",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 376,
															"src": "7983:1:1",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_InitializableStorage_$205_storage_ptr",
																"typeString": "struct Initializable.InitializableStorage storage pointer"
															}
														},
														"id": 388,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "7985:12:1",
														"memberName": "_initialized",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 201,
														"src": "7983:14:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint64",
															"typeString": "uint64"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 391,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "8006:6:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint64_$",
																		"typeString": "type(uint64)"
																	},
																	"typeName": {
																		"id": 390,
																		"name": "uint64",
																		"nodeType": "ElementaryTypeName",
																		"src": "8006:6:1",
																		"typeDescriptions": {}
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_type$_t_uint64_$",
																		"typeString": "type(uint64)"
																	}
																],
																"id": 389,
																"name": "type",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967269,
																"src": "8001:4:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 392,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "8001:12:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_magic_meta_type_t_uint64",
																"typeString": "type(uint64)"
															}
														},
														"id": 393,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "8014:3:1",
														"memberName": "max",
														"nodeType": "MemberAccess",
														"src": "8001:16:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint64",
															"typeString": "uint64"
														}
													},
													"src": "7983:34:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 414,
												"nodeType": "IfStatement",
												"src": "7979:146:1",
												"trueBody": {
													"id": 413,
													"nodeType": "Block",
													"src": "8019:106:1",
													"statements": [
														{
															"expression": {
																"id": 403,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"expression": {
																		"id": 395,
																		"name": "$",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 376,
																		"src": "8033:1:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_InitializableStorage_$205_storage_ptr",
																			"typeString": "struct Initializable.InitializableStorage storage pointer"
																		}
																	},
																	"id": 397,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"memberLocation": "8035:12:1",
																	"memberName": "_initialized",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 201,
																	"src": "8033:14:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint64",
																		"typeString": "uint64"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"expression": {
																		"arguments": [
																			{
																				"id": 400,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "ElementaryTypeNameExpression",
																				"src": "8055:6:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_uint64_$",
																					"typeString": "type(uint64)"
																				},
																				"typeName": {
																					"id": 399,
																					"name": "uint64",
																					"nodeType": "ElementaryTypeName",
																					"src": "8055:6:1",
																					"typeDescriptions": {}
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_type$_t_uint64_$",
																					"typeString": "type(uint64)"
																				}
																			],
																			"id": 398,
																			"name": "type",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967269,
																			"src": "8050:4:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																				"typeString": "function () pure"
																			}
																		},
																		"id": 401,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "8050:12:1",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_meta_type_t_uint64",
																			"typeString": "type(uint64)"
																		}
																	},
																	"id": 402,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"memberLocation": "8063:3:1",
																	"memberName": "max",
																	"nodeType": "MemberAccess",
																	"src": "8050:16:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint64",
																		"typeString": "uint64"
																	}
																},
																"src": "8033:33:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint64",
																	"typeString": "uint64"
																}
															},
															"id": 404,
															"nodeType": "ExpressionStatement",
															"src": "8033:33:1"
														},
														{
															"eventCall": {
																"arguments": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"id": 408,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"lValueRequested": false,
																					"nodeType": "ElementaryTypeNameExpression",
																					"src": "8102:6:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_type$_t_uint64_$",
																						"typeString": "type(uint64)"
																					},
																					"typeName": {
																						"id": 407,
																						"name": "uint64",
																						"nodeType": "ElementaryTypeName",
																						"src": "8102:6:1",
																						"typeDescriptions": {}
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_type$_t_uint64_$",
																						"typeString": "type(uint64)"
																					}
																				],
																				"id": 406,
																				"name": "type",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967269,
																				"src": "8097:4:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																					"typeString": "function () pure"
																				}
																			},
																			"id": 409,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "8097:12:1",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_meta_type_t_uint64",
																				"typeString": "type(uint64)"
																			}
																		},
																		"id": 410,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"memberLocation": "8110:3:1",
																		"memberName": "max",
																		"nodeType": "MemberAccess",
																		"src": "8097:16:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint64",
																			"typeString": "uint64"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint64",
																			"typeString": "uint64"
																		}
																	],
																	"id": 405,
																	"name": "Initialized",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 219,
																	"src": "8085:11:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_event_nonpayable$_t_uint64_$returns$__$",
																		"typeString": "function (uint64)"
																	}
																},
																"id": 411,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "8085:29:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 412,
															"nodeType": "EmitStatement",
															"src": "8080:34:1"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 371,
										"nodeType": "StructuredDocumentation",
										"src": "7229:475:1",
										"text": " @dev Locks the contract, preventing any future reinitialization. This cannot be part of an initializer call.\n Calling this in the constructor of a contract will prevent that contract from being initialized or reinitialized\n to any version. It is recommended to use this to lock implementation contracts that are designed to be called\n through proxies.\n Emits an {Initialized} event the first time it is successfully executed."
									},
									"id": 416,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_disableInitializers",
									"nameLocation": "7718:20:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 372,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7738:2:1"
									},
									"returnParameters": {
										"id": 373,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7758:0:1"
									},
									"scope": 462,
									"src": "7709:422:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 426,
										"nodeType": "Block",
										"src": "8306:63:1",
										"statements": [
											{
												"expression": {
													"expression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 422,
															"name": "_getInitializableStorage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 461,
															"src": "8323:24:1",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$__$returns$_t_struct$_InitializableStorage_$205_storage_ptr_$",
																"typeString": "function () pure returns (struct Initializable.InitializableStorage storage pointer)"
															}
														},
														"id": 423,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "8323:26:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_InitializableStorage_$205_storage_ptr",
															"typeString": "struct Initializable.InitializableStorage storage pointer"
														}
													},
													"id": 424,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "8350:12:1",
													"memberName": "_initialized",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 201,
													"src": "8323:39:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													}
												},
												"functionReturnParameters": 421,
												"id": 425,
												"nodeType": "Return",
												"src": "8316:46:1"
											}
										]
									},
									"documentation": {
										"id": 417,
										"nodeType": "StructuredDocumentation",
										"src": "8137:99:1",
										"text": " @dev Returns the highest version that has been initialized. See {reinitializer}."
									},
									"id": 427,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_getInitializedVersion",
									"nameLocation": "8250:22:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 418,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8272:2:1"
									},
									"returnParameters": {
										"id": 421,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 420,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 427,
												"src": "8298:6:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint64",
													"typeString": "uint64"
												},
												"typeName": {
													"id": 419,
													"name": "uint64",
													"nodeType": "ElementaryTypeName",
													"src": "8298:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8297:8:1"
									},
									"scope": 462,
									"src": "8241:128:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 437,
										"nodeType": "Block",
										"src": "8541:64:1",
										"statements": [
											{
												"expression": {
													"expression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 433,
															"name": "_getInitializableStorage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 461,
															"src": "8558:24:1",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$__$returns$_t_struct$_InitializableStorage_$205_storage_ptr_$",
																"typeString": "function () pure returns (struct Initializable.InitializableStorage storage pointer)"
															}
														},
														"id": 434,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "8558:26:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_InitializableStorage_$205_storage_ptr",
															"typeString": "struct Initializable.InitializableStorage storage pointer"
														}
													},
													"id": 435,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "8585:13:1",
													"memberName": "_initializing",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 204,
													"src": "8558:40:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 432,
												"id": 436,
												"nodeType": "Return",
												"src": "8551:47:1"
											}
										]
									},
									"documentation": {
										"id": 428,
										"nodeType": "StructuredDocumentation",
										"src": "8375:105:1",
										"text": " @dev Returns `true` if the contract is currently initializing. See {onlyInitializing}."
									},
									"id": 438,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_isInitializing",
									"nameLocation": "8494:15:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 429,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8509:2:1"
									},
									"returnParameters": {
										"id": 432,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 431,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 438,
												"src": "8535:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 430,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "8535:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8534:6:1"
									},
									"scope": 462,
									"src": "8485:120:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 446,
										"nodeType": "Block",
										"src": "8896:45:1",
										"statements": [
											{
												"expression": {
													"id": 444,
													"name": "INITIALIZABLE_STORAGE",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 208,
													"src": "8913:21:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"functionReturnParameters": 443,
												"id": 445,
												"nodeType": "Return",
												"src": "8906:28:1"
											}
										]
									},
									"documentation": {
										"id": 439,
										"nodeType": "StructuredDocumentation",
										"src": "8611:203:1",
										"text": " @dev Pointer to storage slot. Allows integrators to override it with a custom storage location.\n NOTE: Consider following the ERC-7201 formula to derive storage locations."
									},
									"id": 447,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_initializableStorageSlot",
									"nameLocation": "8828:25:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 440,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8853:2:1"
									},
									"returnParameters": {
										"id": 443,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 442,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 447,
												"src": "8887:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 441,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "8887:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8886:9:1"
									},
									"scope": 462,
									"src": "8819:122:1",
									"stateMutability": "pure",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 460,
										"nodeType": "Block",
										"src": "9161:115:1",
										"statements": [
											{
												"assignments": [
													455
												],
												"declarations": [
													{
														"constant": false,
														"id": 455,
														"mutability": "mutable",
														"name": "slot",
														"nameLocation": "9179:4:1",
														"nodeType": "VariableDeclaration",
														"scope": 460,
														"src": "9171:12:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														},
														"typeName": {
															"id": 454,
															"name": "bytes32",
															"nodeType": "ElementaryTypeName",
															"src": "9171:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 458,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 456,
														"name": "_initializableStorageSlot",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 447,
														"src": "9186:25:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$__$returns$_t_bytes32_$",
															"typeString": "function () pure returns (bytes32)"
														}
													},
													"id": 457,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9186:27:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "9171:42:1"
											},
											{
												"AST": {
													"nativeSrc": "9232:38:1",
													"nodeType": "YulBlock",
													"src": "9232:38:1",
													"statements": [
														{
															"nativeSrc": "9246:14:1",
															"nodeType": "YulAssignment",
															"src": "9246:14:1",
															"value": {
																"name": "slot",
																"nativeSrc": "9256:4:1",
																"nodeType": "YulIdentifier",
																"src": "9256:4:1"
															},
															"variableNames": [
																{
																	"name": "$.slot",
																	"nativeSrc": "9246:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "9246:6:1"
																}
															]
														}
													]
												},
												"evmVersion": "prague",
												"externalReferences": [
													{
														"declaration": 452,
														"isOffset": false,
														"isSlot": true,
														"src": "9246:6:1",
														"suffix": "slot",
														"valueSize": 1
													},
													{
														"declaration": 455,
														"isOffset": false,
														"isSlot": false,
														"src": "9256:4:1",
														"valueSize": 1
													}
												],
												"id": 459,
												"nodeType": "InlineAssembly",
												"src": "9223:47:1"
											}
										]
									},
									"documentation": {
										"id": 448,
										"nodeType": "StructuredDocumentation",
										"src": "8947:67:1",
										"text": " @dev Returns a pointer to the storage namespace."
									},
									"id": 461,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_getInitializableStorage",
									"nameLocation": "9080:24:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 449,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "9104:2:1"
									},
									"returnParameters": {
										"id": 453,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 452,
												"mutability": "mutable",
												"name": "$",
												"nameLocation": "9158:1:1",
												"nodeType": "VariableDeclaration",
												"scope": 461,
												"src": "9129:30:1",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_InitializableStorage_$205_storage_ptr",
													"typeString": "struct Initializable.InitializableStorage"
												},
												"typeName": {
													"id": 451,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 450,
														"name": "InitializableStorage",
														"nameLocations": [
															"9129:20:1"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 205,
														"src": "9129:20:1"
													},
													"referencedDeclaration": 205,
													"src": "9129:20:1",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_InitializableStorage_$205_storage_ptr",
														"typeString": "struct Initializable.InitializableStorage"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9128:32:1"
									},
									"scope": 462,
									"src": "9071:205:1",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "private"
								}
							],
							"scope": 463,
							"src": "2349:6929:1",
							"usedErrors": [
								211,
								214
							],
							"usedEvents": [
								219
							]
						}
					],
					"src": "113:9166:1"
				},
				"id": 1
			},
			"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol",
					"exportedSymbols": {
						"ERC1967Utils": [
							1015
						],
						"IERC1822Proxiable": [
							721
						],
						"Initializable": [
							462
						],
						"UUPSUpgradeable": [
							644
						]
					},
					"id": 645,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 464,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".22"
							],
							"nodeType": "PragmaDirective",
							"src": "115:24:2"
						},
						{
							"absolutePath": "@openzeppelin/contracts/interfaces/draft-IERC1822.sol",
							"file": "@openzeppelin/contracts/interfaces/draft-IERC1822.sol",
							"id": 466,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 645,
							"sourceUnit": 722,
							"src": "141:88:2",
							"symbolAliases": [
								{
									"foreign": {
										"id": 465,
										"name": "IERC1822Proxiable",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 721,
										"src": "149:17:2",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol",
							"file": "@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol",
							"id": 468,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 645,
							"sourceUnit": 1016,
							"src": "230:84:2",
							"symbolAliases": [
								{
									"foreign": {
										"id": 467,
										"name": "ERC1967Utils",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1015,
										"src": "238:12:2",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol",
							"file": "./Initializable.sol",
							"id": 470,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 645,
							"sourceUnit": 463,
							"src": "315:50:2",
							"symbolAliases": [
								{
									"foreign": {
										"id": 469,
										"name": "Initializable",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 462,
										"src": "323:13:2",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 472,
										"name": "Initializable",
										"nameLocations": [
											"1023:13:2"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 462,
										"src": "1023:13:2"
									},
									"id": 473,
									"nodeType": "InheritanceSpecifier",
									"src": "1023:13:2"
								},
								{
									"baseName": {
										"id": 474,
										"name": "IERC1822Proxiable",
										"nameLocations": [
											"1038:17:2"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 721,
										"src": "1038:17:2"
									},
									"id": 475,
									"nodeType": "InheritanceSpecifier",
									"src": "1038:17:2"
								}
							],
							"canonicalName": "UUPSUpgradeable",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 471,
								"nodeType": "StructuredDocumentation",
								"src": "367:618:2",
								"text": " @dev An upgradeability mechanism designed for UUPS proxies. The functions included here can perform an upgrade of an\n {ERC1967Proxy}, when this contract is set as the implementation behind such a proxy.\n A security mechanism ensures that an upgrade does not turn off upgradeability accidentally, although this risk is\n reinstated if the upgrade retains upgradeability but removes the security mechanism, e.g. by replacing\n `UUPSUpgradeable` with a custom implementation of upgrades.\n The {_authorizeUpgrade} function must be overridden to include access restriction to the upgrade mechanism."
							},
							"fullyImplemented": false,
							"id": 644,
							"linearizedBaseContracts": [
								644,
								721,
								462
							],
							"name": "UUPSUpgradeable",
							"nameLocation": "1004:15:2",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"documentation": {
										"id": 476,
										"nodeType": "StructuredDocumentation",
										"src": "1062:61:2",
										"text": "@custom:oz-upgrades-unsafe-allow state-variable-immutable"
									},
									"id": 482,
									"mutability": "immutable",
									"name": "__self",
									"nameLocation": "1154:6:2",
									"nodeType": "VariableDeclaration",
									"scope": 644,
									"src": "1128:48:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 477,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "1128:7:2",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"value": {
										"arguments": [
											{
												"id": 480,
												"name": "this",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 4294967268,
												"src": "1171:4:2",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_UUPSUpgradeable_$644",
													"typeString": "contract UUPSUpgradeable"
												}
											}
										],
										"expression": {
											"argumentTypes": [
												{
													"typeIdentifier": "t_contract$_UUPSUpgradeable_$644",
													"typeString": "contract UUPSUpgradeable"
												}
											],
											"id": 479,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"lValueRequested": false,
											"nodeType": "ElementaryTypeNameExpression",
											"src": "1163:7:2",
											"typeDescriptions": {
												"typeIdentifier": "t_type$_t_address_$",
												"typeString": "type(address)"
											},
											"typeName": {
												"id": 478,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "1163:7:2",
												"typeDescriptions": {}
											}
										},
										"id": 481,
										"isConstant": false,
										"isLValue": false,
										"isPure": false,
										"kind": "typeConversion",
										"lValueRequested": false,
										"nameLocations": [],
										"names": [],
										"nodeType": "FunctionCall",
										"src": "1163:13:2",
										"tryCall": false,
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "private"
								},
								{
									"constant": true,
									"documentation": {
										"id": 483,
										"nodeType": "StructuredDocumentation",
										"src": "1183:631:2",
										"text": " @dev The version of the upgrade interface of the contract. If this getter is missing, both `upgradeTo(address)`\n and `upgradeToAndCall(address,bytes)` are present, and `upgradeTo` must be used if no function should be called,\n while `upgradeToAndCall` will invoke the `receive` function if the second argument is the empty byte string.\n If the getter returns `\"5.0.0\"`, only `upgradeToAndCall(address,bytes)` is present, and the second argument must\n be the empty byte string if no function should be called, making it impossible to invoke the `receive` function\n during an upgrade."
									},
									"functionSelector": "ad3cb1cc",
									"id": 486,
									"mutability": "constant",
									"name": "UPGRADE_INTERFACE_VERSION",
									"nameLocation": "1842:25:2",
									"nodeType": "VariableDeclaration",
									"scope": 644,
									"src": "1819:58:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_memory_ptr",
										"typeString": "string"
									},
									"typeName": {
										"id": 484,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "1819:6:2",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"value": {
										"hexValue": "352e302e30",
										"id": 485,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "string",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1870:7:2",
										"typeDescriptions": {
											"typeIdentifier": "t_stringliteral_2ade050ecfcf8ae20ae1d10a23573f9d7e0bad85e74a2cf8338a65401e64558c",
											"typeString": "literal_string \"5.0.0\""
										},
										"value": "5.0.0"
									},
									"visibility": "public"
								},
								{
									"documentation": {
										"id": 487,
										"nodeType": "StructuredDocumentation",
										"src": "1884:65:2",
										"text": " @dev The call is from an unauthorized context."
									},
									"errorSelector": "e07c8dba",
									"id": 489,
									"name": "UUPSUnauthorizedCallContext",
									"nameLocation": "1960:27:2",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 488,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1987:2:2"
									},
									"src": "1954:36:2"
								},
								{
									"documentation": {
										"id": 490,
										"nodeType": "StructuredDocumentation",
										"src": "1996:68:2",
										"text": " @dev The storage `slot` is unsupported as a UUID."
									},
									"errorSelector": "aa1d49a4",
									"id": 494,
									"name": "UUPSUnsupportedProxiableUUID",
									"nameLocation": "2075:28:2",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 493,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 492,
												"mutability": "mutable",
												"name": "slot",
												"nameLocation": "2112:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 494,
												"src": "2104:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 491,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2104:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2103:14:2"
									},
									"src": "2069:49:2"
								},
								{
									"body": {
										"id": 501,
										"nodeType": "Block",
										"src": "2645:41:2",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 497,
														"name": "_checkProxy",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 576,
														"src": "2655:11:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$__$",
															"typeString": "function () view"
														}
													},
													"id": 498,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2655:13:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 499,
												"nodeType": "ExpressionStatement",
												"src": "2655:13:2"
											},
											{
												"id": 500,
												"nodeType": "PlaceholderStatement",
												"src": "2678:1:2"
											}
										]
									},
									"documentation": {
										"id": 495,
										"nodeType": "StructuredDocumentation",
										"src": "2124:495:2",
										"text": " @dev Check that the execution is being performed through a delegatecall call and that the execution context is\n a proxy contract with an implementation (as defined in ERC-1967) pointing to self. This should only be the case\n for UUPS and transparent proxies that are using the current contract as their implementation. Execution of a\n function through ERC-1167 minimal proxies (clones) would not normally pass this test, but is not guaranteed to\n fail."
									},
									"id": 502,
									"name": "onlyProxy",
									"nameLocation": "2633:9:2",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 496,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2642:2:2"
									},
									"src": "2624:62:2",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 509,
										"nodeType": "Block",
										"src": "2916:48:2",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 505,
														"name": "_checkNotDelegated",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 592,
														"src": "2926:18:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$__$",
															"typeString": "function () view"
														}
													},
													"id": 506,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2926:20:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 507,
												"nodeType": "ExpressionStatement",
												"src": "2926:20:2"
											},
											{
												"id": 508,
												"nodeType": "PlaceholderStatement",
												"src": "2956:1:2"
											}
										]
									},
									"documentation": {
										"id": 503,
										"nodeType": "StructuredDocumentation",
										"src": "2692:195:2",
										"text": " @dev Check that the execution is not being performed through a delegate call. This allows a function to be\n callable on the implementing contract but not through proxies."
									},
									"id": 510,
									"name": "notDelegated",
									"nameLocation": "2901:12:2",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 504,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2913:2:2"
									},
									"src": "2892:72:2",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 515,
										"nodeType": "Block",
										"src": "3030:7:2",
										"statements": []
									},
									"id": 516,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 513,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 512,
												"name": "onlyInitializing",
												"nameLocations": [
													"3013:16:2"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 357,
												"src": "3013:16:2"
											},
											"nodeType": "ModifierInvocation",
											"src": "3013:16:2"
										}
									],
									"name": "__UUPSUpgradeable_init",
									"nameLocation": "2979:22:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 511,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3001:2:2"
									},
									"returnParameters": {
										"id": 514,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3030:0:2"
									},
									"scope": 644,
									"src": "2970:67:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 521,
										"nodeType": "Block",
										"src": "3113:7:2",
										"statements": []
									},
									"id": 522,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 519,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 518,
												"name": "onlyInitializing",
												"nameLocations": [
													"3096:16:2"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 357,
												"src": "3096:16:2"
											},
											"nodeType": "ModifierInvocation",
											"src": "3096:16:2"
										}
									],
									"name": "__UUPSUpgradeable_init_unchained",
									"nameLocation": "3052:32:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 517,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3084:2:2"
									},
									"returnParameters": {
										"id": 520,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3113:0:2"
									},
									"scope": 644,
									"src": "3043:77:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"baseFunctions": [
										720
									],
									"body": {
										"id": 533,
										"nodeType": "Block",
										"src": "3786:56:2",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 530,
														"name": "ERC1967Utils",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1015,
														"src": "3803:12:2",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_contract$_ERC1967Utils_$1015_$",
															"typeString": "type(library ERC1967Utils)"
														}
													},
													"id": 531,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"lValueRequested": false,
													"memberLocation": "3816:19:2",
													"memberName": "IMPLEMENTATION_SLOT",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 736,
													"src": "3803:32:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"functionReturnParameters": 529,
												"id": 532,
												"nodeType": "Return",
												"src": "3796:39:2"
											}
										]
									},
									"documentation": {
										"id": 523,
										"nodeType": "StructuredDocumentation",
										"src": "3125:578:2",
										"text": " @dev Implementation of the ERC-1822 {proxiableUUID} function. This returns the storage slot used by the\n implementation. It is used to validate the implementation's compatibility when performing an upgrade.\n IMPORTANT: A proxy pointing at a proxiable contract should not be considered proxiable itself, because this risks\n bricking a proxy that upgrades to it, by delegating to itself until out of gas. Thus it is critical that this\n function revert if invoked through a proxy. This is guaranteed by the `notDelegated` modifier."
									},
									"functionSelector": "52d1902d",
									"id": 534,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 526,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 525,
												"name": "notDelegated",
												"nameLocations": [
													"3755:12:2"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 510,
												"src": "3755:12:2"
											},
											"nodeType": "ModifierInvocation",
											"src": "3755:12:2"
										}
									],
									"name": "proxiableUUID",
									"nameLocation": "3717:13:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 524,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3730:2:2"
									},
									"returnParameters": {
										"id": 529,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 528,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 534,
												"src": "3777:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 527,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "3777:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3776:9:2"
									},
									"scope": 644,
									"src": "3708:134:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "external"
								},
								{
									"body": {
										"id": 553,
										"nodeType": "Block",
										"src": "4266:109:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 545,
															"name": "newImplementation",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 537,
															"src": "4294:17:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 544,
														"name": "_authorizeUpgrade",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 598,
														"src": "4276:17:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 546,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4276:36:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 547,
												"nodeType": "ExpressionStatement",
												"src": "4276:36:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 549,
															"name": "newImplementation",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 537,
															"src": "4344:17:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 550,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 539,
															"src": "4363:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 548,
														"name": "_upgradeToAndCallUUPS",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 643,
														"src": "4322:21:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,bytes memory)"
														}
													},
													"id": 551,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4322:46:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 552,
												"nodeType": "ExpressionStatement",
												"src": "4322:46:2"
											}
										]
									},
									"documentation": {
										"id": 535,
										"nodeType": "StructuredDocumentation",
										"src": "3848:308:2",
										"text": " @dev Upgrade the implementation of the proxy to `newImplementation`, and subsequently execute the function call\n encoded in `data`.\n Calls {_authorizeUpgrade}.\n Emits an {Upgraded} event.\n @custom:oz-upgrades-unsafe-allow-reachable delegatecall"
									},
									"functionSelector": "4f1ef286",
									"id": 554,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 542,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 541,
												"name": "onlyProxy",
												"nameLocations": [
													"4256:9:2"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 502,
												"src": "4256:9:2"
											},
											"nodeType": "ModifierInvocation",
											"src": "4256:9:2"
										}
									],
									"name": "upgradeToAndCall",
									"nameLocation": "4170:16:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 540,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 537,
												"mutability": "mutable",
												"name": "newImplementation",
												"nameLocation": "4195:17:2",
												"nodeType": "VariableDeclaration",
												"scope": 554,
												"src": "4187:25:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 536,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4187:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 539,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "4227:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 554,
												"src": "4214:17:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 538,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4214:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4186:46:2"
									},
									"returnParameters": {
										"id": 543,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4266:0:2"
									},
									"scope": 644,
									"src": "4161:214:2",
									"stateMutability": "payable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 575,
										"nodeType": "Block",
										"src": "4623:267:2",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 569,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"id": 563,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"arguments": [
																{
																	"id": 560,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "4658:4:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_UUPSUpgradeable_$644",
																		"typeString": "contract UUPSUpgradeable"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_UUPSUpgradeable_$644",
																		"typeString": "contract UUPSUpgradeable"
																	}
																],
																"id": 559,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "4650:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 558,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "4650:7:2",
																	"typeDescriptions": {}
																}
															},
															"id": 561,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4650:13:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"id": 562,
															"name": "__self",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 482,
															"src": "4667:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"src": "4650:23:2",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "||",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"id": 568,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"expression": {
																	"id": 564,
																	"name": "ERC1967Utils",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1015,
																	"src": "4728:12:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_contract$_ERC1967Utils_$1015_$",
																		"typeString": "type(library ERC1967Utils)"
																	}
																},
																"id": 565,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "4741:17:2",
																"memberName": "getImplementation",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 767,
																"src": "4728:30:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 566,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4728:32:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "!=",
														"rightExpression": {
															"id": 567,
															"name": "__self",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 482,
															"src": "4764:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"src": "4728:42:2",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "4650:120:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 574,
												"nodeType": "IfStatement",
												"src": "4633:251:2",
												"trueBody": {
													"id": 573,
													"nodeType": "Block",
													"src": "4823:61:2",
													"statements": [
														{
															"errorCall": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 570,
																	"name": "UUPSUnauthorizedCallContext",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 489,
																	"src": "4844:27:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
																		"typeString": "function () pure returns (error)"
																	}
																},
																"id": 571,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4844:29:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 572,
															"nodeType": "RevertStatement",
															"src": "4837:36:2"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 555,
										"nodeType": "StructuredDocumentation",
										"src": "4381:192:2",
										"text": " @dev Reverts if the execution is not performed via delegatecall or the execution\n context is not of a proxy with an ERC-1967 compliant implementation pointing to self."
									},
									"id": 576,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_checkProxy",
									"nameLocation": "4587:11:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 556,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4598:2:2"
									},
									"returnParameters": {
										"id": 557,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4623:0:2"
									},
									"scope": 644,
									"src": "4578:312:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 591,
										"nodeType": "Block",
										"src": "5059:161:2",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 585,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"arguments": [
															{
																"id": 582,
																"name": "this",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967268,
																"src": "5081:4:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_UUPSUpgradeable_$644",
																	"typeString": "contract UUPSUpgradeable"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_contract$_UUPSUpgradeable_$644",
																	"typeString": "contract UUPSUpgradeable"
																}
															],
															"id": 581,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "5073:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 580,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "5073:7:2",
																"typeDescriptions": {}
															}
														},
														"id": 583,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "5073:13:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"id": 584,
														"name": "__self",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 482,
														"src": "5090:6:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "5073:23:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 590,
												"nodeType": "IfStatement",
												"src": "5069:145:2",
												"trueBody": {
													"id": 589,
													"nodeType": "Block",
													"src": "5098:116:2",
													"statements": [
														{
															"errorCall": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 586,
																	"name": "UUPSUnauthorizedCallContext",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 489,
																	"src": "5174:27:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
																		"typeString": "function () pure returns (error)"
																	}
																},
																"id": 587,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5174:29:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 588,
															"nodeType": "RevertStatement",
															"src": "5167:36:2"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 577,
										"nodeType": "StructuredDocumentation",
										"src": "4896:106:2",
										"text": " @dev Reverts if the execution is performed via delegatecall.\n See {notDelegated}."
									},
									"id": 592,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_checkNotDelegated",
									"nameLocation": "5016:18:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 578,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5034:2:2"
									},
									"returnParameters": {
										"id": 579,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5059:0:2"
									},
									"scope": 644,
									"src": "5007:213:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"documentation": {
										"id": 593,
										"nodeType": "StructuredDocumentation",
										"src": "5226:372:2",
										"text": " @dev Function that should revert when `msg.sender` is not authorized to upgrade the contract. Called by\n {upgradeToAndCall}.\n Normally, this function will use an xref:access.adoc[access control] modifier such as {Ownable-onlyOwner}.\n ```solidity\n function _authorizeUpgrade(address) internal onlyOwner {}\n ```"
									},
									"id": 598,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "_authorizeUpgrade",
									"nameLocation": "5612:17:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 596,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 595,
												"mutability": "mutable",
												"name": "newImplementation",
												"nameLocation": "5638:17:2",
												"nodeType": "VariableDeclaration",
												"scope": 598,
												"src": "5630:25:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 594,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5630:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5629:27:2"
									},
									"returnParameters": {
										"id": 597,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5673:0:2"
									},
									"scope": 644,
									"src": "5603:71:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 642,
										"nodeType": "Block",
										"src": "6117:453:2",
										"statements": [
											{
												"clauses": [
													{
														"block": {
															"id": 631,
															"nodeType": "Block",
															"src": "6207:212:2",
															"statements": [
																{
																	"condition": {
																		"commonType": {
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		},
																		"id": 617,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 614,
																			"name": "slot",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 612,
																			"src": "6225:4:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bytes32",
																				"typeString": "bytes32"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "!=",
																		"rightExpression": {
																			"expression": {
																				"id": 615,
																				"name": "ERC1967Utils",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1015,
																				"src": "6233:12:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_contract$_ERC1967Utils_$1015_$",
																					"typeString": "type(library ERC1967Utils)"
																				}
																			},
																			"id": 616,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"memberLocation": "6246:19:2",
																			"memberName": "IMPLEMENTATION_SLOT",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 736,
																			"src": "6233:32:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bytes32",
																				"typeString": "bytes32"
																			}
																		},
																		"src": "6225:40:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"id": 623,
																	"nodeType": "IfStatement",
																	"src": "6221:120:2",
																	"trueBody": {
																		"id": 622,
																		"nodeType": "Block",
																		"src": "6267:74:2",
																		"statements": [
																			{
																				"errorCall": {
																					"arguments": [
																						{
																							"id": 619,
																							"name": "slot",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 612,
																							"src": "6321:4:2",
																							"typeDescriptions": {
																								"typeIdentifier": "t_bytes32",
																								"typeString": "bytes32"
																							}
																						}
																					],
																					"expression": {
																						"argumentTypes": [
																							{
																								"typeIdentifier": "t_bytes32",
																								"typeString": "bytes32"
																							}
																						],
																						"id": 618,
																						"name": "UUPSUnsupportedProxiableUUID",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 494,
																						"src": "6292:28:2",
																						"typeDescriptions": {
																							"typeIdentifier": "t_function_error_pure$_t_bytes32_$returns$_t_error_$",
																							"typeString": "function (bytes32) pure returns (error)"
																						}
																					},
																					"id": 620,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"kind": "functionCall",
																					"lValueRequested": false,
																					"nameLocations": [],
																					"names": [],
																					"nodeType": "FunctionCall",
																					"src": "6292:34:2",
																					"tryCall": false,
																					"typeDescriptions": {
																						"typeIdentifier": "t_error",
																						"typeString": "error"
																					}
																				},
																				"id": 621,
																				"nodeType": "RevertStatement",
																				"src": "6285:41:2"
																			}
																		]
																	}
																},
																{
																	"expression": {
																		"arguments": [
																			{
																				"id": 627,
																				"name": "newImplementation",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 601,
																				"src": "6384:17:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			{
																				"id": 628,
																				"name": "data",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 603,
																				"src": "6403:4:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes_memory_ptr",
																					"typeString": "bytes memory"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				},
																				{
																					"typeIdentifier": "t_bytes_memory_ptr",
																					"typeString": "bytes memory"
																				}
																			],
																			"expression": {
																				"id": 624,
																				"name": "ERC1967Utils",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1015,
																				"src": "6354:12:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_contract$_ERC1967Utils_$1015_$",
																					"typeString": "type(library ERC1967Utils)"
																				}
																			},
																			"id": 626,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "6367:16:2",
																			"memberName": "upgradeToAndCall",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 830,
																			"src": "6354:29:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$returns$__$",
																				"typeString": "function (address,bytes memory)"
																			}
																		},
																		"id": 629,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "6354:54:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_tuple$__$",
																			"typeString": "tuple()"
																		}
																	},
																	"id": 630,
																	"nodeType": "ExpressionStatement",
																	"src": "6354:54:2"
																}
															]
														},
														"errorName": "",
														"id": 632,
														"nodeType": "TryCatchClause",
														"parameters": {
															"id": 613,
															"nodeType": "ParameterList",
															"parameters": [
																{
																	"constant": false,
																	"id": 612,
																	"mutability": "mutable",
																	"name": "slot",
																	"nameLocation": "6201:4:2",
																	"nodeType": "VariableDeclaration",
																	"scope": 632,
																	"src": "6193:12:2",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	},
																	"typeName": {
																		"id": 611,
																		"name": "bytes32",
																		"nodeType": "ElementaryTypeName",
																		"src": "6193:7:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"src": "6192:14:2"
														},
														"src": "6184:235:2"
													},
													{
														"block": {
															"id": 639,
															"nodeType": "Block",
															"src": "6426:138:2",
															"statements": [
																{
																	"errorCall": {
																		"arguments": [
																			{
																				"id": 636,
																				"name": "newImplementation",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 601,
																				"src": "6535:17:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			],
																			"expression": {
																				"id": 633,
																				"name": "ERC1967Utils",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1015,
																				"src": "6493:12:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_contract$_ERC1967Utils_$1015_$",
																					"typeString": "type(library ERC1967Utils)"
																				}
																			},
																			"id": 635,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "6506:28:2",
																			"memberName": "ERC1967InvalidImplementation",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 741,
																			"src": "6493:41:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																				"typeString": "function (address) pure returns (error)"
																			}
																		},
																		"id": 637,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "6493:60:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_error",
																			"typeString": "error"
																		}
																	},
																	"id": 638,
																	"nodeType": "RevertStatement",
																	"src": "6486:67:2"
																}
															]
														},
														"errorName": "",
														"id": 640,
														"nodeType": "TryCatchClause",
														"src": "6420:144:2"
													}
												],
												"externalCall": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"expression": {
															"arguments": [
																{
																	"id": 607,
																	"name": "newImplementation",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 601,
																	"src": "6149:17:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 606,
																"name": "IERC1822Proxiable",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 721,
																"src": "6131:17:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_IERC1822Proxiable_$721_$",
																	"typeString": "type(contract IERC1822Proxiable)"
																}
															},
															"id": 608,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6131:36:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC1822Proxiable_$721",
																"typeString": "contract IERC1822Proxiable"
															}
														},
														"id": 609,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "6168:13:2",
														"memberName": "proxiableUUID",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 720,
														"src": "6131:50:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_view$__$returns$_t_bytes32_$",
															"typeString": "function () view external returns (bytes32)"
														}
													},
													"id": 610,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6131:52:2",
													"tryCall": true,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"id": 641,
												"nodeType": "TryStatement",
												"src": "6127:437:2"
											}
										]
									},
									"documentation": {
										"id": 599,
										"nodeType": "StructuredDocumentation",
										"src": "5680:347:2",
										"text": " @dev Performs an implementation upgrade with a security check for UUPS proxies, and additional setup call.\n As a security check, {proxiableUUID} is invoked in the new implementation, and the return value\n is expected to be the implementation slot in ERC-1967.\n Emits an {IERC1967-Upgraded} event."
									},
									"id": 643,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_upgradeToAndCallUUPS",
									"nameLocation": "6041:21:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 604,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 601,
												"mutability": "mutable",
												"name": "newImplementation",
												"nameLocation": "6071:17:2",
												"nodeType": "VariableDeclaration",
												"scope": 643,
												"src": "6063:25:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 600,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6063:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 603,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "6103:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 643,
												"src": "6090:17:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 602,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6090:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6062:46:2"
									},
									"returnParameters": {
										"id": 605,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6117:0:2"
									},
									"scope": 644,
									"src": "6032:538:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								}
							],
							"scope": 645,
							"src": "986:5586:2",
							"usedErrors": [
								211,
								214,
								489,
								494,
								741,
								754,
								1035,
								1298
							],
							"usedEvents": [
								219,
								698
							]
						}
					],
					"src": "115:6458:2"
				},
				"id": 2
			},
			"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol",
					"exportedSymbols": {
						"ContextUpgradeable": [
							690
						],
						"Initializable": [
							462
						]
					},
					"id": 691,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 646,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "101:24:3"
						},
						{
							"absolutePath": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol",
							"file": "../proxy/utils/Initializable.sol",
							"id": 648,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 691,
							"sourceUnit": 463,
							"src": "126:63:3",
							"symbolAliases": [
								{
									"foreign": {
										"id": 647,
										"name": "Initializable",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 462,
										"src": "134:13:3",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 650,
										"name": "Initializable",
										"nameLocations": [
											"728:13:3"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 462,
										"src": "728:13:3"
									},
									"id": 651,
									"nodeType": "InheritanceSpecifier",
									"src": "728:13:3"
								}
							],
							"canonicalName": "ContextUpgradeable",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 649,
								"nodeType": "StructuredDocumentation",
								"src": "191:496:3",
								"text": " @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."
							},
							"fullyImplemented": true,
							"id": 690,
							"linearizedBaseContracts": [
								690,
								462
							],
							"name": "ContextUpgradeable",
							"nameLocation": "706:18:3",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 656,
										"nodeType": "Block",
										"src": "800:7:3",
										"statements": []
									},
									"id": 657,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 654,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 653,
												"name": "onlyInitializing",
												"nameLocations": [
													"783:16:3"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 357,
												"src": "783:16:3"
											},
											"nodeType": "ModifierInvocation",
											"src": "783:16:3"
										}
									],
									"name": "__Context_init",
									"nameLocation": "757:14:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 652,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "771:2:3"
									},
									"returnParameters": {
										"id": 655,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "800:0:3"
									},
									"scope": 690,
									"src": "748:59:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 662,
										"nodeType": "Block",
										"src": "875:7:3",
										"statements": []
									},
									"id": 663,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 660,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 659,
												"name": "onlyInitializing",
												"nameLocations": [
													"858:16:3"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 357,
												"src": "858:16:3"
											},
											"nodeType": "ModifierInvocation",
											"src": "858:16:3"
										}
									],
									"name": "__Context_init_unchained",
									"nameLocation": "822:24:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 658,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "846:2:3"
									},
									"returnParameters": {
										"id": 661,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "875:0:3"
									},
									"scope": 690,
									"src": "813:69:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 671,
										"nodeType": "Block",
										"src": "949:34:3",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 668,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "966:3:3",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 669,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "970:6:3",
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "966:10:3",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 667,
												"id": 670,
												"nodeType": "Return",
												"src": "959:17:3"
											}
										]
									},
									"id": 672,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgSender",
									"nameLocation": "896:10:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 664,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "906:2:3"
									},
									"returnParameters": {
										"id": 667,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 666,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 672,
												"src": "940:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 665,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "940:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "939:9:3"
									},
									"scope": 690,
									"src": "887:96:3",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 680,
										"nodeType": "Block",
										"src": "1056:32:3",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 677,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "1073:3:3",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 678,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "1077:4:3",
													"memberName": "data",
													"nodeType": "MemberAccess",
													"src": "1073:8:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_calldata_ptr",
														"typeString": "bytes calldata"
													}
												},
												"functionReturnParameters": 676,
												"id": 679,
												"nodeType": "Return",
												"src": "1066:15:3"
											}
										]
									},
									"id": 681,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgData",
									"nameLocation": "998:8:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 673,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1006:2:3"
									},
									"returnParameters": {
										"id": 676,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 675,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 681,
												"src": "1040:14:3",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 674,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "1040:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1039:16:3"
									},
									"scope": 690,
									"src": "989:99:3",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 688,
										"nodeType": "Block",
										"src": "1166:25:3",
										"statements": [
											{
												"expression": {
													"hexValue": "30",
													"id": 686,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "1183:1:3",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"functionReturnParameters": 685,
												"id": 687,
												"nodeType": "Return",
												"src": "1176:8:3"
											}
										]
									},
									"id": 689,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_contextSuffixLength",
									"nameLocation": "1103:20:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 682,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1123:2:3"
									},
									"returnParameters": {
										"id": 685,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 684,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 689,
												"src": "1157:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 683,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1157:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1156:9:3"
									},
									"scope": 690,
									"src": "1094:97:3",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 691,
							"src": "688:505:3",
							"usedErrors": [
								211,
								214
							],
							"usedEvents": [
								219
							]
						}
					],
					"src": "101:1093:3"
				},
				"id": 3
			},
			"@openzeppelin/contracts/interfaces/IERC1967.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/interfaces/IERC1967.sol",
					"exportedSymbols": {
						"IERC1967": [
							711
						]
					},
					"id": 712,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 692,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "107:24:4"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC1967",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 693,
								"nodeType": "StructuredDocumentation",
								"src": "133:101:4",
								"text": " @dev ERC-1967: Proxy Storage Slots. This interface contains the events defined in the ERC."
							},
							"fullyImplemented": true,
							"id": 711,
							"linearizedBaseContracts": [
								711
							],
							"name": "IERC1967",
							"nameLocation": "245:8:4",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 694,
										"nodeType": "StructuredDocumentation",
										"src": "260:68:4",
										"text": " @dev Emitted when the implementation is upgraded."
									},
									"eventSelector": "bc7cd75a20ee27fd9adebab32041f755214dbc6bffa90cc0225b39da2e5c2d3b",
									"id": 698,
									"name": "Upgraded",
									"nameLocation": "339:8:4",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 697,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 696,
												"indexed": true,
												"mutability": "mutable",
												"name": "implementation",
												"nameLocation": "364:14:4",
												"nodeType": "VariableDeclaration",
												"scope": 698,
												"src": "348:30:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 695,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "348:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "347:32:4"
									},
									"src": "333:47:4"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 699,
										"nodeType": "StructuredDocumentation",
										"src": "386:67:4",
										"text": " @dev Emitted when the admin account has changed."
									},
									"eventSelector": "7e644d79422f17c01e4894b5f4f588d331ebfa28653d42ae832dc59e38c9798f",
									"id": 705,
									"name": "AdminChanged",
									"nameLocation": "464:12:4",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 704,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 701,
												"indexed": false,
												"mutability": "mutable",
												"name": "previousAdmin",
												"nameLocation": "485:13:4",
												"nodeType": "VariableDeclaration",
												"scope": 705,
												"src": "477:21:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 700,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "477:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 703,
												"indexed": false,
												"mutability": "mutable",
												"name": "newAdmin",
												"nameLocation": "508:8:4",
												"nodeType": "VariableDeclaration",
												"scope": 705,
												"src": "500:16:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 702,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "500:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "476:41:4"
									},
									"src": "458:60:4"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 706,
										"nodeType": "StructuredDocumentation",
										"src": "524:59:4",
										"text": " @dev Emitted when the beacon is changed."
									},
									"eventSelector": "1cf3b03a6cf19fa2baba4df148e9dcabedea7f8a5c07840e207e5c089be95d3e",
									"id": 710,
									"name": "BeaconUpgraded",
									"nameLocation": "594:14:4",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 709,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 708,
												"indexed": true,
												"mutability": "mutable",
												"name": "beacon",
												"nameLocation": "625:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 710,
												"src": "609:22:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 707,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "609:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "608:24:4"
									},
									"src": "588:45:4"
								}
							],
							"scope": 712,
							"src": "235:400:4",
							"usedErrors": [],
							"usedEvents": [
								698,
								705,
								710
							]
						}
					],
					"src": "107:529:4"
				},
				"id": 4
			},
			"@openzeppelin/contracts/interfaces/draft-IERC1822.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/interfaces/draft-IERC1822.sol",
					"exportedSymbols": {
						"IERC1822Proxiable": [
							721
						]
					},
					"id": 722,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 713,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "113:24:5"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC1822Proxiable",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 714,
								"nodeType": "StructuredDocumentation",
								"src": "139:204:5",
								"text": " @dev ERC-1822: Universal Upgradeable Proxy Standard (UUPS) documents a method for upgradeability through a simplified\n proxy whose upgrades are fully controlled by the current implementation."
							},
							"fullyImplemented": false,
							"id": 721,
							"linearizedBaseContracts": [
								721
							],
							"name": "IERC1822Proxiable",
							"nameLocation": "354:17:5",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 715,
										"nodeType": "StructuredDocumentation",
										"src": "378:438:5",
										"text": " @dev Returns the storage slot that the proxiable contract assumes is being used to store the implementation\n address.\n IMPORTANT: A proxy pointing at a proxiable contract should not be considered proxiable itself, because this risks\n bricking a proxy that upgrades to it, by delegating to itself until out of gas. Thus it is critical that this\n function revert if invoked through a proxy."
									},
									"functionSelector": "52d1902d",
									"id": 720,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "proxiableUUID",
									"nameLocation": "830:13:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 716,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "843:2:5"
									},
									"returnParameters": {
										"id": 719,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 718,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 720,
												"src": "869:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 717,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "869:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "868:9:5"
									},
									"scope": 721,
									"src": "821:57:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 722,
							"src": "344:536:5",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "113:768:5"
				},
				"id": 5
			},
			"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol",
					"exportedSymbols": {
						"Address": [
							1285
						],
						"ERC1967Utils": [
							1015
						],
						"IBeacon": [
							1025
						],
						"IERC1967": [
							711
						],
						"StorageSlot": [
							1431
						]
					},
					"id": 1016,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 723,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".22"
							],
							"nodeType": "PragmaDirective",
							"src": "114:24:6"
						},
						{
							"absolutePath": "@openzeppelin/contracts/proxy/beacon/IBeacon.sol",
							"file": "../beacon/IBeacon.sol",
							"id": 725,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1016,
							"sourceUnit": 1026,
							"src": "140:46:6",
							"symbolAliases": [
								{
									"foreign": {
										"id": 724,
										"name": "IBeacon",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1025,
										"src": "148:7:6",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/interfaces/IERC1967.sol",
							"file": "../../interfaces/IERC1967.sol",
							"id": 727,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1016,
							"sourceUnit": 712,
							"src": "187:55:6",
							"symbolAliases": [
								{
									"foreign": {
										"id": 726,
										"name": "IERC1967",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 711,
										"src": "195:8:6",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Address.sol",
							"file": "../../utils/Address.sol",
							"id": 729,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1016,
							"sourceUnit": 1286,
							"src": "243:48:6",
							"symbolAliases": [
								{
									"foreign": {
										"id": 728,
										"name": "Address",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1285,
										"src": "251:7:6",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/StorageSlot.sol",
							"file": "../../utils/StorageSlot.sol",
							"id": 731,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1016,
							"sourceUnit": 1432,
							"src": "292:56:6",
							"symbolAliases": [
								{
									"foreign": {
										"id": 730,
										"name": "StorageSlot",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1431,
										"src": "300:11:6",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "ERC1967Utils",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 732,
								"nodeType": "StructuredDocumentation",
								"src": "350:145:6",
								"text": " @dev This library provides getters and event emitting update functions for\n https://eips.ethereum.org/EIPS/eip-1967[ERC-1967] slots."
							},
							"fullyImplemented": true,
							"id": 1015,
							"linearizedBaseContracts": [
								1015
							],
							"name": "ERC1967Utils",
							"nameLocation": "504:12:6",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": true,
									"documentation": {
										"id": 733,
										"nodeType": "StructuredDocumentation",
										"src": "523:170:6",
										"text": " @dev Storage slot with the address of the current implementation.\n This is the keccak-256 hash of \"eip1967.proxy.implementation\" subtracted by 1."
									},
									"id": 736,
									"mutability": "constant",
									"name": "IMPLEMENTATION_SLOT",
									"nameLocation": "789:19:6",
									"nodeType": "VariableDeclaration",
									"scope": 1015,
									"src": "763:114:6",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes32",
										"typeString": "bytes32"
									},
									"typeName": {
										"id": 734,
										"name": "bytes32",
										"nodeType": "ElementaryTypeName",
										"src": "763:7:6",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"value": {
										"hexValue": "307833363038393461313362613161333231303636376338323834393264623938646361336532303736636333373335613932306133636135303564333832626263",
										"id": 735,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "811:66:6",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_24440054405305269366569402256811496959409073762505157381672968839269610695612_by_1",
											"typeString": "int_const 2444...(69 digits omitted)...5612"
										},
										"value": "0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc"
									},
									"visibility": "internal"
								},
								{
									"documentation": {
										"id": 737,
										"nodeType": "StructuredDocumentation",
										"src": "884:69:6",
										"text": " @dev The `implementation` of the proxy is invalid."
									},
									"errorSelector": "4c9c8ce3",
									"id": 741,
									"name": "ERC1967InvalidImplementation",
									"nameLocation": "964:28:6",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 740,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 739,
												"mutability": "mutable",
												"name": "implementation",
												"nameLocation": "1001:14:6",
												"nodeType": "VariableDeclaration",
												"scope": 741,
												"src": "993:22:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 738,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "993:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "992:24:6"
									},
									"src": "958:59:6"
								},
								{
									"documentation": {
										"id": 742,
										"nodeType": "StructuredDocumentation",
										"src": "1023:60:6",
										"text": " @dev The `admin` of the proxy is invalid."
									},
									"errorSelector": "62e77ba2",
									"id": 746,
									"name": "ERC1967InvalidAdmin",
									"nameLocation": "1094:19:6",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 745,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 744,
												"mutability": "mutable",
												"name": "admin",
												"nameLocation": "1122:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 746,
												"src": "1114:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 743,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1114:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1113:15:6"
									},
									"src": "1088:41:6"
								},
								{
									"documentation": {
										"id": 747,
										"nodeType": "StructuredDocumentation",
										"src": "1135:61:6",
										"text": " @dev The `beacon` of the proxy is invalid."
									},
									"errorSelector": "64ced0ec",
									"id": 751,
									"name": "ERC1967InvalidBeacon",
									"nameLocation": "1207:20:6",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 750,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 749,
												"mutability": "mutable",
												"name": "beacon",
												"nameLocation": "1236:6:6",
												"nodeType": "VariableDeclaration",
												"scope": 751,
												"src": "1228:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 748,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1228:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1227:16:6"
									},
									"src": "1201:43:6"
								},
								{
									"documentation": {
										"id": 752,
										"nodeType": "StructuredDocumentation",
										"src": "1250:82:6",
										"text": " @dev An upgrade function sees `msg.value > 0` that may be lost."
									},
									"errorSelector": "b398979f",
									"id": 754,
									"name": "ERC1967NonPayable",
									"nameLocation": "1343:17:6",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 753,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1360:2:6"
									},
									"src": "1337:26:6"
								},
								{
									"body": {
										"id": 766,
										"nodeType": "Block",
										"src": "1502:77:6",
										"statements": [
											{
												"expression": {
													"expression": {
														"arguments": [
															{
																"id": 762,
																"name": "IMPLEMENTATION_SLOT",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 736,
																"src": "1546:19:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															],
															"expression": {
																"id": 760,
																"name": "StorageSlot",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1431,
																"src": "1519:11:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_StorageSlot_$1431_$",
																	"typeString": "type(library StorageSlot)"
																}
															},
															"id": 761,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1531:14:6",
															"memberName": "getAddressSlot",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1342,
															"src": "1519:26:6",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_bytes32_$returns$_t_struct$_AddressSlot_$1313_storage_ptr_$",
																"typeString": "function (bytes32) pure returns (struct StorageSlot.AddressSlot storage pointer)"
															}
														},
														"id": 763,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1519:47:6",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_AddressSlot_$1313_storage_ptr",
															"typeString": "struct StorageSlot.AddressSlot storage pointer"
														}
													},
													"id": 764,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "1567:5:6",
													"memberName": "value",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 1312,
													"src": "1519:53:6",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 759,
												"id": 765,
												"nodeType": "Return",
												"src": "1512:60:6"
											}
										]
									},
									"documentation": {
										"id": 755,
										"nodeType": "StructuredDocumentation",
										"src": "1369:67:6",
										"text": " @dev Returns the current implementation address."
									},
									"id": 767,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getImplementation",
									"nameLocation": "1450:17:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 756,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1467:2:6"
									},
									"returnParameters": {
										"id": 759,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 758,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 767,
												"src": "1493:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 757,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1493:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1492:9:6"
									},
									"scope": 1015,
									"src": "1441:138:6",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 793,
										"nodeType": "Block",
										"src": "1734:218:6",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 777,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"expression": {
																"id": 773,
																"name": "newImplementation",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 770,
																"src": "1748:17:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 774,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1766:4:6",
															"memberName": "code",
															"nodeType": "MemberAccess",
															"src": "1748:22:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 775,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1771:6:6",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "1748:29:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 776,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1781:1:6",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "1748:34:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 783,
												"nodeType": "IfStatement",
												"src": "1744:119:6",
												"trueBody": {
													"id": 782,
													"nodeType": "Block",
													"src": "1784:79:6",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"id": 779,
																		"name": "newImplementation",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 770,
																		"src": "1834:17:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 778,
																	"name": "ERC1967InvalidImplementation",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 741,
																	"src": "1805:28:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 780,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1805:47:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 781,
															"nodeType": "RevertStatement",
															"src": "1798:54:6"
														}
													]
												}
											},
											{
												"expression": {
													"id": 791,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"arguments": [
																{
																	"id": 787,
																	"name": "IMPLEMENTATION_SLOT",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 736,
																	"src": "1899:19:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																],
																"expression": {
																	"id": 784,
																	"name": "StorageSlot",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1431,
																	"src": "1872:11:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_contract$_StorageSlot_$1431_$",
																		"typeString": "type(library StorageSlot)"
																	}
																},
																"id": 786,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "1884:14:6",
																"memberName": "getAddressSlot",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 1342,
																"src": "1872:26:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_bytes32_$returns$_t_struct$_AddressSlot_$1313_storage_ptr_$",
																	"typeString": "function (bytes32) pure returns (struct StorageSlot.AddressSlot storage pointer)"
																}
															},
															"id": 788,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1872:47:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_AddressSlot_$1313_storage_ptr",
																"typeString": "struct StorageSlot.AddressSlot storage pointer"
															}
														},
														"id": 789,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "1920:5:6",
														"memberName": "value",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1312,
														"src": "1872:53:6",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 790,
														"name": "newImplementation",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 770,
														"src": "1928:17:6",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1872:73:6",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 792,
												"nodeType": "ExpressionStatement",
												"src": "1872:73:6"
											}
										]
									},
									"documentation": {
										"id": 768,
										"nodeType": "StructuredDocumentation",
										"src": "1585:81:6",
										"text": " @dev Stores a new address in the ERC-1967 implementation slot."
									},
									"id": 794,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_setImplementation",
									"nameLocation": "1680:18:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 771,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 770,
												"mutability": "mutable",
												"name": "newImplementation",
												"nameLocation": "1707:17:6",
												"nodeType": "VariableDeclaration",
												"scope": 794,
												"src": "1699:25:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 769,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1699:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1698:27:6"
									},
									"returnParameters": {
										"id": 772,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1734:0:6"
									},
									"scope": 1015,
									"src": "1671:281:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 829,
										"nodeType": "Block",
										"src": "2345:263:6",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 803,
															"name": "newImplementation",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 797,
															"src": "2374:17:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 802,
														"name": "_setImplementation",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 794,
														"src": "2355:18:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 804,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2355:37:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 805,
												"nodeType": "ExpressionStatement",
												"src": "2355:37:6"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 809,
															"name": "newImplementation",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 797,
															"src": "2425:17:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"expression": {
															"id": 806,
															"name": "IERC1967",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 711,
															"src": "2407:8:6",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_IERC1967_$711_$",
																"typeString": "type(contract IERC1967)"
															}
														},
														"id": 808,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "2416:8:6",
														"memberName": "Upgraded",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 698,
														"src": "2407:17:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 810,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2407:36:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 811,
												"nodeType": "EmitStatement",
												"src": "2402:41:6"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 815,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 812,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 799,
															"src": "2458:4:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 813,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "2463:6:6",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "2458:11:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 814,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2472:1:6",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "2458:15:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 827,
													"nodeType": "Block",
													"src": "2559:43:6",
													"statements": [
														{
															"expression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 824,
																	"name": "_checkNonPayable",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1014,
																	"src": "2573:16:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
																		"typeString": "function ()"
																	}
																},
																"id": 825,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2573:18:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 826,
															"nodeType": "ExpressionStatement",
															"src": "2573:18:6"
														}
													]
												},
												"id": 828,
												"nodeType": "IfStatement",
												"src": "2454:148:6",
												"trueBody": {
													"id": 823,
													"nodeType": "Block",
													"src": "2475:78:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 819,
																		"name": "newImplementation",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 797,
																		"src": "2518:17:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 820,
																		"name": "data",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 799,
																		"src": "2537:4:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	],
																	"expression": {
																		"id": 816,
																		"name": "Address",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1285,
																		"src": "2489:7:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_contract$_Address_$1285_$",
																			"typeString": "type(library Address)"
																		}
																	},
																	"id": 818,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "2497:20:6",
																	"memberName": "functionDelegateCall",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1202,
																	"src": "2489:28:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$returns$_t_bytes_memory_ptr_$",
																		"typeString": "function (address,bytes memory) returns (bytes memory)"
																	}
																},
																"id": 821,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2489:53:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"id": 822,
															"nodeType": "ExpressionStatement",
															"src": "2489:53:6"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 795,
										"nodeType": "StructuredDocumentation",
										"src": "1958:301:6",
										"text": " @dev Performs implementation upgrade with additional setup call if data is nonempty.\n This function is payable only if the setup call is performed, otherwise `msg.value` is rejected\n to avoid stuck value in the contract.\n Emits an {IERC1967-Upgraded} event."
									},
									"id": 830,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "upgradeToAndCall",
									"nameLocation": "2273:16:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 800,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 797,
												"mutability": "mutable",
												"name": "newImplementation",
												"nameLocation": "2298:17:6",
												"nodeType": "VariableDeclaration",
												"scope": 830,
												"src": "2290:25:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 796,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2290:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 799,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "2330:4:6",
												"nodeType": "VariableDeclaration",
												"scope": 830,
												"src": "2317:17:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 798,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "2317:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2289:46:6"
									},
									"returnParameters": {
										"id": 801,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2345:0:6"
									},
									"scope": 1015,
									"src": "2264:344:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"constant": true,
									"documentation": {
										"id": 831,
										"nodeType": "StructuredDocumentation",
										"src": "2614:145:6",
										"text": " @dev Storage slot with the admin of the contract.\n This is the keccak-256 hash of \"eip1967.proxy.admin\" subtracted by 1."
									},
									"id": 834,
									"mutability": "constant",
									"name": "ADMIN_SLOT",
									"nameLocation": "2855:10:6",
									"nodeType": "VariableDeclaration",
									"scope": 1015,
									"src": "2829:105:6",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes32",
										"typeString": "bytes32"
									},
									"typeName": {
										"id": 832,
										"name": "bytes32",
										"nodeType": "ElementaryTypeName",
										"src": "2829:7:6",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"value": {
										"hexValue": "307862353331323736383461353638623331373361653133623966386136303136653234336536336236653865653131373864366137313738353062356436313033",
										"id": 833,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "2868:66:6",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_81955473079516046949633743016697847541294818689821282749996681496272635257091_by_1",
											"typeString": "int_const 8195...(69 digits omitted)...7091"
										},
										"value": "0xb53127684a568b3173ae13b9f8a6016e243e63b6e8ee1178d6a717850b5d6103"
									},
									"visibility": "internal"
								},
								{
									"body": {
										"id": 846,
										"nodeType": "Block",
										"src": "3339:68:6",
										"statements": [
											{
												"expression": {
													"expression": {
														"arguments": [
															{
																"id": 842,
																"name": "ADMIN_SLOT",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 834,
																"src": "3383:10:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															],
															"expression": {
																"id": 840,
																"name": "StorageSlot",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1431,
																"src": "3356:11:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_StorageSlot_$1431_$",
																	"typeString": "type(library StorageSlot)"
																}
															},
															"id": 841,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "3368:14:6",
															"memberName": "getAddressSlot",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1342,
															"src": "3356:26:6",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_bytes32_$returns$_t_struct$_AddressSlot_$1313_storage_ptr_$",
																"typeString": "function (bytes32) pure returns (struct StorageSlot.AddressSlot storage pointer)"
															}
														},
														"id": 843,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "3356:38:6",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_AddressSlot_$1313_storage_ptr",
															"typeString": "struct StorageSlot.AddressSlot storage pointer"
														}
													},
													"id": 844,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "3395:5:6",
													"memberName": "value",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 1312,
													"src": "3356:44:6",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 839,
												"id": 845,
												"nodeType": "Return",
												"src": "3349:51:6"
											}
										]
									},
									"documentation": {
										"id": 835,
										"nodeType": "StructuredDocumentation",
										"src": "2941:341:6",
										"text": " @dev Returns the current admin.\n TIP: To get this value clients can read directly from the storage slot shown below (specified by ERC-1967) using\n the https://eth.wiki/json-rpc/API#eth_getstorageat[`eth_getStorageAt`] RPC call.\n `0xb53127684a568b3173ae13b9f8a6016e243e63b6e8ee1178d6a717850b5d6103`"
									},
									"id": 847,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getAdmin",
									"nameLocation": "3296:8:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 836,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3304:2:6"
									},
									"returnParameters": {
										"id": 839,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 838,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 847,
												"src": "3330:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 837,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3330:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3329:9:6"
									},
									"scope": 1015,
									"src": "3287:120:6",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 877,
										"nodeType": "Block",
										"src": "3535:172:6",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 858,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 853,
														"name": "newAdmin",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 850,
														"src": "3549:8:6",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 856,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "3569:1:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 855,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "3561:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 854,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "3561:7:6",
																"typeDescriptions": {}
															}
														},
														"id": 857,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "3561:10:6",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "3549:22:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 867,
												"nodeType": "IfStatement",
												"src": "3545:91:6",
												"trueBody": {
													"id": 866,
													"nodeType": "Block",
													"src": "3573:63:6",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 862,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "3622:1:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 861,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "3614:7:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 860,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "3614:7:6",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 863,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "3614:10:6",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 859,
																	"name": "ERC1967InvalidAdmin",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 746,
																	"src": "3594:19:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 864,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3594:31:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 865,
															"nodeType": "RevertStatement",
															"src": "3587:38:6"
														}
													]
												}
											},
											{
												"expression": {
													"id": 875,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"arguments": [
																{
																	"id": 871,
																	"name": "ADMIN_SLOT",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 834,
																	"src": "3672:10:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																],
																"expression": {
																	"id": 868,
																	"name": "StorageSlot",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1431,
																	"src": "3645:11:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_contract$_StorageSlot_$1431_$",
																		"typeString": "type(library StorageSlot)"
																	}
																},
																"id": 870,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "3657:14:6",
																"memberName": "getAddressSlot",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 1342,
																"src": "3645:26:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_bytes32_$returns$_t_struct$_AddressSlot_$1313_storage_ptr_$",
																	"typeString": "function (bytes32) pure returns (struct StorageSlot.AddressSlot storage pointer)"
																}
															},
															"id": 872,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3645:38:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_AddressSlot_$1313_storage_ptr",
																"typeString": "struct StorageSlot.AddressSlot storage pointer"
															}
														},
														"id": 873,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "3684:5:6",
														"memberName": "value",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1312,
														"src": "3645:44:6",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 874,
														"name": "newAdmin",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 850,
														"src": "3692:8:6",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "3645:55:6",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 876,
												"nodeType": "ExpressionStatement",
												"src": "3645:55:6"
											}
										]
									},
									"documentation": {
										"id": 848,
										"nodeType": "StructuredDocumentation",
										"src": "3413:72:6",
										"text": " @dev Stores a new address in the ERC-1967 admin slot."
									},
									"id": 878,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_setAdmin",
									"nameLocation": "3499:9:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 851,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 850,
												"mutability": "mutable",
												"name": "newAdmin",
												"nameLocation": "3517:8:6",
												"nodeType": "VariableDeclaration",
												"scope": 878,
												"src": "3509:16:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 849,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3509:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3508:18:6"
									},
									"returnParameters": {
										"id": 852,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3535:0:6"
									},
									"scope": 1015,
									"src": "3490:217:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 896,
										"nodeType": "Block",
										"src": "3875:94:6",
										"statements": [
											{
												"eventCall": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 887,
																"name": "getAdmin",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 847,
																"src": "3912:8:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 888,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3912:10:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 889,
															"name": "newAdmin",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 881,
															"src": "3924:8:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"expression": {
															"id": 884,
															"name": "IERC1967",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 711,
															"src": "3890:8:6",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_IERC1967_$711_$",
																"typeString": "type(contract IERC1967)"
															}
														},
														"id": 886,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "3899:12:6",
														"memberName": "AdminChanged",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 705,
														"src": "3890:21:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 890,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3890:43:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 891,
												"nodeType": "EmitStatement",
												"src": "3885:48:6"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 893,
															"name": "newAdmin",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 881,
															"src": "3953:8:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 892,
														"name": "_setAdmin",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 878,
														"src": "3943:9:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 894,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3943:19:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 895,
												"nodeType": "ExpressionStatement",
												"src": "3943:19:6"
											}
										]
									},
									"documentation": {
										"id": 879,
										"nodeType": "StructuredDocumentation",
										"src": "3713:109:6",
										"text": " @dev Changes the admin of the proxy.\n Emits an {IERC1967-AdminChanged} event."
									},
									"id": 897,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "changeAdmin",
									"nameLocation": "3836:11:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 882,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 881,
												"mutability": "mutable",
												"name": "newAdmin",
												"nameLocation": "3856:8:6",
												"nodeType": "VariableDeclaration",
												"scope": 897,
												"src": "3848:16:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 880,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3848:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3847:18:6"
									},
									"returnParameters": {
										"id": 883,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3875:0:6"
									},
									"scope": 1015,
									"src": "3827:142:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"constant": true,
									"documentation": {
										"id": 898,
										"nodeType": "StructuredDocumentation",
										"src": "3975:201:6",
										"text": " @dev The storage slot of the UpgradeableBeacon contract which defines the implementation for this proxy.\n This is the keccak-256 hash of \"eip1967.proxy.beacon\" subtracted by 1."
									},
									"id": 901,
									"mutability": "constant",
									"name": "BEACON_SLOT",
									"nameLocation": "4272:11:6",
									"nodeType": "VariableDeclaration",
									"scope": 1015,
									"src": "4246:106:6",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes32",
										"typeString": "bytes32"
									},
									"typeName": {
										"id": 899,
										"name": "bytes32",
										"nodeType": "ElementaryTypeName",
										"src": "4246:7:6",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"value": {
										"hexValue": "307861336630616437346535343233616562666438306433656634333436353738333335613961373261656165653539666636636233353832623335313333643530",
										"id": 900,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "4286:66:6",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_74152234768234802001998023604048924213078445070507226371336425913862612794704_by_1",
											"typeString": "int_const 7415...(69 digits omitted)...4704"
										},
										"value": "0xa3f0ad74e5423aebfd80d3ef4346578335a9a72aeaee59ff6cb3582b35133d50"
									},
									"visibility": "internal"
								},
								{
									"body": {
										"id": 913,
										"nodeType": "Block",
										"src": "4468:69:6",
										"statements": [
											{
												"expression": {
													"expression": {
														"arguments": [
															{
																"id": 909,
																"name": "BEACON_SLOT",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 901,
																"src": "4512:11:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															],
															"expression": {
																"id": 907,
																"name": "StorageSlot",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1431,
																"src": "4485:11:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_StorageSlot_$1431_$",
																	"typeString": "type(library StorageSlot)"
																}
															},
															"id": 908,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "4497:14:6",
															"memberName": "getAddressSlot",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1342,
															"src": "4485:26:6",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_bytes32_$returns$_t_struct$_AddressSlot_$1313_storage_ptr_$",
																"typeString": "function (bytes32) pure returns (struct StorageSlot.AddressSlot storage pointer)"
															}
														},
														"id": 910,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "4485:39:6",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_AddressSlot_$1313_storage_ptr",
															"typeString": "struct StorageSlot.AddressSlot storage pointer"
														}
													},
													"id": 911,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "4525:5:6",
													"memberName": "value",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 1312,
													"src": "4485:45:6",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 906,
												"id": 912,
												"nodeType": "Return",
												"src": "4478:52:6"
											}
										]
									},
									"documentation": {
										"id": 902,
										"nodeType": "StructuredDocumentation",
										"src": "4359:51:6",
										"text": " @dev Returns the current beacon."
									},
									"id": 914,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getBeacon",
									"nameLocation": "4424:9:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 903,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4433:2:6"
									},
									"returnParameters": {
										"id": 906,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 905,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 914,
												"src": "4459:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 904,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4459:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4458:9:6"
									},
									"scope": 1015,
									"src": "4415:122:6",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 959,
										"nodeType": "Block",
										"src": "4667:390:6",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 924,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"expression": {
																"id": 920,
																"name": "newBeacon",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 917,
																"src": "4681:9:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 921,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "4691:4:6",
															"memberName": "code",
															"nodeType": "MemberAccess",
															"src": "4681:14:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 922,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "4696:6:6",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "4681:21:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 923,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "4706:1:6",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "4681:26:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 930,
												"nodeType": "IfStatement",
												"src": "4677:95:6",
												"trueBody": {
													"id": 929,
													"nodeType": "Block",
													"src": "4709:63:6",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"id": 926,
																		"name": "newBeacon",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 917,
																		"src": "4751:9:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 925,
																	"name": "ERC1967InvalidBeacon",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 751,
																	"src": "4730:20:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 927,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4730:31:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 928,
															"nodeType": "RevertStatement",
															"src": "4723:38:6"
														}
													]
												}
											},
											{
												"expression": {
													"id": 938,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"arguments": [
																{
																	"id": 934,
																	"name": "BEACON_SLOT",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 901,
																	"src": "4809:11:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																],
																"expression": {
																	"id": 931,
																	"name": "StorageSlot",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1431,
																	"src": "4782:11:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_contract$_StorageSlot_$1431_$",
																		"typeString": "type(library StorageSlot)"
																	}
																},
																"id": 933,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "4794:14:6",
																"memberName": "getAddressSlot",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 1342,
																"src": "4782:26:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_bytes32_$returns$_t_struct$_AddressSlot_$1313_storage_ptr_$",
																	"typeString": "function (bytes32) pure returns (struct StorageSlot.AddressSlot storage pointer)"
																}
															},
															"id": 935,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4782:39:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_AddressSlot_$1313_storage_ptr",
																"typeString": "struct StorageSlot.AddressSlot storage pointer"
															}
														},
														"id": 936,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "4822:5:6",
														"memberName": "value",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1312,
														"src": "4782:45:6",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 937,
														"name": "newBeacon",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 917,
														"src": "4830:9:6",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "4782:57:6",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 939,
												"nodeType": "ExpressionStatement",
												"src": "4782:57:6"
											},
											{
												"assignments": [
													941
												],
												"declarations": [
													{
														"constant": false,
														"id": 941,
														"mutability": "mutable",
														"name": "beaconImplementation",
														"nameLocation": "4858:20:6",
														"nodeType": "VariableDeclaration",
														"scope": 959,
														"src": "4850:28:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 940,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "4850:7:6",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 947,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"expression": {
															"arguments": [
																{
																	"id": 943,
																	"name": "newBeacon",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 917,
																	"src": "4889:9:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 942,
																"name": "IBeacon",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1025,
																"src": "4881:7:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_IBeacon_$1025_$",
																	"typeString": "type(contract IBeacon)"
																}
															},
															"id": 944,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4881:18:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IBeacon_$1025",
																"typeString": "contract IBeacon"
															}
														},
														"id": 945,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "4900:14:6",
														"memberName": "implementation",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1024,
														"src": "4881:33:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_view$__$returns$_t_address_$",
															"typeString": "function () view external returns (address)"
														}
													},
													"id": 946,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4881:35:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4850:66:6"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 952,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"expression": {
																"id": 948,
																"name": "beaconImplementation",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 941,
																"src": "4930:20:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 949,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "4951:4:6",
															"memberName": "code",
															"nodeType": "MemberAccess",
															"src": "4930:25:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 950,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "4956:6:6",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "4930:32:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 951,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "4966:1:6",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "4930:37:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 958,
												"nodeType": "IfStatement",
												"src": "4926:125:6",
												"trueBody": {
													"id": 957,
													"nodeType": "Block",
													"src": "4969:82:6",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"id": 954,
																		"name": "beaconImplementation",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 941,
																		"src": "5019:20:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 953,
																	"name": "ERC1967InvalidImplementation",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 741,
																	"src": "4990:28:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 955,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4990:50:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 956,
															"nodeType": "RevertStatement",
															"src": "4983:57:6"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 915,
										"nodeType": "StructuredDocumentation",
										"src": "4543:72:6",
										"text": " @dev Stores a new beacon in the ERC-1967 beacon slot."
									},
									"id": 960,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_setBeacon",
									"nameLocation": "4629:10:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 918,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 917,
												"mutability": "mutable",
												"name": "newBeacon",
												"nameLocation": "4648:9:6",
												"nodeType": "VariableDeclaration",
												"scope": 960,
												"src": "4640:17:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 916,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4640:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4639:19:6"
									},
									"returnParameters": {
										"id": 919,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4667:0:6"
									},
									"scope": 1015,
									"src": "4620:437:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 999,
										"nodeType": "Block",
										"src": "5661:263:6",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 969,
															"name": "newBeacon",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 963,
															"src": "5682:9:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 968,
														"name": "_setBeacon",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 960,
														"src": "5671:10:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 970,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5671:21:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 971,
												"nodeType": "ExpressionStatement",
												"src": "5671:21:6"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 975,
															"name": "newBeacon",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 963,
															"src": "5731:9:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"expression": {
															"id": 972,
															"name": "IERC1967",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 711,
															"src": "5707:8:6",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_IERC1967_$711_$",
																"typeString": "type(contract IERC1967)"
															}
														},
														"id": 974,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "5716:14:6",
														"memberName": "BeaconUpgraded",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 710,
														"src": "5707:23:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 976,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5707:34:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 977,
												"nodeType": "EmitStatement",
												"src": "5702:39:6"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 981,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 978,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 965,
															"src": "5756:4:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 979,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "5761:6:6",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "5756:11:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 980,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "5770:1:6",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "5756:15:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 997,
													"nodeType": "Block",
													"src": "5875:43:6",
													"statements": [
														{
															"expression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 994,
																	"name": "_checkNonPayable",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1014,
																	"src": "5889:16:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
																		"typeString": "function ()"
																	}
																},
																"id": 995,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5889:18:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 996,
															"nodeType": "ExpressionStatement",
															"src": "5889:18:6"
														}
													]
												},
												"id": 998,
												"nodeType": "IfStatement",
												"src": "5752:166:6",
												"trueBody": {
													"id": 993,
													"nodeType": "Block",
													"src": "5773:96:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"expression": {
																				"arguments": [
																					{
																						"id": 986,
																						"name": "newBeacon",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 963,
																						"src": "5824:9:6",
																						"typeDescriptions": {
																							"typeIdentifier": "t_address",
																							"typeString": "address"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_address",
																							"typeString": "address"
																						}
																					],
																					"id": 985,
																					"name": "IBeacon",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1025,
																					"src": "5816:7:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_type$_t_contract$_IBeacon_$1025_$",
																						"typeString": "type(contract IBeacon)"
																					}
																				},
																				"id": 987,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "typeConversion",
																				"lValueRequested": false,
																				"nameLocations": [],
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "5816:18:6",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_contract$_IBeacon_$1025",
																					"typeString": "contract IBeacon"
																				}
																			},
																			"id": 988,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "5835:14:6",
																			"memberName": "implementation",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 1024,
																			"src": "5816:33:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_external_view$__$returns$_t_address_$",
																				"typeString": "function () view external returns (address)"
																			}
																		},
																		"id": 989,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "5816:35:6",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 990,
																		"name": "data",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 965,
																		"src": "5853:4:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	],
																	"expression": {
																		"id": 982,
																		"name": "Address",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1285,
																		"src": "5787:7:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_contract$_Address_$1285_$",
																			"typeString": "type(library Address)"
																		}
																	},
																	"id": 984,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "5795:20:6",
																	"memberName": "functionDelegateCall",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1202,
																	"src": "5787:28:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$returns$_t_bytes_memory_ptr_$",
																		"typeString": "function (address,bytes memory) returns (bytes memory)"
																	}
																},
																"id": 991,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5787:71:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"id": 992,
															"nodeType": "ExpressionStatement",
															"src": "5787:71:6"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 961,
										"nodeType": "StructuredDocumentation",
										"src": "5063:514:6",
										"text": " @dev Change the beacon and trigger a setup call if data is nonempty.\n This function is payable only if the setup call is performed, otherwise `msg.value` is rejected\n to avoid stuck value in the contract.\n Emits an {IERC1967-BeaconUpgraded} event.\n CAUTION: Invoking this function has no effect on an instance of {BeaconProxy} since v5, since\n it uses an immutable beacon without looking at the value of the ERC-1967 beacon slot for\n efficiency."
									},
									"id": 1000,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "upgradeBeaconToAndCall",
									"nameLocation": "5591:22:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 966,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 963,
												"mutability": "mutable",
												"name": "newBeacon",
												"nameLocation": "5622:9:6",
												"nodeType": "VariableDeclaration",
												"scope": 1000,
												"src": "5614:17:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 962,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5614:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 965,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "5646:4:6",
												"nodeType": "VariableDeclaration",
												"scope": 1000,
												"src": "5633:17:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 964,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5633:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5613:38:6"
									},
									"returnParameters": {
										"id": 967,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5661:0:6"
									},
									"scope": 1015,
									"src": "5582:342:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1013,
										"nodeType": "Block",
										"src": "6149:86:6",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1007,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 1004,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967281,
															"src": "6163:3:6",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 1005,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "6167:5:6",
														"memberName": "value",
														"nodeType": "MemberAccess",
														"src": "6163:9:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 1006,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "6175:1:6",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "6163:13:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1012,
												"nodeType": "IfStatement",
												"src": "6159:70:6",
												"trueBody": {
													"id": 1011,
													"nodeType": "Block",
													"src": "6178:51:6",
													"statements": [
														{
															"errorCall": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 1008,
																	"name": "ERC1967NonPayable",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 754,
																	"src": "6199:17:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
																		"typeString": "function () pure returns (error)"
																	}
																},
																"id": 1009,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "6199:19:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 1010,
															"nodeType": "RevertStatement",
															"src": "6192:26:6"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 1001,
										"nodeType": "StructuredDocumentation",
										"src": "5930:178:6",
										"text": " @dev Reverts if `msg.value` is not zero. It can be used to avoid `msg.value` stuck in the contract\n if an upgrade doesn't perform an initialization call."
									},
									"id": 1014,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_checkNonPayable",
									"nameLocation": "6122:16:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1002,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6138:2:6"
									},
									"returnParameters": {
										"id": 1003,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6149:0:6"
									},
									"scope": 1015,
									"src": "6113:122:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								}
							],
							"scope": 1016,
							"src": "496:5741:6",
							"usedErrors": [
								741,
								746,
								751,
								754
							],
							"usedEvents": []
						}
					],
					"src": "114:6124:6"
				},
				"id": 6
			},
			"@openzeppelin/contracts/proxy/beacon/IBeacon.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/proxy/beacon/IBeacon.sol",
					"exportedSymbols": {
						"IBeacon": [
							1025
						]
					},
					"id": 1026,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1017,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "108:24:7"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IBeacon",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 1018,
								"nodeType": "StructuredDocumentation",
								"src": "134:79:7",
								"text": " @dev This is the interface that {BeaconProxy} expects of its beacon."
							},
							"fullyImplemented": false,
							"id": 1025,
							"linearizedBaseContracts": [
								1025
							],
							"name": "IBeacon",
							"nameLocation": "224:7:7",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 1019,
										"nodeType": "StructuredDocumentation",
										"src": "238:168:7",
										"text": " @dev Must return an address that can be used as a delegate call target.\n {UpgradeableBeacon} will check that this address is a contract."
									},
									"functionSelector": "5c60da1b",
									"id": 1024,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "implementation",
									"nameLocation": "420:14:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1020,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "434:2:7"
									},
									"returnParameters": {
										"id": 1023,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1022,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1024,
												"src": "460:7:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1021,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "460:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "459:9:7"
									},
									"scope": 1025,
									"src": "411:58:7",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1026,
							"src": "214:257:7",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "108:364:7"
				},
				"id": 7
			},
			"@openzeppelin/contracts/utils/Address.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/Address.sol",
					"exportedSymbols": {
						"Address": [
							1285
						],
						"Errors": [
							1307
						]
					},
					"id": 1286,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1027,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "101:24:8"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Errors.sol",
							"file": "./Errors.sol",
							"id": 1029,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1286,
							"sourceUnit": 1308,
							"src": "127:36:8",
							"symbolAliases": [
								{
									"foreign": {
										"id": 1028,
										"name": "Errors",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1307,
										"src": "135:6:8",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "Address",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 1030,
								"nodeType": "StructuredDocumentation",
								"src": "165:67:8",
								"text": " @dev Collection of functions related to the address type"
							},
							"fullyImplemented": true,
							"id": 1285,
							"linearizedBaseContracts": [
								1285
							],
							"name": "Address",
							"nameLocation": "241:7:8",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 1031,
										"nodeType": "StructuredDocumentation",
										"src": "255:75:8",
										"text": " @dev There's no code at `target` (it is not a contract)."
									},
									"errorSelector": "9996b315",
									"id": 1035,
									"name": "AddressEmptyCode",
									"nameLocation": "341:16:8",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1034,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1033,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "366:6:8",
												"nodeType": "VariableDeclaration",
												"scope": 1035,
												"src": "358:14:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1032,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "358:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "357:16:8"
									},
									"src": "335:39:8"
								},
								{
									"body": {
										"id": 1082,
										"nodeType": "Block",
										"src": "1361:294:8",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1049,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 1045,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "1383:4:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_Address_$1285",
																		"typeString": "library Address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_Address_$1285",
																		"typeString": "library Address"
																	}
																],
																"id": 1044,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "1375:7:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1043,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "1375:7:8",
																	"typeDescriptions": {}
																}
															},
															"id": 1046,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1375:13:8",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 1047,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1389:7:8",
														"memberName": "balance",
														"nodeType": "MemberAccess",
														"src": "1375:21:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"id": 1048,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1040,
														"src": "1399:6:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1375:30:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1062,
												"nodeType": "IfStatement",
												"src": "1371:125:8",
												"trueBody": {
													"id": 1061,
													"nodeType": "Block",
													"src": "1407:89:8",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"id": 1055,
																					"name": "this",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 4294967268,
																					"src": "1463:4:8",
																					"typeDescriptions": {
																						"typeIdentifier": "t_contract$_Address_$1285",
																						"typeString": "library Address"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_contract$_Address_$1285",
																						"typeString": "library Address"
																					}
																				],
																				"id": 1054,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "ElementaryTypeNameExpression",
																				"src": "1455:7:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_address_$",
																					"typeString": "type(address)"
																				},
																				"typeName": {
																					"id": 1053,
																					"name": "address",
																					"nodeType": "ElementaryTypeName",
																					"src": "1455:7:8",
																					"typeDescriptions": {}
																				}
																			},
																			"id": 1056,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "typeConversion",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "1455:13:8",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"id": 1057,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "1469:7:8",
																		"memberName": "balance",
																		"nodeType": "MemberAccess",
																		"src": "1455:21:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	{
																		"id": 1058,
																		"name": "amount",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1040,
																		"src": "1478:6:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"id": 1050,
																		"name": "Errors",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1307,
																		"src": "1428:6:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_contract$_Errors_$1307_$",
																			"typeString": "type(library Errors)"
																		}
																	},
																	"id": 1052,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "1435:19:8",
																	"memberName": "InsufficientBalance",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1295,
																	"src": "1428:26:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint256_$_t_uint256_$returns$_t_error_$",
																		"typeString": "function (uint256,uint256) pure returns (error)"
																	}
																},
																"id": 1059,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1428:57:8",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 1060,
															"nodeType": "RevertStatement",
															"src": "1421:64:8"
														}
													]
												}
											},
											{
												"assignments": [
													1064,
													1066
												],
												"declarations": [
													{
														"constant": false,
														"id": 1064,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "1512:7:8",
														"nodeType": "VariableDeclaration",
														"scope": 1082,
														"src": "1507:12:8",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 1063,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "1507:4:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 1066,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "1534:10:8",
														"nodeType": "VariableDeclaration",
														"scope": 1082,
														"src": "1521:23:8",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 1065,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "1521:5:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1073,
												"initialValue": {
													"arguments": [
														{
															"hexValue": "",
															"id": 1071,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1578:2:8",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															},
															"value": ""
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																	"typeString": "literal_string \"\""
																}
															],
															"expression": {
																"id": 1067,
																"name": "recipient",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1038,
																"src": "1548:9:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"id": 1068,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1558:4:8",
															"memberName": "call",
															"nodeType": "MemberAccess",
															"src": "1548:14:8",
															"typeDescriptions": {
																"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
																"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
															}
														},
														"id": 1070,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"names": [
															"value"
														],
														"nodeType": "FunctionCallOptions",
														"options": [
															{
																"id": 1069,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1040,
																"src": "1570:6:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"src": "1548:29:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 1072,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1548:33:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1506:75:8"
											},
											{
												"condition": {
													"id": 1075,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "1595:8:8",
													"subExpression": {
														"id": 1074,
														"name": "success",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1064,
														"src": "1596:7:8",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1081,
												"nodeType": "IfStatement",
												"src": "1591:58:8",
												"trueBody": {
													"id": 1080,
													"nodeType": "Block",
													"src": "1605:44:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 1077,
																		"name": "returndata",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1066,
																		"src": "1627:10:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	],
																	"id": 1076,
																	"name": "_revert",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1284,
																	"src": "1619:7:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_bytes_memory_ptr_$returns$__$",
																		"typeString": "function (bytes memory) pure"
																	}
																},
																"id": 1078,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1619:19:8",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1079,
															"nodeType": "ExpressionStatement",
															"src": "1619:19:8"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 1036,
										"nodeType": "StructuredDocumentation",
										"src": "380:905:8",
										"text": " @dev Replacement for Solidity's `transfer`: sends `amount` wei to\n `recipient`, forwarding all available gas and reverting on errors.\n https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\n of certain opcodes, possibly making contracts go over the 2300 gas limit\n imposed by `transfer`, making them unable to receive funds via\n `transfer`. {sendValue} removes this limitation.\n https://consensys.net/diligence/blog/2019/09/stop-using-soliditys-transfer-now/[Learn more].\n IMPORTANT: because control is transferred to `recipient`, care must be\n taken to not create reentrancy vulnerabilities. Consider using\n {ReentrancyGuard} or the\n https://solidity.readthedocs.io/en/v0.8.20/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern]."
									},
									"id": 1083,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sendValue",
									"nameLocation": "1299:9:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1041,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1038,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "1325:9:8",
												"nodeType": "VariableDeclaration",
												"scope": 1083,
												"src": "1309:25:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address_payable",
													"typeString": "address payable"
												},
												"typeName": {
													"id": 1037,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1309:15:8",
													"stateMutability": "payable",
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1040,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "1344:6:8",
												"nodeType": "VariableDeclaration",
												"scope": 1083,
												"src": "1336:14:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1039,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1336:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1308:43:8"
									},
									"returnParameters": {
										"id": 1042,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1361:0:8"
									},
									"scope": 1285,
									"src": "1290:365:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1099,
										"nodeType": "Block",
										"src": "2589:62:8",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1094,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1086,
															"src": "2628:6:8",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1095,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1088,
															"src": "2636:4:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "30",
															"id": 1096,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2642:1:8",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															}
														],
														"id": 1093,
														"name": "functionCallWithValue",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1150,
														"src": "2606:21:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,uint256) returns (bytes memory)"
														}
													},
													"id": 1097,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2606:38:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 1092,
												"id": 1098,
												"nodeType": "Return",
												"src": "2599:45:8"
											}
										]
									},
									"documentation": {
										"id": 1084,
										"nodeType": "StructuredDocumentation",
										"src": "1661:834:8",
										"text": " @dev Performs a Solidity function call using a low level `call`. A\n plain `call` is an unsafe replacement for a function call: use this\n function instead.\n If `target` reverts with a revert reason or custom error, it is bubbled\n up by this function (like regular Solidity function calls). However, if\n the call reverted with no returned reason, this function reverts with a\n {Errors.FailedCall} error.\n Returns the raw returned data. To convert to the expected return value,\n use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\n Requirements:\n - `target` must be a contract.\n - calling `target` with `data` must not revert."
									},
									"id": 1100,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCall",
									"nameLocation": "2509:12:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1089,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1086,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "2530:6:8",
												"nodeType": "VariableDeclaration",
												"scope": 1100,
												"src": "2522:14:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1085,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2522:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1088,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "2551:4:8",
												"nodeType": "VariableDeclaration",
												"scope": 1100,
												"src": "2538:17:8",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1087,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "2538:5:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2521:35:8"
									},
									"returnParameters": {
										"id": 1092,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1091,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1100,
												"src": "2575:12:8",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1090,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "2575:5:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2574:14:8"
									},
									"scope": 1285,
									"src": "2500:151:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1149,
										"nodeType": "Block",
										"src": "3088:294:8",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1118,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 1114,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "3110:4:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_Address_$1285",
																		"typeString": "library Address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_Address_$1285",
																		"typeString": "library Address"
																	}
																],
																"id": 1113,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "3102:7:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1112,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "3102:7:8",
																	"typeDescriptions": {}
																}
															},
															"id": 1115,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3102:13:8",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 1116,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "3116:7:8",
														"memberName": "balance",
														"nodeType": "MemberAccess",
														"src": "3102:21:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"id": 1117,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1107,
														"src": "3126:5:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3102:29:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1131,
												"nodeType": "IfStatement",
												"src": "3098:123:8",
												"trueBody": {
													"id": 1130,
													"nodeType": "Block",
													"src": "3133:88:8",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"id": 1124,
																					"name": "this",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 4294967268,
																					"src": "3189:4:8",
																					"typeDescriptions": {
																						"typeIdentifier": "t_contract$_Address_$1285",
																						"typeString": "library Address"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_contract$_Address_$1285",
																						"typeString": "library Address"
																					}
																				],
																				"id": 1123,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "ElementaryTypeNameExpression",
																				"src": "3181:7:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_address_$",
																					"typeString": "type(address)"
																				},
																				"typeName": {
																					"id": 1122,
																					"name": "address",
																					"nodeType": "ElementaryTypeName",
																					"src": "3181:7:8",
																					"typeDescriptions": {}
																				}
																			},
																			"id": 1125,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "typeConversion",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "3181:13:8",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"id": 1126,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "3195:7:8",
																		"memberName": "balance",
																		"nodeType": "MemberAccess",
																		"src": "3181:21:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	{
																		"id": 1127,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1107,
																		"src": "3204:5:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"id": 1119,
																		"name": "Errors",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1307,
																		"src": "3154:6:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_contract$_Errors_$1307_$",
																			"typeString": "type(library Errors)"
																		}
																	},
																	"id": 1121,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "3161:19:8",
																	"memberName": "InsufficientBalance",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1295,
																	"src": "3154:26:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint256_$_t_uint256_$returns$_t_error_$",
																		"typeString": "function (uint256,uint256) pure returns (error)"
																	}
																},
																"id": 1128,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3154:56:8",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 1129,
															"nodeType": "RevertStatement",
															"src": "3147:63:8"
														}
													]
												}
											},
											{
												"assignments": [
													1133,
													1135
												],
												"declarations": [
													{
														"constant": false,
														"id": 1133,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "3236:7:8",
														"nodeType": "VariableDeclaration",
														"scope": 1149,
														"src": "3231:12:8",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 1132,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "3231:4:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 1135,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "3258:10:8",
														"nodeType": "VariableDeclaration",
														"scope": 1149,
														"src": "3245:23:8",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 1134,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "3245:5:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1142,
												"initialValue": {
													"arguments": [
														{
															"id": 1140,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1105,
															"src": "3298:4:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															],
															"expression": {
																"id": 1136,
																"name": "target",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1103,
																"src": "3272:6:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 1137,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "3279:4:8",
															"memberName": "call",
															"nodeType": "MemberAccess",
															"src": "3272:11:8",
															"typeDescriptions": {
																"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
																"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
															}
														},
														"id": 1139,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"names": [
															"value"
														],
														"nodeType": "FunctionCallOptions",
														"options": [
															{
																"id": 1138,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1107,
																"src": "3291:5:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"src": "3272:25:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 1141,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3272:31:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3230:73:8"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1144,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1103,
															"src": "3347:6:8",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1145,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1133,
															"src": "3355:7:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 1146,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1135,
															"src": "3364:10:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 1143,
														"name": "verifyCallResultFromTarget",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1242,
														"src": "3320:26:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_bool_$_t_bytes_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bool,bytes memory) view returns (bytes memory)"
														}
													},
													"id": 1147,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3320:55:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 1111,
												"id": 1148,
												"nodeType": "Return",
												"src": "3313:62:8"
											}
										]
									},
									"documentation": {
										"id": 1101,
										"nodeType": "StructuredDocumentation",
										"src": "2657:313:8",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but also transferring `value` wei to `target`.\n Requirements:\n - the calling contract must have an ETH balance of at least `value`.\n - the called Solidity function must be `payable`."
									},
									"id": 1150,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCallWithValue",
									"nameLocation": "2984:21:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1108,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1103,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "3014:6:8",
												"nodeType": "VariableDeclaration",
												"scope": 1150,
												"src": "3006:14:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1102,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3006:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1105,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "3035:4:8",
												"nodeType": "VariableDeclaration",
												"scope": 1150,
												"src": "3022:17:8",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1104,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3022:5:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1107,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "3049:5:8",
												"nodeType": "VariableDeclaration",
												"scope": 1150,
												"src": "3041:13:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1106,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3041:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3005:50:8"
									},
									"returnParameters": {
										"id": 1111,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1110,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1150,
												"src": "3074:12:8",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1109,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3074:5:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3073:14:8"
									},
									"scope": 1285,
									"src": "2975:407:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1175,
										"nodeType": "Block",
										"src": "3621:154:8",
										"statements": [
											{
												"assignments": [
													1161,
													1163
												],
												"declarations": [
													{
														"constant": false,
														"id": 1161,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "3637:7:8",
														"nodeType": "VariableDeclaration",
														"scope": 1175,
														"src": "3632:12:8",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 1160,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "3632:4:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 1163,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "3659:10:8",
														"nodeType": "VariableDeclaration",
														"scope": 1175,
														"src": "3646:23:8",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 1162,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "3646:5:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1168,
												"initialValue": {
													"arguments": [
														{
															"id": 1166,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1155,
															"src": "3691:4:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"id": 1164,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1153,
															"src": "3673:6:8",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 1165,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "3680:10:8",
														"memberName": "staticcall",
														"nodeType": "MemberAccess",
														"src": "3673:17:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barestaticcall_view$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
															"typeString": "function (bytes memory) view returns (bool,bytes memory)"
														}
													},
													"id": 1167,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3673:23:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3631:65:8"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1170,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1153,
															"src": "3740:6:8",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1171,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1161,
															"src": "3748:7:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 1172,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1163,
															"src": "3757:10:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 1169,
														"name": "verifyCallResultFromTarget",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1242,
														"src": "3713:26:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_bool_$_t_bytes_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bool,bytes memory) view returns (bytes memory)"
														}
													},
													"id": 1173,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3713:55:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 1159,
												"id": 1174,
												"nodeType": "Return",
												"src": "3706:62:8"
											}
										]
									},
									"documentation": {
										"id": 1151,
										"nodeType": "StructuredDocumentation",
										"src": "3388:128:8",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but performing a static call."
									},
									"id": 1176,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionStaticCall",
									"nameLocation": "3530:18:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1156,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1153,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "3557:6:8",
												"nodeType": "VariableDeclaration",
												"scope": 1176,
												"src": "3549:14:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1152,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3549:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1155,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "3578:4:8",
												"nodeType": "VariableDeclaration",
												"scope": 1176,
												"src": "3565:17:8",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1154,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3565:5:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3548:35:8"
									},
									"returnParameters": {
										"id": 1159,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1158,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1176,
												"src": "3607:12:8",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1157,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3607:5:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3606:14:8"
									},
									"scope": 1285,
									"src": "3521:254:8",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1201,
										"nodeType": "Block",
										"src": "4013:156:8",
										"statements": [
											{
												"assignments": [
													1187,
													1189
												],
												"declarations": [
													{
														"constant": false,
														"id": 1187,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "4029:7:8",
														"nodeType": "VariableDeclaration",
														"scope": 1201,
														"src": "4024:12:8",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 1186,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "4024:4:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 1189,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "4051:10:8",
														"nodeType": "VariableDeclaration",
														"scope": 1201,
														"src": "4038:23:8",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 1188,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "4038:5:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1194,
												"initialValue": {
													"arguments": [
														{
															"id": 1192,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1181,
															"src": "4085:4:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"id": 1190,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1179,
															"src": "4065:6:8",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 1191,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "4072:12:8",
														"memberName": "delegatecall",
														"nodeType": "MemberAccess",
														"src": "4065:19:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_baredelegatecall_nonpayable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
															"typeString": "function (bytes memory) returns (bool,bytes memory)"
														}
													},
													"id": 1193,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4065:25:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4023:67:8"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1196,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1179,
															"src": "4134:6:8",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1197,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1187,
															"src": "4142:7:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 1198,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1189,
															"src": "4151:10:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 1195,
														"name": "verifyCallResultFromTarget",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1242,
														"src": "4107:26:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_bool_$_t_bytes_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bool,bytes memory) view returns (bytes memory)"
														}
													},
													"id": 1199,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4107:55:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 1185,
												"id": 1200,
												"nodeType": "Return",
												"src": "4100:62:8"
											}
										]
									},
									"documentation": {
										"id": 1177,
										"nodeType": "StructuredDocumentation",
										"src": "3781:130:8",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but performing a delegate call."
									},
									"id": 1202,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionDelegateCall",
									"nameLocation": "3925:20:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1182,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1179,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "3954:6:8",
												"nodeType": "VariableDeclaration",
												"scope": 1202,
												"src": "3946:14:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1178,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3946:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1181,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "3975:4:8",
												"nodeType": "VariableDeclaration",
												"scope": 1202,
												"src": "3962:17:8",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1180,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3962:5:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3945:35:8"
									},
									"returnParameters": {
										"id": 1185,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1184,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1202,
												"src": "3999:12:8",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1183,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3999:5:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3998:14:8"
									},
									"scope": 1285,
									"src": "3916:253:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1241,
										"nodeType": "Block",
										"src": "4595:424:8",
										"statements": [
											{
												"condition": {
													"id": 1215,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "4609:8:8",
													"subExpression": {
														"id": 1214,
														"name": "success",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1207,
														"src": "4610:7:8",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 1239,
													"nodeType": "Block",
													"src": "4669:344:8",
													"statements": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"id": 1230,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1224,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"expression": {
																			"id": 1221,
																			"name": "returndata",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1209,
																			"src": "4857:10:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bytes_memory_ptr",
																				"typeString": "bytes memory"
																			}
																		},
																		"id": 1222,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "4868:6:8",
																		"memberName": "length",
																		"nodeType": "MemberAccess",
																		"src": "4857:17:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "==",
																	"rightExpression": {
																		"hexValue": "30",
																		"id": 1223,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "4878:1:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	},
																	"src": "4857:22:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "&&",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1229,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"expression": {
																			"expression": {
																				"id": 1225,
																				"name": "target",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1205,
																				"src": "4883:6:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"id": 1226,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "4890:4:8",
																			"memberName": "code",
																			"nodeType": "MemberAccess",
																			"src": "4883:11:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bytes_memory_ptr",
																				"typeString": "bytes memory"
																			}
																		},
																		"id": 1227,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "4895:6:8",
																		"memberName": "length",
																		"nodeType": "MemberAccess",
																		"src": "4883:18:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "==",
																	"rightExpression": {
																		"hexValue": "30",
																		"id": 1228,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "4905:1:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	},
																	"src": "4883:23:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"src": "4857:49:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 1236,
															"nodeType": "IfStatement",
															"src": "4853:119:8",
															"trueBody": {
																"id": 1235,
																"nodeType": "Block",
																"src": "4908:64:8",
																"statements": [
																	{
																		"errorCall": {
																			"arguments": [
																				{
																					"id": 1232,
																					"name": "target",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1205,
																					"src": "4950:6:8",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				],
																				"id": 1231,
																				"name": "AddressEmptyCode",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1035,
																				"src": "4933:16:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																					"typeString": "function (address) pure returns (error)"
																				}
																			},
																			"id": 1233,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "4933:24:8",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_error",
																				"typeString": "error"
																			}
																		},
																		"id": 1234,
																		"nodeType": "RevertStatement",
																		"src": "4926:31:8"
																	}
																]
															}
														},
														{
															"expression": {
																"id": 1237,
																"name": "returndata",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1209,
																"src": "4992:10:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"functionReturnParameters": 1213,
															"id": 1238,
															"nodeType": "Return",
															"src": "4985:17:8"
														}
													]
												},
												"id": 1240,
												"nodeType": "IfStatement",
												"src": "4605:408:8",
												"trueBody": {
													"id": 1220,
													"nodeType": "Block",
													"src": "4619:44:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 1217,
																		"name": "returndata",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1209,
																		"src": "4641:10:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	],
																	"id": 1216,
																	"name": "_revert",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1284,
																	"src": "4633:7:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_bytes_memory_ptr_$returns$__$",
																		"typeString": "function (bytes memory) pure"
																	}
																},
																"id": 1218,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4633:19:8",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1219,
															"nodeType": "ExpressionStatement",
															"src": "4633:19:8"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 1203,
										"nodeType": "StructuredDocumentation",
										"src": "4175:257:8",
										"text": " @dev Tool to verify that a low level call to smart-contract was successful, and reverts if the target\n was not a contract or bubbling up the revert reason (falling back to {Errors.FailedCall}) in case\n of an unsuccessful call."
									},
									"id": 1242,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "verifyCallResultFromTarget",
									"nameLocation": "4446:26:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1210,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1205,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "4490:6:8",
												"nodeType": "VariableDeclaration",
												"scope": 1242,
												"src": "4482:14:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1204,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4482:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1207,
												"mutability": "mutable",
												"name": "success",
												"nameLocation": "4511:7:8",
												"nodeType": "VariableDeclaration",
												"scope": 1242,
												"src": "4506:12:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1206,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4506:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1209,
												"mutability": "mutable",
												"name": "returndata",
												"nameLocation": "4541:10:8",
												"nodeType": "VariableDeclaration",
												"scope": 1242,
												"src": "4528:23:8",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1208,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4528:5:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4472:85:8"
									},
									"returnParameters": {
										"id": 1213,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1212,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1242,
												"src": "4581:12:8",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1211,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4581:5:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4580:14:8"
									},
									"scope": 1285,
									"src": "4437:582:8",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1263,
										"nodeType": "Block",
										"src": "5323:122:8",
										"statements": [
											{
												"condition": {
													"id": 1253,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "5337:8:8",
													"subExpression": {
														"id": 1252,
														"name": "success",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1245,
														"src": "5338:7:8",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 1261,
													"nodeType": "Block",
													"src": "5397:42:8",
													"statements": [
														{
															"expression": {
																"id": 1259,
																"name": "returndata",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1247,
																"src": "5418:10:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"functionReturnParameters": 1251,
															"id": 1260,
															"nodeType": "Return",
															"src": "5411:17:8"
														}
													]
												},
												"id": 1262,
												"nodeType": "IfStatement",
												"src": "5333:106:8",
												"trueBody": {
													"id": 1258,
													"nodeType": "Block",
													"src": "5347:44:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 1255,
																		"name": "returndata",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1247,
																		"src": "5369:10:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	],
																	"id": 1254,
																	"name": "_revert",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1284,
																	"src": "5361:7:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_bytes_memory_ptr_$returns$__$",
																		"typeString": "function (bytes memory) pure"
																	}
																},
																"id": 1256,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5361:19:8",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1257,
															"nodeType": "ExpressionStatement",
															"src": "5361:19:8"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 1243,
										"nodeType": "StructuredDocumentation",
										"src": "5025:191:8",
										"text": " @dev Tool to verify that a low level call was successful, and reverts if it wasn't, either by bubbling the\n revert reason or with a default {Errors.FailedCall} error."
									},
									"id": 1264,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "verifyCallResult",
									"nameLocation": "5230:16:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1248,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1245,
												"mutability": "mutable",
												"name": "success",
												"nameLocation": "5252:7:8",
												"nodeType": "VariableDeclaration",
												"scope": 1264,
												"src": "5247:12:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1244,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "5247:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1247,
												"mutability": "mutable",
												"name": "returndata",
												"nameLocation": "5274:10:8",
												"nodeType": "VariableDeclaration",
												"scope": 1264,
												"src": "5261:23:8",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1246,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5261:5:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5246:39:8"
									},
									"returnParameters": {
										"id": 1251,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1250,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1264,
												"src": "5309:12:8",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1249,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5309:5:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5308:14:8"
									},
									"scope": 1285,
									"src": "5221:224:8",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1283,
										"nodeType": "Block",
										"src": "5614:432:8",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1273,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 1270,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1267,
															"src": "5690:10:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 1271,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "5701:6:8",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "5690:17:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 1272,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "5710:1:8",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "5690:21:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 1281,
													"nodeType": "Block",
													"src": "5989:51:8",
													"statements": [
														{
															"errorCall": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"expression": {
																		"id": 1276,
																		"name": "Errors",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1307,
																		"src": "6010:6:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_contract$_Errors_$1307_$",
																			"typeString": "type(library Errors)"
																		}
																	},
																	"id": 1278,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "6017:10:8",
																	"memberName": "FailedCall",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1298,
																	"src": "6010:17:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
																		"typeString": "function () pure returns (error)"
																	}
																},
																"id": 1279,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "6010:19:8",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 1280,
															"nodeType": "RevertStatement",
															"src": "6003:26:8"
														}
													]
												},
												"id": 1282,
												"nodeType": "IfStatement",
												"src": "5686:354:8",
												"trueBody": {
													"id": 1275,
													"nodeType": "Block",
													"src": "5713:270:8",
													"statements": [
														{
															"AST": {
																"nativeSrc": "5840:133:8",
																"nodeType": "YulBlock",
																"src": "5840:133:8",
																"statements": [
																	{
																		"nativeSrc": "5858:40:8",
																		"nodeType": "YulVariableDeclaration",
																		"src": "5858:40:8",
																		"value": {
																			"arguments": [
																				{
																					"name": "returndata",
																					"nativeSrc": "5887:10:8",
																					"nodeType": "YulIdentifier",
																					"src": "5887:10:8"
																				}
																			],
																			"functionName": {
																				"name": "mload",
																				"nativeSrc": "5881:5:8",
																				"nodeType": "YulIdentifier",
																				"src": "5881:5:8"
																			},
																			"nativeSrc": "5881:17:8",
																			"nodeType": "YulFunctionCall",
																			"src": "5881:17:8"
																		},
																		"variables": [
																			{
																				"name": "returndata_size",
																				"nativeSrc": "5862:15:8",
																				"nodeType": "YulTypedName",
																				"src": "5862:15:8",
																				"type": ""
																			}
																		]
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nativeSrc": "5926:2:8",
																							"nodeType": "YulLiteral",
																							"src": "5926:2:8",
																							"type": "",
																							"value": "32"
																						},
																						{
																							"name": "returndata",
																							"nativeSrc": "5930:10:8",
																							"nodeType": "YulIdentifier",
																							"src": "5930:10:8"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nativeSrc": "5922:3:8",
																						"nodeType": "YulIdentifier",
																						"src": "5922:3:8"
																					},
																					"nativeSrc": "5922:19:8",
																					"nodeType": "YulFunctionCall",
																					"src": "5922:19:8"
																				},
																				{
																					"name": "returndata_size",
																					"nativeSrc": "5943:15:8",
																					"nodeType": "YulIdentifier",
																					"src": "5943:15:8"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "5915:6:8",
																				"nodeType": "YulIdentifier",
																				"src": "5915:6:8"
																			},
																			"nativeSrc": "5915:44:8",
																			"nodeType": "YulFunctionCall",
																			"src": "5915:44:8"
																		},
																		"nativeSrc": "5915:44:8",
																		"nodeType": "YulExpressionStatement",
																		"src": "5915:44:8"
																	}
																]
															},
															"evmVersion": "prague",
															"externalReferences": [
																{
																	"declaration": 1267,
																	"isOffset": false,
																	"isSlot": false,
																	"src": "5887:10:8",
																	"valueSize": 1
																},
																{
																	"declaration": 1267,
																	"isOffset": false,
																	"isSlot": false,
																	"src": "5930:10:8",
																	"valueSize": 1
																}
															],
															"flags": [
																"memory-safe"
															],
															"id": 1274,
															"nodeType": "InlineAssembly",
															"src": "5815:158:8"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 1265,
										"nodeType": "StructuredDocumentation",
										"src": "5451:103:8",
										"text": " @dev Reverts with returndata if present. Otherwise reverts with {Errors.FailedCall}."
									},
									"id": 1284,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_revert",
									"nameLocation": "5568:7:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1268,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1267,
												"mutability": "mutable",
												"name": "returndata",
												"nameLocation": "5589:10:8",
												"nodeType": "VariableDeclaration",
												"scope": 1284,
												"src": "5576:23:8",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1266,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5576:5:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5575:25:8"
									},
									"returnParameters": {
										"id": 1269,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5614:0:8"
									},
									"scope": 1285,
									"src": "5559:487:8",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "private"
								}
							],
							"scope": 1286,
							"src": "233:5815:8",
							"usedErrors": [
								1035
							],
							"usedEvents": []
						}
					],
					"src": "101:5948:8"
				},
				"id": 8
			},
			"@openzeppelin/contracts/utils/Errors.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/Errors.sol",
					"exportedSymbols": {
						"Errors": [
							1307
						]
					},
					"id": 1308,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1287,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "100:24:9"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "Errors",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 1288,
								"nodeType": "StructuredDocumentation",
								"src": "126:284:9",
								"text": " @dev Collection of common custom errors used in multiple contracts\n IMPORTANT: Backwards compatibility is not guaranteed in future versions of the library.\n It is recommended to avoid relying on the error API for critical functionality.\n _Available since v5.1._"
							},
							"fullyImplemented": true,
							"id": 1307,
							"linearizedBaseContracts": [
								1307
							],
							"name": "Errors",
							"nameLocation": "419:6:9",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 1289,
										"nodeType": "StructuredDocumentation",
										"src": "432:94:9",
										"text": " @dev The ETH balance of the account is not enough to perform the operation."
									},
									"errorSelector": "cf479181",
									"id": 1295,
									"name": "InsufficientBalance",
									"nameLocation": "537:19:9",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1294,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1291,
												"mutability": "mutable",
												"name": "balance",
												"nameLocation": "565:7:9",
												"nodeType": "VariableDeclaration",
												"scope": 1295,
												"src": "557:15:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1290,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "557:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1293,
												"mutability": "mutable",
												"name": "needed",
												"nameLocation": "582:6:9",
												"nodeType": "VariableDeclaration",
												"scope": 1295,
												"src": "574:14:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1292,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "574:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "556:33:9"
									},
									"src": "531:59:9"
								},
								{
									"documentation": {
										"id": 1296,
										"nodeType": "StructuredDocumentation",
										"src": "596:89:9",
										"text": " @dev A call to an address target failed. The target may have reverted."
									},
									"errorSelector": "d6bda275",
									"id": 1298,
									"name": "FailedCall",
									"nameLocation": "696:10:9",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1297,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "706:2:9"
									},
									"src": "690:19:9"
								},
								{
									"documentation": {
										"id": 1299,
										"nodeType": "StructuredDocumentation",
										"src": "715:46:9",
										"text": " @dev The deployment failed."
									},
									"errorSelector": "b06ebf3d",
									"id": 1301,
									"name": "FailedDeployment",
									"nameLocation": "772:16:9",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1300,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "788:2:9"
									},
									"src": "766:25:9"
								},
								{
									"documentation": {
										"id": 1302,
										"nodeType": "StructuredDocumentation",
										"src": "797:58:9",
										"text": " @dev A necessary precompile is missing."
									},
									"errorSelector": "42b01bce",
									"id": 1306,
									"name": "MissingPrecompile",
									"nameLocation": "866:17:9",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1305,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1304,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1306,
												"src": "884:7:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1303,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "884:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "883:9:9"
									},
									"src": "860:33:9"
								}
							],
							"scope": 1308,
							"src": "411:484:9",
							"usedErrors": [
								1295,
								1298,
								1301,
								1306
							],
							"usedEvents": []
						}
					],
					"src": "100:796:9"
				},
				"id": 9
			},
			"@openzeppelin/contracts/utils/StorageSlot.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/StorageSlot.sol",
					"exportedSymbols": {
						"StorageSlot": [
							1431
						]
					},
					"id": 1432,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1309,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "193:24:10"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "StorageSlot",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 1310,
								"nodeType": "StructuredDocumentation",
								"src": "219:1187:10",
								"text": " @dev Library for reading and writing primitive types to specific storage slots.\n Storage slots are often used to avoid storage conflict when dealing with upgradeable contracts.\n This library helps with reading and writing to such slots without the need for inline assembly.\n The functions in this library return Slot structs that contain a `value` member that can be used to read or write.\n Example usage to set ERC-1967 implementation slot:\n ```solidity\n contract ERC1967 {\n     // Define the slot. Alternatively, use the SlotDerivation library to derive the slot.\n     bytes32 internal constant _IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc;\n     function _getImplementation() internal view returns (address) {\n         return StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value;\n     }\n     function _setImplementation(address newImplementation) internal {\n         require(newImplementation.code.length > 0);\n         StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value = newImplementation;\n     }\n }\n ```\n TIP: Consider using this library along with {SlotDerivation}."
							},
							"fullyImplemented": true,
							"id": 1431,
							"linearizedBaseContracts": [
								1431
							],
							"name": "StorageSlot",
							"nameLocation": "1415:11:10",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"canonicalName": "StorageSlot.AddressSlot",
									"id": 1313,
									"members": [
										{
											"constant": false,
											"id": 1312,
											"mutability": "mutable",
											"name": "value",
											"nameLocation": "1470:5:10",
											"nodeType": "VariableDeclaration",
											"scope": 1313,
											"src": "1462:13:10",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 1311,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "1462:7:10",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "AddressSlot",
									"nameLocation": "1440:11:10",
									"nodeType": "StructDefinition",
									"scope": 1431,
									"src": "1433:49:10",
									"visibility": "public"
								},
								{
									"canonicalName": "StorageSlot.BooleanSlot",
									"id": 1316,
									"members": [
										{
											"constant": false,
											"id": 1315,
											"mutability": "mutable",
											"name": "value",
											"nameLocation": "1522:5:10",
											"nodeType": "VariableDeclaration",
											"scope": 1316,
											"src": "1517:10:10",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bool",
												"typeString": "bool"
											},
											"typeName": {
												"id": 1314,
												"name": "bool",
												"nodeType": "ElementaryTypeName",
												"src": "1517:4:10",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "BooleanSlot",
									"nameLocation": "1495:11:10",
									"nodeType": "StructDefinition",
									"scope": 1431,
									"src": "1488:46:10",
									"visibility": "public"
								},
								{
									"canonicalName": "StorageSlot.Bytes32Slot",
									"id": 1319,
									"members": [
										{
											"constant": false,
											"id": 1318,
											"mutability": "mutable",
											"name": "value",
											"nameLocation": "1577:5:10",
											"nodeType": "VariableDeclaration",
											"scope": 1319,
											"src": "1569:13:10",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bytes32",
												"typeString": "bytes32"
											},
											"typeName": {
												"id": 1317,
												"name": "bytes32",
												"nodeType": "ElementaryTypeName",
												"src": "1569:7:10",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "Bytes32Slot",
									"nameLocation": "1547:11:10",
									"nodeType": "StructDefinition",
									"scope": 1431,
									"src": "1540:49:10",
									"visibility": "public"
								},
								{
									"canonicalName": "StorageSlot.Uint256Slot",
									"id": 1322,
									"members": [
										{
											"constant": false,
											"id": 1321,
											"mutability": "mutable",
											"name": "value",
											"nameLocation": "1632:5:10",
											"nodeType": "VariableDeclaration",
											"scope": 1322,
											"src": "1624:13:10",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 1320,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "1624:7:10",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "Uint256Slot",
									"nameLocation": "1602:11:10",
									"nodeType": "StructDefinition",
									"scope": 1431,
									"src": "1595:49:10",
									"visibility": "public"
								},
								{
									"canonicalName": "StorageSlot.Int256Slot",
									"id": 1325,
									"members": [
										{
											"constant": false,
											"id": 1324,
											"mutability": "mutable",
											"name": "value",
											"nameLocation": "1685:5:10",
											"nodeType": "VariableDeclaration",
											"scope": 1325,
											"src": "1678:12:10",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_int256",
												"typeString": "int256"
											},
											"typeName": {
												"id": 1323,
												"name": "int256",
												"nodeType": "ElementaryTypeName",
												"src": "1678:6:10",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "Int256Slot",
									"nameLocation": "1657:10:10",
									"nodeType": "StructDefinition",
									"scope": 1431,
									"src": "1650:47:10",
									"visibility": "public"
								},
								{
									"canonicalName": "StorageSlot.StringSlot",
									"id": 1328,
									"members": [
										{
											"constant": false,
											"id": 1327,
											"mutability": "mutable",
											"name": "value",
											"nameLocation": "1738:5:10",
											"nodeType": "VariableDeclaration",
											"scope": 1328,
											"src": "1731:12:10",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_string_storage_ptr",
												"typeString": "string"
											},
											"typeName": {
												"id": 1326,
												"name": "string",
												"nodeType": "ElementaryTypeName",
												"src": "1731:6:10",
												"typeDescriptions": {
													"typeIdentifier": "t_string_storage_ptr",
													"typeString": "string"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "StringSlot",
									"nameLocation": "1710:10:10",
									"nodeType": "StructDefinition",
									"scope": 1431,
									"src": "1703:47:10",
									"visibility": "public"
								},
								{
									"canonicalName": "StorageSlot.BytesSlot",
									"id": 1331,
									"members": [
										{
											"constant": false,
											"id": 1330,
											"mutability": "mutable",
											"name": "value",
											"nameLocation": "1789:5:10",
											"nodeType": "VariableDeclaration",
											"scope": 1331,
											"src": "1783:11:10",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bytes_storage_ptr",
												"typeString": "bytes"
											},
											"typeName": {
												"id": 1329,
												"name": "bytes",
												"nodeType": "ElementaryTypeName",
												"src": "1783:5:10",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_storage_ptr",
													"typeString": "bytes"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "BytesSlot",
									"nameLocation": "1763:9:10",
									"nodeType": "StructDefinition",
									"scope": 1431,
									"src": "1756:45:10",
									"visibility": "public"
								},
								{
									"body": {
										"id": 1341,
										"nodeType": "Block",
										"src": "1983:79:10",
										"statements": [
											{
												"AST": {
													"nativeSrc": "2018:38:10",
													"nodeType": "YulBlock",
													"src": "2018:38:10",
													"statements": [
														{
															"nativeSrc": "2032:14:10",
															"nodeType": "YulAssignment",
															"src": "2032:14:10",
															"value": {
																"name": "slot",
																"nativeSrc": "2042:4:10",
																"nodeType": "YulIdentifier",
																"src": "2042:4:10"
															},
															"variableNames": [
																{
																	"name": "r.slot",
																	"nativeSrc": "2032:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "2032:6:10"
																}
															]
														}
													]
												},
												"evmVersion": "prague",
												"externalReferences": [
													{
														"declaration": 1338,
														"isOffset": false,
														"isSlot": true,
														"src": "2032:6:10",
														"suffix": "slot",
														"valueSize": 1
													},
													{
														"declaration": 1334,
														"isOffset": false,
														"isSlot": false,
														"src": "2042:4:10",
														"valueSize": 1
													}
												],
												"flags": [
													"memory-safe"
												],
												"id": 1340,
												"nodeType": "InlineAssembly",
												"src": "1993:63:10"
											}
										]
									},
									"documentation": {
										"id": 1332,
										"nodeType": "StructuredDocumentation",
										"src": "1807:87:10",
										"text": " @dev Returns an `AddressSlot` with member `value` located at `slot`."
									},
									"id": 1342,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getAddressSlot",
									"nameLocation": "1908:14:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1335,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1334,
												"mutability": "mutable",
												"name": "slot",
												"nameLocation": "1931:4:10",
												"nodeType": "VariableDeclaration",
												"scope": 1342,
												"src": "1923:12:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1333,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1923:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1922:14:10"
									},
									"returnParameters": {
										"id": 1339,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1338,
												"mutability": "mutable",
												"name": "r",
												"nameLocation": "1980:1:10",
												"nodeType": "VariableDeclaration",
												"scope": 1342,
												"src": "1960:21:10",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_AddressSlot_$1313_storage_ptr",
													"typeString": "struct StorageSlot.AddressSlot"
												},
												"typeName": {
													"id": 1337,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1336,
														"name": "AddressSlot",
														"nameLocations": [
															"1960:11:10"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1313,
														"src": "1960:11:10"
													},
													"referencedDeclaration": 1313,
													"src": "1960:11:10",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_AddressSlot_$1313_storage_ptr",
														"typeString": "struct StorageSlot.AddressSlot"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1959:23:10"
									},
									"scope": 1431,
									"src": "1899:163:10",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1352,
										"nodeType": "Block",
										"src": "2243:79:10",
										"statements": [
											{
												"AST": {
													"nativeSrc": "2278:38:10",
													"nodeType": "YulBlock",
													"src": "2278:38:10",
													"statements": [
														{
															"nativeSrc": "2292:14:10",
															"nodeType": "YulAssignment",
															"src": "2292:14:10",
															"value": {
																"name": "slot",
																"nativeSrc": "2302:4:10",
																"nodeType": "YulIdentifier",
																"src": "2302:4:10"
															},
															"variableNames": [
																{
																	"name": "r.slot",
																	"nativeSrc": "2292:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "2292:6:10"
																}
															]
														}
													]
												},
												"evmVersion": "prague",
												"externalReferences": [
													{
														"declaration": 1349,
														"isOffset": false,
														"isSlot": true,
														"src": "2292:6:10",
														"suffix": "slot",
														"valueSize": 1
													},
													{
														"declaration": 1345,
														"isOffset": false,
														"isSlot": false,
														"src": "2302:4:10",
														"valueSize": 1
													}
												],
												"flags": [
													"memory-safe"
												],
												"id": 1351,
												"nodeType": "InlineAssembly",
												"src": "2253:63:10"
											}
										]
									},
									"documentation": {
										"id": 1343,
										"nodeType": "StructuredDocumentation",
										"src": "2068:86:10",
										"text": " @dev Returns a `BooleanSlot` with member `value` located at `slot`."
									},
									"id": 1353,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getBooleanSlot",
									"nameLocation": "2168:14:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1346,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1345,
												"mutability": "mutable",
												"name": "slot",
												"nameLocation": "2191:4:10",
												"nodeType": "VariableDeclaration",
												"scope": 1353,
												"src": "2183:12:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1344,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2183:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2182:14:10"
									},
									"returnParameters": {
										"id": 1350,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1349,
												"mutability": "mutable",
												"name": "r",
												"nameLocation": "2240:1:10",
												"nodeType": "VariableDeclaration",
												"scope": 1353,
												"src": "2220:21:10",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_BooleanSlot_$1316_storage_ptr",
													"typeString": "struct StorageSlot.BooleanSlot"
												},
												"typeName": {
													"id": 1348,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1347,
														"name": "BooleanSlot",
														"nameLocations": [
															"2220:11:10"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1316,
														"src": "2220:11:10"
													},
													"referencedDeclaration": 1316,
													"src": "2220:11:10",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_BooleanSlot_$1316_storage_ptr",
														"typeString": "struct StorageSlot.BooleanSlot"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2219:23:10"
									},
									"scope": 1431,
									"src": "2159:163:10",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1363,
										"nodeType": "Block",
										"src": "2503:79:10",
										"statements": [
											{
												"AST": {
													"nativeSrc": "2538:38:10",
													"nodeType": "YulBlock",
													"src": "2538:38:10",
													"statements": [
														{
															"nativeSrc": "2552:14:10",
															"nodeType": "YulAssignment",
															"src": "2552:14:10",
															"value": {
																"name": "slot",
																"nativeSrc": "2562:4:10",
																"nodeType": "YulIdentifier",
																"src": "2562:4:10"
															},
															"variableNames": [
																{
																	"name": "r.slot",
																	"nativeSrc": "2552:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "2552:6:10"
																}
															]
														}
													]
												},
												"evmVersion": "prague",
												"externalReferences": [
													{
														"declaration": 1360,
														"isOffset": false,
														"isSlot": true,
														"src": "2552:6:10",
														"suffix": "slot",
														"valueSize": 1
													},
													{
														"declaration": 1356,
														"isOffset": false,
														"isSlot": false,
														"src": "2562:4:10",
														"valueSize": 1
													}
												],
												"flags": [
													"memory-safe"
												],
												"id": 1362,
												"nodeType": "InlineAssembly",
												"src": "2513:63:10"
											}
										]
									},
									"documentation": {
										"id": 1354,
										"nodeType": "StructuredDocumentation",
										"src": "2328:86:10",
										"text": " @dev Returns a `Bytes32Slot` with member `value` located at `slot`."
									},
									"id": 1364,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getBytes32Slot",
									"nameLocation": "2428:14:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1357,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1356,
												"mutability": "mutable",
												"name": "slot",
												"nameLocation": "2451:4:10",
												"nodeType": "VariableDeclaration",
												"scope": 1364,
												"src": "2443:12:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1355,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2443:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2442:14:10"
									},
									"returnParameters": {
										"id": 1361,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1360,
												"mutability": "mutable",
												"name": "r",
												"nameLocation": "2500:1:10",
												"nodeType": "VariableDeclaration",
												"scope": 1364,
												"src": "2480:21:10",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Bytes32Slot_$1319_storage_ptr",
													"typeString": "struct StorageSlot.Bytes32Slot"
												},
												"typeName": {
													"id": 1359,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1358,
														"name": "Bytes32Slot",
														"nameLocations": [
															"2480:11:10"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1319,
														"src": "2480:11:10"
													},
													"referencedDeclaration": 1319,
													"src": "2480:11:10",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Bytes32Slot_$1319_storage_ptr",
														"typeString": "struct StorageSlot.Bytes32Slot"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2479:23:10"
									},
									"scope": 1431,
									"src": "2419:163:10",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1374,
										"nodeType": "Block",
										"src": "2763:79:10",
										"statements": [
											{
												"AST": {
													"nativeSrc": "2798:38:10",
													"nodeType": "YulBlock",
													"src": "2798:38:10",
													"statements": [
														{
															"nativeSrc": "2812:14:10",
															"nodeType": "YulAssignment",
															"src": "2812:14:10",
															"value": {
																"name": "slot",
																"nativeSrc": "2822:4:10",
																"nodeType": "YulIdentifier",
																"src": "2822:4:10"
															},
															"variableNames": [
																{
																	"name": "r.slot",
																	"nativeSrc": "2812:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "2812:6:10"
																}
															]
														}
													]
												},
												"evmVersion": "prague",
												"externalReferences": [
													{
														"declaration": 1371,
														"isOffset": false,
														"isSlot": true,
														"src": "2812:6:10",
														"suffix": "slot",
														"valueSize": 1
													},
													{
														"declaration": 1367,
														"isOffset": false,
														"isSlot": false,
														"src": "2822:4:10",
														"valueSize": 1
													}
												],
												"flags": [
													"memory-safe"
												],
												"id": 1373,
												"nodeType": "InlineAssembly",
												"src": "2773:63:10"
											}
										]
									},
									"documentation": {
										"id": 1365,
										"nodeType": "StructuredDocumentation",
										"src": "2588:86:10",
										"text": " @dev Returns a `Uint256Slot` with member `value` located at `slot`."
									},
									"id": 1375,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getUint256Slot",
									"nameLocation": "2688:14:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1368,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1367,
												"mutability": "mutable",
												"name": "slot",
												"nameLocation": "2711:4:10",
												"nodeType": "VariableDeclaration",
												"scope": 1375,
												"src": "2703:12:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1366,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2703:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2702:14:10"
									},
									"returnParameters": {
										"id": 1372,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1371,
												"mutability": "mutable",
												"name": "r",
												"nameLocation": "2760:1:10",
												"nodeType": "VariableDeclaration",
												"scope": 1375,
												"src": "2740:21:10",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Uint256Slot_$1322_storage_ptr",
													"typeString": "struct StorageSlot.Uint256Slot"
												},
												"typeName": {
													"id": 1370,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1369,
														"name": "Uint256Slot",
														"nameLocations": [
															"2740:11:10"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1322,
														"src": "2740:11:10"
													},
													"referencedDeclaration": 1322,
													"src": "2740:11:10",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Uint256Slot_$1322_storage_ptr",
														"typeString": "struct StorageSlot.Uint256Slot"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2739:23:10"
									},
									"scope": 1431,
									"src": "2679:163:10",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1385,
										"nodeType": "Block",
										"src": "3020:79:10",
										"statements": [
											{
												"AST": {
													"nativeSrc": "3055:38:10",
													"nodeType": "YulBlock",
													"src": "3055:38:10",
													"statements": [
														{
															"nativeSrc": "3069:14:10",
															"nodeType": "YulAssignment",
															"src": "3069:14:10",
															"value": {
																"name": "slot",
																"nativeSrc": "3079:4:10",
																"nodeType": "YulIdentifier",
																"src": "3079:4:10"
															},
															"variableNames": [
																{
																	"name": "r.slot",
																	"nativeSrc": "3069:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "3069:6:10"
																}
															]
														}
													]
												},
												"evmVersion": "prague",
												"externalReferences": [
													{
														"declaration": 1382,
														"isOffset": false,
														"isSlot": true,
														"src": "3069:6:10",
														"suffix": "slot",
														"valueSize": 1
													},
													{
														"declaration": 1378,
														"isOffset": false,
														"isSlot": false,
														"src": "3079:4:10",
														"valueSize": 1
													}
												],
												"flags": [
													"memory-safe"
												],
												"id": 1384,
												"nodeType": "InlineAssembly",
												"src": "3030:63:10"
											}
										]
									},
									"documentation": {
										"id": 1376,
										"nodeType": "StructuredDocumentation",
										"src": "2848:85:10",
										"text": " @dev Returns a `Int256Slot` with member `value` located at `slot`."
									},
									"id": 1386,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getInt256Slot",
									"nameLocation": "2947:13:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1379,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1378,
												"mutability": "mutable",
												"name": "slot",
												"nameLocation": "2969:4:10",
												"nodeType": "VariableDeclaration",
												"scope": 1386,
												"src": "2961:12:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1377,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2961:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2960:14:10"
									},
									"returnParameters": {
										"id": 1383,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1382,
												"mutability": "mutable",
												"name": "r",
												"nameLocation": "3017:1:10",
												"nodeType": "VariableDeclaration",
												"scope": 1386,
												"src": "2998:20:10",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Int256Slot_$1325_storage_ptr",
													"typeString": "struct StorageSlot.Int256Slot"
												},
												"typeName": {
													"id": 1381,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1380,
														"name": "Int256Slot",
														"nameLocations": [
															"2998:10:10"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1325,
														"src": "2998:10:10"
													},
													"referencedDeclaration": 1325,
													"src": "2998:10:10",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Int256Slot_$1325_storage_ptr",
														"typeString": "struct StorageSlot.Int256Slot"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2997:22:10"
									},
									"scope": 1431,
									"src": "2938:161:10",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1396,
										"nodeType": "Block",
										"src": "3277:79:10",
										"statements": [
											{
												"AST": {
													"nativeSrc": "3312:38:10",
													"nodeType": "YulBlock",
													"src": "3312:38:10",
													"statements": [
														{
															"nativeSrc": "3326:14:10",
															"nodeType": "YulAssignment",
															"src": "3326:14:10",
															"value": {
																"name": "slot",
																"nativeSrc": "3336:4:10",
																"nodeType": "YulIdentifier",
																"src": "3336:4:10"
															},
															"variableNames": [
																{
																	"name": "r.slot",
																	"nativeSrc": "3326:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "3326:6:10"
																}
															]
														}
													]
												},
												"evmVersion": "prague",
												"externalReferences": [
													{
														"declaration": 1393,
														"isOffset": false,
														"isSlot": true,
														"src": "3326:6:10",
														"suffix": "slot",
														"valueSize": 1
													},
													{
														"declaration": 1389,
														"isOffset": false,
														"isSlot": false,
														"src": "3336:4:10",
														"valueSize": 1
													}
												],
												"flags": [
													"memory-safe"
												],
												"id": 1395,
												"nodeType": "InlineAssembly",
												"src": "3287:63:10"
											}
										]
									},
									"documentation": {
										"id": 1387,
										"nodeType": "StructuredDocumentation",
										"src": "3105:85:10",
										"text": " @dev Returns a `StringSlot` with member `value` located at `slot`."
									},
									"id": 1397,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getStringSlot",
									"nameLocation": "3204:13:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1390,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1389,
												"mutability": "mutable",
												"name": "slot",
												"nameLocation": "3226:4:10",
												"nodeType": "VariableDeclaration",
												"scope": 1397,
												"src": "3218:12:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1388,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "3218:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3217:14:10"
									},
									"returnParameters": {
										"id": 1394,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1393,
												"mutability": "mutable",
												"name": "r",
												"nameLocation": "3274:1:10",
												"nodeType": "VariableDeclaration",
												"scope": 1397,
												"src": "3255:20:10",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_StringSlot_$1328_storage_ptr",
													"typeString": "struct StorageSlot.StringSlot"
												},
												"typeName": {
													"id": 1392,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1391,
														"name": "StringSlot",
														"nameLocations": [
															"3255:10:10"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1328,
														"src": "3255:10:10"
													},
													"referencedDeclaration": 1328,
													"src": "3255:10:10",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_StringSlot_$1328_storage_ptr",
														"typeString": "struct StorageSlot.StringSlot"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3254:22:10"
									},
									"scope": 1431,
									"src": "3195:161:10",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1407,
										"nodeType": "Block",
										"src": "3558:85:10",
										"statements": [
											{
												"AST": {
													"nativeSrc": "3593:44:10",
													"nodeType": "YulBlock",
													"src": "3593:44:10",
													"statements": [
														{
															"nativeSrc": "3607:20:10",
															"nodeType": "YulAssignment",
															"src": "3607:20:10",
															"value": {
																"name": "store.slot",
																"nativeSrc": "3617:10:10",
																"nodeType": "YulIdentifier",
																"src": "3617:10:10"
															},
															"variableNames": [
																{
																	"name": "r.slot",
																	"nativeSrc": "3607:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "3607:6:10"
																}
															]
														}
													]
												},
												"evmVersion": "prague",
												"externalReferences": [
													{
														"declaration": 1404,
														"isOffset": false,
														"isSlot": true,
														"src": "3607:6:10",
														"suffix": "slot",
														"valueSize": 1
													},
													{
														"declaration": 1400,
														"isOffset": false,
														"isSlot": true,
														"src": "3617:10:10",
														"suffix": "slot",
														"valueSize": 1
													}
												],
												"flags": [
													"memory-safe"
												],
												"id": 1406,
												"nodeType": "InlineAssembly",
												"src": "3568:69:10"
											}
										]
									},
									"documentation": {
										"id": 1398,
										"nodeType": "StructuredDocumentation",
										"src": "3362:101:10",
										"text": " @dev Returns an `StringSlot` representation of the string storage pointer `store`."
									},
									"id": 1408,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getStringSlot",
									"nameLocation": "3477:13:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1401,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1400,
												"mutability": "mutable",
												"name": "store",
												"nameLocation": "3506:5:10",
												"nodeType": "VariableDeclaration",
												"scope": 1408,
												"src": "3491:20:10",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_string_storage_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1399,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "3491:6:10",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3490:22:10"
									},
									"returnParameters": {
										"id": 1405,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1404,
												"mutability": "mutable",
												"name": "r",
												"nameLocation": "3555:1:10",
												"nodeType": "VariableDeclaration",
												"scope": 1408,
												"src": "3536:20:10",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_StringSlot_$1328_storage_ptr",
													"typeString": "struct StorageSlot.StringSlot"
												},
												"typeName": {
													"id": 1403,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1402,
														"name": "StringSlot",
														"nameLocations": [
															"3536:10:10"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1328,
														"src": "3536:10:10"
													},
													"referencedDeclaration": 1328,
													"src": "3536:10:10",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_StringSlot_$1328_storage_ptr",
														"typeString": "struct StorageSlot.StringSlot"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3535:22:10"
									},
									"scope": 1431,
									"src": "3468:175:10",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1418,
										"nodeType": "Block",
										"src": "3818:79:10",
										"statements": [
											{
												"AST": {
													"nativeSrc": "3853:38:10",
													"nodeType": "YulBlock",
													"src": "3853:38:10",
													"statements": [
														{
															"nativeSrc": "3867:14:10",
															"nodeType": "YulAssignment",
															"src": "3867:14:10",
															"value": {
																"name": "slot",
																"nativeSrc": "3877:4:10",
																"nodeType": "YulIdentifier",
																"src": "3877:4:10"
															},
															"variableNames": [
																{
																	"name": "r.slot",
																	"nativeSrc": "3867:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "3867:6:10"
																}
															]
														}
													]
												},
												"evmVersion": "prague",
												"externalReferences": [
													{
														"declaration": 1415,
														"isOffset": false,
														"isSlot": true,
														"src": "3867:6:10",
														"suffix": "slot",
														"valueSize": 1
													},
													{
														"declaration": 1411,
														"isOffset": false,
														"isSlot": false,
														"src": "3877:4:10",
														"valueSize": 1
													}
												],
												"flags": [
													"memory-safe"
												],
												"id": 1417,
												"nodeType": "InlineAssembly",
												"src": "3828:63:10"
											}
										]
									},
									"documentation": {
										"id": 1409,
										"nodeType": "StructuredDocumentation",
										"src": "3649:84:10",
										"text": " @dev Returns a `BytesSlot` with member `value` located at `slot`."
									},
									"id": 1419,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getBytesSlot",
									"nameLocation": "3747:12:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1412,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1411,
												"mutability": "mutable",
												"name": "slot",
												"nameLocation": "3768:4:10",
												"nodeType": "VariableDeclaration",
												"scope": 1419,
												"src": "3760:12:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1410,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "3760:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3759:14:10"
									},
									"returnParameters": {
										"id": 1416,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1415,
												"mutability": "mutable",
												"name": "r",
												"nameLocation": "3815:1:10",
												"nodeType": "VariableDeclaration",
												"scope": 1419,
												"src": "3797:19:10",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_BytesSlot_$1331_storage_ptr",
													"typeString": "struct StorageSlot.BytesSlot"
												},
												"typeName": {
													"id": 1414,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1413,
														"name": "BytesSlot",
														"nameLocations": [
															"3797:9:10"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1331,
														"src": "3797:9:10"
													},
													"referencedDeclaration": 1331,
													"src": "3797:9:10",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_BytesSlot_$1331_storage_ptr",
														"typeString": "struct StorageSlot.BytesSlot"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3796:21:10"
									},
									"scope": 1431,
									"src": "3738:159:10",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1429,
										"nodeType": "Block",
										"src": "4094:85:10",
										"statements": [
											{
												"AST": {
													"nativeSrc": "4129:44:10",
													"nodeType": "YulBlock",
													"src": "4129:44:10",
													"statements": [
														{
															"nativeSrc": "4143:20:10",
															"nodeType": "YulAssignment",
															"src": "4143:20:10",
															"value": {
																"name": "store.slot",
																"nativeSrc": "4153:10:10",
																"nodeType": "YulIdentifier",
																"src": "4153:10:10"
															},
															"variableNames": [
																{
																	"name": "r.slot",
																	"nativeSrc": "4143:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "4143:6:10"
																}
															]
														}
													]
												},
												"evmVersion": "prague",
												"externalReferences": [
													{
														"declaration": 1426,
														"isOffset": false,
														"isSlot": true,
														"src": "4143:6:10",
														"suffix": "slot",
														"valueSize": 1
													},
													{
														"declaration": 1422,
														"isOffset": false,
														"isSlot": true,
														"src": "4153:10:10",
														"suffix": "slot",
														"valueSize": 1
													}
												],
												"flags": [
													"memory-safe"
												],
												"id": 1428,
												"nodeType": "InlineAssembly",
												"src": "4104:69:10"
											}
										]
									},
									"documentation": {
										"id": 1420,
										"nodeType": "StructuredDocumentation",
										"src": "3903:99:10",
										"text": " @dev Returns an `BytesSlot` representation of the bytes storage pointer `store`."
									},
									"id": 1430,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getBytesSlot",
									"nameLocation": "4016:12:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1423,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1422,
												"mutability": "mutable",
												"name": "store",
												"nameLocation": "4043:5:10",
												"nodeType": "VariableDeclaration",
												"scope": 1430,
												"src": "4029:19:10",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_storage_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1421,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4029:5:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4028:21:10"
									},
									"returnParameters": {
										"id": 1427,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1426,
												"mutability": "mutable",
												"name": "r",
												"nameLocation": "4091:1:10",
												"nodeType": "VariableDeclaration",
												"scope": 1430,
												"src": "4073:19:10",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_BytesSlot_$1331_storage_ptr",
													"typeString": "struct StorageSlot.BytesSlot"
												},
												"typeName": {
													"id": 1425,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1424,
														"name": "BytesSlot",
														"nameLocations": [
															"4073:9:10"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1331,
														"src": "4073:9:10"
													},
													"referencedDeclaration": 1331,
													"src": "4073:9:10",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_BytesSlot_$1331_storage_ptr",
														"typeString": "struct StorageSlot.BytesSlot"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4072:21:10"
									},
									"scope": 1431,
									"src": "4007:172:10",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 1432,
							"src": "1407:2774:10",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "193:3989:10"
				},
				"id": 10
			},
			"contracts/Logger.sol": {
				"ast": {
					"absolutePath": "contracts/Logger.sol",
					"exportedSymbols": {
						"ContextUpgradeable": [
							690
						],
						"ERC1967Utils": [
							1015
						],
						"IERC1822Proxiable": [
							721
						],
						"Initializable": [
							462
						],
						"Logger": [
							1543
						],
						"OwnableUpgradeable": [
							194
						],
						"UUPSUpgradeable": [
							644
						]
					},
					"id": 1544,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1433,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".2"
							],
							"nodeType": "PragmaDirective",
							"src": "33:23:11"
						},
						{
							"absolutePath": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol",
							"file": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol",
							"id": 1434,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1544,
							"sourceUnit": 645,
							"src": "60:77:11",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol",
							"file": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol",
							"id": 1435,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1544,
							"sourceUnit": 463,
							"src": "139:75:11",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol",
							"file": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol",
							"id": 1436,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1544,
							"sourceUnit": 195,
							"src": "216:75:11",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 1437,
										"name": "Initializable",
										"nameLocations": [
											"316:13:11"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 462,
										"src": "316:13:11"
									},
									"id": 1438,
									"nodeType": "InheritanceSpecifier",
									"src": "316:13:11"
								},
								{
									"baseName": {
										"id": 1439,
										"name": "OwnableUpgradeable",
										"nameLocations": [
											"331:18:11"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 194,
										"src": "331:18:11"
									},
									"id": 1440,
									"nodeType": "InheritanceSpecifier",
									"src": "331:18:11"
								}
							],
							"canonicalName": "Logger",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 1543,
							"linearizedBaseContracts": [
								1543,
								194,
								690,
								462
							],
							"name": "Logger",
							"nameLocation": "306:6:11",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"canonicalName": "Logger.Transaction",
									"id": 1457,
									"members": [
										{
											"constant": false,
											"id": 1442,
											"mutability": "mutable",
											"name": "sender",
											"nameLocation": "395:6:11",
											"nodeType": "VariableDeclaration",
											"scope": 1457,
											"src": "387:14:11",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 1441,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "387:7:11",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1444,
											"mutability": "mutable",
											"name": "recipient",
											"nameLocation": "420:9:11",
											"nodeType": "VariableDeclaration",
											"scope": 1457,
											"src": "412:17:11",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 1443,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "412:7:11",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1446,
											"mutability": "mutable",
											"name": "amount",
											"nameLocation": "448:6:11",
											"nodeType": "VariableDeclaration",
											"scope": 1457,
											"src": "440:14:11",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 1445,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "440:7:11",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1448,
											"mutability": "mutable",
											"name": "fee",
											"nameLocation": "473:3:11",
											"nodeType": "VariableDeclaration",
											"scope": 1457,
											"src": "465:11:11",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 1447,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "465:7:11",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1450,
											"mutability": "mutable",
											"name": "reward",
											"nameLocation": "495:6:11",
											"nodeType": "VariableDeclaration",
											"scope": 1457,
											"src": "487:14:11",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 1449,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "487:7:11",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1452,
											"mutability": "mutable",
											"name": "timestamp",
											"nameLocation": "519:9:11",
											"nodeType": "VariableDeclaration",
											"scope": 1457,
											"src": "512:16:11",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint48",
												"typeString": "uint48"
											},
											"typeName": {
												"id": 1451,
												"name": "uint48",
												"nodeType": "ElementaryTypeName",
												"src": "512:6:11",
												"typeDescriptions": {
													"typeIdentifier": "t_uint48",
													"typeString": "uint48"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1454,
											"mutability": "mutable",
											"name": "txHash",
											"nameLocation": "546:6:11",
											"nodeType": "VariableDeclaration",
											"scope": 1457,
											"src": "539:13:11",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_string_storage_ptr",
												"typeString": "string"
											},
											"typeName": {
												"id": 1453,
												"name": "string",
												"nodeType": "ElementaryTypeName",
												"src": "539:6:11",
												"typeDescriptions": {
													"typeIdentifier": "t_string_storage_ptr",
													"typeString": "string"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1456,
											"mutability": "mutable",
											"name": "token",
											"nameLocation": "571:5:11",
											"nodeType": "VariableDeclaration",
											"scope": 1457,
											"src": "563:13:11",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 1455,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "563:7:11",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "Transaction",
									"nameLocation": "364:11:11",
									"nodeType": "StructDefinition",
									"scope": 1543,
									"src": "357:227:11",
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "b842ec44",
									"id": 1463,
									"mutability": "mutable",
									"name": "userTransactions",
									"nameLocation": "633:16:11",
									"nodeType": "VariableDeclaration",
									"scope": 1543,
									"src": "592:57:11",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_array$_t_struct$_Transaction_$1457_storage_$dyn_storage_$",
										"typeString": "mapping(address => struct Logger.Transaction[])"
									},
									"typeName": {
										"id": 1462,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 1458,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "600:7:11",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "592:33:11",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_array$_t_struct$_Transaction_$1457_storage_$dyn_storage_$",
											"typeString": "mapping(address => struct Logger.Transaction[])"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"baseType": {
												"id": 1460,
												"nodeType": "UserDefinedTypeName",
												"pathNode": {
													"id": 1459,
													"name": "Transaction",
													"nameLocations": [
														"611:11:11"
													],
													"nodeType": "IdentifierPath",
													"referencedDeclaration": 1457,
													"src": "611:11:11"
												},
												"referencedDeclaration": 1457,
												"src": "611:11:11",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Transaction_$1457_storage_ptr",
													"typeString": "struct Logger.Transaction"
												}
											},
											"id": 1461,
											"nodeType": "ArrayTypeName",
											"src": "611:13:11",
											"typeDescriptions": {
												"typeIdentifier": "t_array$_t_struct$_Transaction_$1457_storage_$dyn_storage_ptr",
												"typeString": "struct Logger.Transaction[]"
											}
										}
									},
									"visibility": "public"
								},
								{
									"anonymous": false,
									"eventSelector": "c46393c51fb2221caaec70cc70adecd0bbd1f605f3a19747f4ec3a8aff00cf7c",
									"id": 1471,
									"name": "TransactionLogged",
									"nameLocation": "664:17:11",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1470,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1465,
												"indexed": true,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "698:6:11",
												"nodeType": "VariableDeclaration",
												"scope": 1471,
												"src": "682:22:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1464,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "682:7:11",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1467,
												"indexed": true,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "722:9:11",
												"nodeType": "VariableDeclaration",
												"scope": 1471,
												"src": "706:25:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1466,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "706:7:11",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1469,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "741:6:11",
												"nodeType": "VariableDeclaration",
												"scope": 1471,
												"src": "733:14:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1468,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "733:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "681:67:11"
									},
									"src": "658:91:11"
								},
								{
									"body": {
										"id": 1481,
										"nodeType": "Block",
										"src": "798:45:11",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 1477,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "824:3:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1478,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "828:6:11",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "824:10:11",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 1476,
														"name": "__Ownable_init",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 54,
														"src": "809:14:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 1479,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "809:26:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1480,
												"nodeType": "ExpressionStatement",
												"src": "809:26:11"
											}
										]
									},
									"functionSelector": "8129fc1c",
									"id": 1482,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1474,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1473,
												"name": "initializer",
												"nameLocations": [
													"786:11:11"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 302,
												"src": "786:11:11"
											},
											"nodeType": "ModifierInvocation",
											"src": "786:11:11"
										}
									],
									"name": "initialize",
									"nameLocation": "766:10:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1472,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "776:2:11"
									},
									"returnParameters": {
										"id": 1475,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "798:0:11"
									},
									"scope": 1543,
									"src": "757:86:11",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1541,
										"nodeType": "Block",
										"src": "1007:467:11",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 1512,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																"id": 1505,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1500,
																	"name": "recipient",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1486,
																	"src": "1026:9:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "!=",
																"rightExpression": {
																	"arguments": [
																		{
																			"hexValue": "30",
																			"id": 1503,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "1047:1:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			}
																		],
																		"id": 1502,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "1039:7:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 1501,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "1039:7:11",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 1504,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "1039:10:11",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"src": "1026:23:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "&&",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																"id": 1511,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1506,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1496,
																	"src": "1053:5:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "!=",
																"rightExpression": {
																	"arguments": [
																		{
																			"hexValue": "30",
																			"id": 1509,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "1070:1:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			}
																		],
																		"id": 1508,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "1062:7:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 1507,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "1062:7:11",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 1510,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "1062:10:11",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"src": "1053:19:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "1026:46:11",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "496e76616c69642061646472657373",
															"id": 1513,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1074:17:11",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_1462473b7a4b33d32b109b815fd2324d00c9e5839b707ecf16d0ab5744f99226",
																"typeString": "literal_string \"Invalid address\""
															},
															"value": "Invalid address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_1462473b7a4b33d32b109b815fd2324d00c9e5839b707ecf16d0ab5744f99226",
																"typeString": "literal_string \"Invalid address\""
															}
														],
														"id": 1499,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1018:7:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1514,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1018:74:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1515,
												"nodeType": "ExpressionStatement",
												"src": "1018:74:11"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"expression": {
																		"id": 1522,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967281,
																		"src": "1172:3:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 1523,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "1176:6:11",
																	"memberName": "sender",
																	"nodeType": "MemberAccess",
																	"src": "1172:10:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 1524,
																	"name": "recipient",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1486,
																	"src": "1208:9:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 1525,
																	"name": "amount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1488,
																	"src": "1240:6:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"id": 1526,
																	"name": "fee",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1490,
																	"src": "1266:3:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"id": 1527,
																	"name": "reward",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1492,
																	"src": "1292:6:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"id": 1528,
																	"name": "timestamp",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1484,
																	"src": "1324:9:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint48",
																		"typeString": "uint48"
																	}
																},
																{
																	"id": 1529,
																	"name": "txHash",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1494,
																	"src": "1356:6:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_calldata_ptr",
																		"typeString": "string calldata"
																	}
																},
																{
																	"id": 1530,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1496,
																	"src": "1384:5:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_uint48",
																		"typeString": "uint48"
																	},
																	{
																		"typeIdentifier": "t_string_calldata_ptr",
																		"typeString": "string calldata"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 1521,
																"name": "Transaction",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1457,
																"src": "1137:11:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_struct$_Transaction_$1457_storage_ptr_$",
																	"typeString": "type(struct Logger.Transaction storage pointer)"
																}
															},
															"id": 1531,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "structConstructorCall",
															"lValueRequested": false,
															"nameLocations": [
																"1164:6:11",
																"1197:9:11",
																"1232:6:11",
																"1261:3:11",
																"1284:6:11",
																"1313:9:11",
																"1348:6:11",
																"1377:5:11"
															],
															"names": [
																"sender",
																"recipient",
																"amount",
																"fee",
																"reward",
																"timestamp",
																"txHash",
																"token"
															],
															"nodeType": "FunctionCall",
															"src": "1137:264:11",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Transaction_$1457_memory_ptr",
																"typeString": "struct Logger.Transaction memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_struct$_Transaction_$1457_memory_ptr",
																"typeString": "struct Logger.Transaction memory"
															}
														],
														"expression": {
															"baseExpression": {
																"id": 1516,
																"name": "userTransactions",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1463,
																"src": "1103:16:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_array$_t_struct$_Transaction_$1457_storage_$dyn_storage_$",
																	"typeString": "mapping(address => struct Logger.Transaction storage ref[] storage ref)"
																}
															},
															"id": 1519,
															"indexExpression": {
																"expression": {
																	"id": 1517,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "1120:3:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 1518,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "1124:6:11",
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "1120:10:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "1103:28:11",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_struct$_Transaction_$1457_storage_$dyn_storage",
																"typeString": "struct Logger.Transaction storage ref[] storage ref"
															}
														},
														"id": 1520,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1132:4:11",
														"memberName": "push",
														"nodeType": "MemberAccess",
														"src": "1103:33:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_arraypush_nonpayable$_t_array$_t_struct$_Transaction_$1457_storage_$dyn_storage_ptr_$_t_struct$_Transaction_$1457_storage_$returns$__$attached_to$_t_array$_t_struct$_Transaction_$1457_storage_$dyn_storage_ptr_$",
															"typeString": "function (struct Logger.Transaction storage ref[] storage pointer,struct Logger.Transaction storage ref)"
														}
													},
													"id": 1532,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1103:299:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1533,
												"nodeType": "ExpressionStatement",
												"src": "1103:299:11"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"expression": {
																"id": 1535,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "1436:3:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1536,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1440:6:11",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "1436:10:11",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1537,
															"name": "recipient",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1486,
															"src": "1448:9:11",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1538,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1488,
															"src": "1459:6:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1534,
														"name": "TransactionLogged",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1471,
														"src": "1418:17:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 1539,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1418:48:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1540,
												"nodeType": "EmitStatement",
												"src": "1413:53:11"
											}
										]
									},
									"functionSelector": "83dc65f2",
									"id": 1542,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "logTransaction",
									"nameLocation": "860:14:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1497,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1484,
												"mutability": "mutable",
												"name": "timestamp",
												"nameLocation": "882:9:11",
												"nodeType": "VariableDeclaration",
												"scope": 1542,
												"src": "875:16:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint48",
													"typeString": "uint48"
												},
												"typeName": {
													"id": 1483,
													"name": "uint48",
													"nodeType": "ElementaryTypeName",
													"src": "875:6:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint48",
														"typeString": "uint48"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1486,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "901:9:11",
												"nodeType": "VariableDeclaration",
												"scope": 1542,
												"src": "893:17:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1485,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "893:7:11",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1488,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "922:6:11",
												"nodeType": "VariableDeclaration",
												"scope": 1542,
												"src": "914:14:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1487,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "914:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1490,
												"mutability": "mutable",
												"name": "fee",
												"nameLocation": "938:3:11",
												"nodeType": "VariableDeclaration",
												"scope": 1542,
												"src": "930:11:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1489,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "930:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1492,
												"mutability": "mutable",
												"name": "reward",
												"nameLocation": "951:6:11",
												"nodeType": "VariableDeclaration",
												"scope": 1542,
												"src": "943:14:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1491,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "943:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1494,
												"mutability": "mutable",
												"name": "txHash",
												"nameLocation": "975:6:11",
												"nodeType": "VariableDeclaration",
												"scope": 1542,
												"src": "959:22:11",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_string_calldata_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1493,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "959:6:11",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1496,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "991:5:11",
												"nodeType": "VariableDeclaration",
												"scope": 1542,
												"src": "983:13:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1495,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "983:7:11",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "874:123:11"
									},
									"returnParameters": {
										"id": 1498,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1007:0:11"
									},
									"scope": 1543,
									"src": "851:623:11",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1544,
							"src": "297:1180:11",
							"usedErrors": [
								30,
								35,
								211,
								214
							],
							"usedEvents": [
								41,
								219,
								1471
							]
						}
					],
					"src": "33:1446:11"
				},
				"id": 11
			}
		}
	}
}