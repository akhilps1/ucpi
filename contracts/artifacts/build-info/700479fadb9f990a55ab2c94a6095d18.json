{
	"id": "700479fadb9f990a55ab2c94a6095d18",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.30",
	"solcLongVersion": "0.8.30+commit.73712a01",
	"input": {
		"language": "Solidity",
		"sources": {
			"contracts/RewardManager.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\npragma solidity ^0.8.20;\r\n\r\nimport \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\";\r\nimport \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\";\r\nimport \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\";\r\nimport \"@openzeppelin/contracts/token/ERC20/IERC20.sol\";\r\n\r\n\r\ncontract RewardManager is Initializable, OwnableUpgradeable {\r\n    uint256 public platformFee;\r\n    uint256 public maxRewardPoints;\r\n    IERC20 public rewardToken;\r\n    address public ucpiContract;\r\n\r\n    event RewardDistributed(address indexed user, uint256 points);\r\n\r\n    function initialize(uint256 _fee, uint256 _maxPoints) public initializer {\r\n        __Ownable_init(msg.sender);\r\n        platformFee = _fee;\r\n        maxRewardPoints = _maxPoints;\r\n    }\r\n\r\n    function setUCPIContract(address _ucpi) external onlyOwner {\r\n        ucpiContract = _ucpi;\r\n    }\r\n\r\n    function setRewardToken(address _token) external onlyOwner {\r\n        rewardToken = IERC20(_token);\r\n    }\r\n\r\n    modifier onlyUCPIOrOwner() {\r\n        require(msg.sender == owner() || msg.sender == ucpiContract, \"Not authorized\");\r\n        _;\r\n    }\r\n\r\n      function distributeReward(address user, uint256 amount, uint256 reward) external onlyUCPIOrOwner {\r\n        require(user != address(0), \"Cannot reward zero address\");\r\n        require(amount > 0, \"Amount must be > 0\");\r\n        require(rewardToken.balanceOf(address(this)) >= reward, \"Insufficient reward balance\");\r\n        require(rewardToken.transfer(user, reward), \"Token transfer failed\");\r\n        emit RewardDistributed(user, reward);\r\n    }\r\n\r\n       function calculateReward(uint256 amount, address user) external view returns (uint256) {\r\n        uint256 baseReward = amount * platformFee / 10000;\r\n        // Pseudo-random bonus: up to 1% of baseReward\r\n        uint256 bonus = uint256(keccak256(abi.encodePacked(user, block.timestamp, amount))) % (baseReward / 100 + 1);\r\n        uint256 reward = baseReward + bonus;\r\n        return reward > maxRewardPoints ? maxRewardPoints : reward;\r\n    }\r\n}\r\n"
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (token/ERC20/IERC20.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Interface of the ERC-20 standard as defined in the ERC.\n */\ninterface IERC20 {\n    /**\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\n     * another (`to`).\n     *\n     * Note that `value` may be zero.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 value);\n\n    /**\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\n     * a call to {approve}. `value` is the new allowance.\n     */\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n\n    /**\n     * @dev Returns the value of tokens in existence.\n     */\n    function totalSupply() external view returns (uint256);\n\n    /**\n     * @dev Returns the value of tokens owned by `account`.\n     */\n    function balanceOf(address account) external view returns (uint256);\n\n    /**\n     * @dev Moves a `value` amount of tokens from the caller's account to `to`.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transfer(address to, uint256 value) external returns (bool);\n\n    /**\n     * @dev Returns the remaining number of tokens that `spender` will be\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\n     * zero by default.\n     *\n     * This value changes when {approve} or {transferFrom} are called.\n     */\n    function allowance(address owner, address spender) external view returns (uint256);\n\n    /**\n     * @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n     * caller's tokens.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\n     * that someone may use both the old and the new allowance by unfortunate\n     * transaction ordering. One possible solution to mitigate this race\n     * condition is to first reduce the spender's allowance to 0 and set the\n     * desired value afterwards:\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address spender, uint256 value) external returns (bool);\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to` using the\n     * allowance mechanism. `value` is then deducted from the caller's\n     * allowance.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(address from, address to, uint256 value) external returns (bool);\n}\n"
			},
			"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (access/Ownable.sol)\n\npragma solidity ^0.8.20;\n\nimport {ContextUpgradeable} from \"../utils/ContextUpgradeable.sol\";\nimport {Initializable} from \"../proxy/utils/Initializable.sol\";\n\n/**\n * @dev Contract module which provides a basic access control mechanism, where\n * there is an account (an owner) that can be granted exclusive access to\n * specific functions.\n *\n * The initial owner is set to the address provided by the deployer. This can\n * later be changed with {transferOwnership}.\n *\n * This module is used through inheritance. It will make available the modifier\n * `onlyOwner`, which can be applied to your functions to restrict their use to\n * the owner.\n */\nabstract contract OwnableUpgradeable is Initializable, ContextUpgradeable {\n    /// @custom:storage-location erc7201:openzeppelin.storage.Ownable\n    struct OwnableStorage {\n        address _owner;\n    }\n\n    // keccak256(abi.encode(uint256(keccak256(\"openzeppelin.storage.Ownable\")) - 1)) & ~bytes32(uint256(0xff))\n    bytes32 private constant OwnableStorageLocation = 0x9016d09d72d40fdae2fd8ceac6b6234c7706214fd39c1cd1e609a0528c199300;\n\n    function _getOwnableStorage() private pure returns (OwnableStorage storage $) {\n        assembly {\n            $.slot := OwnableStorageLocation\n        }\n    }\n\n    /**\n     * @dev The caller account is not authorized to perform an operation.\n     */\n    error OwnableUnauthorizedAccount(address account);\n\n    /**\n     * @dev The owner is not a valid owner account. (eg. `address(0)`)\n     */\n    error OwnableInvalidOwner(address owner);\n\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\n\n    /**\n     * @dev Initializes the contract setting the address provided by the deployer as the initial owner.\n     */\n    function __Ownable_init(address initialOwner) internal onlyInitializing {\n        __Ownable_init_unchained(initialOwner);\n    }\n\n    function __Ownable_init_unchained(address initialOwner) internal onlyInitializing {\n        if (initialOwner == address(0)) {\n            revert OwnableInvalidOwner(address(0));\n        }\n        _transferOwnership(initialOwner);\n    }\n\n    /**\n     * @dev Throws if called by any account other than the owner.\n     */\n    modifier onlyOwner() {\n        _checkOwner();\n        _;\n    }\n\n    /**\n     * @dev Returns the address of the current owner.\n     */\n    function owner() public view virtual returns (address) {\n        OwnableStorage storage $ = _getOwnableStorage();\n        return $._owner;\n    }\n\n    /**\n     * @dev Throws if the sender is not the owner.\n     */\n    function _checkOwner() internal view virtual {\n        if (owner() != _msgSender()) {\n            revert OwnableUnauthorizedAccount(_msgSender());\n        }\n    }\n\n    /**\n     * @dev Leaves the contract without owner. It will not be possible to call\n     * `onlyOwner` functions. Can only be called by the current owner.\n     *\n     * NOTE: Renouncing ownership will leave the contract without an owner,\n     * thereby disabling any functionality that is only available to the owner.\n     */\n    function renounceOwnership() public virtual onlyOwner {\n        _transferOwnership(address(0));\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Can only be called by the current owner.\n     */\n    function transferOwnership(address newOwner) public virtual onlyOwner {\n        if (newOwner == address(0)) {\n            revert OwnableInvalidOwner(address(0));\n        }\n        _transferOwnership(newOwner);\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Internal function without access restriction.\n     */\n    function _transferOwnership(address newOwner) internal virtual {\n        OwnableStorage storage $ = _getOwnableStorage();\n        address oldOwner = $._owner;\n        $._owner = newOwner;\n        emit OwnershipTransferred(oldOwner, newOwner);\n    }\n}\n"
			},
			"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.3.0) (proxy/utils/Initializable.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev This is a base contract to aid in writing upgradeable contracts, or any kind of contract that will be deployed\n * behind a proxy. Since proxied contracts do not make use of a constructor, it's common to move constructor logic to an\n * external initializer function, usually called `initialize`. It then becomes necessary to protect this initializer\n * function so it can only be called once. The {initializer} modifier provided by this contract will have this effect.\n *\n * The initialization functions use a version number. Once a version number is used, it is consumed and cannot be\n * reused. This mechanism prevents re-execution of each \"step\" but allows the creation of new initialization steps in\n * case an upgrade adds a module that needs to be initialized.\n *\n * For example:\n *\n * [.hljs-theme-light.nopadding]\n * ```solidity\n * contract MyToken is ERC20Upgradeable {\n *     function initialize() initializer public {\n *         __ERC20_init(\"MyToken\", \"MTK\");\n *     }\n * }\n *\n * contract MyTokenV2 is MyToken, ERC20PermitUpgradeable {\n *     function initializeV2() reinitializer(2) public {\n *         __ERC20Permit_init(\"MyToken\");\n *     }\n * }\n * ```\n *\n * TIP: To avoid leaving the proxy in an uninitialized state, the initializer function should be called as early as\n * possible by providing the encoded function call as the `_data` argument to {ERC1967Proxy-constructor}.\n *\n * CAUTION: When used with inheritance, manual care must be taken to not invoke a parent initializer twice, or to ensure\n * that all initializers are idempotent. This is not verified automatically as constructors are by Solidity.\n *\n * [CAUTION]\n * ====\n * Avoid leaving a contract uninitialized.\n *\n * An uninitialized contract can be taken over by an attacker. This applies to both a proxy and its implementation\n * contract, which may impact the proxy. To prevent the implementation contract from being used, you should invoke\n * the {_disableInitializers} function in the constructor to automatically lock it when it is deployed:\n *\n * [.hljs-theme-light.nopadding]\n * ```\n * /// @custom:oz-upgrades-unsafe-allow constructor\n * constructor() {\n *     _disableInitializers();\n * }\n * ```\n * ====\n */\nabstract contract Initializable {\n    /**\n     * @dev Storage of the initializable contract.\n     *\n     * It's implemented on a custom ERC-7201 namespace to reduce the risk of storage collisions\n     * when using with upgradeable contracts.\n     *\n     * @custom:storage-location erc7201:openzeppelin.storage.Initializable\n     */\n    struct InitializableStorage {\n        /**\n         * @dev Indicates that the contract has been initialized.\n         */\n        uint64 _initialized;\n        /**\n         * @dev Indicates that the contract is in the process of being initialized.\n         */\n        bool _initializing;\n    }\n\n    // keccak256(abi.encode(uint256(keccak256(\"openzeppelin.storage.Initializable\")) - 1)) & ~bytes32(uint256(0xff))\n    bytes32 private constant INITIALIZABLE_STORAGE = 0xf0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a00;\n\n    /**\n     * @dev The contract is already initialized.\n     */\n    error InvalidInitialization();\n\n    /**\n     * @dev The contract is not initializing.\n     */\n    error NotInitializing();\n\n    /**\n     * @dev Triggered when the contract has been initialized or reinitialized.\n     */\n    event Initialized(uint64 version);\n\n    /**\n     * @dev A modifier that defines a protected initializer function that can be invoked at most once. In its scope,\n     * `onlyInitializing` functions can be used to initialize parent contracts.\n     *\n     * Similar to `reinitializer(1)`, except that in the context of a constructor an `initializer` may be invoked any\n     * number of times. This behavior in the constructor can be useful during testing and is not expected to be used in\n     * production.\n     *\n     * Emits an {Initialized} event.\n     */\n    modifier initializer() {\n        // solhint-disable-next-line var-name-mixedcase\n        InitializableStorage storage $ = _getInitializableStorage();\n\n        // Cache values to avoid duplicated sloads\n        bool isTopLevelCall = !$._initializing;\n        uint64 initialized = $._initialized;\n\n        // Allowed calls:\n        // - initialSetup: the contract is not in the initializing state and no previous version was\n        //                 initialized\n        // - construction: the contract is initialized at version 1 (no reinitialization) and the\n        //                 current contract is just being deployed\n        bool initialSetup = initialized == 0 && isTopLevelCall;\n        bool construction = initialized == 1 && address(this).code.length == 0;\n\n        if (!initialSetup && !construction) {\n            revert InvalidInitialization();\n        }\n        $._initialized = 1;\n        if (isTopLevelCall) {\n            $._initializing = true;\n        }\n        _;\n        if (isTopLevelCall) {\n            $._initializing = false;\n            emit Initialized(1);\n        }\n    }\n\n    /**\n     * @dev A modifier that defines a protected reinitializer function that can be invoked at most once, and only if the\n     * contract hasn't been initialized to a greater version before. In its scope, `onlyInitializing` functions can be\n     * used to initialize parent contracts.\n     *\n     * A reinitializer may be used after the original initialization step. This is essential to configure modules that\n     * are added through upgrades and that require initialization.\n     *\n     * When `version` is 1, this modifier is similar to `initializer`, except that functions marked with `reinitializer`\n     * cannot be nested. If one is invoked in the context of another, execution will revert.\n     *\n     * Note that versions can jump in increments greater than 1; this implies that if multiple reinitializers coexist in\n     * a contract, executing them in the right order is up to the developer or operator.\n     *\n     * WARNING: Setting the version to 2**64 - 1 will prevent any future reinitialization.\n     *\n     * Emits an {Initialized} event.\n     */\n    modifier reinitializer(uint64 version) {\n        // solhint-disable-next-line var-name-mixedcase\n        InitializableStorage storage $ = _getInitializableStorage();\n\n        if ($._initializing || $._initialized >= version) {\n            revert InvalidInitialization();\n        }\n        $._initialized = version;\n        $._initializing = true;\n        _;\n        $._initializing = false;\n        emit Initialized(version);\n    }\n\n    /**\n     * @dev Modifier to protect an initialization function so that it can only be invoked by functions with the\n     * {initializer} and {reinitializer} modifiers, directly or indirectly.\n     */\n    modifier onlyInitializing() {\n        _checkInitializing();\n        _;\n    }\n\n    /**\n     * @dev Reverts if the contract is not in an initializing state. See {onlyInitializing}.\n     */\n    function _checkInitializing() internal view virtual {\n        if (!_isInitializing()) {\n            revert NotInitializing();\n        }\n    }\n\n    /**\n     * @dev Locks the contract, preventing any future reinitialization. This cannot be part of an initializer call.\n     * Calling this in the constructor of a contract will prevent that contract from being initialized or reinitialized\n     * to any version. It is recommended to use this to lock implementation contracts that are designed to be called\n     * through proxies.\n     *\n     * Emits an {Initialized} event the first time it is successfully executed.\n     */\n    function _disableInitializers() internal virtual {\n        // solhint-disable-next-line var-name-mixedcase\n        InitializableStorage storage $ = _getInitializableStorage();\n\n        if ($._initializing) {\n            revert InvalidInitialization();\n        }\n        if ($._initialized != type(uint64).max) {\n            $._initialized = type(uint64).max;\n            emit Initialized(type(uint64).max);\n        }\n    }\n\n    /**\n     * @dev Returns the highest version that has been initialized. See {reinitializer}.\n     */\n    function _getInitializedVersion() internal view returns (uint64) {\n        return _getInitializableStorage()._initialized;\n    }\n\n    /**\n     * @dev Returns `true` if the contract is currently initializing. See {onlyInitializing}.\n     */\n    function _isInitializing() internal view returns (bool) {\n        return _getInitializableStorage()._initializing;\n    }\n\n    /**\n     * @dev Pointer to storage slot. Allows integrators to override it with a custom storage location.\n     *\n     * NOTE: Consider following the ERC-7201 formula to derive storage locations.\n     */\n    function _initializableStorageSlot() internal pure virtual returns (bytes32) {\n        return INITIALIZABLE_STORAGE;\n    }\n\n    /**\n     * @dev Returns a pointer to the storage namespace.\n     */\n    // solhint-disable-next-line var-name-mixedcase\n    function _getInitializableStorage() private pure returns (InitializableStorage storage $) {\n        bytes32 slot = _initializableStorageSlot();\n        assembly {\n            $.slot := slot\n        }\n    }\n}\n"
			},
			"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.3.0) (proxy/utils/UUPSUpgradeable.sol)\n\npragma solidity ^0.8.22;\n\nimport {IERC1822Proxiable} from \"@openzeppelin/contracts/interfaces/draft-IERC1822.sol\";\nimport {ERC1967Utils} from \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\";\nimport {Initializable} from \"./Initializable.sol\";\n\n/**\n * @dev An upgradeability mechanism designed for UUPS proxies. The functions included here can perform an upgrade of an\n * {ERC1967Proxy}, when this contract is set as the implementation behind such a proxy.\n *\n * A security mechanism ensures that an upgrade does not turn off upgradeability accidentally, although this risk is\n * reinstated if the upgrade retains upgradeability but removes the security mechanism, e.g. by replacing\n * `UUPSUpgradeable` with a custom implementation of upgrades.\n *\n * The {_authorizeUpgrade} function must be overridden to include access restriction to the upgrade mechanism.\n */\nabstract contract UUPSUpgradeable is Initializable, IERC1822Proxiable {\n    /// @custom:oz-upgrades-unsafe-allow state-variable-immutable\n    address private immutable __self = address(this);\n\n    /**\n     * @dev The version of the upgrade interface of the contract. If this getter is missing, both `upgradeTo(address)`\n     * and `upgradeToAndCall(address,bytes)` are present, and `upgradeTo` must be used if no function should be called,\n     * while `upgradeToAndCall` will invoke the `receive` function if the second argument is the empty byte string.\n     * If the getter returns `\"5.0.0\"`, only `upgradeToAndCall(address,bytes)` is present, and the second argument must\n     * be the empty byte string if no function should be called, making it impossible to invoke the `receive` function\n     * during an upgrade.\n     */\n    string public constant UPGRADE_INTERFACE_VERSION = \"5.0.0\";\n\n    /**\n     * @dev The call is from an unauthorized context.\n     */\n    error UUPSUnauthorizedCallContext();\n\n    /**\n     * @dev The storage `slot` is unsupported as a UUID.\n     */\n    error UUPSUnsupportedProxiableUUID(bytes32 slot);\n\n    /**\n     * @dev Check that the execution is being performed through a delegatecall call and that the execution context is\n     * a proxy contract with an implementation (as defined in ERC-1967) pointing to self. This should only be the case\n     * for UUPS and transparent proxies that are using the current contract as their implementation. Execution of a\n     * function through ERC-1167 minimal proxies (clones) would not normally pass this test, but is not guaranteed to\n     * fail.\n     */\n    modifier onlyProxy() {\n        _checkProxy();\n        _;\n    }\n\n    /**\n     * @dev Check that the execution is not being performed through a delegate call. This allows a function to be\n     * callable on the implementing contract but not through proxies.\n     */\n    modifier notDelegated() {\n        _checkNotDelegated();\n        _;\n    }\n\n    function __UUPSUpgradeable_init() internal onlyInitializing {\n    }\n\n    function __UUPSUpgradeable_init_unchained() internal onlyInitializing {\n    }\n    /**\n     * @dev Implementation of the ERC-1822 {proxiableUUID} function. This returns the storage slot used by the\n     * implementation. It is used to validate the implementation's compatibility when performing an upgrade.\n     *\n     * IMPORTANT: A proxy pointing at a proxiable contract should not be considered proxiable itself, because this risks\n     * bricking a proxy that upgrades to it, by delegating to itself until out of gas. Thus it is critical that this\n     * function revert if invoked through a proxy. This is guaranteed by the `notDelegated` modifier.\n     */\n    function proxiableUUID() external view virtual notDelegated returns (bytes32) {\n        return ERC1967Utils.IMPLEMENTATION_SLOT;\n    }\n\n    /**\n     * @dev Upgrade the implementation of the proxy to `newImplementation`, and subsequently execute the function call\n     * encoded in `data`.\n     *\n     * Calls {_authorizeUpgrade}.\n     *\n     * Emits an {Upgraded} event.\n     *\n     * @custom:oz-upgrades-unsafe-allow-reachable delegatecall\n     */\n    function upgradeToAndCall(address newImplementation, bytes memory data) public payable virtual onlyProxy {\n        _authorizeUpgrade(newImplementation);\n        _upgradeToAndCallUUPS(newImplementation, data);\n    }\n\n    /**\n     * @dev Reverts if the execution is not performed via delegatecall or the execution\n     * context is not of a proxy with an ERC-1967 compliant implementation pointing to self.\n     */\n    function _checkProxy() internal view virtual {\n        if (\n            address(this) == __self || // Must be called through delegatecall\n            ERC1967Utils.getImplementation() != __self // Must be called through an active proxy\n        ) {\n            revert UUPSUnauthorizedCallContext();\n        }\n    }\n\n    /**\n     * @dev Reverts if the execution is performed via delegatecall.\n     * See {notDelegated}.\n     */\n    function _checkNotDelegated() internal view virtual {\n        if (address(this) != __self) {\n            // Must not be called through delegatecall\n            revert UUPSUnauthorizedCallContext();\n        }\n    }\n\n    /**\n     * @dev Function that should revert when `msg.sender` is not authorized to upgrade the contract. Called by\n     * {upgradeToAndCall}.\n     *\n     * Normally, this function will use an xref:access.adoc[access control] modifier such as {Ownable-onlyOwner}.\n     *\n     * ```solidity\n     * function _authorizeUpgrade(address) internal onlyOwner {}\n     * ```\n     */\n    function _authorizeUpgrade(address newImplementation) internal virtual;\n\n    /**\n     * @dev Performs an implementation upgrade with a security check for UUPS proxies, and additional setup call.\n     *\n     * As a security check, {proxiableUUID} is invoked in the new implementation, and the return value\n     * is expected to be the implementation slot in ERC-1967.\n     *\n     * Emits an {IERC1967-Upgraded} event.\n     */\n    function _upgradeToAndCallUUPS(address newImplementation, bytes memory data) private {\n        try IERC1822Proxiable(newImplementation).proxiableUUID() returns (bytes32 slot) {\n            if (slot != ERC1967Utils.IMPLEMENTATION_SLOT) {\n                revert UUPSUnsupportedProxiableUUID(slot);\n            }\n            ERC1967Utils.upgradeToAndCall(newImplementation, data);\n        } catch {\n            // The implementation is not UUPS\n            revert ERC1967Utils.ERC1967InvalidImplementation(newImplementation);\n        }\n    }\n}\n"
			},
			"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.2.0) (proxy/ERC1967/ERC1967Utils.sol)\n\npragma solidity ^0.8.22;\n\nimport {IBeacon} from \"../beacon/IBeacon.sol\";\nimport {IERC1967} from \"../../interfaces/IERC1967.sol\";\nimport {Address} from \"../../utils/Address.sol\";\nimport {StorageSlot} from \"../../utils/StorageSlot.sol\";\n\n/**\n * @dev This library provides getters and event emitting update functions for\n * https://eips.ethereum.org/EIPS/eip-1967[ERC-1967] slots.\n */\nlibrary ERC1967Utils {\n    /**\n     * @dev Storage slot with the address of the current implementation.\n     * This is the keccak-256 hash of \"eip1967.proxy.implementation\" subtracted by 1.\n     */\n    // solhint-disable-next-line private-vars-leading-underscore\n    bytes32 internal constant IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc;\n\n    /**\n     * @dev The `implementation` of the proxy is invalid.\n     */\n    error ERC1967InvalidImplementation(address implementation);\n\n    /**\n     * @dev The `admin` of the proxy is invalid.\n     */\n    error ERC1967InvalidAdmin(address admin);\n\n    /**\n     * @dev The `beacon` of the proxy is invalid.\n     */\n    error ERC1967InvalidBeacon(address beacon);\n\n    /**\n     * @dev An upgrade function sees `msg.value > 0` that may be lost.\n     */\n    error ERC1967NonPayable();\n\n    /**\n     * @dev Returns the current implementation address.\n     */\n    function getImplementation() internal view returns (address) {\n        return StorageSlot.getAddressSlot(IMPLEMENTATION_SLOT).value;\n    }\n\n    /**\n     * @dev Stores a new address in the ERC-1967 implementation slot.\n     */\n    function _setImplementation(address newImplementation) private {\n        if (newImplementation.code.length == 0) {\n            revert ERC1967InvalidImplementation(newImplementation);\n        }\n        StorageSlot.getAddressSlot(IMPLEMENTATION_SLOT).value = newImplementation;\n    }\n\n    /**\n     * @dev Performs implementation upgrade with additional setup call if data is nonempty.\n     * This function is payable only if the setup call is performed, otherwise `msg.value` is rejected\n     * to avoid stuck value in the contract.\n     *\n     * Emits an {IERC1967-Upgraded} event.\n     */\n    function upgradeToAndCall(address newImplementation, bytes memory data) internal {\n        _setImplementation(newImplementation);\n        emit IERC1967.Upgraded(newImplementation);\n\n        if (data.length > 0) {\n            Address.functionDelegateCall(newImplementation, data);\n        } else {\n            _checkNonPayable();\n        }\n    }\n\n    /**\n     * @dev Storage slot with the admin of the contract.\n     * This is the keccak-256 hash of \"eip1967.proxy.admin\" subtracted by 1.\n     */\n    // solhint-disable-next-line private-vars-leading-underscore\n    bytes32 internal constant ADMIN_SLOT = 0xb53127684a568b3173ae13b9f8a6016e243e63b6e8ee1178d6a717850b5d6103;\n\n    /**\n     * @dev Returns the current admin.\n     *\n     * TIP: To get this value clients can read directly from the storage slot shown below (specified by ERC-1967) using\n     * the https://eth.wiki/json-rpc/API#eth_getstorageat[`eth_getStorageAt`] RPC call.\n     * `0xb53127684a568b3173ae13b9f8a6016e243e63b6e8ee1178d6a717850b5d6103`\n     */\n    function getAdmin() internal view returns (address) {\n        return StorageSlot.getAddressSlot(ADMIN_SLOT).value;\n    }\n\n    /**\n     * @dev Stores a new address in the ERC-1967 admin slot.\n     */\n    function _setAdmin(address newAdmin) private {\n        if (newAdmin == address(0)) {\n            revert ERC1967InvalidAdmin(address(0));\n        }\n        StorageSlot.getAddressSlot(ADMIN_SLOT).value = newAdmin;\n    }\n\n    /**\n     * @dev Changes the admin of the proxy.\n     *\n     * Emits an {IERC1967-AdminChanged} event.\n     */\n    function changeAdmin(address newAdmin) internal {\n        emit IERC1967.AdminChanged(getAdmin(), newAdmin);\n        _setAdmin(newAdmin);\n    }\n\n    /**\n     * @dev The storage slot of the UpgradeableBeacon contract which defines the implementation for this proxy.\n     * This is the keccak-256 hash of \"eip1967.proxy.beacon\" subtracted by 1.\n     */\n    // solhint-disable-next-line private-vars-leading-underscore\n    bytes32 internal constant BEACON_SLOT = 0xa3f0ad74e5423aebfd80d3ef4346578335a9a72aeaee59ff6cb3582b35133d50;\n\n    /**\n     * @dev Returns the current beacon.\n     */\n    function getBeacon() internal view returns (address) {\n        return StorageSlot.getAddressSlot(BEACON_SLOT).value;\n    }\n\n    /**\n     * @dev Stores a new beacon in the ERC-1967 beacon slot.\n     */\n    function _setBeacon(address newBeacon) private {\n        if (newBeacon.code.length == 0) {\n            revert ERC1967InvalidBeacon(newBeacon);\n        }\n\n        StorageSlot.getAddressSlot(BEACON_SLOT).value = newBeacon;\n\n        address beaconImplementation = IBeacon(newBeacon).implementation();\n        if (beaconImplementation.code.length == 0) {\n            revert ERC1967InvalidImplementation(beaconImplementation);\n        }\n    }\n\n    /**\n     * @dev Change the beacon and trigger a setup call if data is nonempty.\n     * This function is payable only if the setup call is performed, otherwise `msg.value` is rejected\n     * to avoid stuck value in the contract.\n     *\n     * Emits an {IERC1967-BeaconUpgraded} event.\n     *\n     * CAUTION: Invoking this function has no effect on an instance of {BeaconProxy} since v5, since\n     * it uses an immutable beacon without looking at the value of the ERC-1967 beacon slot for\n     * efficiency.\n     */\n    function upgradeBeaconToAndCall(address newBeacon, bytes memory data) internal {\n        _setBeacon(newBeacon);\n        emit IERC1967.BeaconUpgraded(newBeacon);\n\n        if (data.length > 0) {\n            Address.functionDelegateCall(IBeacon(newBeacon).implementation(), data);\n        } else {\n            _checkNonPayable();\n        }\n    }\n\n    /**\n     * @dev Reverts if `msg.value` is not zero. It can be used to avoid `msg.value` stuck in the contract\n     * if an upgrade doesn't perform an initialization call.\n     */\n    function _checkNonPayable() private {\n        if (msg.value > 0) {\n            revert ERC1967NonPayable();\n        }\n    }\n}\n"
			},
			"@openzeppelin/contracts/interfaces/draft-IERC1822.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (interfaces/draft-IERC1822.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev ERC-1822: Universal Upgradeable Proxy Standard (UUPS) documents a method for upgradeability through a simplified\n * proxy whose upgrades are fully controlled by the current implementation.\n */\ninterface IERC1822Proxiable {\n    /**\n     * @dev Returns the storage slot that the proxiable contract assumes is being used to store the implementation\n     * address.\n     *\n     * IMPORTANT: A proxy pointing at a proxiable contract should not be considered proxiable itself, because this risks\n     * bricking a proxy that upgrades to it, by delegating to itself until out of gas. Thus it is critical that this\n     * function revert if invoked through a proxy.\n     */\n    function proxiableUUID() external view returns (bytes32);\n}\n"
			},
			"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.1) (utils/Context.sol)\n\npragma solidity ^0.8.20;\nimport {Initializable} from \"../proxy/utils/Initializable.sol\";\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract ContextUpgradeable is Initializable {\n    function __Context_init() internal onlyInitializing {\n    }\n\n    function __Context_init_unchained() internal onlyInitializing {\n    }\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n\n    function _contextSuffixLength() internal view virtual returns (uint256) {\n        return 0;\n    }\n}\n"
			},
			"@openzeppelin/contracts/utils/StorageSlot.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (utils/StorageSlot.sol)\n// This file was procedurally generated from scripts/generate/templates/StorageSlot.js.\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Library for reading and writing primitive types to specific storage slots.\n *\n * Storage slots are often used to avoid storage conflict when dealing with upgradeable contracts.\n * This library helps with reading and writing to such slots without the need for inline assembly.\n *\n * The functions in this library return Slot structs that contain a `value` member that can be used to read or write.\n *\n * Example usage to set ERC-1967 implementation slot:\n * ```solidity\n * contract ERC1967 {\n *     // Define the slot. Alternatively, use the SlotDerivation library to derive the slot.\n *     bytes32 internal constant _IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc;\n *\n *     function _getImplementation() internal view returns (address) {\n *         return StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value;\n *     }\n *\n *     function _setImplementation(address newImplementation) internal {\n *         require(newImplementation.code.length > 0);\n *         StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value = newImplementation;\n *     }\n * }\n * ```\n *\n * TIP: Consider using this library along with {SlotDerivation}.\n */\nlibrary StorageSlot {\n    struct AddressSlot {\n        address value;\n    }\n\n    struct BooleanSlot {\n        bool value;\n    }\n\n    struct Bytes32Slot {\n        bytes32 value;\n    }\n\n    struct Uint256Slot {\n        uint256 value;\n    }\n\n    struct Int256Slot {\n        int256 value;\n    }\n\n    struct StringSlot {\n        string value;\n    }\n\n    struct BytesSlot {\n        bytes value;\n    }\n\n    /**\n     * @dev Returns an `AddressSlot` with member `value` located at `slot`.\n     */\n    function getAddressSlot(bytes32 slot) internal pure returns (AddressSlot storage r) {\n        assembly (\"memory-safe\") {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns a `BooleanSlot` with member `value` located at `slot`.\n     */\n    function getBooleanSlot(bytes32 slot) internal pure returns (BooleanSlot storage r) {\n        assembly (\"memory-safe\") {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns a `Bytes32Slot` with member `value` located at `slot`.\n     */\n    function getBytes32Slot(bytes32 slot) internal pure returns (Bytes32Slot storage r) {\n        assembly (\"memory-safe\") {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns a `Uint256Slot` with member `value` located at `slot`.\n     */\n    function getUint256Slot(bytes32 slot) internal pure returns (Uint256Slot storage r) {\n        assembly (\"memory-safe\") {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns a `Int256Slot` with member `value` located at `slot`.\n     */\n    function getInt256Slot(bytes32 slot) internal pure returns (Int256Slot storage r) {\n        assembly (\"memory-safe\") {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns a `StringSlot` with member `value` located at `slot`.\n     */\n    function getStringSlot(bytes32 slot) internal pure returns (StringSlot storage r) {\n        assembly (\"memory-safe\") {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns an `StringSlot` representation of the string storage pointer `store`.\n     */\n    function getStringSlot(string storage store) internal pure returns (StringSlot storage r) {\n        assembly (\"memory-safe\") {\n            r.slot := store.slot\n        }\n    }\n\n    /**\n     * @dev Returns a `BytesSlot` with member `value` located at `slot`.\n     */\n    function getBytesSlot(bytes32 slot) internal pure returns (BytesSlot storage r) {\n        assembly (\"memory-safe\") {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns an `BytesSlot` representation of the bytes storage pointer `store`.\n     */\n    function getBytesSlot(bytes storage store) internal pure returns (BytesSlot storage r) {\n        assembly (\"memory-safe\") {\n            r.slot := store.slot\n        }\n    }\n}\n"
			},
			"@openzeppelin/contracts/utils/Address.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.2.0) (utils/Address.sol)\n\npragma solidity ^0.8.20;\n\nimport {Errors} from \"./Errors.sol\";\n\n/**\n * @dev Collection of functions related to the address type\n */\nlibrary Address {\n    /**\n     * @dev There's no code at `target` (it is not a contract).\n     */\n    error AddressEmptyCode(address target);\n\n    /**\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\n     * `recipient`, forwarding all available gas and reverting on errors.\n     *\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\n     * imposed by `transfer`, making them unable to receive funds via\n     * `transfer`. {sendValue} removes this limitation.\n     *\n     * https://consensys.net/diligence/blog/2019/09/stop-using-soliditys-transfer-now/[Learn more].\n     *\n     * IMPORTANT: because control is transferred to `recipient`, care must be\n     * taken to not create reentrancy vulnerabilities. Consider using\n     * {ReentrancyGuard} or the\n     * https://solidity.readthedocs.io/en/v0.8.20/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\n     */\n    function sendValue(address payable recipient, uint256 amount) internal {\n        if (address(this).balance < amount) {\n            revert Errors.InsufficientBalance(address(this).balance, amount);\n        }\n\n        (bool success, bytes memory returndata) = recipient.call{value: amount}(\"\");\n        if (!success) {\n            _revert(returndata);\n        }\n    }\n\n    /**\n     * @dev Performs a Solidity function call using a low level `call`. A\n     * plain `call` is an unsafe replacement for a function call: use this\n     * function instead.\n     *\n     * If `target` reverts with a revert reason or custom error, it is bubbled\n     * up by this function (like regular Solidity function calls). However, if\n     * the call reverted with no returned reason, this function reverts with a\n     * {Errors.FailedCall} error.\n     *\n     * Returns the raw returned data. To convert to the expected return value,\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\n     *\n     * Requirements:\n     *\n     * - `target` must be a contract.\n     * - calling `target` with `data` must not revert.\n     */\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\n        return functionCallWithValue(target, data, 0);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but also transferring `value` wei to `target`.\n     *\n     * Requirements:\n     *\n     * - the calling contract must have an ETH balance of at least `value`.\n     * - the called Solidity function must be `payable`.\n     */\n    function functionCallWithValue(address target, bytes memory data, uint256 value) internal returns (bytes memory) {\n        if (address(this).balance < value) {\n            revert Errors.InsufficientBalance(address(this).balance, value);\n        }\n        (bool success, bytes memory returndata) = target.call{value: value}(data);\n        return verifyCallResultFromTarget(target, success, returndata);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but performing a static call.\n     */\n    function functionStaticCall(address target, bytes memory data) internal view returns (bytes memory) {\n        (bool success, bytes memory returndata) = target.staticcall(data);\n        return verifyCallResultFromTarget(target, success, returndata);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but performing a delegate call.\n     */\n    function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {\n        (bool success, bytes memory returndata) = target.delegatecall(data);\n        return verifyCallResultFromTarget(target, success, returndata);\n    }\n\n    /**\n     * @dev Tool to verify that a low level call to smart-contract was successful, and reverts if the target\n     * was not a contract or bubbling up the revert reason (falling back to {Errors.FailedCall}) in case\n     * of an unsuccessful call.\n     */\n    function verifyCallResultFromTarget(\n        address target,\n        bool success,\n        bytes memory returndata\n    ) internal view returns (bytes memory) {\n        if (!success) {\n            _revert(returndata);\n        } else {\n            // only check if target is a contract if the call was successful and the return data is empty\n            // otherwise we already know that it was a contract\n            if (returndata.length == 0 && target.code.length == 0) {\n                revert AddressEmptyCode(target);\n            }\n            return returndata;\n        }\n    }\n\n    /**\n     * @dev Tool to verify that a low level call was successful, and reverts if it wasn't, either by bubbling the\n     * revert reason or with a default {Errors.FailedCall} error.\n     */\n    function verifyCallResult(bool success, bytes memory returndata) internal pure returns (bytes memory) {\n        if (!success) {\n            _revert(returndata);\n        } else {\n            return returndata;\n        }\n    }\n\n    /**\n     * @dev Reverts with returndata if present. Otherwise reverts with {Errors.FailedCall}.\n     */\n    function _revert(bytes memory returndata) private pure {\n        // Look for revert reason and bubble it up if present\n        if (returndata.length > 0) {\n            // The easiest way to bubble the revert reason is using memory via assembly\n            assembly (\"memory-safe\") {\n                let returndata_size := mload(returndata)\n                revert(add(32, returndata), returndata_size)\n            }\n        } else {\n            revert Errors.FailedCall();\n        }\n    }\n}\n"
			},
			"@openzeppelin/contracts/interfaces/IERC1967.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (interfaces/IERC1967.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev ERC-1967: Proxy Storage Slots. This interface contains the events defined in the ERC.\n */\ninterface IERC1967 {\n    /**\n     * @dev Emitted when the implementation is upgraded.\n     */\n    event Upgraded(address indexed implementation);\n\n    /**\n     * @dev Emitted when the admin account has changed.\n     */\n    event AdminChanged(address previousAdmin, address newAdmin);\n\n    /**\n     * @dev Emitted when the beacon is changed.\n     */\n    event BeaconUpgraded(address indexed beacon);\n}\n"
			},
			"@openzeppelin/contracts/proxy/beacon/IBeacon.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (proxy/beacon/IBeacon.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev This is the interface that {BeaconProxy} expects of its beacon.\n */\ninterface IBeacon {\n    /**\n     * @dev Must return an address that can be used as a delegate call target.\n     *\n     * {UpgradeableBeacon} will check that this address is a contract.\n     */\n    function implementation() external view returns (address);\n}\n"
			},
			"@openzeppelin/contracts/utils/Errors.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (utils/Errors.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Collection of common custom errors used in multiple contracts\n *\n * IMPORTANT: Backwards compatibility is not guaranteed in future versions of the library.\n * It is recommended to avoid relying on the error API for critical functionality.\n *\n * _Available since v5.1._\n */\nlibrary Errors {\n    /**\n     * @dev The ETH balance of the account is not enough to perform the operation.\n     */\n    error InsufficientBalance(uint256 balance, uint256 needed);\n\n    /**\n     * @dev A call to an address target failed. The target may have reverted.\n     */\n    error FailedCall();\n\n    /**\n     * @dev The deployment failed.\n     */\n    error FailedDeployment();\n\n    /**\n     * @dev A necessary precompile is missing.\n     */\n    error MissingPrecompile(address);\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			},
			"remappings": []
		}
	},
	"output": {
		"contracts": {
			"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol": {
				"OwnableUpgradeable": {
					"abi": [
						{
							"inputs": [],
							"name": "InvalidInitialization",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "NotInitializing",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "OwnableInvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "OwnableUnauthorizedAccount",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint64",
									"name": "version",
									"type": "uint64"
								}
							],
							"name": "Initialized",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. The initial owner is set to the address provided by the deployer. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.",
						"errors": {
							"InvalidInitialization()": [
								{
									"details": "The contract is already initialized."
								}
							],
							"NotInitializing()": [
								{
									"details": "The contract is not initializing."
								}
							],
							"OwnableInvalidOwner(address)": [
								{
									"details": "The owner is not a valid owner account. (eg. `address(0)`)"
								}
							],
							"OwnableUnauthorizedAccount(address)": [
								{
									"details": "The caller account is not authorized to perform an operation."
								}
							]
						},
						"events": {
							"Initialized(uint64)": {
								"details": "Triggered when the contract has been initialized or reinitialized."
							}
						},
						"kind": "dev",
						"methods": {
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"owner()": "8da5cb5b",
							"renounceOwnership()": "715018a6",
							"transferOwnership(address)": "f2fde38b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.30+commit.73712a01\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"InvalidInitialization\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NotInitializing\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint64\",\"name\":\"version\",\"type\":\"uint64\"}],\"name\":\"Initialized\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. The initial owner is set to the address provided by the deployer. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.\",\"errors\":{\"InvalidInitialization()\":[{\"details\":\"The contract is already initialized.\"}],\"NotInitializing()\":[{\"details\":\"The contract is not initializing.\"}],\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}]},\"events\":{\"Initialized(uint64)\":{\"details\":\"Triggered when the contract has been initialized or reinitialized.\"}},\"kind\":\"dev\",\"methods\":{\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":\"OwnableUpgradeable\"},\"evmVersion\":\"prague\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":{\"keccak256\":\"0xc163fcf9bb10138631a9ba5564df1fa25db9adff73bd9ee868a8ae1858fe093a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9706d43a0124053d9880f6e31a59f31bc0a6a3dc1acd66ce0a16e1111658c5f6\",\"dweb:/ipfs/QmUFmfowzkRwGtDu36cXV9SPTBHJ3n7dG9xQiK5B28jTf2\"]},\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":{\"keccak256\":\"0xdb4d24ee2c087c391d587cd17adfe5b3f9d93b3110b1388c2ab6c7c0ad1dcd05\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ab7b6d5b9e2b88176312967fe0f0e78f3d9a1422fa5e4b64e2440c35869b5d08\",\"dweb:/ipfs/QmXKYWWyzcLg1B2k7Sb1qkEXgLCYfXecR9wYW5obRzWP1Q\"]},\"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":{\"keccak256\":\"0xdbef5f0c787055227243a7318ef74c8a5a1108ca3a07f2b3a00ef67769e1e397\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://08e39f23d5b4692f9a40803e53a8156b72b4c1f9902a88cd65ba964db103dab9\",\"dweb:/ipfs/QmPKn6EYDgpga7KtpkA8wV2yJCYGMtc9K4LkJfhKX2RVSV\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol": {
				"Initializable": {
					"abi": [
						{
							"inputs": [],
							"name": "InvalidInitialization",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "NotInitializing",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint64",
									"name": "version",
									"type": "uint64"
								}
							],
							"name": "Initialized",
							"type": "event"
						}
					],
					"devdoc": {
						"custom:oz-upgrades-unsafe-allow": "constructor constructor() {     _disableInitializers(); } ``` ====",
						"details": "This is a base contract to aid in writing upgradeable contracts, or any kind of contract that will be deployed behind a proxy. Since proxied contracts do not make use of a constructor, it's common to move constructor logic to an external initializer function, usually called `initialize`. It then becomes necessary to protect this initializer function so it can only be called once. The {initializer} modifier provided by this contract will have this effect. The initialization functions use a version number. Once a version number is used, it is consumed and cannot be reused. This mechanism prevents re-execution of each \"step\" but allows the creation of new initialization steps in case an upgrade adds a module that needs to be initialized. For example: [.hljs-theme-light.nopadding] ```solidity contract MyToken is ERC20Upgradeable {     function initialize() initializer public {         __ERC20_init(\"MyToken\", \"MTK\");     } } contract MyTokenV2 is MyToken, ERC20PermitUpgradeable {     function initializeV2() reinitializer(2) public {         __ERC20Permit_init(\"MyToken\");     } } ``` TIP: To avoid leaving the proxy in an uninitialized state, the initializer function should be called as early as possible by providing the encoded function call as the `_data` argument to {ERC1967Proxy-constructor}. CAUTION: When used with inheritance, manual care must be taken to not invoke a parent initializer twice, or to ensure that all initializers are idempotent. This is not verified automatically as constructors are by Solidity. [CAUTION] ==== Avoid leaving a contract uninitialized. An uninitialized contract can be taken over by an attacker. This applies to both a proxy and its implementation contract, which may impact the proxy. To prevent the implementation contract from being used, you should invoke the {_disableInitializers} function in the constructor to automatically lock it when it is deployed: [.hljs-theme-light.nopadding] ```",
						"errors": {
							"InvalidInitialization()": [
								{
									"details": "The contract is already initialized."
								}
							],
							"NotInitializing()": [
								{
									"details": "The contract is not initializing."
								}
							]
						},
						"events": {
							"Initialized(uint64)": {
								"details": "Triggered when the contract has been initialized or reinitialized."
							}
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.30+commit.73712a01\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"InvalidInitialization\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NotInitializing\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint64\",\"name\":\"version\",\"type\":\"uint64\"}],\"name\":\"Initialized\",\"type\":\"event\"}],\"devdoc\":{\"custom:oz-upgrades-unsafe-allow\":\"constructor constructor() {     _disableInitializers(); } ``` ====\",\"details\":\"This is a base contract to aid in writing upgradeable contracts, or any kind of contract that will be deployed behind a proxy. Since proxied contracts do not make use of a constructor, it's common to move constructor logic to an external initializer function, usually called `initialize`. It then becomes necessary to protect this initializer function so it can only be called once. The {initializer} modifier provided by this contract will have this effect. The initialization functions use a version number. Once a version number is used, it is consumed and cannot be reused. This mechanism prevents re-execution of each \\\"step\\\" but allows the creation of new initialization steps in case an upgrade adds a module that needs to be initialized. For example: [.hljs-theme-light.nopadding] ```solidity contract MyToken is ERC20Upgradeable {     function initialize() initializer public {         __ERC20_init(\\\"MyToken\\\", \\\"MTK\\\");     } } contract MyTokenV2 is MyToken, ERC20PermitUpgradeable {     function initializeV2() reinitializer(2) public {         __ERC20Permit_init(\\\"MyToken\\\");     } } ``` TIP: To avoid leaving the proxy in an uninitialized state, the initializer function should be called as early as possible by providing the encoded function call as the `_data` argument to {ERC1967Proxy-constructor}. CAUTION: When used with inheritance, manual care must be taken to not invoke a parent initializer twice, or to ensure that all initializers are idempotent. This is not verified automatically as constructors are by Solidity. [CAUTION] ==== Avoid leaving a contract uninitialized. An uninitialized contract can be taken over by an attacker. This applies to both a proxy and its implementation contract, which may impact the proxy. To prevent the implementation contract from being used, you should invoke the {_disableInitializers} function in the constructor to automatically lock it when it is deployed: [.hljs-theme-light.nopadding] ```\",\"errors\":{\"InvalidInitialization()\":[{\"details\":\"The contract is already initialized.\"}],\"NotInitializing()\":[{\"details\":\"The contract is not initializing.\"}]},\"events\":{\"Initialized(uint64)\":{\"details\":\"Triggered when the contract has been initialized or reinitialized.\"}},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":\"Initializable\"},\"evmVersion\":\"prague\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":{\"keccak256\":\"0xdb4d24ee2c087c391d587cd17adfe5b3f9d93b3110b1388c2ab6c7c0ad1dcd05\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ab7b6d5b9e2b88176312967fe0f0e78f3d9a1422fa5e4b64e2440c35869b5d08\",\"dweb:/ipfs/QmXKYWWyzcLg1B2k7Sb1qkEXgLCYfXecR9wYW5obRzWP1Q\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol": {
				"UUPSUpgradeable": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "target",
									"type": "address"
								}
							],
							"name": "AddressEmptyCode",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "implementation",
									"type": "address"
								}
							],
							"name": "ERC1967InvalidImplementation",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "ERC1967NonPayable",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "FailedCall",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "InvalidInitialization",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "NotInitializing",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "UUPSUnauthorizedCallContext",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "slot",
									"type": "bytes32"
								}
							],
							"name": "UUPSUnsupportedProxiableUUID",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint64",
									"name": "version",
									"type": "uint64"
								}
							],
							"name": "Initialized",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "implementation",
									"type": "address"
								}
							],
							"name": "Upgraded",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "UPGRADE_INTERFACE_VERSION",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "proxiableUUID",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newImplementation",
									"type": "address"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "upgradeToAndCall",
							"outputs": [],
							"stateMutability": "payable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "An upgradeability mechanism designed for UUPS proxies. The functions included here can perform an upgrade of an {ERC1967Proxy}, when this contract is set as the implementation behind such a proxy. A security mechanism ensures that an upgrade does not turn off upgradeability accidentally, although this risk is reinstated if the upgrade retains upgradeability but removes the security mechanism, e.g. by replacing `UUPSUpgradeable` with a custom implementation of upgrades. The {_authorizeUpgrade} function must be overridden to include access restriction to the upgrade mechanism.",
						"errors": {
							"AddressEmptyCode(address)": [
								{
									"details": "There's no code at `target` (it is not a contract)."
								}
							],
							"ERC1967InvalidImplementation(address)": [
								{
									"details": "The `implementation` of the proxy is invalid."
								}
							],
							"ERC1967NonPayable()": [
								{
									"details": "An upgrade function sees `msg.value > 0` that may be lost."
								}
							],
							"FailedCall()": [
								{
									"details": "A call to an address target failed. The target may have reverted."
								}
							],
							"InvalidInitialization()": [
								{
									"details": "The contract is already initialized."
								}
							],
							"NotInitializing()": [
								{
									"details": "The contract is not initializing."
								}
							],
							"UUPSUnauthorizedCallContext()": [
								{
									"details": "The call is from an unauthorized context."
								}
							],
							"UUPSUnsupportedProxiableUUID(bytes32)": [
								{
									"details": "The storage `slot` is unsupported as a UUID."
								}
							]
						},
						"events": {
							"Initialized(uint64)": {
								"details": "Triggered when the contract has been initialized or reinitialized."
							},
							"Upgraded(address)": {
								"details": "Emitted when the implementation is upgraded."
							}
						},
						"kind": "dev",
						"methods": {
							"proxiableUUID()": {
								"details": "Implementation of the ERC-1822 {proxiableUUID} function. This returns the storage slot used by the implementation. It is used to validate the implementation's compatibility when performing an upgrade. IMPORTANT: A proxy pointing at a proxiable contract should not be considered proxiable itself, because this risks bricking a proxy that upgrades to it, by delegating to itself until out of gas. Thus it is critical that this function revert if invoked through a proxy. This is guaranteed by the `notDelegated` modifier."
							},
							"upgradeToAndCall(address,bytes)": {
								"custom:oz-upgrades-unsafe-allow-reachable": "delegatecall",
								"details": "Upgrade the implementation of the proxy to `newImplementation`, and subsequently execute the function call encoded in `data`. Calls {_authorizeUpgrade}. Emits an {Upgraded} event."
							}
						},
						"stateVariables": {
							"UPGRADE_INTERFACE_VERSION": {
								"details": "The version of the upgrade interface of the contract. If this getter is missing, both `upgradeTo(address)` and `upgradeToAndCall(address,bytes)` are present, and `upgradeTo` must be used if no function should be called, while `upgradeToAndCall` will invoke the `receive` function if the second argument is the empty byte string. If the getter returns `\"5.0.0\"`, only `upgradeToAndCall(address,bytes)` is present, and the second argument must be the empty byte string if no function should be called, making it impossible to invoke the `receive` function during an upgrade."
							},
							"__self": {
								"custom:oz-upgrades-unsafe-allow": "state-variable-immutable"
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"UPGRADE_INTERFACE_VERSION()": "ad3cb1cc",
							"proxiableUUID()": "52d1902d",
							"upgradeToAndCall(address,bytes)": "4f1ef286"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.30+commit.73712a01\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"}],\"name\":\"AddressEmptyCode\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"implementation\",\"type\":\"address\"}],\"name\":\"ERC1967InvalidImplementation\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ERC1967NonPayable\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"FailedCall\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidInitialization\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NotInitializing\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"UUPSUnauthorizedCallContext\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"slot\",\"type\":\"bytes32\"}],\"name\":\"UUPSUnsupportedProxiableUUID\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint64\",\"name\":\"version\",\"type\":\"uint64\"}],\"name\":\"Initialized\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"implementation\",\"type\":\"address\"}],\"name\":\"Upgraded\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"UPGRADE_INTERFACE_VERSION\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"proxiableUUID\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newImplementation\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"upgradeToAndCall\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"An upgradeability mechanism designed for UUPS proxies. The functions included here can perform an upgrade of an {ERC1967Proxy}, when this contract is set as the implementation behind such a proxy. A security mechanism ensures that an upgrade does not turn off upgradeability accidentally, although this risk is reinstated if the upgrade retains upgradeability but removes the security mechanism, e.g. by replacing `UUPSUpgradeable` with a custom implementation of upgrades. The {_authorizeUpgrade} function must be overridden to include access restriction to the upgrade mechanism.\",\"errors\":{\"AddressEmptyCode(address)\":[{\"details\":\"There's no code at `target` (it is not a contract).\"}],\"ERC1967InvalidImplementation(address)\":[{\"details\":\"The `implementation` of the proxy is invalid.\"}],\"ERC1967NonPayable()\":[{\"details\":\"An upgrade function sees `msg.value > 0` that may be lost.\"}],\"FailedCall()\":[{\"details\":\"A call to an address target failed. The target may have reverted.\"}],\"InvalidInitialization()\":[{\"details\":\"The contract is already initialized.\"}],\"NotInitializing()\":[{\"details\":\"The contract is not initializing.\"}],\"UUPSUnauthorizedCallContext()\":[{\"details\":\"The call is from an unauthorized context.\"}],\"UUPSUnsupportedProxiableUUID(bytes32)\":[{\"details\":\"The storage `slot` is unsupported as a UUID.\"}]},\"events\":{\"Initialized(uint64)\":{\"details\":\"Triggered when the contract has been initialized or reinitialized.\"},\"Upgraded(address)\":{\"details\":\"Emitted when the implementation is upgraded.\"}},\"kind\":\"dev\",\"methods\":{\"proxiableUUID()\":{\"details\":\"Implementation of the ERC-1822 {proxiableUUID} function. This returns the storage slot used by the implementation. It is used to validate the implementation's compatibility when performing an upgrade. IMPORTANT: A proxy pointing at a proxiable contract should not be considered proxiable itself, because this risks bricking a proxy that upgrades to it, by delegating to itself until out of gas. Thus it is critical that this function revert if invoked through a proxy. This is guaranteed by the `notDelegated` modifier.\"},\"upgradeToAndCall(address,bytes)\":{\"custom:oz-upgrades-unsafe-allow-reachable\":\"delegatecall\",\"details\":\"Upgrade the implementation of the proxy to `newImplementation`, and subsequently execute the function call encoded in `data`. Calls {_authorizeUpgrade}. Emits an {Upgraded} event.\"}},\"stateVariables\":{\"UPGRADE_INTERFACE_VERSION\":{\"details\":\"The version of the upgrade interface of the contract. If this getter is missing, both `upgradeTo(address)` and `upgradeToAndCall(address,bytes)` are present, and `upgradeTo` must be used if no function should be called, while `upgradeToAndCall` will invoke the `receive` function if the second argument is the empty byte string. If the getter returns `\\\"5.0.0\\\"`, only `upgradeToAndCall(address,bytes)` is present, and the second argument must be the empty byte string if no function should be called, making it impossible to invoke the `receive` function during an upgrade.\"},\"__self\":{\"custom:oz-upgrades-unsafe-allow\":\"state-variable-immutable\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":\"UUPSUpgradeable\"},\"evmVersion\":\"prague\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":{\"keccak256\":\"0xdb4d24ee2c087c391d587cd17adfe5b3f9d93b3110b1388c2ab6c7c0ad1dcd05\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ab7b6d5b9e2b88176312967fe0f0e78f3d9a1422fa5e4b64e2440c35869b5d08\",\"dweb:/ipfs/QmXKYWWyzcLg1B2k7Sb1qkEXgLCYfXecR9wYW5obRzWP1Q\"]},\"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":{\"keccak256\":\"0x574a7451e42724f7de29e2855c392a8a5020acd695169466a18459467d719d63\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5bc189f63b639ee173dd7b6fecc39baf7113bf161776aea22b34c57fdd1872ec\",\"dweb:/ipfs/QmZAf2VtjDLRULqjJkde6LNsxAg12tUqpPqgUQQZbAjgtZ\"]},\"@openzeppelin/contracts/interfaces/IERC1967.sol\":{\"keccak256\":\"0xb25a4f11fa80c702bf5cd85adec90e6f6f507f32f4a8e6f5dbc31e8c10029486\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6917f8a323e7811f041aecd4d9fd6e92455a6fba38a797ac6f6e208c7912b79d\",\"dweb:/ipfs/QmShuYv55wYHGi4EFkDB8QfF7ZCHoKk2efyz3AWY1ExSq7\"]},\"@openzeppelin/contracts/interfaces/draft-IERC1822.sol\":{\"keccak256\":\"0xc42facb5094f2f35f066a7155bda23545e39a3156faef3ddc00185544443ba7d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d3b36282ab029b46bd082619a308a2ea11c309967b9425b7b7a6eb0b0c1c3196\",\"dweb:/ipfs/QmP2YVfDB2FoREax3vJu7QhDnyYRMw52WPrCD4vdT2kuDA\"]},\"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":{\"keccak256\":\"0x8decfa54cec979c824b044b8128cd91d713f72c71fd7dfa54974624d8c949898\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://271f914261a19d87117a777e0924ada545c16191ef9b00cc40b0134fc14ebc70\",\"dweb:/ipfs/QmdvVNWHGHQrGGPonZJs5NuzTevTjZRM2zayKrDJf7WBA2\"]},\"@openzeppelin/contracts/proxy/beacon/IBeacon.sol\":{\"keccak256\":\"0xc59a78b07b44b2cf2e8ab4175fca91e8eca1eee2df7357b8d2a8833e5ea1f64c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5aa4f07e65444784c29cd7bfcc2341b34381e4e5b5da9f0c5bd00d7f430e66fa\",\"dweb:/ipfs/QmWRMh4Q9DpaU9GvsiXmDdoNYMyyece9if7hnfLz7uqzWM\"]},\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0xaaa1d17c1129b127a4a401db2fbd72960e2671474be3d08cae71ccdc42f7624c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://cb2f27cd3952aa667e198fba0d9b7bcec52fbb12c16f013c25fe6fb52b29cc0e\",\"dweb:/ipfs/QmeuohBFoeyDPZA9JNCTEDz3VBfBD4EABWuWXVhHAuEpKR\"]},\"@openzeppelin/contracts/utils/Errors.sol\":{\"keccak256\":\"0x6afa713bfd42cf0f7656efa91201007ac465e42049d7de1d50753a373648c123\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ba1d02f4847670a1b83dec9f7d37f0b0418d6043447b69f3a29a5f9efc547fcf\",\"dweb:/ipfs/QmQ7iH2keLNUKgq2xSWcRmuBE5eZ3F5whYAkAGzCNNoEWB\"]},\"@openzeppelin/contracts/utils/StorageSlot.sol\":{\"keccak256\":\"0xcf74f855663ce2ae00ed8352666b7935f6cddea2932fdf2c3ecd30a9b1cd0e97\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9f660b1f351b757dfe01438e59888f31f33ded3afcf5cb5b0d9bf9aa6f320a8b\",\"dweb:/ipfs/QmarDJ5hZEgBtCmmrVzEZWjub9769eD686jmzb2XpSU1cM\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol": {
				"ContextUpgradeable": {
					"abi": [
						{
							"inputs": [],
							"name": "InvalidInitialization",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "NotInitializing",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint64",
									"name": "version",
									"type": "uint64"
								}
							],
							"name": "Initialized",
							"type": "event"
						}
					],
					"devdoc": {
						"details": "Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.",
						"errors": {
							"InvalidInitialization()": [
								{
									"details": "The contract is already initialized."
								}
							],
							"NotInitializing()": [
								{
									"details": "The contract is not initializing."
								}
							]
						},
						"events": {
							"Initialized(uint64)": {
								"details": "Triggered when the contract has been initialized or reinitialized."
							}
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.30+commit.73712a01\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"InvalidInitialization\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NotInitializing\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint64\",\"name\":\"version\",\"type\":\"uint64\"}],\"name\":\"Initialized\",\"type\":\"event\"}],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"errors\":{\"InvalidInitialization()\":[{\"details\":\"The contract is already initialized.\"}],\"NotInitializing()\":[{\"details\":\"The contract is not initializing.\"}]},\"events\":{\"Initialized(uint64)\":{\"details\":\"Triggered when the contract has been initialized or reinitialized.\"}},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":\"ContextUpgradeable\"},\"evmVersion\":\"prague\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":{\"keccak256\":\"0xdb4d24ee2c087c391d587cd17adfe5b3f9d93b3110b1388c2ab6c7c0ad1dcd05\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ab7b6d5b9e2b88176312967fe0f0e78f3d9a1422fa5e4b64e2440c35869b5d08\",\"dweb:/ipfs/QmXKYWWyzcLg1B2k7Sb1qkEXgLCYfXecR9wYW5obRzWP1Q\"]},\"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":{\"keccak256\":\"0xdbef5f0c787055227243a7318ef74c8a5a1108ca3a07f2b3a00ef67769e1e397\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://08e39f23d5b4692f9a40803e53a8156b72b4c1f9902a88cd65ba964db103dab9\",\"dweb:/ipfs/QmPKn6EYDgpga7KtpkA8wV2yJCYGMtc9K4LkJfhKX2RVSV\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/interfaces/IERC1967.sol": {
				"IERC1967": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "previousAdmin",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "address",
									"name": "newAdmin",
									"type": "address"
								}
							],
							"name": "AdminChanged",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "beacon",
									"type": "address"
								}
							],
							"name": "BeaconUpgraded",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "implementation",
									"type": "address"
								}
							],
							"name": "Upgraded",
							"type": "event"
						}
					],
					"devdoc": {
						"details": "ERC-1967: Proxy Storage Slots. This interface contains the events defined in the ERC.",
						"events": {
							"AdminChanged(address,address)": {
								"details": "Emitted when the admin account has changed."
							},
							"BeaconUpgraded(address)": {
								"details": "Emitted when the beacon is changed."
							},
							"Upgraded(address)": {
								"details": "Emitted when the implementation is upgraded."
							}
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.30+commit.73712a01\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"previousAdmin\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"newAdmin\",\"type\":\"address\"}],\"name\":\"AdminChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"beacon\",\"type\":\"address\"}],\"name\":\"BeaconUpgraded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"implementation\",\"type\":\"address\"}],\"name\":\"Upgraded\",\"type\":\"event\"}],\"devdoc\":{\"details\":\"ERC-1967: Proxy Storage Slots. This interface contains the events defined in the ERC.\",\"events\":{\"AdminChanged(address,address)\":{\"details\":\"Emitted when the admin account has changed.\"},\"BeaconUpgraded(address)\":{\"details\":\"Emitted when the beacon is changed.\"},\"Upgraded(address)\":{\"details\":\"Emitted when the implementation is upgraded.\"}},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/IERC1967.sol\":\"IERC1967\"},\"evmVersion\":\"prague\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/IERC1967.sol\":{\"keccak256\":\"0xb25a4f11fa80c702bf5cd85adec90e6f6f507f32f4a8e6f5dbc31e8c10029486\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6917f8a323e7811f041aecd4d9fd6e92455a6fba38a797ac6f6e208c7912b79d\",\"dweb:/ipfs/QmShuYv55wYHGi4EFkDB8QfF7ZCHoKk2efyz3AWY1ExSq7\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/interfaces/draft-IERC1822.sol": {
				"IERC1822Proxiable": {
					"abi": [
						{
							"inputs": [],
							"name": "proxiableUUID",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "ERC-1822: Universal Upgradeable Proxy Standard (UUPS) documents a method for upgradeability through a simplified proxy whose upgrades are fully controlled by the current implementation.",
						"kind": "dev",
						"methods": {
							"proxiableUUID()": {
								"details": "Returns the storage slot that the proxiable contract assumes is being used to store the implementation address. IMPORTANT: A proxy pointing at a proxiable contract should not be considered proxiable itself, because this risks bricking a proxy that upgrades to it, by delegating to itself until out of gas. Thus it is critical that this function revert if invoked through a proxy."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"proxiableUUID()": "52d1902d"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.30+commit.73712a01\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"proxiableUUID\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"ERC-1822: Universal Upgradeable Proxy Standard (UUPS) documents a method for upgradeability through a simplified proxy whose upgrades are fully controlled by the current implementation.\",\"kind\":\"dev\",\"methods\":{\"proxiableUUID()\":{\"details\":\"Returns the storage slot that the proxiable contract assumes is being used to store the implementation address. IMPORTANT: A proxy pointing at a proxiable contract should not be considered proxiable itself, because this risks bricking a proxy that upgrades to it, by delegating to itself until out of gas. Thus it is critical that this function revert if invoked through a proxy.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC1822.sol\":\"IERC1822Proxiable\"},\"evmVersion\":\"prague\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC1822.sol\":{\"keccak256\":\"0xc42facb5094f2f35f066a7155bda23545e39a3156faef3ddc00185544443ba7d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d3b36282ab029b46bd082619a308a2ea11c309967b9425b7b7a6eb0b0c1c3196\",\"dweb:/ipfs/QmP2YVfDB2FoREax3vJu7QhDnyYRMw52WPrCD4vdT2kuDA\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol": {
				"ERC1967Utils": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "admin",
									"type": "address"
								}
							],
							"name": "ERC1967InvalidAdmin",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "beacon",
									"type": "address"
								}
							],
							"name": "ERC1967InvalidBeacon",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "implementation",
									"type": "address"
								}
							],
							"name": "ERC1967InvalidImplementation",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "ERC1967NonPayable",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "This library provides getters and event emitting update functions for https://eips.ethereum.org/EIPS/eip-1967[ERC-1967] slots.",
						"errors": {
							"ERC1967InvalidAdmin(address)": [
								{
									"details": "The `admin` of the proxy is invalid."
								}
							],
							"ERC1967InvalidBeacon(address)": [
								{
									"details": "The `beacon` of the proxy is invalid."
								}
							],
							"ERC1967InvalidImplementation(address)": [
								{
									"details": "The `implementation` of the proxy is invalid."
								}
							],
							"ERC1967NonPayable()": [
								{
									"details": "An upgrade function sees `msg.value > 0` that may be lost."
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"stateVariables": {
							"ADMIN_SLOT": {
								"details": "Storage slot with the admin of the contract. This is the keccak-256 hash of \"eip1967.proxy.admin\" subtracted by 1."
							},
							"BEACON_SLOT": {
								"details": "The storage slot of the UpgradeableBeacon contract which defines the implementation for this proxy. This is the keccak-256 hash of \"eip1967.proxy.beacon\" subtracted by 1."
							},
							"IMPLEMENTATION_SLOT": {
								"details": "Storage slot with the address of the current implementation. This is the keccak-256 hash of \"eip1967.proxy.implementation\" subtracted by 1."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":496:6237  library ERC1967Utils {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":496:6237  library ERC1967Utils {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      revert(0x00, 0x00)\n\n    auxdata: 0xa2646970667358221220089058072fc6f42f8f62f38fcf5cfc02f77bb71f0e72f0efc0812efd2799168964736f6c634300081e0033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "6055604b600b8282823980515f1a607314603f577f4e487b71000000000000000000000000000000000000000000000000000000005f525f60045260245ffd5b305f52607381538281f3fe730000000000000000000000000000000000000000301460806040525f5ffdfea2646970667358221220089058072fc6f42f8f62f38fcf5cfc02f77bb71f0e72f0efc0812efd2799168964736f6c634300081e0033",
							"opcodes": "PUSH1 0x55 PUSH1 0x4B PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH0 BYTE PUSH1 0x73 EQ PUSH1 0x3F JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST ADDRESS PUSH0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 PUSH0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 ADDMOD SWAP1 PC SMOD 0x2F 0xC6 DELEGATECALL 0x2F DUP16 PUSH3 0xF38FCF TLOAD 0xFC MUL 0xF7 PUSH28 0xB71F0E72F0EFC0812EFD2799168964736F6C634300081E0033000000 ",
							"sourceMap": "496:5741:6:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "730000000000000000000000000000000000000000301460806040525f5ffdfea2646970667358221220089058072fc6f42f8f62f38fcf5cfc02f77bb71f0e72f0efc0812efd2799168964736f6c634300081e0033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 PUSH0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 ADDMOD SWAP1 PC SMOD 0x2F 0xC6 DELEGATECALL 0x2F DUP16 PUSH3 0xF38FCF TLOAD 0xFC MUL 0xF7 PUSH28 0xB71F0E72F0EFC0812EFD2799168964736F6C634300081E0033000000 ",
							"sourceMap": "496:5741:6:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17000",
								"executionCost": "92",
								"totalCost": "17092"
							},
							"internal": {
								"_checkNonPayable()": "infinite",
								"_setAdmin(address)": "infinite",
								"_setBeacon(address)": "infinite",
								"_setImplementation(address)": "infinite",
								"changeAdmin(address)": "infinite",
								"getAdmin()": "infinite",
								"getBeacon()": "infinite",
								"getImplementation()": "infinite",
								"upgradeBeaconToAndCall(address,bytes memory)": "infinite",
								"upgradeToAndCall(address,bytes memory)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 496,
									"end": 6237,
									"name": "PUSH #[$]",
									"source": 6,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 496,
									"end": 6237,
									"name": "PUSH [$]",
									"source": 6,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 496,
									"end": 6237,
									"name": "PUSH",
									"source": 6,
									"value": "B"
								},
								{
									"begin": 496,
									"end": 6237,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 496,
									"end": 6237,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 496,
									"end": 6237,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 496,
									"end": 6237,
									"name": "CODECOPY",
									"source": 6
								},
								{
									"begin": 496,
									"end": 6237,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 496,
									"end": 6237,
									"name": "MLOAD",
									"source": 6
								},
								{
									"begin": 496,
									"end": 6237,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 496,
									"end": 6237,
									"name": "BYTE",
									"source": 6
								},
								{
									"begin": 496,
									"end": 6237,
									"name": "PUSH",
									"source": 6,
									"value": "73"
								},
								{
									"begin": 496,
									"end": 6237,
									"name": "EQ",
									"source": 6
								},
								{
									"begin": 496,
									"end": 6237,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "1"
								},
								{
									"begin": 496,
									"end": 6237,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 496,
									"end": 6237,
									"name": "PUSH",
									"source": 6,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 496,
									"end": 6237,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 496,
									"end": 6237,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 496,
									"end": 6237,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 496,
									"end": 6237,
									"name": "PUSH",
									"source": 6,
									"value": "4"
								},
								{
									"begin": 496,
									"end": 6237,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 496,
									"end": 6237,
									"name": "PUSH",
									"source": 6,
									"value": "24"
								},
								{
									"begin": 496,
									"end": 6237,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 496,
									"end": 6237,
									"name": "REVERT",
									"source": 6
								},
								{
									"begin": 496,
									"end": 6237,
									"name": "tag",
									"source": 6,
									"value": "1"
								},
								{
									"begin": 496,
									"end": 6237,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 496,
									"end": 6237,
									"name": "ADDRESS",
									"source": 6
								},
								{
									"begin": 496,
									"end": 6237,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 496,
									"end": 6237,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 496,
									"end": 6237,
									"name": "PUSH",
									"source": 6,
									"value": "73"
								},
								{
									"begin": 496,
									"end": 6237,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 496,
									"end": 6237,
									"name": "MSTORE8",
									"source": 6
								},
								{
									"begin": 496,
									"end": 6237,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 496,
									"end": 6237,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 496,
									"end": 6237,
									"name": "RETURN",
									"source": 6
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220089058072fc6f42f8f62f38fcf5cfc02f77bb71f0e72f0efc0812efd2799168964736f6c634300081e0033",
									".code": [
										{
											"begin": 496,
											"end": 6237,
											"name": "PUSHDEPLOYADDRESS",
											"source": 6
										},
										{
											"begin": 496,
											"end": 6237,
											"name": "ADDRESS",
											"source": 6
										},
										{
											"begin": 496,
											"end": 6237,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 496,
											"end": 6237,
											"name": "PUSH",
											"source": 6,
											"value": "80"
										},
										{
											"begin": 496,
											"end": 6237,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 496,
											"end": 6237,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 496,
											"end": 6237,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 496,
											"end": 6237,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 496,
											"end": 6237,
											"name": "REVERT",
											"source": 6
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol",
								"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol",
								"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol",
								"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol",
								"@openzeppelin/contracts/interfaces/IERC1967.sol",
								"@openzeppelin/contracts/interfaces/draft-IERC1822.sol",
								"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol",
								"@openzeppelin/contracts/proxy/beacon/IBeacon.sol",
								"@openzeppelin/contracts/token/ERC20/IERC20.sol",
								"@openzeppelin/contracts/utils/Address.sol",
								"@openzeppelin/contracts/utils/Errors.sol",
								"@openzeppelin/contracts/utils/StorageSlot.sol",
								"contracts/RewardManager.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.30+commit.73712a01\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"admin\",\"type\":\"address\"}],\"name\":\"ERC1967InvalidAdmin\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"beacon\",\"type\":\"address\"}],\"name\":\"ERC1967InvalidBeacon\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"implementation\",\"type\":\"address\"}],\"name\":\"ERC1967InvalidImplementation\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ERC1967NonPayable\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"This library provides getters and event emitting update functions for https://eips.ethereum.org/EIPS/eip-1967[ERC-1967] slots.\",\"errors\":{\"ERC1967InvalidAdmin(address)\":[{\"details\":\"The `admin` of the proxy is invalid.\"}],\"ERC1967InvalidBeacon(address)\":[{\"details\":\"The `beacon` of the proxy is invalid.\"}],\"ERC1967InvalidImplementation(address)\":[{\"details\":\"The `implementation` of the proxy is invalid.\"}],\"ERC1967NonPayable()\":[{\"details\":\"An upgrade function sees `msg.value > 0` that may be lost.\"}]},\"kind\":\"dev\",\"methods\":{},\"stateVariables\":{\"ADMIN_SLOT\":{\"details\":\"Storage slot with the admin of the contract. This is the keccak-256 hash of \\\"eip1967.proxy.admin\\\" subtracted by 1.\"},\"BEACON_SLOT\":{\"details\":\"The storage slot of the UpgradeableBeacon contract which defines the implementation for this proxy. This is the keccak-256 hash of \\\"eip1967.proxy.beacon\\\" subtracted by 1.\"},\"IMPLEMENTATION_SLOT\":{\"details\":\"Storage slot with the address of the current implementation. This is the keccak-256 hash of \\\"eip1967.proxy.implementation\\\" subtracted by 1.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":\"ERC1967Utils\"},\"evmVersion\":\"prague\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/IERC1967.sol\":{\"keccak256\":\"0xb25a4f11fa80c702bf5cd85adec90e6f6f507f32f4a8e6f5dbc31e8c10029486\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6917f8a323e7811f041aecd4d9fd6e92455a6fba38a797ac6f6e208c7912b79d\",\"dweb:/ipfs/QmShuYv55wYHGi4EFkDB8QfF7ZCHoKk2efyz3AWY1ExSq7\"]},\"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":{\"keccak256\":\"0x8decfa54cec979c824b044b8128cd91d713f72c71fd7dfa54974624d8c949898\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://271f914261a19d87117a777e0924ada545c16191ef9b00cc40b0134fc14ebc70\",\"dweb:/ipfs/QmdvVNWHGHQrGGPonZJs5NuzTevTjZRM2zayKrDJf7WBA2\"]},\"@openzeppelin/contracts/proxy/beacon/IBeacon.sol\":{\"keccak256\":\"0xc59a78b07b44b2cf2e8ab4175fca91e8eca1eee2df7357b8d2a8833e5ea1f64c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5aa4f07e65444784c29cd7bfcc2341b34381e4e5b5da9f0c5bd00d7f430e66fa\",\"dweb:/ipfs/QmWRMh4Q9DpaU9GvsiXmDdoNYMyyece9if7hnfLz7uqzWM\"]},\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0xaaa1d17c1129b127a4a401db2fbd72960e2671474be3d08cae71ccdc42f7624c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://cb2f27cd3952aa667e198fba0d9b7bcec52fbb12c16f013c25fe6fb52b29cc0e\",\"dweb:/ipfs/QmeuohBFoeyDPZA9JNCTEDz3VBfBD4EABWuWXVhHAuEpKR\"]},\"@openzeppelin/contracts/utils/Errors.sol\":{\"keccak256\":\"0x6afa713bfd42cf0f7656efa91201007ac465e42049d7de1d50753a373648c123\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ba1d02f4847670a1b83dec9f7d37f0b0418d6043447b69f3a29a5f9efc547fcf\",\"dweb:/ipfs/QmQ7iH2keLNUKgq2xSWcRmuBE5eZ3F5whYAkAGzCNNoEWB\"]},\"@openzeppelin/contracts/utils/StorageSlot.sol\":{\"keccak256\":\"0xcf74f855663ce2ae00ed8352666b7935f6cddea2932fdf2c3ecd30a9b1cd0e97\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9f660b1f351b757dfe01438e59888f31f33ded3afcf5cb5b0d9bf9aa6f320a8b\",\"dweb:/ipfs/QmarDJ5hZEgBtCmmrVzEZWjub9769eD686jmzb2XpSU1cM\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/proxy/beacon/IBeacon.sol": {
				"IBeacon": {
					"abi": [
						{
							"inputs": [],
							"name": "implementation",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "This is the interface that {BeaconProxy} expects of its beacon.",
						"kind": "dev",
						"methods": {
							"implementation()": {
								"details": "Must return an address that can be used as a delegate call target. {UpgradeableBeacon} will check that this address is a contract."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"implementation()": "5c60da1b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.30+commit.73712a01\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"implementation\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"This is the interface that {BeaconProxy} expects of its beacon.\",\"kind\":\"dev\",\"methods\":{\"implementation()\":{\"details\":\"Must return an address that can be used as a delegate call target. {UpgradeableBeacon} will check that this address is a contract.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/proxy/beacon/IBeacon.sol\":\"IBeacon\"},\"evmVersion\":\"prague\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/proxy/beacon/IBeacon.sol\":{\"keccak256\":\"0xc59a78b07b44b2cf2e8ab4175fca91e8eca1eee2df7357b8d2a8833e5ea1f64c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5aa4f07e65444784c29cd7bfcc2341b34381e4e5b5da9f0c5bd00d7f430e66fa\",\"dweb:/ipfs/QmWRMh4Q9DpaU9GvsiXmDdoNYMyyece9if7hnfLz7uqzWM\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"IERC20": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC-20 standard as defined in the ERC.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the value of tokens owned by `account`."
							},
							"totalSupply()": {
								"details": "Returns the value of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.30+commit.73712a01\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC-20 standard as defined in the ERC.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":\"IERC20\"},\"evmVersion\":\"prague\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/Address.sol": {
				"Address": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "target",
									"type": "address"
								}
							],
							"name": "AddressEmptyCode",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Collection of functions related to the address type",
						"errors": {
							"AddressEmptyCode(address)": [
								{
									"details": "There's no code at `target` (it is not a contract)."
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts/utils/Address.sol\":233:6048  library Address {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts/utils/Address.sol\":233:6048  library Address {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      revert(0x00, 0x00)\n\n    auxdata: 0xa264697066735822122016bd345b94ef3845ef4ed93445c8d5f14e5010d9c744bb2ec9847009404477d664736f6c634300081e0033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "6055604b600b8282823980515f1a607314603f577f4e487b71000000000000000000000000000000000000000000000000000000005f525f60045260245ffd5b305f52607381538281f3fe730000000000000000000000000000000000000000301460806040525f5ffdfea264697066735822122016bd345b94ef3845ef4ed93445c8d5f14e5010d9c744bb2ec9847009404477d664736f6c634300081e0033",
							"opcodes": "PUSH1 0x55 PUSH1 0x4B PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH0 BYTE PUSH1 0x73 EQ PUSH1 0x3F JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST ADDRESS PUSH0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 PUSH0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 AND 0xBD CALLVALUE JUMPDEST SWAP5 0xEF CODESIZE GASLIMIT 0xEF 0x4E 0xD9 CALLVALUE GASLIMIT 0xC8 0xD5 CALL 0x4E POP LT 0xD9 0xC7 PREVRANDAO 0xBB 0x2E 0xC9 DUP5 PUSH17 0x9404477D664736F6C634300081E003300 ",
							"sourceMap": "233:5815:9:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "730000000000000000000000000000000000000000301460806040525f5ffdfea264697066735822122016bd345b94ef3845ef4ed93445c8d5f14e5010d9c744bb2ec9847009404477d664736f6c634300081e0033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 PUSH0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 AND 0xBD CALLVALUE JUMPDEST SWAP5 0xEF CODESIZE GASLIMIT 0xEF 0x4E 0xD9 CALLVALUE GASLIMIT 0xC8 0xD5 CALL 0x4E POP LT 0xD9 0xC7 PREVRANDAO 0xBB 0x2E 0xC9 DUP5 PUSH17 0x9404477D664736F6C634300081E003300 ",
							"sourceMap": "233:5815:9:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17000",
								"executionCost": "92",
								"totalCost": "17092"
							},
							"internal": {
								"_revert(bytes memory)": "infinite",
								"functionCall(address,bytes memory)": "infinite",
								"functionCallWithValue(address,bytes memory,uint256)": "infinite",
								"functionDelegateCall(address,bytes memory)": "infinite",
								"functionStaticCall(address,bytes memory)": "infinite",
								"sendValue(address payable,uint256)": "infinite",
								"verifyCallResult(bool,bytes memory)": "infinite",
								"verifyCallResultFromTarget(address,bool,bytes memory)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 233,
									"end": 6048,
									"name": "PUSH #[$]",
									"source": 9,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 233,
									"end": 6048,
									"name": "PUSH [$]",
									"source": 9,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 233,
									"end": 6048,
									"name": "PUSH",
									"source": 9,
									"value": "B"
								},
								{
									"begin": 233,
									"end": 6048,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 233,
									"end": 6048,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 233,
									"end": 6048,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 233,
									"end": 6048,
									"name": "CODECOPY",
									"source": 9
								},
								{
									"begin": 233,
									"end": 6048,
									"name": "DUP1",
									"source": 9
								},
								{
									"begin": 233,
									"end": 6048,
									"name": "MLOAD",
									"source": 9
								},
								{
									"begin": 233,
									"end": 6048,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 233,
									"end": 6048,
									"name": "BYTE",
									"source": 9
								},
								{
									"begin": 233,
									"end": 6048,
									"name": "PUSH",
									"source": 9,
									"value": "73"
								},
								{
									"begin": 233,
									"end": 6048,
									"name": "EQ",
									"source": 9
								},
								{
									"begin": 233,
									"end": 6048,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "1"
								},
								{
									"begin": 233,
									"end": 6048,
									"name": "JUMPI",
									"source": 9
								},
								{
									"begin": 233,
									"end": 6048,
									"name": "PUSH",
									"source": 9,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 233,
									"end": 6048,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 233,
									"end": 6048,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 233,
									"end": 6048,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 233,
									"end": 6048,
									"name": "PUSH",
									"source": 9,
									"value": "4"
								},
								{
									"begin": 233,
									"end": 6048,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 233,
									"end": 6048,
									"name": "PUSH",
									"source": 9,
									"value": "24"
								},
								{
									"begin": 233,
									"end": 6048,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 233,
									"end": 6048,
									"name": "REVERT",
									"source": 9
								},
								{
									"begin": 233,
									"end": 6048,
									"name": "tag",
									"source": 9,
									"value": "1"
								},
								{
									"begin": 233,
									"end": 6048,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 233,
									"end": 6048,
									"name": "ADDRESS",
									"source": 9
								},
								{
									"begin": 233,
									"end": 6048,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 233,
									"end": 6048,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 233,
									"end": 6048,
									"name": "PUSH",
									"source": 9,
									"value": "73"
								},
								{
									"begin": 233,
									"end": 6048,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 233,
									"end": 6048,
									"name": "MSTORE8",
									"source": 9
								},
								{
									"begin": 233,
									"end": 6048,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 233,
									"end": 6048,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 233,
									"end": 6048,
									"name": "RETURN",
									"source": 9
								}
							],
							".data": {
								"0": {
									".auxdata": "a264697066735822122016bd345b94ef3845ef4ed93445c8d5f14e5010d9c744bb2ec9847009404477d664736f6c634300081e0033",
									".code": [
										{
											"begin": 233,
											"end": 6048,
											"name": "PUSHDEPLOYADDRESS",
											"source": 9
										},
										{
											"begin": 233,
											"end": 6048,
											"name": "ADDRESS",
											"source": 9
										},
										{
											"begin": 233,
											"end": 6048,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 233,
											"end": 6048,
											"name": "PUSH",
											"source": 9,
											"value": "80"
										},
										{
											"begin": 233,
											"end": 6048,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 233,
											"end": 6048,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 233,
											"end": 6048,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 233,
											"end": 6048,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 233,
											"end": 6048,
											"name": "REVERT",
											"source": 9
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol",
								"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol",
								"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol",
								"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol",
								"@openzeppelin/contracts/interfaces/IERC1967.sol",
								"@openzeppelin/contracts/interfaces/draft-IERC1822.sol",
								"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol",
								"@openzeppelin/contracts/proxy/beacon/IBeacon.sol",
								"@openzeppelin/contracts/token/ERC20/IERC20.sol",
								"@openzeppelin/contracts/utils/Address.sol",
								"@openzeppelin/contracts/utils/Errors.sol",
								"@openzeppelin/contracts/utils/StorageSlot.sol",
								"contracts/RewardManager.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.30+commit.73712a01\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"}],\"name\":\"AddressEmptyCode\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Collection of functions related to the address type\",\"errors\":{\"AddressEmptyCode(address)\":[{\"details\":\"There's no code at `target` (it is not a contract).\"}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Address.sol\":\"Address\"},\"evmVersion\":\"prague\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0xaaa1d17c1129b127a4a401db2fbd72960e2671474be3d08cae71ccdc42f7624c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://cb2f27cd3952aa667e198fba0d9b7bcec52fbb12c16f013c25fe6fb52b29cc0e\",\"dweb:/ipfs/QmeuohBFoeyDPZA9JNCTEDz3VBfBD4EABWuWXVhHAuEpKR\"]},\"@openzeppelin/contracts/utils/Errors.sol\":{\"keccak256\":\"0x6afa713bfd42cf0f7656efa91201007ac465e42049d7de1d50753a373648c123\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ba1d02f4847670a1b83dec9f7d37f0b0418d6043447b69f3a29a5f9efc547fcf\",\"dweb:/ipfs/QmQ7iH2keLNUKgq2xSWcRmuBE5eZ3F5whYAkAGzCNNoEWB\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/Errors.sol": {
				"Errors": {
					"abi": [
						{
							"inputs": [],
							"name": "FailedCall",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "FailedDeployment",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"name": "MissingPrecompile",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Collection of common custom errors used in multiple contracts IMPORTANT: Backwards compatibility is not guaranteed in future versions of the library. It is recommended to avoid relying on the error API for critical functionality. _Available since v5.1._",
						"errors": {
							"FailedCall()": [
								{
									"details": "A call to an address target failed. The target may have reverted."
								}
							],
							"FailedDeployment()": [
								{
									"details": "The deployment failed."
								}
							],
							"InsufficientBalance(uint256,uint256)": [
								{
									"details": "The ETH balance of the account is not enough to perform the operation."
								}
							],
							"MissingPrecompile(address)": [
								{
									"details": "A necessary precompile is missing."
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts/utils/Errors.sol\":411:895  library Errors {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts/utils/Errors.sol\":411:895  library Errors {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      revert(0x00, 0x00)\n\n    auxdata: 0xa264697066735822122070b7bdd8bfafafcaf4815a18409339c23cd54fa7ea05f55990da1c7a945d265e64736f6c634300081e0033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "6055604b600b8282823980515f1a607314603f577f4e487b71000000000000000000000000000000000000000000000000000000005f525f60045260245ffd5b305f52607381538281f3fe730000000000000000000000000000000000000000301460806040525f5ffdfea264697066735822122070b7bdd8bfafafcaf4815a18409339c23cd54fa7ea05f55990da1c7a945d265e64736f6c634300081e0033",
							"opcodes": "PUSH1 0x55 PUSH1 0x4B PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH0 BYTE PUSH1 0x73 EQ PUSH1 0x3F JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST ADDRESS PUSH0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 PUSH0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH17 0xB7BDD8BFAFAFCAF4815A18409339C23CD5 0x4F 0xA7 0xEA SDIV CREATE2 MSIZE SWAP1 0xDA SHR PUSH27 0x945D265E64736F6C634300081E0033000000000000000000000000 ",
							"sourceMap": "411:484:10:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "730000000000000000000000000000000000000000301460806040525f5ffdfea264697066735822122070b7bdd8bfafafcaf4815a18409339c23cd54fa7ea05f55990da1c7a945d265e64736f6c634300081e0033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 PUSH0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH17 0xB7BDD8BFAFAFCAF4815A18409339C23CD5 0x4F 0xA7 0xEA SDIV CREATE2 MSIZE SWAP1 0xDA SHR PUSH27 0x945D265E64736F6C634300081E0033000000000000000000000000 ",
							"sourceMap": "411:484:10:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17000",
								"executionCost": "92",
								"totalCost": "17092"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 411,
									"end": 895,
									"name": "PUSH #[$]",
									"source": 10,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 411,
									"end": 895,
									"name": "PUSH [$]",
									"source": 10,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 411,
									"end": 895,
									"name": "PUSH",
									"source": 10,
									"value": "B"
								},
								{
									"begin": 411,
									"end": 895,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 411,
									"end": 895,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 411,
									"end": 895,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 411,
									"end": 895,
									"name": "CODECOPY",
									"source": 10
								},
								{
									"begin": 411,
									"end": 895,
									"name": "DUP1",
									"source": 10
								},
								{
									"begin": 411,
									"end": 895,
									"name": "MLOAD",
									"source": 10
								},
								{
									"begin": 411,
									"end": 895,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 411,
									"end": 895,
									"name": "BYTE",
									"source": 10
								},
								{
									"begin": 411,
									"end": 895,
									"name": "PUSH",
									"source": 10,
									"value": "73"
								},
								{
									"begin": 411,
									"end": 895,
									"name": "EQ",
									"source": 10
								},
								{
									"begin": 411,
									"end": 895,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "1"
								},
								{
									"begin": 411,
									"end": 895,
									"name": "JUMPI",
									"source": 10
								},
								{
									"begin": 411,
									"end": 895,
									"name": "PUSH",
									"source": 10,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 411,
									"end": 895,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 411,
									"end": 895,
									"name": "MSTORE",
									"source": 10
								},
								{
									"begin": 411,
									"end": 895,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 411,
									"end": 895,
									"name": "PUSH",
									"source": 10,
									"value": "4"
								},
								{
									"begin": 411,
									"end": 895,
									"name": "MSTORE",
									"source": 10
								},
								{
									"begin": 411,
									"end": 895,
									"name": "PUSH",
									"source": 10,
									"value": "24"
								},
								{
									"begin": 411,
									"end": 895,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 411,
									"end": 895,
									"name": "REVERT",
									"source": 10
								},
								{
									"begin": 411,
									"end": 895,
									"name": "tag",
									"source": 10,
									"value": "1"
								},
								{
									"begin": 411,
									"end": 895,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 411,
									"end": 895,
									"name": "ADDRESS",
									"source": 10
								},
								{
									"begin": 411,
									"end": 895,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 411,
									"end": 895,
									"name": "MSTORE",
									"source": 10
								},
								{
									"begin": 411,
									"end": 895,
									"name": "PUSH",
									"source": 10,
									"value": "73"
								},
								{
									"begin": 411,
									"end": 895,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 411,
									"end": 895,
									"name": "MSTORE8",
									"source": 10
								},
								{
									"begin": 411,
									"end": 895,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 411,
									"end": 895,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 411,
									"end": 895,
									"name": "RETURN",
									"source": 10
								}
							],
							".data": {
								"0": {
									".auxdata": "a264697066735822122070b7bdd8bfafafcaf4815a18409339c23cd54fa7ea05f55990da1c7a945d265e64736f6c634300081e0033",
									".code": [
										{
											"begin": 411,
											"end": 895,
											"name": "PUSHDEPLOYADDRESS",
											"source": 10
										},
										{
											"begin": 411,
											"end": 895,
											"name": "ADDRESS",
											"source": 10
										},
										{
											"begin": 411,
											"end": 895,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 411,
											"end": 895,
											"name": "PUSH",
											"source": 10,
											"value": "80"
										},
										{
											"begin": 411,
											"end": 895,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 411,
											"end": 895,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 411,
											"end": 895,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 411,
											"end": 895,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 411,
											"end": 895,
											"name": "REVERT",
											"source": 10
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol",
								"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol",
								"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol",
								"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol",
								"@openzeppelin/contracts/interfaces/IERC1967.sol",
								"@openzeppelin/contracts/interfaces/draft-IERC1822.sol",
								"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol",
								"@openzeppelin/contracts/proxy/beacon/IBeacon.sol",
								"@openzeppelin/contracts/token/ERC20/IERC20.sol",
								"@openzeppelin/contracts/utils/Address.sol",
								"@openzeppelin/contracts/utils/Errors.sol",
								"@openzeppelin/contracts/utils/StorageSlot.sol",
								"contracts/RewardManager.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.30+commit.73712a01\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"FailedCall\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"FailedDeployment\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"MissingPrecompile\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Collection of common custom errors used in multiple contracts IMPORTANT: Backwards compatibility is not guaranteed in future versions of the library. It is recommended to avoid relying on the error API for critical functionality. _Available since v5.1._\",\"errors\":{\"FailedCall()\":[{\"details\":\"A call to an address target failed. The target may have reverted.\"}],\"FailedDeployment()\":[{\"details\":\"The deployment failed.\"}],\"InsufficientBalance(uint256,uint256)\":[{\"details\":\"The ETH balance of the account is not enough to perform the operation.\"}],\"MissingPrecompile(address)\":[{\"details\":\"A necessary precompile is missing.\"}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Errors.sol\":\"Errors\"},\"evmVersion\":\"prague\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Errors.sol\":{\"keccak256\":\"0x6afa713bfd42cf0f7656efa91201007ac465e42049d7de1d50753a373648c123\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ba1d02f4847670a1b83dec9f7d37f0b0418d6043447b69f3a29a5f9efc547fcf\",\"dweb:/ipfs/QmQ7iH2keLNUKgq2xSWcRmuBE5eZ3F5whYAkAGzCNNoEWB\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/StorageSlot.sol": {
				"StorageSlot": {
					"abi": [],
					"devdoc": {
						"details": "Library for reading and writing primitive types to specific storage slots. Storage slots are often used to avoid storage conflict when dealing with upgradeable contracts. This library helps with reading and writing to such slots without the need for inline assembly. The functions in this library return Slot structs that contain a `value` member that can be used to read or write. Example usage to set ERC-1967 implementation slot: ```solidity contract ERC1967 {     // Define the slot. Alternatively, use the SlotDerivation library to derive the slot.     bytes32 internal constant _IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc;     function _getImplementation() internal view returns (address) {         return StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value;     }     function _setImplementation(address newImplementation) internal {         require(newImplementation.code.length > 0);         StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value = newImplementation;     } } ``` TIP: Consider using this library along with {SlotDerivation}.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts/utils/StorageSlot.sol\":1407:4181  library StorageSlot {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts/utils/StorageSlot.sol\":1407:4181  library StorageSlot {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      revert(0x00, 0x00)\n\n    auxdata: 0xa26469706673582212204a25b37743574a9bd3df8f6a8c08ff91930e443dfdca74f77c843cbdc2cbeaf064736f6c634300081e0033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "6055604b600b8282823980515f1a607314603f577f4e487b71000000000000000000000000000000000000000000000000000000005f525f60045260245ffd5b305f52607381538281f3fe730000000000000000000000000000000000000000301460806040525f5ffdfea26469706673582212204a25b37743574a9bd3df8f6a8c08ff91930e443dfdca74f77c843cbdc2cbeaf064736f6c634300081e0033",
							"opcodes": "PUSH1 0x55 PUSH1 0x4B PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH0 BYTE PUSH1 0x73 EQ PUSH1 0x3F JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST ADDRESS PUSH0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 PUSH0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 BLOBBASEFEE 0x25 0xB3 PUSH24 0x43574A9BD3DF8F6A8C08FF91930E443DFDCA74F77C843CBD 0xC2 0xCB 0xEA CREATE PUSH5 0x736F6C6343 STOP ADDMOD 0x1E STOP CALLER ",
							"sourceMap": "1407:2774:11:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "730000000000000000000000000000000000000000301460806040525f5ffdfea26469706673582212204a25b37743574a9bd3df8f6a8c08ff91930e443dfdca74f77c843cbdc2cbeaf064736f6c634300081e0033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 PUSH0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 BLOBBASEFEE 0x25 0xB3 PUSH24 0x43574A9BD3DF8F6A8C08FF91930E443DFDCA74F77C843CBD 0xC2 0xCB 0xEA CREATE PUSH5 0x736F6C6343 STOP ADDMOD 0x1E STOP CALLER ",
							"sourceMap": "1407:2774:11:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17000",
								"executionCost": "92",
								"totalCost": "17092"
							},
							"internal": {
								"getAddressSlot(bytes32)": "infinite",
								"getBooleanSlot(bytes32)": "infinite",
								"getBytes32Slot(bytes32)": "infinite",
								"getBytesSlot(bytes storage pointer)": "infinite",
								"getBytesSlot(bytes32)": "infinite",
								"getInt256Slot(bytes32)": "infinite",
								"getStringSlot(bytes32)": "infinite",
								"getStringSlot(string storage pointer)": "infinite",
								"getUint256Slot(bytes32)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 1407,
									"end": 4181,
									"name": "PUSH #[$]",
									"source": 11,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1407,
									"end": 4181,
									"name": "PUSH [$]",
									"source": 11,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1407,
									"end": 4181,
									"name": "PUSH",
									"source": 11,
									"value": "B"
								},
								{
									"begin": 1407,
									"end": 4181,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 1407,
									"end": 4181,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 1407,
									"end": 4181,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 1407,
									"end": 4181,
									"name": "CODECOPY",
									"source": 11
								},
								{
									"begin": 1407,
									"end": 4181,
									"name": "DUP1",
									"source": 11
								},
								{
									"begin": 1407,
									"end": 4181,
									"name": "MLOAD",
									"source": 11
								},
								{
									"begin": 1407,
									"end": 4181,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 1407,
									"end": 4181,
									"name": "BYTE",
									"source": 11
								},
								{
									"begin": 1407,
									"end": 4181,
									"name": "PUSH",
									"source": 11,
									"value": "73"
								},
								{
									"begin": 1407,
									"end": 4181,
									"name": "EQ",
									"source": 11
								},
								{
									"begin": 1407,
									"end": 4181,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "1"
								},
								{
									"begin": 1407,
									"end": 4181,
									"name": "JUMPI",
									"source": 11
								},
								{
									"begin": 1407,
									"end": 4181,
									"name": "PUSH",
									"source": 11,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1407,
									"end": 4181,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 1407,
									"end": 4181,
									"name": "MSTORE",
									"source": 11
								},
								{
									"begin": 1407,
									"end": 4181,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 1407,
									"end": 4181,
									"name": "PUSH",
									"source": 11,
									"value": "4"
								},
								{
									"begin": 1407,
									"end": 4181,
									"name": "MSTORE",
									"source": 11
								},
								{
									"begin": 1407,
									"end": 4181,
									"name": "PUSH",
									"source": 11,
									"value": "24"
								},
								{
									"begin": 1407,
									"end": 4181,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 1407,
									"end": 4181,
									"name": "REVERT",
									"source": 11
								},
								{
									"begin": 1407,
									"end": 4181,
									"name": "tag",
									"source": 11,
									"value": "1"
								},
								{
									"begin": 1407,
									"end": 4181,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 1407,
									"end": 4181,
									"name": "ADDRESS",
									"source": 11
								},
								{
									"begin": 1407,
									"end": 4181,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 1407,
									"end": 4181,
									"name": "MSTORE",
									"source": 11
								},
								{
									"begin": 1407,
									"end": 4181,
									"name": "PUSH",
									"source": 11,
									"value": "73"
								},
								{
									"begin": 1407,
									"end": 4181,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 1407,
									"end": 4181,
									"name": "MSTORE8",
									"source": 11
								},
								{
									"begin": 1407,
									"end": 4181,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 1407,
									"end": 4181,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 1407,
									"end": 4181,
									"name": "RETURN",
									"source": 11
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212204a25b37743574a9bd3df8f6a8c08ff91930e443dfdca74f77c843cbdc2cbeaf064736f6c634300081e0033",
									".code": [
										{
											"begin": 1407,
											"end": 4181,
											"name": "PUSHDEPLOYADDRESS",
											"source": 11
										},
										{
											"begin": 1407,
											"end": 4181,
											"name": "ADDRESS",
											"source": 11
										},
										{
											"begin": 1407,
											"end": 4181,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 1407,
											"end": 4181,
											"name": "PUSH",
											"source": 11,
											"value": "80"
										},
										{
											"begin": 1407,
											"end": 4181,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 1407,
											"end": 4181,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 1407,
											"end": 4181,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 1407,
											"end": 4181,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 1407,
											"end": 4181,
											"name": "REVERT",
											"source": 11
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol",
								"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol",
								"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol",
								"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol",
								"@openzeppelin/contracts/interfaces/IERC1967.sol",
								"@openzeppelin/contracts/interfaces/draft-IERC1822.sol",
								"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol",
								"@openzeppelin/contracts/proxy/beacon/IBeacon.sol",
								"@openzeppelin/contracts/token/ERC20/IERC20.sol",
								"@openzeppelin/contracts/utils/Address.sol",
								"@openzeppelin/contracts/utils/Errors.sol",
								"@openzeppelin/contracts/utils/StorageSlot.sol",
								"contracts/RewardManager.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.30+commit.73712a01\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Library for reading and writing primitive types to specific storage slots. Storage slots are often used to avoid storage conflict when dealing with upgradeable contracts. This library helps with reading and writing to such slots without the need for inline assembly. The functions in this library return Slot structs that contain a `value` member that can be used to read or write. Example usage to set ERC-1967 implementation slot: ```solidity contract ERC1967 {     // Define the slot. Alternatively, use the SlotDerivation library to derive the slot.     bytes32 internal constant _IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc;     function _getImplementation() internal view returns (address) {         return StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value;     }     function _setImplementation(address newImplementation) internal {         require(newImplementation.code.length > 0);         StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value = newImplementation;     } } ``` TIP: Consider using this library along with {SlotDerivation}.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/StorageSlot.sol\":\"StorageSlot\"},\"evmVersion\":\"prague\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/StorageSlot.sol\":{\"keccak256\":\"0xcf74f855663ce2ae00ed8352666b7935f6cddea2932fdf2c3ecd30a9b1cd0e97\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9f660b1f351b757dfe01438e59888f31f33ded3afcf5cb5b0d9bf9aa6f320a8b\",\"dweb:/ipfs/QmarDJ5hZEgBtCmmrVzEZWjub9769eD686jmzb2XpSU1cM\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/RewardManager.sol": {
				"RewardManager": {
					"abi": [
						{
							"inputs": [],
							"name": "InvalidInitialization",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "NotInitializing",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "OwnableInvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "OwnableUnauthorizedAccount",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint64",
									"name": "version",
									"type": "uint64"
								}
							],
							"name": "Initialized",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "user",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "points",
									"type": "uint256"
								}
							],
							"name": "RewardDistributed",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "user",
									"type": "address"
								}
							],
							"name": "calculateReward",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "user",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "reward",
									"type": "uint256"
								}
							],
							"name": "distributeReward",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_fee",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "_maxPoints",
									"type": "uint256"
								}
							],
							"name": "initialize",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "maxRewardPoints",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "platformFee",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "rewardToken",
							"outputs": [
								{
									"internalType": "contract IERC20",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_token",
									"type": "address"
								}
							],
							"name": "setRewardToken",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_ucpi",
									"type": "address"
								}
							],
							"name": "setUCPIContract",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "ucpiContract",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"errors": {
							"InvalidInitialization()": [
								{
									"details": "The contract is already initialized."
								}
							],
							"NotInitializing()": [
								{
									"details": "The contract is not initializing."
								}
							],
							"OwnableInvalidOwner(address)": [
								{
									"details": "The owner is not a valid owner account. (eg. `address(0)`)"
								}
							],
							"OwnableUnauthorizedAccount(address)": [
								{
									"details": "The caller account is not authorized to perform an operation."
								}
							]
						},
						"events": {
							"Initialized(uint64)": {
								"details": "Triggered when the contract has been initialized or reinitialized."
							}
						},
						"kind": "dev",
						"methods": {
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/RewardManager.sol\":356:2098  contract RewardManager is Initializable, OwnableUpgradeable {... */\n  mstore(0x40, 0x80)\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  revert(0x00, 0x00)\ntag_1:\n  pop\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/RewardManager.sol\":356:2098  contract RewardManager is Initializable, OwnableUpgradeable {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      revert(0x00, 0x00)\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0xb1a5232e\n      gt\n      tag_15\n      jumpi\n      dup1\n      0xb1a5232e\n      eq\n      tag_9\n      jumpi\n      dup1\n      0xde5b71f7\n      eq\n      tag_10\n      jumpi\n      dup1\n      0xe4a30116\n      eq\n      tag_11\n      jumpi\n      dup1\n      0xf2fde38b\n      eq\n      tag_12\n      jumpi\n      dup1\n      0xf7c618c1\n      eq\n      tag_13\n      jumpi\n      dup1\n      0xfe95fc1a\n      eq\n      tag_14\n      jumpi\n      jump(tag_2)\n    tag_15:\n      dup1\n      0x26232a2e\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x49880782\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x715018a6\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x8aee8127\n      eq\n      tag_6\n      jumpi\n      dup1\n      0x8da5cb5b\n      eq\n      tag_7\n      jumpi\n      dup1\n      0xa18f07a0\n      eq\n      tag_8\n      jumpi\n    tag_2:\n      revert(0x00, 0x00)\n        /* \"contracts/RewardManager.sol\":423:449  uint256 public platformFee */\n    tag_3:\n      tag_16\n      tag_17\n      jump\t// in\n    tag_16:\n      mload(0x40)\n      tag_18\n      swap2\n      swap1\n      tag_19\n      jump\t// in\n    tag_18:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/RewardManager.sol\":456:486  uint256 public maxRewardPoints */\n    tag_4:\n      tag_20\n      tag_21\n      jump\t// in\n    tag_20:\n      mload(0x40)\n      tag_22\n      swap2\n      swap1\n      tag_19\n      jump\t// in\n    tag_22:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3155:3256  function renounceOwnership() public virtual onlyOwner {... */\n    tag_5:\n      tag_23\n      tag_24\n      jump\t// in\n    tag_23:\n      stop\n        /* \"contracts/RewardManager.sol\":931:1037  function setRewardToken(address _token) external onlyOwner {... */\n    tag_6:\n      tag_25\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_26\n      swap2\n      swap1\n      tag_27\n      jump\t// in\n    tag_26:\n      tag_28\n      jump\t// in\n    tag_25:\n      stop\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2441:2585  function owner() public view virtual returns (address) {... */\n    tag_7:\n      tag_29\n      tag_30\n      jump\t// in\n    tag_29:\n      mload(0x40)\n      tag_31\n      swap2\n      swap1\n      tag_32\n      jump\t// in\n    tag_31:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/RewardManager.sol\":1650:2095  function calculateReward(uint256 amount, address user) external view returns (uint256) {... */\n    tag_8:\n      tag_33\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_34\n      swap2\n      swap1\n      tag_35\n      jump\t// in\n    tag_34:\n      tag_36\n      jump\t// in\n    tag_33:\n      mload(0x40)\n      tag_37\n      swap2\n      swap1\n      tag_19\n      jump\t// in\n    tag_37:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/RewardManager.sol\":525:552  address public ucpiContract */\n    tag_9:\n      tag_38\n      tag_39\n      jump\t// in\n    tag_38:\n      mload(0x40)\n      tag_40\n      swap2\n      swap1\n      tag_32\n      jump\t// in\n    tag_40:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/RewardManager.sol\":1191:1639  function distributeReward(address user, uint256 amount, uint256 reward) external onlyUCPIOrOwner {... */\n    tag_10:\n      tag_41\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_42\n      swap2\n      swap1\n      tag_43\n      jump\t// in\n    tag_42:\n      tag_44\n      jump\t// in\n    tag_41:\n      stop\n        /* \"contracts/RewardManager.sol\":631:817  function initialize(uint256 _fee, uint256 _maxPoints) public initializer {... */\n    tag_11:\n      tag_45\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_46\n      swap2\n      swap1\n      tag_47\n      jump\t// in\n    tag_46:\n      tag_48\n      jump\t// in\n    tag_45:\n      stop\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3405:3620  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_12:\n      tag_49\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_50\n      swap2\n      swap1\n      tag_27\n      jump\t// in\n    tag_50:\n      tag_51\n      jump\t// in\n    tag_49:\n      stop\n        /* \"contracts/RewardManager.sol\":493:518  IERC20 public rewardToken */\n    tag_13:\n      tag_52\n      tag_53\n      jump\t// in\n    tag_52:\n      mload(0x40)\n      tag_54\n      swap2\n      swap1\n      tag_55\n      jump\t// in\n    tag_54:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/RewardManager.sol\":825:923  function setUCPIContract(address _ucpi) external onlyOwner {... */\n    tag_14:\n      tag_56\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_57\n      swap2\n      swap1\n      tag_27\n      jump\t// in\n    tag_57:\n      tag_58\n      jump\t// in\n    tag_56:\n      stop\n        /* \"contracts/RewardManager.sol\":423:449  uint256 public platformFee */\n    tag_17:\n      sload(0x00)\n      dup2\n      jump\t// out\n        /* \"contracts/RewardManager.sol\":456:486  uint256 public maxRewardPoints */\n    tag_21:\n      sload(0x01)\n      dup2\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3155:3256  function renounceOwnership() public virtual onlyOwner {... */\n    tag_24:\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2334:2347  _checkOwner() */\n      tag_60\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2334:2345  _checkOwner */\n      tag_61\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2334:2347  _checkOwner() */\n      jump\t// in\n    tag_60:\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3219:3249  _transferOwnership(address(0)) */\n      tag_63\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3246:3247  0 */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3219:3237  _transferOwnership */\n      tag_64\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3219:3249  _transferOwnership(address(0)) */\n      jump\t// in\n    tag_63:\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3155:3256  function renounceOwnership() public virtual onlyOwner {... */\n      jump\t// out\n        /* \"contracts/RewardManager.sol\":931:1037  function setRewardToken(address _token) external onlyOwner {... */\n    tag_28:\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2334:2347  _checkOwner() */\n      tag_66\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2334:2345  _checkOwner */\n      tag_61\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2334:2347  _checkOwner() */\n      jump\t// in\n    tag_66:\n        /* \"contracts/RewardManager.sol\":1022:1028  _token */\n      dup1\n        /* \"contracts/RewardManager.sol\":1001:1012  rewardToken */\n      0x02\n      0x00\n        /* \"contracts/RewardManager.sol\":1001:1029  rewardToken = IERC20(_token) */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"contracts/RewardManager.sol\":931:1037  function setRewardToken(address _token) external onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2441:2585  function owner() public view virtual returns (address) {... */\n    tag_30:\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2487:2494  address */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2506:2530  OwnableStorage storage $ */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2533:2553  _getOwnableStorage() */\n      tag_69\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2533:2551  _getOwnableStorage */\n      tag_70\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2533:2553  _getOwnableStorage() */\n      jump\t// in\n    tag_69:\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2506:2553  OwnableStorage storage $ = _getOwnableStorage() */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2570:2571  $ */\n      dup1\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2570:2578  $._owner */\n      0x00\n      add\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2563:2578  return $._owner */\n      swap2\n      pop\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2441:2585  function owner() public view virtual returns (address) {... */\n      swap1\n      jump\t// out\n        /* \"contracts/RewardManager.sol\":1650:2095  function calculateReward(uint256 amount, address user) external view returns (uint256) {... */\n    tag_36:\n        /* \"contracts/RewardManager.sol\":1728:1735  uint256 */\n      0x00\n        /* \"contracts/RewardManager.sol\":1748:1766  uint256 baseReward */\n      0x00\n        /* \"contracts/RewardManager.sol\":1792:1797  10000 */\n      0x2710\n        /* \"contracts/RewardManager.sol\":1778:1789  platformFee */\n      sload(0x00)\n        /* \"contracts/RewardManager.sol\":1769:1775  amount */\n      dup6\n        /* \"contracts/RewardManager.sol\":1769:1789  amount * platformFee */\n      tag_72\n      swap2\n      swap1\n      tag_73\n      jump\t// in\n    tag_72:\n        /* \"contracts/RewardManager.sol\":1769:1797  amount * platformFee / 10000 */\n      tag_74\n      swap2\n      swap1\n      tag_75\n      jump\t// in\n    tag_74:\n        /* \"contracts/RewardManager.sol\":1748:1797  uint256 baseReward = amount * platformFee / 10000 */\n      swap1\n      pop\n        /* \"contracts/RewardManager.sol\":1864:1877  uint256 bonus */\n      0x00\n        /* \"contracts/RewardManager.sol\":1970:1971  1 */\n      0x01\n        /* \"contracts/RewardManager.sol\":1964:1967  100 */\n      0x64\n        /* \"contracts/RewardManager.sol\":1951:1961  baseReward */\n      dup4\n        /* \"contracts/RewardManager.sol\":1951:1967  baseReward / 100 */\n      tag_76\n      swap2\n      swap1\n      tag_75\n      jump\t// in\n    tag_76:\n        /* \"contracts/RewardManager.sol\":1951:1971  baseReward / 100 + 1 */\n      tag_77\n      swap2\n      swap1\n      tag_78\n      jump\t// in\n    tag_77:\n        /* \"contracts/RewardManager.sol\":1915:1919  user */\n      dup5\n        /* \"contracts/RewardManager.sol\":1921:1936  block.timestamp */\n      timestamp\n        /* \"contracts/RewardManager.sol\":1938:1944  amount */\n      dup8\n        /* \"contracts/RewardManager.sol\":1898:1945  abi.encodePacked(user, block.timestamp, amount) */\n      add(0x20, mload(0x40))\n      tag_79\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_80\n      jump\t// in\n    tag_79:\n      mload(0x40)\n      0x20\n      dup2\n      dup4\n      sub\n      sub\n      dup2\n      mstore\n      swap1\n      0x40\n      mstore\n        /* \"contracts/RewardManager.sol\":1888:1946  keccak256(abi.encodePacked(user, block.timestamp, amount)) */\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      keccak256\n        /* \"contracts/RewardManager.sol\":1880:1947  uint256(keccak256(abi.encodePacked(user, block.timestamp, amount))) */\n      0x00\n      shr\n        /* \"contracts/RewardManager.sol\":1880:1972  uint256(keccak256(abi.encodePacked(user, block.timestamp, amount))) % (baseReward / 100 + 1) */\n      tag_81\n      swap2\n      swap1\n      tag_82\n      jump\t// in\n    tag_81:\n        /* \"contracts/RewardManager.sol\":1864:1972  uint256 bonus = uint256(keccak256(abi.encodePacked(user, block.timestamp, amount))) % (baseReward / 100 + 1) */\n      swap1\n      pop\n        /* \"contracts/RewardManager.sol\":1983:1997  uint256 reward */\n      0x00\n        /* \"contracts/RewardManager.sol\":2013:2018  bonus */\n      dup2\n        /* \"contracts/RewardManager.sol\":2000:2010  baseReward */\n      dup4\n        /* \"contracts/RewardManager.sol\":2000:2018  baseReward + bonus */\n      tag_83\n      swap2\n      swap1\n      tag_78\n      jump\t// in\n    tag_83:\n        /* \"contracts/RewardManager.sol\":1983:2018  uint256 reward = baseReward + bonus */\n      swap1\n      pop\n        /* \"contracts/RewardManager.sol\":2045:2060  maxRewardPoints */\n      sload(0x01)\n        /* \"contracts/RewardManager.sol\":2036:2042  reward */\n      dup2\n        /* \"contracts/RewardManager.sol\":2036:2060  reward > maxRewardPoints */\n      gt\n        /* \"contracts/RewardManager.sol\":2036:2087  reward > maxRewardPoints ? maxRewardPoints : reward */\n      tag_84\n      jumpi\n        /* \"contracts/RewardManager.sol\":2081:2087  reward */\n      dup1\n        /* \"contracts/RewardManager.sol\":2036:2087  reward > maxRewardPoints ? maxRewardPoints : reward */\n      jump(tag_85)\n    tag_84:\n        /* \"contracts/RewardManager.sol\":2063:2078  maxRewardPoints */\n      sload(0x01)\n        /* \"contracts/RewardManager.sol\":2036:2087  reward > maxRewardPoints ? maxRewardPoints : reward */\n    tag_85:\n        /* \"contracts/RewardManager.sol\":2029:2087  return reward > maxRewardPoints ? maxRewardPoints : reward */\n      swap4\n      pop\n      pop\n      pop\n      pop\n        /* \"contracts/RewardManager.sol\":1650:2095  function calculateReward(uint256 amount, address user) external view returns (uint256) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/RewardManager.sol\":525:552  address public ucpiContract */\n    tag_39:\n      0x03\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      jump\t// out\n        /* \"contracts/RewardManager.sol\":1191:1639  function distributeReward(address user, uint256 amount, uint256 reward) external onlyUCPIOrOwner {... */\n    tag_44:\n        /* \"contracts/RewardManager.sol\":1105:1112  owner() */\n      tag_87\n        /* \"contracts/RewardManager.sol\":1105:1110  owner */\n      tag_30\n        /* \"contracts/RewardManager.sol\":1105:1112  owner() */\n      jump\t// in\n    tag_87:\n        /* \"contracts/RewardManager.sol\":1091:1112  msg.sender == owner() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/RewardManager.sol\":1091:1101  msg.sender */\n      caller\n        /* \"contracts/RewardManager.sol\":1091:1112  msg.sender == owner() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"contracts/RewardManager.sol\":1091:1142  msg.sender == owner() || msg.sender == ucpiContract */\n      dup1\n      tag_88\n      jumpi\n      pop\n        /* \"contracts/RewardManager.sol\":1130:1142  ucpiContract */\n      0x03\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/RewardManager.sol\":1116:1142  msg.sender == ucpiContract */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/RewardManager.sol\":1116:1126  msg.sender */\n      caller\n        /* \"contracts/RewardManager.sol\":1116:1142  msg.sender == ucpiContract */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"contracts/RewardManager.sol\":1091:1142  msg.sender == owner() || msg.sender == ucpiContract */\n    tag_88:\n        /* \"contracts/RewardManager.sol\":1083:1161  require(msg.sender == owner() || msg.sender == ucpiContract, \"Not authorized\") */\n      tag_89\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_90\n      swap1\n      tag_91\n      jump\t// in\n    tag_90:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_89:\n        /* \"contracts/RewardManager.sol\":1323:1324  0 */\n      0x00\n        /* \"contracts/RewardManager.sol\":1307:1325  user != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/RewardManager.sol\":1307:1311  user */\n      dup4\n        /* \"contracts/RewardManager.sol\":1307:1325  user != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"contracts/RewardManager.sol\":1299:1356  require(user != address(0), \"Cannot reward zero address\") */\n      tag_93\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_94\n      swap1\n      tag_95\n      jump\t// in\n    tag_94:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_93:\n        /* \"contracts/RewardManager.sol\":1384:1385  0 */\n      0x00\n        /* \"contracts/RewardManager.sol\":1375:1381  amount */\n      dup3\n        /* \"contracts/RewardManager.sol\":1375:1385  amount > 0 */\n      gt\n        /* \"contracts/RewardManager.sol\":1367:1408  require(amount > 0, \"Amount must be > 0\") */\n      tag_96\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_97\n      swap1\n      tag_98\n      jump\t// in\n    tag_97:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_96:\n        /* \"contracts/RewardManager.sol\":1467:1473  reward */\n      dup1\n        /* \"contracts/RewardManager.sol\":1427:1438  rewardToken */\n      0x02\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/RewardManager.sol\":1427:1448  rewardToken.balanceOf */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x70a08231\n        /* \"contracts/RewardManager.sol\":1457:1461  this */\n      address\n        /* \"contracts/RewardManager.sol\":1427:1463  rewardToken.balanceOf(address(this)) */\n      mload(0x40)\n      dup3\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_99\n      swap2\n      swap1\n      tag_32\n      jump\t// in\n    tag_99:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_101\n      jumpi\n      returndatacopy(0x00, 0x00, returndatasize)\n      revert(0x00, returndatasize)\n    tag_101:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_102\n      swap2\n      swap1\n      tag_103\n      jump\t// in\n    tag_102:\n        /* \"contracts/RewardManager.sol\":1427:1473  rewardToken.balanceOf(address(this)) >= reward */\n      lt\n      iszero\n        /* \"contracts/RewardManager.sol\":1419:1505  require(rewardToken.balanceOf(address(this)) >= reward, \"Insufficient reward balance\") */\n      tag_104\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_105\n      swap1\n      tag_106\n      jump\t// in\n    tag_105:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_104:\n        /* \"contracts/RewardManager.sol\":1524:1535  rewardToken */\n      0x02\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/RewardManager.sol\":1524:1544  rewardToken.transfer */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xa9059cbb\n        /* \"contracts/RewardManager.sol\":1545:1549  user */\n      dup5\n        /* \"contracts/RewardManager.sol\":1551:1557  reward */\n      dup4\n        /* \"contracts/RewardManager.sol\":1524:1558  rewardToken.transfer(user, reward) */\n      mload(0x40)\n      dup4\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_107\n      swap3\n      swap2\n      swap1\n      tag_108\n      jump\t// in\n    tag_107:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_110\n      jumpi\n      returndatacopy(0x00, 0x00, returndatasize)\n      revert(0x00, returndatasize)\n    tag_110:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_111\n      swap2\n      swap1\n      tag_112\n      jump\t// in\n    tag_111:\n        /* \"contracts/RewardManager.sol\":1516:1584  require(rewardToken.transfer(user, reward), \"Token transfer failed\") */\n      tag_113\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_114\n      swap1\n      tag_115\n      jump\t// in\n    tag_114:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_113:\n        /* \"contracts/RewardManager.sol\":1618:1622  user */\n      dup3\n        /* \"contracts/RewardManager.sol\":1600:1631  RewardDistributed(user, reward) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xe34918ff1c7084970068b53fd71ad6d8b04e9f15d3886cbf006443e6cdc52ea6\n        /* \"contracts/RewardManager.sol\":1624:1630  reward */\n      dup3\n        /* \"contracts/RewardManager.sol\":1600:1631  RewardDistributed(user, reward) */\n      mload(0x40)\n      tag_116\n      swap2\n      swap1\n      tag_19\n      jump\t// in\n    tag_116:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log2\n        /* \"contracts/RewardManager.sol\":1191:1639  function distributeReward(address user, uint256 amount, uint256 reward) external onlyUCPIOrOwner {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/RewardManager.sol\":631:817  function initialize(uint256 _fee, uint256 _maxPoints) public initializer {... */\n    tag_48:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4158:4188  InitializableStorage storage $ */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4191:4217  _getInitializableStorage() */\n      tag_118\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4191:4215  _getInitializableStorage */\n      tag_119\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4191:4217  _getInitializableStorage() */\n      jump\t// in\n    tag_118:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4158:4217  InitializableStorage storage $ = _getInitializableStorage() */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4279:4298  bool isTopLevelCall */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4302:4303  $ */\n      dup2\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4302:4317  $._initializing */\n      0x00\n      add\n      0x08\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4301:4317  !$._initializing */\n      iszero\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4279:4317  bool isTopLevelCall = !$._initializing */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4327:4345  uint64 initialized */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4348:4349  $ */\n      dup3\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4348:4362  $._initialized */\n      0x00\n      add\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4327:4362  uint64 initialized = $._initialized */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4704:4721  bool initialSetup */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4739:4740  0 */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4724:4735  initialized */\n      dup3\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4724:4740  initialized == 0 */\n      0xffffffffffffffff\n      and\n      eq\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4724:4758  initialized == 0 && isTopLevelCall */\n      dup1\n      iszero\n      tag_120\n      jumpi\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4744:4758  isTopLevelCall */\n      dup3\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4724:4758  initialized == 0 && isTopLevelCall */\n    tag_120:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4704:4758  bool initialSetup = initialized == 0 && isTopLevelCall */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4768:4785  bool construction */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4803:4804  1 */\n      0x01\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4788:4799  initialized */\n      dup4\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4788:4804  initialized == 1 */\n      0xffffffffffffffff\n      and\n      eq\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4788:4838  initialized == 1 && address(this).code.length == 0 */\n      dup1\n      iszero\n      tag_121\n      jumpi\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4837:4838  0 */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4816:4820  this */\n      address\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4808:4833  address(this).code.length */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      extcodesize\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4808:4838  address(this).code.length == 0 */\n      eq\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4788:4838  initialized == 1 && address(this).code.length == 0 */\n    tag_121:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4768:4838  bool construction = initialized == 1 && address(this).code.length == 0 */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4854:4866  initialSetup */\n      dup2\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4853:4866  !initialSetup */\n      iszero\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4853:4883  !initialSetup && !construction */\n      dup1\n      iszero\n      tag_122\n      jumpi\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4871:4883  construction */\n      dup1\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4870:4883  !construction */\n      iszero\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4853:4883  !initialSetup && !construction */\n    tag_122:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4849:4940  if (!initialSetup && !construction) {... */\n      iszero\n      tag_123\n      jumpi\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4906:4929  InvalidInitialization() */\n      mload(0x40)\n      0xf92ee8a900000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4849:4940  if (!initialSetup && !construction) {... */\n    tag_123:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4966:4967  1 */\n      0x01\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4949:4950  $ */\n      dup6\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4949:4963  $._initialized */\n      0x00\n      add\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4949:4967  $._initialized = 1 */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4981:4995  isTopLevelCall */\n      dup4\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4977:5044  if (isTopLevelCall) {... */\n      iszero\n      tag_124\n      jumpi\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":5029:5033  true */\n      0x01\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":5011:5012  $ */\n      dup6\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":5011:5026  $._initializing */\n      0x00\n      add\n      0x08\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":5011:5033  $._initializing = true */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      iszero\n      iszero\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4977:5044  if (isTopLevelCall) {... */\n    tag_124:\n        /* \"contracts/RewardManager.sol\":715:741  __Ownable_init(msg.sender) */\n      tag_126\n        /* \"contracts/RewardManager.sol\":730:740  msg.sender */\n      caller\n        /* \"contracts/RewardManager.sol\":715:729  __Ownable_init */\n      tag_127\n        /* \"contracts/RewardManager.sol\":715:741  __Ownable_init(msg.sender) */\n      jump\t// in\n    tag_126:\n        /* \"contracts/RewardManager.sol\":766:770  _fee */\n      dup7\n        /* \"contracts/RewardManager.sol\":752:763  platformFee */\n      0x00\n        /* \"contracts/RewardManager.sol\":752:770  platformFee = _fee */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/RewardManager.sol\":799:809  _maxPoints */\n      dup6\n        /* \"contracts/RewardManager.sol\":781:796  maxRewardPoints */\n      0x01\n        /* \"contracts/RewardManager.sol\":781:809  maxRewardPoints = _maxPoints */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":5068:5082  isTopLevelCall */\n      dup4\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":5064:5165  if (isTopLevelCall) {... */\n      iszero\n      tag_128\n      jumpi\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":5116:5121  false */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":5098:5099  $ */\n      dup6\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":5098:5113  $._initializing */\n      0x00\n      add\n      0x08\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":5098:5121  $._initializing = false */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      iszero\n      iszero\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":5140:5154  Initialized(1) */\n      0xc7f505b2f371ae2175ee4913f4499e1f2633a7b5936321eed1cdaeb6115181d2\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":5152:5153  1 */\n      0x01\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":5140:5154  Initialized(1) */\n      mload(0x40)\n      tag_129\n      swap2\n      swap1\n      tag_130\n      jump\t// in\n    tag_129:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log1\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":5064:5165  if (isTopLevelCall) {... */\n    tag_128:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4092:5171  {... */\n      pop\n      pop\n      pop\n      pop\n      pop\n        /* \"contracts/RewardManager.sol\":631:817  function initialize(uint256 _fee, uint256 _maxPoints) public initializer {... */\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3405:3620  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_51:\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2334:2347  _checkOwner() */\n      tag_132\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2334:2345  _checkOwner */\n      tag_61\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2334:2347  _checkOwner() */\n      jump\t// in\n    tag_132:\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3509:3510  0 */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3489:3511  newOwner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3489:3497  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3489:3511  newOwner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3485:3576  if (newOwner == address(0)) {... */\n      tag_134\n      jumpi\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3562:3563  0 */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3534:3565  OwnableInvalidOwner(address(0)) */\n      mload(0x40)\n      0x1e4fbdf700000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_135\n      swap2\n      swap1\n      tag_32\n      jump\t// in\n    tag_135:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3485:3576  if (newOwner == address(0)) {... */\n    tag_134:\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3585:3613  _transferOwnership(newOwner) */\n      tag_136\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3604:3612  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3585:3603  _transferOwnership */\n      tag_64\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3585:3613  _transferOwnership(newOwner) */\n      jump\t// in\n    tag_136:\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3405:3620  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"contracts/RewardManager.sol\":493:518  IERC20 public rewardToken */\n    tag_53:\n      0x02\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      jump\t// out\n        /* \"contracts/RewardManager.sol\":825:923  function setUCPIContract(address _ucpi) external onlyOwner {... */\n    tag_58:\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2334:2347  _checkOwner() */\n      tag_138\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2334:2345  _checkOwner */\n      tag_61\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2334:2347  _checkOwner() */\n      jump\t// in\n    tag_138:\n        /* \"contracts/RewardManager.sol\":910:915  _ucpi */\n      dup1\n        /* \"contracts/RewardManager.sol\":895:907  ucpiContract */\n      0x03\n      0x00\n        /* \"contracts/RewardManager.sol\":895:915  ucpiContract = _ucpi */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"contracts/RewardManager.sol\":825:923  function setUCPIContract(address _ucpi) external onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2658:2820  function _checkOwner() internal view virtual {... */\n    tag_61:\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2728:2740  _msgSender() */\n      tag_141\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2728:2738  _msgSender */\n      tag_142\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2728:2740  _msgSender() */\n      jump\t// in\n    tag_141:\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2717:2740  owner() != _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2717:2724  owner() */\n      tag_143\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2717:2722  owner */\n      tag_30\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2717:2724  owner() */\n      jump\t// in\n    tag_143:\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2717:2740  owner() != _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2713:2814  if (owner() != _msgSender()) {... */\n      tag_144\n      jumpi\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2790:2802  _msgSender() */\n      tag_145\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2790:2800  _msgSender */\n      tag_142\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2790:2802  _msgSender() */\n      jump\t// in\n    tag_145:\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2763:2803  OwnableUnauthorizedAccount(_msgSender()) */\n      mload(0x40)\n      0x118cdaa700000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_146\n      swap2\n      swap1\n      tag_32\n      jump\t// in\n    tag_146:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2713:2814  if (owner() != _msgSender()) {... */\n    tag_144:\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2658:2820  function _checkOwner() internal view virtual {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3774:4022  function _transferOwnership(address newOwner) internal virtual {... */\n    tag_64:\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3847:3871  OwnableStorage storage $ */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3874:3894  _getOwnableStorage() */\n      tag_148\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3874:3892  _getOwnableStorage */\n      tag_70\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3874:3894  _getOwnableStorage() */\n      jump\t// in\n    tag_148:\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3847:3894  OwnableStorage storage $ = _getOwnableStorage() */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3904:3920  address oldOwner */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3923:3924  $ */\n      dup2\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3923:3931  $._owner */\n      0x00\n      add\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3904:3931  address oldOwner = $._owner */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3952:3960  newOwner */\n      dup3\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3941:3942  $ */\n      dup3\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3941:3949  $._owner */\n      0x00\n      add\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3941:3960  $._owner = newOwner */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":4006:4014  newOwner */\n      dup3\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3975:4015  OwnershipTransferred(oldOwner, newOwner) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3996:4004  oldOwner */\n      dup2\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3975:4015  OwnershipTransferred(oldOwner, newOwner) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3837:4022  {... */\n      pop\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3774:4022  function _transferOwnership(address newOwner) internal virtual {... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1192:1351  function _getOwnableStorage() private pure returns (OwnableStorage storage $) {... */\n    tag_70:\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1244:1268  OwnableStorage storage $ */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1313:1335  OwnableStorageLocation */\n      0x9016d09d72d40fdae2fd8ceac6b6234c7706214fd39c1cd1e609a0528c199300\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1303:1335  $.slot := OwnableStorageLocation */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1192:1351  function _getOwnableStorage() private pure returns (OwnableStorage storage $) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":9071:9276  function _getInitializableStorage() private pure returns (InitializableStorage storage $) {... */\n    tag_119:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":9129:9159  InitializableStorage storage $ */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":9171:9183  bytes32 slot */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":9186:9213  _initializableStorageSlot() */\n      tag_151\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":9186:9211  _initializableStorageSlot */\n      tag_152\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":9186:9213  _initializableStorageSlot() */\n      jump\t// in\n    tag_151:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":9171:9213  bytes32 slot = _initializableStorageSlot() */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":9256:9260  slot */\n      dup1\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":9246:9260  $.slot := slot */\n      swap2\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":9232:9270  {... */\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":9071:9276  function _getInitializableStorage() private pure returns (InitializableStorage storage $) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1847:1974  function __Ownable_init(address initialOwner) internal onlyInitializing {... */\n    tag_127:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":6929:6949  _checkInitializing() */\n      tag_154\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":6929:6947  _checkInitializing */\n      tag_155\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":6929:6949  _checkInitializing() */\n      jump\t// in\n    tag_154:\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1929:1967  __Ownable_init_unchained(initialOwner) */\n      tag_157\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1954:1966  initialOwner */\n      dup2\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1929:1953  __Ownable_init_unchained */\n      tag_158\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1929:1967  __Ownable_init_unchained(initialOwner) */\n      jump\t// in\n    tag_157:\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1847:1974  function __Ownable_init(address initialOwner) internal onlyInitializing {... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":887:983  function _msgSender() internal view virtual returns (address) {... */\n    tag_142:\n        /* \"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":940:947  address */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":966:976  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":959:976  return msg.sender */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":887:983  function _msgSender() internal view virtual returns (address) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":8819:8941  function _initializableStorageSlot() internal pure virtual returns (bytes32) {... */\n    tag_152:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":8887:8894  bytes32 */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":3147:3213  0xf0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a00 */\n      0xf0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a00\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":8913:8934  INITIALIZABLE_STORAGE */\n      0x00\n      shl\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":8906:8934  return INITIALIZABLE_STORAGE */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":8819:8941  function _initializableStorageSlot() internal pure virtual returns (bytes32) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":7082:7223  function _checkInitializing() internal view virtual {... */\n    tag_155:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":7149:7166  _isInitializing() */\n      tag_162\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":7149:7164  _isInitializing */\n      tag_163\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":7149:7166  _isInitializing() */\n      jump\t// in\n    tag_162:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":7144:7217  if (!_isInitializing()) {... */\n      tag_164\n      jumpi\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":7189:7206  NotInitializing() */\n      mload(0x40)\n      0xd7e6bcf800000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":7144:7217  if (!_isInitializing()) {... */\n    tag_164:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":7082:7223  function _checkInitializing() internal view virtual {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1980:2215  function __Ownable_init_unchained(address initialOwner) internal onlyInitializing {... */\n    tag_158:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":6929:6949  _checkInitializing() */\n      tag_166\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":6929:6947  _checkInitializing */\n      tag_155\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":6929:6949  _checkInitializing() */\n      jump\t// in\n    tag_166:\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2100:2101  0 */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2076:2102  initialOwner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2076:2088  initialOwner */\n      dup2\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2076:2102  initialOwner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2072:2167  if (initialOwner == address(0)) {... */\n      tag_168\n      jumpi\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2153:2154  0 */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2125:2156  OwnableInvalidOwner(address(0)) */\n      mload(0x40)\n      0x1e4fbdf700000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_169\n      swap2\n      swap1\n      tag_32\n      jump\t// in\n    tag_169:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2072:2167  if (initialOwner == address(0)) {... */\n    tag_168:\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2176:2208  _transferOwnership(initialOwner) */\n      tag_170\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2195:2207  initialOwner */\n      dup2\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2176:2194  _transferOwnership */\n      tag_64\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2176:2208  _transferOwnership(initialOwner) */\n      jump\t// in\n    tag_170:\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1980:2215  function __Ownable_init_unchained(address initialOwner) internal onlyInitializing {... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":8485:8605  function _isInitializing() internal view returns (bool) {... */\n    tag_163:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":8535:8539  bool */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":8558:8584  _getInitializableStorage() */\n      tag_172\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":8558:8582  _getInitializableStorage */\n      tag_119\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":8558:8584  _getInitializableStorage() */\n      jump\t// in\n    tag_172:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":8558:8598  _getInitializableStorage()._initializing */\n      0x00\n      add\n      0x08\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":8551:8598  return _getInitializableStorage()._initializing */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":8485:8605  function _isInitializing() internal view returns (bool) {... */\n      swap1\n      jump\t// out\n        /* \"#utility.yul\":7:84   */\n    tag_173:\n        /* \"#utility.yul\":44:51   */\n      0x00\n        /* \"#utility.yul\":73:78   */\n      dup2\n        /* \"#utility.yul\":62:78   */\n      swap1\n      pop\n        /* \"#utility.yul\":7:84   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":90:208   */\n    tag_174:\n        /* \"#utility.yul\":177:201   */\n      tag_220\n        /* \"#utility.yul\":195:200   */\n      dup2\n        /* \"#utility.yul\":177:201   */\n      tag_173\n      jump\t// in\n    tag_220:\n        /* \"#utility.yul\":172:175   */\n      dup3\n        /* \"#utility.yul\":165:202   */\n      mstore\n        /* \"#utility.yul\":90:208   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":214:436   */\n    tag_19:\n        /* \"#utility.yul\":307:311   */\n      0x00\n        /* \"#utility.yul\":345:347   */\n      0x20\n        /* \"#utility.yul\":334:343   */\n      dup3\n        /* \"#utility.yul\":330:348   */\n      add\n        /* \"#utility.yul\":322:348   */\n      swap1\n      pop\n        /* \"#utility.yul\":358:429   */\n      tag_222\n        /* \"#utility.yul\":426:427   */\n      0x00\n        /* \"#utility.yul\":415:424   */\n      dup4\n        /* \"#utility.yul\":411:428   */\n      add\n        /* \"#utility.yul\":402:408   */\n      dup5\n        /* \"#utility.yul\":358:429   */\n      tag_174\n      jump\t// in\n    tag_222:\n        /* \"#utility.yul\":214:436   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":523:640   */\n    tag_176:\n        /* \"#utility.yul\":632:633   */\n      0x00\n        /* \"#utility.yul\":629:630   */\n      0x00\n        /* \"#utility.yul\":622:634   */\n      revert\n        /* \"#utility.yul\":769:895   */\n    tag_178:\n        /* \"#utility.yul\":806:813   */\n      0x00\n        /* \"#utility.yul\":846:888   */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":839:844   */\n      dup3\n        /* \"#utility.yul\":835:889   */\n      and\n        /* \"#utility.yul\":824:889   */\n      swap1\n      pop\n        /* \"#utility.yul\":769:895   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":901:997   */\n    tag_179:\n        /* \"#utility.yul\":938:945   */\n      0x00\n        /* \"#utility.yul\":967:991   */\n      tag_228\n        /* \"#utility.yul\":985:990   */\n      dup3\n        /* \"#utility.yul\":967:991   */\n      tag_178\n      jump\t// in\n    tag_228:\n        /* \"#utility.yul\":956:991   */\n      swap1\n      pop\n        /* \"#utility.yul\":901:997   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1003:1125   */\n    tag_180:\n        /* \"#utility.yul\":1076:1100   */\n      tag_230\n        /* \"#utility.yul\":1094:1099   */\n      dup2\n        /* \"#utility.yul\":1076:1100   */\n      tag_179\n      jump\t// in\n    tag_230:\n        /* \"#utility.yul\":1069:1074   */\n      dup2\n        /* \"#utility.yul\":1066:1101   */\n      eq\n        /* \"#utility.yul\":1056:1119   */\n      tag_231\n      jumpi\n        /* \"#utility.yul\":1115:1116   */\n      0x00\n        /* \"#utility.yul\":1112:1113   */\n      0x00\n        /* \"#utility.yul\":1105:1117   */\n      revert\n        /* \"#utility.yul\":1056:1119   */\n    tag_231:\n        /* \"#utility.yul\":1003:1125   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1131:1270   */\n    tag_181:\n        /* \"#utility.yul\":1177:1182   */\n      0x00\n        /* \"#utility.yul\":1215:1221   */\n      dup2\n        /* \"#utility.yul\":1202:1222   */\n      calldataload\n        /* \"#utility.yul\":1193:1222   */\n      swap1\n      pop\n        /* \"#utility.yul\":1231:1264   */\n      tag_233\n        /* \"#utility.yul\":1258:1263   */\n      dup2\n        /* \"#utility.yul\":1231:1264   */\n      tag_180\n      jump\t// in\n    tag_233:\n        /* \"#utility.yul\":1131:1270   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1276:1605   */\n    tag_27:\n        /* \"#utility.yul\":1335:1341   */\n      0x00\n        /* \"#utility.yul\":1384:1386   */\n      0x20\n        /* \"#utility.yul\":1372:1381   */\n      dup3\n        /* \"#utility.yul\":1363:1370   */\n      dup5\n        /* \"#utility.yul\":1359:1382   */\n      sub\n        /* \"#utility.yul\":1355:1387   */\n      slt\n        /* \"#utility.yul\":1352:1471   */\n      iszero\n      tag_235\n      jumpi\n        /* \"#utility.yul\":1390:1469   */\n      tag_236\n      tag_176\n      jump\t// in\n    tag_236:\n        /* \"#utility.yul\":1352:1471   */\n    tag_235:\n        /* \"#utility.yul\":1510:1511   */\n      0x00\n        /* \"#utility.yul\":1535:1588   */\n      tag_237\n        /* \"#utility.yul\":1580:1587   */\n      dup5\n        /* \"#utility.yul\":1571:1577   */\n      dup3\n        /* \"#utility.yul\":1560:1569   */\n      dup6\n        /* \"#utility.yul\":1556:1578   */\n      add\n        /* \"#utility.yul\":1535:1588   */\n      tag_181\n      jump\t// in\n    tag_237:\n        /* \"#utility.yul\":1525:1588   */\n      swap2\n      pop\n        /* \"#utility.yul\":1481:1598   */\n      pop\n        /* \"#utility.yul\":1276:1605   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1611:1729   */\n    tag_182:\n        /* \"#utility.yul\":1698:1722   */\n      tag_239\n        /* \"#utility.yul\":1716:1721   */\n      dup2\n        /* \"#utility.yul\":1698:1722   */\n      tag_179\n      jump\t// in\n    tag_239:\n        /* \"#utility.yul\":1693:1696   */\n      dup3\n        /* \"#utility.yul\":1686:1723   */\n      mstore\n        /* \"#utility.yul\":1611:1729   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1735:1957   */\n    tag_32:\n        /* \"#utility.yul\":1828:1832   */\n      0x00\n        /* \"#utility.yul\":1866:1868   */\n      0x20\n        /* \"#utility.yul\":1855:1864   */\n      dup3\n        /* \"#utility.yul\":1851:1869   */\n      add\n        /* \"#utility.yul\":1843:1869   */\n      swap1\n      pop\n        /* \"#utility.yul\":1879:1950   */\n      tag_241\n        /* \"#utility.yul\":1947:1948   */\n      0x00\n        /* \"#utility.yul\":1936:1945   */\n      dup4\n        /* \"#utility.yul\":1932:1949   */\n      add\n        /* \"#utility.yul\":1923:1929   */\n      dup5\n        /* \"#utility.yul\":1879:1950   */\n      tag_182\n      jump\t// in\n    tag_241:\n        /* \"#utility.yul\":1735:1957   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1963:2085   */\n    tag_183:\n        /* \"#utility.yul\":2036:2060   */\n      tag_243\n        /* \"#utility.yul\":2054:2059   */\n      dup2\n        /* \"#utility.yul\":2036:2060   */\n      tag_173\n      jump\t// in\n    tag_243:\n        /* \"#utility.yul\":2029:2034   */\n      dup2\n        /* \"#utility.yul\":2026:2061   */\n      eq\n        /* \"#utility.yul\":2016:2079   */\n      tag_244\n      jumpi\n        /* \"#utility.yul\":2075:2076   */\n      0x00\n        /* \"#utility.yul\":2072:2073   */\n      0x00\n        /* \"#utility.yul\":2065:2077   */\n      revert\n        /* \"#utility.yul\":2016:2079   */\n    tag_244:\n        /* \"#utility.yul\":1963:2085   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2091:2230   */\n    tag_184:\n        /* \"#utility.yul\":2137:2142   */\n      0x00\n        /* \"#utility.yul\":2175:2181   */\n      dup2\n        /* \"#utility.yul\":2162:2182   */\n      calldataload\n        /* \"#utility.yul\":2153:2182   */\n      swap1\n      pop\n        /* \"#utility.yul\":2191:2224   */\n      tag_246\n        /* \"#utility.yul\":2218:2223   */\n      dup2\n        /* \"#utility.yul\":2191:2224   */\n      tag_183\n      jump\t// in\n    tag_246:\n        /* \"#utility.yul\":2091:2230   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2236:2710   */\n    tag_35:\n        /* \"#utility.yul\":2304:2310   */\n      0x00\n        /* \"#utility.yul\":2312:2318   */\n      0x00\n        /* \"#utility.yul\":2361:2363   */\n      0x40\n        /* \"#utility.yul\":2349:2358   */\n      dup4\n        /* \"#utility.yul\":2340:2347   */\n      dup6\n        /* \"#utility.yul\":2336:2359   */\n      sub\n        /* \"#utility.yul\":2332:2364   */\n      slt\n        /* \"#utility.yul\":2329:2448   */\n      iszero\n      tag_248\n      jumpi\n        /* \"#utility.yul\":2367:2446   */\n      tag_249\n      tag_176\n      jump\t// in\n    tag_249:\n        /* \"#utility.yul\":2329:2448   */\n    tag_248:\n        /* \"#utility.yul\":2487:2488   */\n      0x00\n        /* \"#utility.yul\":2512:2565   */\n      tag_250\n        /* \"#utility.yul\":2557:2564   */\n      dup6\n        /* \"#utility.yul\":2548:2554   */\n      dup3\n        /* \"#utility.yul\":2537:2546   */\n      dup7\n        /* \"#utility.yul\":2533:2555   */\n      add\n        /* \"#utility.yul\":2512:2565   */\n      tag_184\n      jump\t// in\n    tag_250:\n        /* \"#utility.yul\":2502:2565   */\n      swap3\n      pop\n        /* \"#utility.yul\":2458:2575   */\n      pop\n        /* \"#utility.yul\":2614:2616   */\n      0x20\n        /* \"#utility.yul\":2640:2693   */\n      tag_251\n        /* \"#utility.yul\":2685:2692   */\n      dup6\n        /* \"#utility.yul\":2676:2682   */\n      dup3\n        /* \"#utility.yul\":2665:2674   */\n      dup7\n        /* \"#utility.yul\":2661:2683   */\n      add\n        /* \"#utility.yul\":2640:2693   */\n      tag_181\n      jump\t// in\n    tag_251:\n        /* \"#utility.yul\":2630:2693   */\n      swap2\n      pop\n        /* \"#utility.yul\":2585:2703   */\n      pop\n        /* \"#utility.yul\":2236:2710   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2716:3335   */\n    tag_43:\n        /* \"#utility.yul\":2793:2799   */\n      0x00\n        /* \"#utility.yul\":2801:2807   */\n      0x00\n        /* \"#utility.yul\":2809:2815   */\n      0x00\n        /* \"#utility.yul\":2858:2860   */\n      0x60\n        /* \"#utility.yul\":2846:2855   */\n      dup5\n        /* \"#utility.yul\":2837:2844   */\n      dup7\n        /* \"#utility.yul\":2833:2856   */\n      sub\n        /* \"#utility.yul\":2829:2861   */\n      slt\n        /* \"#utility.yul\":2826:2945   */\n      iszero\n      tag_253\n      jumpi\n        /* \"#utility.yul\":2864:2943   */\n      tag_254\n      tag_176\n      jump\t// in\n    tag_254:\n        /* \"#utility.yul\":2826:2945   */\n    tag_253:\n        /* \"#utility.yul\":2984:2985   */\n      0x00\n        /* \"#utility.yul\":3009:3062   */\n      tag_255\n        /* \"#utility.yul\":3054:3061   */\n      dup7\n        /* \"#utility.yul\":3045:3051   */\n      dup3\n        /* \"#utility.yul\":3034:3043   */\n      dup8\n        /* \"#utility.yul\":3030:3052   */\n      add\n        /* \"#utility.yul\":3009:3062   */\n      tag_181\n      jump\t// in\n    tag_255:\n        /* \"#utility.yul\":2999:3062   */\n      swap4\n      pop\n        /* \"#utility.yul\":2955:3072   */\n      pop\n        /* \"#utility.yul\":3111:3113   */\n      0x20\n        /* \"#utility.yul\":3137:3190   */\n      tag_256\n        /* \"#utility.yul\":3182:3189   */\n      dup7\n        /* \"#utility.yul\":3173:3179   */\n      dup3\n        /* \"#utility.yul\":3162:3171   */\n      dup8\n        /* \"#utility.yul\":3158:3180   */\n      add\n        /* \"#utility.yul\":3137:3190   */\n      tag_184\n      jump\t// in\n    tag_256:\n        /* \"#utility.yul\":3127:3190   */\n      swap3\n      pop\n        /* \"#utility.yul\":3082:3200   */\n      pop\n        /* \"#utility.yul\":3239:3241   */\n      0x40\n        /* \"#utility.yul\":3265:3318   */\n      tag_257\n        /* \"#utility.yul\":3310:3317   */\n      dup7\n        /* \"#utility.yul\":3301:3307   */\n      dup3\n        /* \"#utility.yul\":3290:3299   */\n      dup8\n        /* \"#utility.yul\":3286:3308   */\n      add\n        /* \"#utility.yul\":3265:3318   */\n      tag_184\n      jump\t// in\n    tag_257:\n        /* \"#utility.yul\":3255:3318   */\n      swap2\n      pop\n        /* \"#utility.yul\":3210:3328   */\n      pop\n        /* \"#utility.yul\":2716:3335   */\n      swap3\n      pop\n      swap3\n      pop\n      swap3\n      jump\t// out\n        /* \"#utility.yul\":3341:3815   */\n    tag_47:\n        /* \"#utility.yul\":3409:3415   */\n      0x00\n        /* \"#utility.yul\":3417:3423   */\n      0x00\n        /* \"#utility.yul\":3466:3468   */\n      0x40\n        /* \"#utility.yul\":3454:3463   */\n      dup4\n        /* \"#utility.yul\":3445:3452   */\n      dup6\n        /* \"#utility.yul\":3441:3464   */\n      sub\n        /* \"#utility.yul\":3437:3469   */\n      slt\n        /* \"#utility.yul\":3434:3553   */\n      iszero\n      tag_259\n      jumpi\n        /* \"#utility.yul\":3472:3551   */\n      tag_260\n      tag_176\n      jump\t// in\n    tag_260:\n        /* \"#utility.yul\":3434:3553   */\n    tag_259:\n        /* \"#utility.yul\":3592:3593   */\n      0x00\n        /* \"#utility.yul\":3617:3670   */\n      tag_261\n        /* \"#utility.yul\":3662:3669   */\n      dup6\n        /* \"#utility.yul\":3653:3659   */\n      dup3\n        /* \"#utility.yul\":3642:3651   */\n      dup7\n        /* \"#utility.yul\":3638:3660   */\n      add\n        /* \"#utility.yul\":3617:3670   */\n      tag_184\n      jump\t// in\n    tag_261:\n        /* \"#utility.yul\":3607:3670   */\n      swap3\n      pop\n        /* \"#utility.yul\":3563:3680   */\n      pop\n        /* \"#utility.yul\":3719:3721   */\n      0x20\n        /* \"#utility.yul\":3745:3798   */\n      tag_262\n        /* \"#utility.yul\":3790:3797   */\n      dup6\n        /* \"#utility.yul\":3781:3787   */\n      dup3\n        /* \"#utility.yul\":3770:3779   */\n      dup7\n        /* \"#utility.yul\":3766:3788   */\n      add\n        /* \"#utility.yul\":3745:3798   */\n      tag_184\n      jump\t// in\n    tag_262:\n        /* \"#utility.yul\":3735:3798   */\n      swap2\n      pop\n        /* \"#utility.yul\":3690:3808   */\n      pop\n        /* \"#utility.yul\":3341:3815   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3821:3881   */\n    tag_185:\n        /* \"#utility.yul\":3849:3852   */\n      0x00\n        /* \"#utility.yul\":3870:3875   */\n      dup2\n        /* \"#utility.yul\":3863:3875   */\n      swap1\n      pop\n        /* \"#utility.yul\":3821:3881   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3887:4029   */\n    tag_186:\n        /* \"#utility.yul\":3937:3946   */\n      0x00\n        /* \"#utility.yul\":3970:4023   */\n      tag_265\n        /* \"#utility.yul\":3988:4022   */\n      tag_266\n        /* \"#utility.yul\":3997:4021   */\n      tag_267\n        /* \"#utility.yul\":4015:4020   */\n      dup5\n        /* \"#utility.yul\":3997:4021   */\n      tag_178\n      jump\t// in\n    tag_267:\n        /* \"#utility.yul\":3988:4022   */\n      tag_185\n      jump\t// in\n    tag_266:\n        /* \"#utility.yul\":3970:4023   */\n      tag_178\n      jump\t// in\n    tag_265:\n        /* \"#utility.yul\":3957:4023   */\n      swap1\n      pop\n        /* \"#utility.yul\":3887:4029   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4035:4161   */\n    tag_187:\n        /* \"#utility.yul\":4085:4094   */\n      0x00\n        /* \"#utility.yul\":4118:4155   */\n      tag_269\n        /* \"#utility.yul\":4149:4154   */\n      dup3\n        /* \"#utility.yul\":4118:4155   */\n      tag_186\n      jump\t// in\n    tag_269:\n        /* \"#utility.yul\":4105:4155   */\n      swap1\n      pop\n        /* \"#utility.yul\":4035:4161   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4167:4308   */\n    tag_188:\n        /* \"#utility.yul\":4232:4241   */\n      0x00\n        /* \"#utility.yul\":4265:4302   */\n      tag_271\n        /* \"#utility.yul\":4296:4301   */\n      dup3\n        /* \"#utility.yul\":4265:4302   */\n      tag_187\n      jump\t// in\n    tag_271:\n        /* \"#utility.yul\":4252:4302   */\n      swap1\n      pop\n        /* \"#utility.yul\":4167:4308   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4314:4475   */\n    tag_189:\n        /* \"#utility.yul\":4416:4468   */\n      tag_273\n        /* \"#utility.yul\":4462:4467   */\n      dup2\n        /* \"#utility.yul\":4416:4468   */\n      tag_188\n      jump\t// in\n    tag_273:\n        /* \"#utility.yul\":4411:4414   */\n      dup3\n        /* \"#utility.yul\":4404:4469   */\n      mstore\n        /* \"#utility.yul\":4314:4475   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4481:4733   */\n    tag_55:\n        /* \"#utility.yul\":4589:4593   */\n      0x00\n        /* \"#utility.yul\":4627:4629   */\n      0x20\n        /* \"#utility.yul\":4616:4625   */\n      dup3\n        /* \"#utility.yul\":4612:4630   */\n      add\n        /* \"#utility.yul\":4604:4630   */\n      swap1\n      pop\n        /* \"#utility.yul\":4640:4726   */\n      tag_275\n        /* \"#utility.yul\":4723:4724   */\n      0x00\n        /* \"#utility.yul\":4712:4721   */\n      dup4\n        /* \"#utility.yul\":4708:4725   */\n      add\n        /* \"#utility.yul\":4699:4705   */\n      dup5\n        /* \"#utility.yul\":4640:4726   */\n      tag_189\n      jump\t// in\n    tag_275:\n        /* \"#utility.yul\":4481:4733   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4739:4919   */\n    tag_190:\n        /* \"#utility.yul\":4787:4864   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":4784:4785   */\n      0x00\n        /* \"#utility.yul\":4777:4865   */\n      mstore\n        /* \"#utility.yul\":4884:4888   */\n      0x11\n        /* \"#utility.yul\":4881:4882   */\n      0x04\n        /* \"#utility.yul\":4874:4889   */\n      mstore\n        /* \"#utility.yul\":4908:4912   */\n      0x24\n        /* \"#utility.yul\":4905:4906   */\n      0x00\n        /* \"#utility.yul\":4898:4913   */\n      revert\n        /* \"#utility.yul\":4925:5335   */\n    tag_73:\n        /* \"#utility.yul\":4965:4972   */\n      0x00\n        /* \"#utility.yul\":4988:5008   */\n      tag_278\n        /* \"#utility.yul\":5006:5007   */\n      dup3\n        /* \"#utility.yul\":4988:5008   */\n      tag_173\n      jump\t// in\n    tag_278:\n        /* \"#utility.yul\":4983:5008   */\n      swap2\n      pop\n        /* \"#utility.yul\":5022:5042   */\n      tag_279\n        /* \"#utility.yul\":5040:5041   */\n      dup4\n        /* \"#utility.yul\":5022:5042   */\n      tag_173\n      jump\t// in\n    tag_279:\n        /* \"#utility.yul\":5017:5042   */\n      swap3\n      pop\n        /* \"#utility.yul\":5077:5078   */\n      dup3\n        /* \"#utility.yul\":5074:5075   */\n      dup3\n        /* \"#utility.yul\":5070:5079   */\n      mul\n        /* \"#utility.yul\":5099:5129   */\n      tag_280\n        /* \"#utility.yul\":5117:5128   */\n      dup2\n        /* \"#utility.yul\":5099:5129   */\n      tag_173\n      jump\t// in\n    tag_280:\n        /* \"#utility.yul\":5088:5129   */\n      swap2\n      pop\n        /* \"#utility.yul\":5278:5279   */\n      dup3\n        /* \"#utility.yul\":5269:5276   */\n      dup3\n        /* \"#utility.yul\":5265:5280   */\n      div\n        /* \"#utility.yul\":5262:5263   */\n      dup5\n        /* \"#utility.yul\":5259:5281   */\n      eq\n        /* \"#utility.yul\":5239:5240   */\n      dup4\n        /* \"#utility.yul\":5232:5241   */\n      iszero\n        /* \"#utility.yul\":5212:5295   */\n      or\n        /* \"#utility.yul\":5189:5328   */\n      tag_281\n      jumpi\n        /* \"#utility.yul\":5308:5326   */\n      tag_282\n      tag_190\n      jump\t// in\n    tag_282:\n        /* \"#utility.yul\":5189:5328   */\n    tag_281:\n        /* \"#utility.yul\":4973:5335   */\n      pop\n        /* \"#utility.yul\":4925:5335   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5341:5521   */\n    tag_191:\n        /* \"#utility.yul\":5389:5466   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":5386:5387   */\n      0x00\n        /* \"#utility.yul\":5379:5467   */\n      mstore\n        /* \"#utility.yul\":5486:5490   */\n      0x12\n        /* \"#utility.yul\":5483:5484   */\n      0x04\n        /* \"#utility.yul\":5476:5491   */\n      mstore\n        /* \"#utility.yul\":5510:5514   */\n      0x24\n        /* \"#utility.yul\":5507:5508   */\n      0x00\n        /* \"#utility.yul\":5500:5515   */\n      revert\n        /* \"#utility.yul\":5527:5712   */\n    tag_75:\n        /* \"#utility.yul\":5567:5568   */\n      0x00\n        /* \"#utility.yul\":5584:5604   */\n      tag_285\n        /* \"#utility.yul\":5602:5603   */\n      dup3\n        /* \"#utility.yul\":5584:5604   */\n      tag_173\n      jump\t// in\n    tag_285:\n        /* \"#utility.yul\":5579:5604   */\n      swap2\n      pop\n        /* \"#utility.yul\":5618:5638   */\n      tag_286\n        /* \"#utility.yul\":5636:5637   */\n      dup4\n        /* \"#utility.yul\":5618:5638   */\n      tag_173\n      jump\t// in\n    tag_286:\n        /* \"#utility.yul\":5613:5638   */\n      swap3\n      pop\n        /* \"#utility.yul\":5657:5658   */\n      dup3\n        /* \"#utility.yul\":5647:5682   */\n      tag_287\n      jumpi\n        /* \"#utility.yul\":5662:5680   */\n      tag_288\n      tag_191\n      jump\t// in\n    tag_288:\n        /* \"#utility.yul\":5647:5682   */\n    tag_287:\n        /* \"#utility.yul\":5704:5705   */\n      dup3\n        /* \"#utility.yul\":5701:5702   */\n      dup3\n        /* \"#utility.yul\":5697:5706   */\n      div\n        /* \"#utility.yul\":5692:5706   */\n      swap1\n      pop\n        /* \"#utility.yul\":5527:5712   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5718:5909   */\n    tag_78:\n        /* \"#utility.yul\":5758:5761   */\n      0x00\n        /* \"#utility.yul\":5777:5797   */\n      tag_290\n        /* \"#utility.yul\":5795:5796   */\n      dup3\n        /* \"#utility.yul\":5777:5797   */\n      tag_173\n      jump\t// in\n    tag_290:\n        /* \"#utility.yul\":5772:5797   */\n      swap2\n      pop\n        /* \"#utility.yul\":5811:5831   */\n      tag_291\n        /* \"#utility.yul\":5829:5830   */\n      dup4\n        /* \"#utility.yul\":5811:5831   */\n      tag_173\n      jump\t// in\n    tag_291:\n        /* \"#utility.yul\":5806:5831   */\n      swap3\n      pop\n        /* \"#utility.yul\":5854:5855   */\n      dup3\n        /* \"#utility.yul\":5851:5852   */\n      dup3\n        /* \"#utility.yul\":5847:5856   */\n      add\n        /* \"#utility.yul\":5840:5856   */\n      swap1\n      pop\n        /* \"#utility.yul\":5875:5878   */\n      dup1\n        /* \"#utility.yul\":5872:5873   */\n      dup3\n        /* \"#utility.yul\":5869:5879   */\n      gt\n        /* \"#utility.yul\":5866:5902   */\n      iszero\n      tag_292\n      jumpi\n        /* \"#utility.yul\":5882:5900   */\n      tag_293\n      tag_190\n      jump\t// in\n    tag_293:\n        /* \"#utility.yul\":5866:5902   */\n    tag_292:\n        /* \"#utility.yul\":5718:5909   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5915:6009   */\n    tag_192:\n        /* \"#utility.yul\":5948:5956   */\n      0x00\n        /* \"#utility.yul\":5996:6001   */\n      dup2\n        /* \"#utility.yul\":5992:5994   */\n      0x60\n        /* \"#utility.yul\":5988:6002   */\n      shl\n        /* \"#utility.yul\":5967:6002   */\n      swap1\n      pop\n        /* \"#utility.yul\":5915:6009   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6015:6109   */\n    tag_193:\n        /* \"#utility.yul\":6054:6061   */\n      0x00\n        /* \"#utility.yul\":6083:6103   */\n      tag_296\n        /* \"#utility.yul\":6097:6102   */\n      dup3\n        /* \"#utility.yul\":6083:6103   */\n      tag_192\n      jump\t// in\n    tag_296:\n        /* \"#utility.yul\":6072:6103   */\n      swap1\n      pop\n        /* \"#utility.yul\":6015:6109   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6115:6215   */\n    tag_194:\n        /* \"#utility.yul\":6154:6161   */\n      0x00\n        /* \"#utility.yul\":6183:6209   */\n      tag_298\n        /* \"#utility.yul\":6203:6208   */\n      dup3\n        /* \"#utility.yul\":6183:6209   */\n      tag_193\n      jump\t// in\n    tag_298:\n        /* \"#utility.yul\":6172:6209   */\n      swap1\n      pop\n        /* \"#utility.yul\":6115:6215   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6221:6378   */\n    tag_195:\n        /* \"#utility.yul\":6326:6371   */\n      tag_300\n        /* \"#utility.yul\":6346:6370   */\n      tag_301\n        /* \"#utility.yul\":6364:6369   */\n      dup3\n        /* \"#utility.yul\":6346:6370   */\n      tag_179\n      jump\t// in\n    tag_301:\n        /* \"#utility.yul\":6326:6371   */\n      tag_194\n      jump\t// in\n    tag_300:\n        /* \"#utility.yul\":6321:6324   */\n      dup3\n        /* \"#utility.yul\":6314:6372   */\n      mstore\n        /* \"#utility.yul\":6221:6378   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6384:6463   */\n    tag_196:\n        /* \"#utility.yul\":6423:6430   */\n      0x00\n        /* \"#utility.yul\":6452:6457   */\n      dup2\n        /* \"#utility.yul\":6441:6457   */\n      swap1\n      pop\n        /* \"#utility.yul\":6384:6463   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6469:6626   */\n    tag_197:\n        /* \"#utility.yul\":6574:6619   */\n      tag_304\n        /* \"#utility.yul\":6594:6618   */\n      tag_305\n        /* \"#utility.yul\":6612:6617   */\n      dup3\n        /* \"#utility.yul\":6594:6618   */\n      tag_173\n      jump\t// in\n    tag_305:\n        /* \"#utility.yul\":6574:6619   */\n      tag_196\n      jump\t// in\n    tag_304:\n        /* \"#utility.yul\":6569:6572   */\n      dup3\n        /* \"#utility.yul\":6562:6620   */\n      mstore\n        /* \"#utility.yul\":6469:6626   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6632:7170   */\n    tag_80:\n        /* \"#utility.yul\":6800:6803   */\n      0x00\n        /* \"#utility.yul\":6815:6890   */\n      tag_307\n        /* \"#utility.yul\":6886:6889   */\n      dup3\n        /* \"#utility.yul\":6877:6883   */\n      dup7\n        /* \"#utility.yul\":6815:6890   */\n      tag_195\n      jump\t// in\n    tag_307:\n        /* \"#utility.yul\":6915:6917   */\n      0x14\n        /* \"#utility.yul\":6910:6913   */\n      dup3\n        /* \"#utility.yul\":6906:6918   */\n      add\n        /* \"#utility.yul\":6899:6918   */\n      swap2\n      pop\n        /* \"#utility.yul\":6928:7003   */\n      tag_308\n        /* \"#utility.yul\":6999:7002   */\n      dup3\n        /* \"#utility.yul\":6990:6996   */\n      dup6\n        /* \"#utility.yul\":6928:7003   */\n      tag_197\n      jump\t// in\n    tag_308:\n        /* \"#utility.yul\":7028:7030   */\n      0x20\n        /* \"#utility.yul\":7023:7026   */\n      dup3\n        /* \"#utility.yul\":7019:7031   */\n      add\n        /* \"#utility.yul\":7012:7031   */\n      swap2\n      pop\n        /* \"#utility.yul\":7041:7116   */\n      tag_309\n        /* \"#utility.yul\":7112:7115   */\n      dup3\n        /* \"#utility.yul\":7103:7109   */\n      dup5\n        /* \"#utility.yul\":7041:7116   */\n      tag_197\n      jump\t// in\n    tag_309:\n        /* \"#utility.yul\":7141:7143   */\n      0x20\n        /* \"#utility.yul\":7136:7139   */\n      dup3\n        /* \"#utility.yul\":7132:7144   */\n      add\n        /* \"#utility.yul\":7125:7144   */\n      swap2\n      pop\n        /* \"#utility.yul\":7161:7164   */\n      dup2\n        /* \"#utility.yul\":7154:7164   */\n      swap1\n      pop\n        /* \"#utility.yul\":6632:7170   */\n      swap5\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7176:7352   */\n    tag_82:\n        /* \"#utility.yul\":7208:7209   */\n      0x00\n        /* \"#utility.yul\":7225:7245   */\n      tag_311\n        /* \"#utility.yul\":7243:7244   */\n      dup3\n        /* \"#utility.yul\":7225:7245   */\n      tag_173\n      jump\t// in\n    tag_311:\n        /* \"#utility.yul\":7220:7245   */\n      swap2\n      pop\n        /* \"#utility.yul\":7259:7279   */\n      tag_312\n        /* \"#utility.yul\":7277:7278   */\n      dup4\n        /* \"#utility.yul\":7259:7279   */\n      tag_173\n      jump\t// in\n    tag_312:\n        /* \"#utility.yul\":7254:7279   */\n      swap3\n      pop\n        /* \"#utility.yul\":7298:7299   */\n      dup3\n        /* \"#utility.yul\":7288:7323   */\n      tag_313\n      jumpi\n        /* \"#utility.yul\":7303:7321   */\n      tag_314\n      tag_191\n      jump\t// in\n    tag_314:\n        /* \"#utility.yul\":7288:7323   */\n    tag_313:\n        /* \"#utility.yul\":7344:7345   */\n      dup3\n        /* \"#utility.yul\":7341:7342   */\n      dup3\n        /* \"#utility.yul\":7337:7346   */\n      mod\n        /* \"#utility.yul\":7332:7346   */\n      swap1\n      pop\n        /* \"#utility.yul\":7176:7352   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7358:7527   */\n    tag_198:\n        /* \"#utility.yul\":7442:7453   */\n      0x00\n        /* \"#utility.yul\":7476:7482   */\n      dup3\n        /* \"#utility.yul\":7471:7474   */\n      dup3\n        /* \"#utility.yul\":7464:7483   */\n      mstore\n        /* \"#utility.yul\":7516:7520   */\n      0x20\n        /* \"#utility.yul\":7511:7514   */\n      dup3\n        /* \"#utility.yul\":7507:7521   */\n      add\n        /* \"#utility.yul\":7492:7521   */\n      swap1\n      pop\n        /* \"#utility.yul\":7358:7527   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7533:7697   */\n    tag_199:\n        /* \"#utility.yul\":7673:7689   */\n      0x4e6f7420617574686f72697a6564000000000000000000000000000000000000\n        /* \"#utility.yul\":7669:7670   */\n      0x00\n        /* \"#utility.yul\":7661:7667   */\n      dup3\n        /* \"#utility.yul\":7657:7671   */\n      add\n        /* \"#utility.yul\":7650:7690   */\n      mstore\n        /* \"#utility.yul\":7533:7697   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7703:8069   */\n    tag_200:\n        /* \"#utility.yul\":7845:7848   */\n      0x00\n        /* \"#utility.yul\":7866:7933   */\n      tag_318\n        /* \"#utility.yul\":7930:7932   */\n      0x0e\n        /* \"#utility.yul\":7925:7928   */\n      dup4\n        /* \"#utility.yul\":7866:7933   */\n      tag_198\n      jump\t// in\n    tag_318:\n        /* \"#utility.yul\":7859:7933   */\n      swap2\n      pop\n        /* \"#utility.yul\":7942:8035   */\n      tag_319\n        /* \"#utility.yul\":8031:8034   */\n      dup3\n        /* \"#utility.yul\":7942:8035   */\n      tag_199\n      jump\t// in\n    tag_319:\n        /* \"#utility.yul\":8060:8062   */\n      0x20\n        /* \"#utility.yul\":8055:8058   */\n      dup3\n        /* \"#utility.yul\":8051:8063   */\n      add\n        /* \"#utility.yul\":8044:8063   */\n      swap1\n      pop\n        /* \"#utility.yul\":7703:8069   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8075:8494   */\n    tag_91:\n        /* \"#utility.yul\":8241:8245   */\n      0x00\n        /* \"#utility.yul\":8279:8281   */\n      0x20\n        /* \"#utility.yul\":8268:8277   */\n      dup3\n        /* \"#utility.yul\":8264:8282   */\n      add\n        /* \"#utility.yul\":8256:8282   */\n      swap1\n      pop\n        /* \"#utility.yul\":8328:8337   */\n      dup2\n        /* \"#utility.yul\":8322:8326   */\n      dup2\n        /* \"#utility.yul\":8318:8338   */\n      sub\n        /* \"#utility.yul\":8314:8315   */\n      0x00\n        /* \"#utility.yul\":8303:8312   */\n      dup4\n        /* \"#utility.yul\":8299:8316   */\n      add\n        /* \"#utility.yul\":8292:8339   */\n      mstore\n        /* \"#utility.yul\":8356:8487   */\n      tag_321\n        /* \"#utility.yul\":8482:8486   */\n      dup2\n        /* \"#utility.yul\":8356:8487   */\n      tag_200\n      jump\t// in\n    tag_321:\n        /* \"#utility.yul\":8348:8487   */\n      swap1\n      pop\n        /* \"#utility.yul\":8075:8494   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8500:8676   */\n    tag_201:\n        /* \"#utility.yul\":8640:8668   */\n      0x43616e6e6f7420726577617264207a65726f2061646472657373000000000000\n        /* \"#utility.yul\":8636:8637   */\n      0x00\n        /* \"#utility.yul\":8628:8634   */\n      dup3\n        /* \"#utility.yul\":8624:8638   */\n      add\n        /* \"#utility.yul\":8617:8669   */\n      mstore\n        /* \"#utility.yul\":8500:8676   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8682:9048   */\n    tag_202:\n        /* \"#utility.yul\":8824:8827   */\n      0x00\n        /* \"#utility.yul\":8845:8912   */\n      tag_324\n        /* \"#utility.yul\":8909:8911   */\n      0x1a\n        /* \"#utility.yul\":8904:8907   */\n      dup4\n        /* \"#utility.yul\":8845:8912   */\n      tag_198\n      jump\t// in\n    tag_324:\n        /* \"#utility.yul\":8838:8912   */\n      swap2\n      pop\n        /* \"#utility.yul\":8921:9014   */\n      tag_325\n        /* \"#utility.yul\":9010:9013   */\n      dup3\n        /* \"#utility.yul\":8921:9014   */\n      tag_201\n      jump\t// in\n    tag_325:\n        /* \"#utility.yul\":9039:9041   */\n      0x20\n        /* \"#utility.yul\":9034:9037   */\n      dup3\n        /* \"#utility.yul\":9030:9042   */\n      add\n        /* \"#utility.yul\":9023:9042   */\n      swap1\n      pop\n        /* \"#utility.yul\":8682:9048   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9054:9473   */\n    tag_95:\n        /* \"#utility.yul\":9220:9224   */\n      0x00\n        /* \"#utility.yul\":9258:9260   */\n      0x20\n        /* \"#utility.yul\":9247:9256   */\n      dup3\n        /* \"#utility.yul\":9243:9261   */\n      add\n        /* \"#utility.yul\":9235:9261   */\n      swap1\n      pop\n        /* \"#utility.yul\":9307:9316   */\n      dup2\n        /* \"#utility.yul\":9301:9305   */\n      dup2\n        /* \"#utility.yul\":9297:9317   */\n      sub\n        /* \"#utility.yul\":9293:9294   */\n      0x00\n        /* \"#utility.yul\":9282:9291   */\n      dup4\n        /* \"#utility.yul\":9278:9295   */\n      add\n        /* \"#utility.yul\":9271:9318   */\n      mstore\n        /* \"#utility.yul\":9335:9466   */\n      tag_327\n        /* \"#utility.yul\":9461:9465   */\n      dup2\n        /* \"#utility.yul\":9335:9466   */\n      tag_202\n      jump\t// in\n    tag_327:\n        /* \"#utility.yul\":9327:9466   */\n      swap1\n      pop\n        /* \"#utility.yul\":9054:9473   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9479:9647   */\n    tag_203:\n        /* \"#utility.yul\":9619:9639   */\n      0x416d6f756e74206d757374206265203e20300000000000000000000000000000\n        /* \"#utility.yul\":9615:9616   */\n      0x00\n        /* \"#utility.yul\":9607:9613   */\n      dup3\n        /* \"#utility.yul\":9603:9617   */\n      add\n        /* \"#utility.yul\":9596:9640   */\n      mstore\n        /* \"#utility.yul\":9479:9647   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9653:10019   */\n    tag_204:\n        /* \"#utility.yul\":9795:9798   */\n      0x00\n        /* \"#utility.yul\":9816:9883   */\n      tag_330\n        /* \"#utility.yul\":9880:9882   */\n      0x12\n        /* \"#utility.yul\":9875:9878   */\n      dup4\n        /* \"#utility.yul\":9816:9883   */\n      tag_198\n      jump\t// in\n    tag_330:\n        /* \"#utility.yul\":9809:9883   */\n      swap2\n      pop\n        /* \"#utility.yul\":9892:9985   */\n      tag_331\n        /* \"#utility.yul\":9981:9984   */\n      dup3\n        /* \"#utility.yul\":9892:9985   */\n      tag_203\n      jump\t// in\n    tag_331:\n        /* \"#utility.yul\":10010:10012   */\n      0x20\n        /* \"#utility.yul\":10005:10008   */\n      dup3\n        /* \"#utility.yul\":10001:10013   */\n      add\n        /* \"#utility.yul\":9994:10013   */\n      swap1\n      pop\n        /* \"#utility.yul\":9653:10019   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10025:10444   */\n    tag_98:\n        /* \"#utility.yul\":10191:10195   */\n      0x00\n        /* \"#utility.yul\":10229:10231   */\n      0x20\n        /* \"#utility.yul\":10218:10227   */\n      dup3\n        /* \"#utility.yul\":10214:10232   */\n      add\n        /* \"#utility.yul\":10206:10232   */\n      swap1\n      pop\n        /* \"#utility.yul\":10278:10287   */\n      dup2\n        /* \"#utility.yul\":10272:10276   */\n      dup2\n        /* \"#utility.yul\":10268:10288   */\n      sub\n        /* \"#utility.yul\":10264:10265   */\n      0x00\n        /* \"#utility.yul\":10253:10262   */\n      dup4\n        /* \"#utility.yul\":10249:10266   */\n      add\n        /* \"#utility.yul\":10242:10289   */\n      mstore\n        /* \"#utility.yul\":10306:10437   */\n      tag_333\n        /* \"#utility.yul\":10432:10436   */\n      dup2\n        /* \"#utility.yul\":10306:10437   */\n      tag_204\n      jump\t// in\n    tag_333:\n        /* \"#utility.yul\":10298:10437   */\n      swap1\n      pop\n        /* \"#utility.yul\":10025:10444   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10450:10593   */\n    tag_205:\n        /* \"#utility.yul\":10507:10512   */\n      0x00\n        /* \"#utility.yul\":10538:10544   */\n      dup2\n        /* \"#utility.yul\":10532:10545   */\n      mload\n        /* \"#utility.yul\":10523:10545   */\n      swap1\n      pop\n        /* \"#utility.yul\":10554:10587   */\n      tag_335\n        /* \"#utility.yul\":10581:10586   */\n      dup2\n        /* \"#utility.yul\":10554:10587   */\n      tag_183\n      jump\t// in\n    tag_335:\n        /* \"#utility.yul\":10450:10593   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10599:10950   */\n    tag_103:\n        /* \"#utility.yul\":10669:10675   */\n      0x00\n        /* \"#utility.yul\":10718:10720   */\n      0x20\n        /* \"#utility.yul\":10706:10715   */\n      dup3\n        /* \"#utility.yul\":10697:10704   */\n      dup5\n        /* \"#utility.yul\":10693:10716   */\n      sub\n        /* \"#utility.yul\":10689:10721   */\n      slt\n        /* \"#utility.yul\":10686:10805   */\n      iszero\n      tag_337\n      jumpi\n        /* \"#utility.yul\":10724:10803   */\n      tag_338\n      tag_176\n      jump\t// in\n    tag_338:\n        /* \"#utility.yul\":10686:10805   */\n    tag_337:\n        /* \"#utility.yul\":10844:10845   */\n      0x00\n        /* \"#utility.yul\":10869:10933   */\n      tag_339\n        /* \"#utility.yul\":10925:10932   */\n      dup5\n        /* \"#utility.yul\":10916:10922   */\n      dup3\n        /* \"#utility.yul\":10905:10914   */\n      dup6\n        /* \"#utility.yul\":10901:10923   */\n      add\n        /* \"#utility.yul\":10869:10933   */\n      tag_205\n      jump\t// in\n    tag_339:\n        /* \"#utility.yul\":10859:10933   */\n      swap2\n      pop\n        /* \"#utility.yul\":10815:10943   */\n      pop\n        /* \"#utility.yul\":10599:10950   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10956:11133   */\n    tag_206:\n        /* \"#utility.yul\":11096:11125   */\n      0x496e73756666696369656e74207265776172642062616c616e63650000000000\n        /* \"#utility.yul\":11092:11093   */\n      0x00\n        /* \"#utility.yul\":11084:11090   */\n      dup3\n        /* \"#utility.yul\":11080:11094   */\n      add\n        /* \"#utility.yul\":11073:11126   */\n      mstore\n        /* \"#utility.yul\":10956:11133   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11139:11505   */\n    tag_207:\n        /* \"#utility.yul\":11281:11284   */\n      0x00\n        /* \"#utility.yul\":11302:11369   */\n      tag_342\n        /* \"#utility.yul\":11366:11368   */\n      0x1b\n        /* \"#utility.yul\":11361:11364   */\n      dup4\n        /* \"#utility.yul\":11302:11369   */\n      tag_198\n      jump\t// in\n    tag_342:\n        /* \"#utility.yul\":11295:11369   */\n      swap2\n      pop\n        /* \"#utility.yul\":11378:11471   */\n      tag_343\n        /* \"#utility.yul\":11467:11470   */\n      dup3\n        /* \"#utility.yul\":11378:11471   */\n      tag_206\n      jump\t// in\n    tag_343:\n        /* \"#utility.yul\":11496:11498   */\n      0x20\n        /* \"#utility.yul\":11491:11494   */\n      dup3\n        /* \"#utility.yul\":11487:11499   */\n      add\n        /* \"#utility.yul\":11480:11499   */\n      swap1\n      pop\n        /* \"#utility.yul\":11139:11505   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11511:11930   */\n    tag_106:\n        /* \"#utility.yul\":11677:11681   */\n      0x00\n        /* \"#utility.yul\":11715:11717   */\n      0x20\n        /* \"#utility.yul\":11704:11713   */\n      dup3\n        /* \"#utility.yul\":11700:11718   */\n      add\n        /* \"#utility.yul\":11692:11718   */\n      swap1\n      pop\n        /* \"#utility.yul\":11764:11773   */\n      dup2\n        /* \"#utility.yul\":11758:11762   */\n      dup2\n        /* \"#utility.yul\":11754:11774   */\n      sub\n        /* \"#utility.yul\":11750:11751   */\n      0x00\n        /* \"#utility.yul\":11739:11748   */\n      dup4\n        /* \"#utility.yul\":11735:11752   */\n      add\n        /* \"#utility.yul\":11728:11775   */\n      mstore\n        /* \"#utility.yul\":11792:11923   */\n      tag_345\n        /* \"#utility.yul\":11918:11922   */\n      dup2\n        /* \"#utility.yul\":11792:11923   */\n      tag_207\n      jump\t// in\n    tag_345:\n        /* \"#utility.yul\":11784:11923   */\n      swap1\n      pop\n        /* \"#utility.yul\":11511:11930   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11936:12268   */\n    tag_108:\n        /* \"#utility.yul\":12057:12061   */\n      0x00\n        /* \"#utility.yul\":12095:12097   */\n      0x40\n        /* \"#utility.yul\":12084:12093   */\n      dup3\n        /* \"#utility.yul\":12080:12098   */\n      add\n        /* \"#utility.yul\":12072:12098   */\n      swap1\n      pop\n        /* \"#utility.yul\":12108:12179   */\n      tag_347\n        /* \"#utility.yul\":12176:12177   */\n      0x00\n        /* \"#utility.yul\":12165:12174   */\n      dup4\n        /* \"#utility.yul\":12161:12178   */\n      add\n        /* \"#utility.yul\":12152:12158   */\n      dup6\n        /* \"#utility.yul\":12108:12179   */\n      tag_182\n      jump\t// in\n    tag_347:\n        /* \"#utility.yul\":12189:12261   */\n      tag_348\n        /* \"#utility.yul\":12257:12259   */\n      0x20\n        /* \"#utility.yul\":12246:12255   */\n      dup4\n        /* \"#utility.yul\":12242:12260   */\n      add\n        /* \"#utility.yul\":12233:12239   */\n      dup5\n        /* \"#utility.yul\":12189:12261   */\n      tag_174\n      jump\t// in\n    tag_348:\n        /* \"#utility.yul\":11936:12268   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12274:12364   */\n    tag_208:\n        /* \"#utility.yul\":12308:12315   */\n      0x00\n        /* \"#utility.yul\":12351:12356   */\n      dup2\n        /* \"#utility.yul\":12344:12357   */\n      iszero\n        /* \"#utility.yul\":12337:12358   */\n      iszero\n        /* \"#utility.yul\":12326:12358   */\n      swap1\n      pop\n        /* \"#utility.yul\":12274:12364   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12370:12486   */\n    tag_209:\n        /* \"#utility.yul\":12440:12461   */\n      tag_351\n        /* \"#utility.yul\":12455:12460   */\n      dup2\n        /* \"#utility.yul\":12440:12461   */\n      tag_208\n      jump\t// in\n    tag_351:\n        /* \"#utility.yul\":12433:12438   */\n      dup2\n        /* \"#utility.yul\":12430:12462   */\n      eq\n        /* \"#utility.yul\":12420:12480   */\n      tag_352\n      jumpi\n        /* \"#utility.yul\":12476:12477   */\n      0x00\n        /* \"#utility.yul\":12473:12474   */\n      0x00\n        /* \"#utility.yul\":12466:12478   */\n      revert\n        /* \"#utility.yul\":12420:12480   */\n    tag_352:\n        /* \"#utility.yul\":12370:12486   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12492:12629   */\n    tag_210:\n        /* \"#utility.yul\":12546:12551   */\n      0x00\n        /* \"#utility.yul\":12577:12583   */\n      dup2\n        /* \"#utility.yul\":12571:12584   */\n      mload\n        /* \"#utility.yul\":12562:12584   */\n      swap1\n      pop\n        /* \"#utility.yul\":12593:12623   */\n      tag_354\n        /* \"#utility.yul\":12617:12622   */\n      dup2\n        /* \"#utility.yul\":12593:12623   */\n      tag_209\n      jump\t// in\n    tag_354:\n        /* \"#utility.yul\":12492:12629   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12635:12980   */\n    tag_112:\n        /* \"#utility.yul\":12702:12708   */\n      0x00\n        /* \"#utility.yul\":12751:12753   */\n      0x20\n        /* \"#utility.yul\":12739:12748   */\n      dup3\n        /* \"#utility.yul\":12730:12737   */\n      dup5\n        /* \"#utility.yul\":12726:12749   */\n      sub\n        /* \"#utility.yul\":12722:12754   */\n      slt\n        /* \"#utility.yul\":12719:12838   */\n      iszero\n      tag_356\n      jumpi\n        /* \"#utility.yul\":12757:12836   */\n      tag_357\n      tag_176\n      jump\t// in\n    tag_357:\n        /* \"#utility.yul\":12719:12838   */\n    tag_356:\n        /* \"#utility.yul\":12877:12878   */\n      0x00\n        /* \"#utility.yul\":12902:12963   */\n      tag_358\n        /* \"#utility.yul\":12955:12962   */\n      dup5\n        /* \"#utility.yul\":12946:12952   */\n      dup3\n        /* \"#utility.yul\":12935:12944   */\n      dup6\n        /* \"#utility.yul\":12931:12953   */\n      add\n        /* \"#utility.yul\":12902:12963   */\n      tag_210\n      jump\t// in\n    tag_358:\n        /* \"#utility.yul\":12892:12963   */\n      swap2\n      pop\n        /* \"#utility.yul\":12848:12973   */\n      pop\n        /* \"#utility.yul\":12635:12980   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12986:13157   */\n    tag_211:\n        /* \"#utility.yul\":13126:13149   */\n      0x546f6b656e207472616e73666572206661696c65640000000000000000000000\n        /* \"#utility.yul\":13122:13123   */\n      0x00\n        /* \"#utility.yul\":13114:13120   */\n      dup3\n        /* \"#utility.yul\":13110:13124   */\n      add\n        /* \"#utility.yul\":13103:13150   */\n      mstore\n        /* \"#utility.yul\":12986:13157   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13163:13529   */\n    tag_212:\n        /* \"#utility.yul\":13305:13308   */\n      0x00\n        /* \"#utility.yul\":13326:13393   */\n      tag_361\n        /* \"#utility.yul\":13390:13392   */\n      0x15\n        /* \"#utility.yul\":13385:13388   */\n      dup4\n        /* \"#utility.yul\":13326:13393   */\n      tag_198\n      jump\t// in\n    tag_361:\n        /* \"#utility.yul\":13319:13393   */\n      swap2\n      pop\n        /* \"#utility.yul\":13402:13495   */\n      tag_362\n        /* \"#utility.yul\":13491:13494   */\n      dup3\n        /* \"#utility.yul\":13402:13495   */\n      tag_211\n      jump\t// in\n    tag_362:\n        /* \"#utility.yul\":13520:13522   */\n      0x20\n        /* \"#utility.yul\":13515:13518   */\n      dup3\n        /* \"#utility.yul\":13511:13523   */\n      add\n        /* \"#utility.yul\":13504:13523   */\n      swap1\n      pop\n        /* \"#utility.yul\":13163:13529   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13535:13954   */\n    tag_115:\n        /* \"#utility.yul\":13701:13705   */\n      0x00\n        /* \"#utility.yul\":13739:13741   */\n      0x20\n        /* \"#utility.yul\":13728:13737   */\n      dup3\n        /* \"#utility.yul\":13724:13742   */\n      add\n        /* \"#utility.yul\":13716:13742   */\n      swap1\n      pop\n        /* \"#utility.yul\":13788:13797   */\n      dup2\n        /* \"#utility.yul\":13782:13786   */\n      dup2\n        /* \"#utility.yul\":13778:13798   */\n      sub\n        /* \"#utility.yul\":13774:13775   */\n      0x00\n        /* \"#utility.yul\":13763:13772   */\n      dup4\n        /* \"#utility.yul\":13759:13776   */\n      add\n        /* \"#utility.yul\":13752:13799   */\n      mstore\n        /* \"#utility.yul\":13816:13947   */\n      tag_364\n        /* \"#utility.yul\":13942:13946   */\n      dup2\n        /* \"#utility.yul\":13816:13947   */\n      tag_212\n      jump\t// in\n    tag_364:\n        /* \"#utility.yul\":13808:13947   */\n      swap1\n      pop\n        /* \"#utility.yul\":13535:13954   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13960:14045   */\n    tag_213:\n        /* \"#utility.yul\":14005:14012   */\n      0x00\n        /* \"#utility.yul\":14034:14039   */\n      dup2\n        /* \"#utility.yul\":14023:14039   */\n      swap1\n      pop\n        /* \"#utility.yul\":13960:14045   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14051:14152   */\n    tag_214:\n        /* \"#utility.yul\":14087:14094   */\n      0x00\n        /* \"#utility.yul\":14127:14145   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":14120:14125   */\n      dup3\n        /* \"#utility.yul\":14116:14146   */\n      and\n        /* \"#utility.yul\":14105:14146   */\n      swap1\n      pop\n        /* \"#utility.yul\":14051:14152   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14158:14314   */\n    tag_215:\n        /* \"#utility.yul\":14215:14224   */\n      0x00\n        /* \"#utility.yul\":14248:14308   */\n      tag_368\n        /* \"#utility.yul\":14265:14307   */\n      tag_369\n        /* \"#utility.yul\":14274:14306   */\n      tag_370\n        /* \"#utility.yul\":14300:14305   */\n      dup5\n        /* \"#utility.yul\":14274:14306   */\n      tag_213\n      jump\t// in\n    tag_370:\n        /* \"#utility.yul\":14265:14307   */\n      tag_185\n      jump\t// in\n    tag_369:\n        /* \"#utility.yul\":14248:14308   */\n      tag_214\n      jump\t// in\n    tag_368:\n        /* \"#utility.yul\":14235:14308   */\n      swap1\n      pop\n        /* \"#utility.yul\":14158:14314   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14320:14465   */\n    tag_216:\n        /* \"#utility.yul\":14414:14458   */\n      tag_372\n        /* \"#utility.yul\":14452:14457   */\n      dup2\n        /* \"#utility.yul\":14414:14458   */\n      tag_215\n      jump\t// in\n    tag_372:\n        /* \"#utility.yul\":14409:14412   */\n      dup3\n        /* \"#utility.yul\":14402:14459   */\n      mstore\n        /* \"#utility.yul\":14320:14465   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14471:14707   */\n    tag_130:\n        /* \"#utility.yul\":14571:14575   */\n      0x00\n        /* \"#utility.yul\":14609:14611   */\n      0x20\n        /* \"#utility.yul\":14598:14607   */\n      dup3\n        /* \"#utility.yul\":14594:14612   */\n      add\n        /* \"#utility.yul\":14586:14612   */\n      swap1\n      pop\n        /* \"#utility.yul\":14622:14700   */\n      tag_374\n        /* \"#utility.yul\":14697:14698   */\n      0x00\n        /* \"#utility.yul\":14686:14695   */\n      dup4\n        /* \"#utility.yul\":14682:14699   */\n      add\n        /* \"#utility.yul\":14673:14679   */\n      dup5\n        /* \"#utility.yul\":14622:14700   */\n      tag_216\n      jump\t// in\n    tag_374:\n        /* \"#utility.yul\":14471:14707   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n\n    auxdata: 0xa2646970667358221220b173a8494843163402c4f60c4abce281dcec32739684fda73d5bc7d29f574bde64736f6c634300081e0033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH1 0xE JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x13C7 DUP1 PUSH2 0x1C PUSH0 CODECOPY PUSH0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xB2 JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0xB1A5232E GT PUSH2 0x6F JUMPI DUP1 PUSH4 0xB1A5232E EQ PUSH2 0x166 JUMPI DUP1 PUSH4 0xDE5B71F7 EQ PUSH2 0x184 JUMPI DUP1 PUSH4 0xE4A30116 EQ PUSH2 0x1A0 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x1BC JUMPI DUP1 PUSH4 0xF7C618C1 EQ PUSH2 0x1D8 JUMPI DUP1 PUSH4 0xFE95FC1A EQ PUSH2 0x1F6 JUMPI PUSH2 0xB2 JUMP JUMPDEST DUP1 PUSH4 0x26232A2E EQ PUSH2 0xB6 JUMPI DUP1 PUSH4 0x49880782 EQ PUSH2 0xD4 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0xF2 JUMPI DUP1 PUSH4 0x8AEE8127 EQ PUSH2 0xFC JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x118 JUMPI DUP1 PUSH4 0xA18F07A0 EQ PUSH2 0x136 JUMPI JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH2 0xBE PUSH2 0x212 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xCB SWAP2 SWAP1 PUSH2 0xC4B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xDC PUSH2 0x217 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xE9 SWAP2 SWAP1 PUSH2 0xC4B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xFA PUSH2 0x21D JUMP JUMPDEST STOP JUMPDEST PUSH2 0x116 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x111 SWAP2 SWAP1 PUSH2 0xCC2 JUMP JUMPDEST PUSH2 0x230 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x120 PUSH2 0x27B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x12D SWAP2 SWAP1 PUSH2 0xCFC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x150 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x14B SWAP2 SWAP1 PUSH2 0xD3F JUMP JUMPDEST PUSH2 0x2B0 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x15D SWAP2 SWAP1 PUSH2 0xC4B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x16E PUSH2 0x34E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x17B SWAP2 SWAP1 PUSH2 0xCFC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x19E PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x199 SWAP2 SWAP1 PUSH2 0xD7D JUMP JUMPDEST PUSH2 0x373 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1BA PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1B5 SWAP2 SWAP1 PUSH2 0xDCD JUMP JUMPDEST PUSH2 0x6F8 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1D6 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1D1 SWAP2 SWAP1 PUSH2 0xCC2 JUMP JUMPDEST PUSH2 0x887 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1E0 PUSH2 0x90B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1ED SWAP2 SWAP1 PUSH2 0xE66 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x210 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x20B SWAP2 SWAP1 PUSH2 0xCC2 JUMP JUMPDEST PUSH2 0x930 JUMP JUMPDEST STOP JUMPDEST PUSH0 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x1 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x225 PUSH2 0x97B JUMP JUMPDEST PUSH2 0x22E PUSH0 PUSH2 0xA02 JUMP JUMPDEST JUMP JUMPDEST PUSH2 0x238 PUSH2 0x97B JUMP JUMPDEST DUP1 PUSH1 0x2 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH2 0x285 PUSH2 0xAD3 JUMP JUMPDEST SWAP1 POP DUP1 PUSH0 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP2 POP POP SWAP1 JUMP JUMPDEST PUSH0 PUSH0 PUSH2 0x2710 PUSH0 SLOAD DUP6 PUSH2 0x2C2 SWAP2 SWAP1 PUSH2 0xEAC JUMP JUMPDEST PUSH2 0x2CC SWAP2 SWAP1 PUSH2 0xF1A JUMP JUMPDEST SWAP1 POP PUSH0 PUSH1 0x1 PUSH1 0x64 DUP4 PUSH2 0x2DE SWAP2 SWAP1 PUSH2 0xF1A JUMP JUMPDEST PUSH2 0x2E8 SWAP2 SWAP1 PUSH2 0xF4A JUMP JUMPDEST DUP5 TIMESTAMP DUP8 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x2FD SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0xFE2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 PUSH0 SHR PUSH2 0x31F SWAP2 SWAP1 PUSH2 0x101E JUMP JUMPDEST SWAP1 POP PUSH0 DUP2 DUP4 PUSH2 0x32E SWAP2 SWAP1 PUSH2 0xF4A JUMP JUMPDEST SWAP1 POP PUSH1 0x1 SLOAD DUP2 GT PUSH2 0x33F JUMPI DUP1 PUSH2 0x343 JUMP JUMPDEST PUSH1 0x1 SLOAD JUMPDEST SWAP4 POP POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x3 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH2 0x37B PUSH2 0x27B JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ DUP1 PUSH2 0x400 JUMPI POP PUSH1 0x3 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ JUMPDEST PUSH2 0x43F JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x436 SWAP1 PUSH2 0x10A8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x4AD JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x4A4 SWAP1 PUSH2 0x1110 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 DUP3 GT PUSH2 0x4EF JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x4E6 SWAP1 PUSH2 0x1178 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x2 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 ADDRESS PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x54A SWAP2 SWAP1 PUSH2 0xCFC JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x565 JUMPI RETURNDATASIZE PUSH0 PUSH0 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x589 SWAP2 SWAP1 PUSH2 0x11AA JUMP JUMPDEST LT ISZERO PUSH2 0x5CA JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x5C1 SWAP1 PUSH2 0x121F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x2 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xA9059CBB DUP5 DUP4 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x626 SWAP3 SWAP2 SWAP1 PUSH2 0x123D JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x642 JUMPI RETURNDATASIZE PUSH0 PUSH0 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x666 SWAP2 SWAP1 PUSH2 0x1299 JUMP JUMPDEST PUSH2 0x6A5 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x69C SWAP1 PUSH2 0x130E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xE34918FF1C7084970068B53FD71AD6D8B04E9F15D3886CBF006443E6CDC52EA6 DUP3 PUSH1 0x40 MLOAD PUSH2 0x6EB SWAP2 SWAP1 PUSH2 0xC4B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x701 PUSH2 0xAFA JUMP JUMPDEST SWAP1 POP PUSH0 DUP2 PUSH0 ADD PUSH1 0x8 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO SWAP1 POP PUSH0 DUP3 PUSH0 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH8 0xFFFFFFFFFFFFFFFF AND SWAP1 POP PUSH0 PUSH0 DUP3 PUSH8 0xFFFFFFFFFFFFFFFF AND EQ DUP1 ISZERO PUSH2 0x749 JUMPI POP DUP3 JUMPDEST SWAP1 POP PUSH0 PUSH1 0x1 DUP4 PUSH8 0xFFFFFFFFFFFFFFFF AND EQ DUP1 ISZERO PUSH2 0x77C JUMPI POP PUSH0 ADDRESS PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EXTCODESIZE EQ JUMPDEST SWAP1 POP DUP2 ISZERO DUP1 ISZERO PUSH2 0x78A JUMPI POP DUP1 ISZERO JUMPDEST ISZERO PUSH2 0x7C1 JUMPI PUSH1 0x40 MLOAD PUSH32 0xF92EE8A900000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 DUP6 PUSH0 ADD PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH8 0xFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH8 0xFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP4 ISZERO PUSH2 0x80E JUMPI PUSH1 0x1 DUP6 PUSH0 ADD PUSH1 0x8 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP JUMPDEST PUSH2 0x817 CALLER PUSH2 0xB0D JUMP JUMPDEST DUP7 PUSH0 DUP2 SWAP1 SSTORE POP DUP6 PUSH1 0x1 DUP2 SWAP1 SSTORE POP DUP4 ISZERO PUSH2 0x87E JUMPI PUSH0 DUP6 PUSH0 ADD PUSH1 0x8 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH32 0xC7F505B2F371AE2175EE4913F4499E1F2633A7B5936321EED1CDAEB6115181D2 PUSH1 0x1 PUSH1 0x40 MLOAD PUSH2 0x875 SWAP2 SWAP1 PUSH2 0x1378 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 JUMPDEST POP POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0x88F PUSH2 0x97B JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x8FF JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x1E4FBDF700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x8F6 SWAP2 SWAP1 PUSH2 0xCFC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x908 DUP2 PUSH2 0xA02 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x2 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH2 0x938 PUSH2 0x97B JUMP JUMPDEST DUP1 PUSH1 0x3 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH2 0x983 PUSH2 0xB21 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x9A1 PUSH2 0x27B JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xA00 JUMPI PUSH2 0x9C4 PUSH2 0xB21 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x118CDAA700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x9F7 SWAP2 SWAP1 PUSH2 0xCFC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH0 PUSH2 0xA0B PUSH2 0xAD3 JUMP JUMPDEST SWAP1 POP PUSH0 DUP2 PUSH0 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP3 DUP3 PUSH0 ADD PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH0 PUSH32 0x9016D09D72D40FDAE2FD8CEAC6B6234C7706214FD39C1CD1E609A0528C199300 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH0 PUSH2 0xB04 PUSH2 0xB28 JUMP JUMPDEST SWAP1 POP DUP1 SWAP2 POP POP SWAP1 JUMP JUMPDEST PUSH2 0xB15 PUSH2 0xB51 JUMP JUMPDEST PUSH2 0xB1E DUP2 PUSH2 0xB91 JUMP JUMPDEST POP JUMP JUMPDEST PUSH0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH32 0xF0C57E16840DF040F15088DC2F81FE391C3923BEC73E23A9662EFC9C229C6A00 PUSH0 SHL SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0xB59 PUSH2 0xC15 JUMP JUMPDEST PUSH2 0xB8F JUMPI PUSH1 0x40 MLOAD PUSH32 0xD7E6BCF800000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH2 0xB99 PUSH2 0xB51 JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xC09 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x1E4FBDF700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xC00 SWAP2 SWAP1 PUSH2 0xCFC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xC12 DUP2 PUSH2 0xA02 JUMP JUMPDEST POP JUMP JUMPDEST PUSH0 PUSH2 0xC1E PUSH2 0xAFA JUMP JUMPDEST PUSH0 ADD PUSH1 0x8 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xC45 DUP2 PUSH2 0xC33 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xC5E PUSH0 DUP4 ADD DUP5 PUSH2 0xC3C JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0xC91 DUP3 PUSH2 0xC68 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xCA1 DUP2 PUSH2 0xC87 JUMP JUMPDEST DUP2 EQ PUSH2 0xCAB JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xCBC DUP2 PUSH2 0xC98 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xCD7 JUMPI PUSH2 0xCD6 PUSH2 0xC64 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0xCE4 DUP5 DUP3 DUP6 ADD PUSH2 0xCAE JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xCF6 DUP2 PUSH2 0xC87 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xD0F PUSH0 DUP4 ADD DUP5 PUSH2 0xCED JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xD1E DUP2 PUSH2 0xC33 JUMP JUMPDEST DUP2 EQ PUSH2 0xD28 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xD39 DUP2 PUSH2 0xD15 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xD55 JUMPI PUSH2 0xD54 PUSH2 0xC64 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0xD62 DUP6 DUP3 DUP7 ADD PUSH2 0xD2B JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0xD73 DUP6 DUP3 DUP7 ADD PUSH2 0xCAE JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH0 PUSH0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0xD94 JUMPI PUSH2 0xD93 PUSH2 0xC64 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0xDA1 DUP7 DUP3 DUP8 ADD PUSH2 0xCAE JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0xDB2 DUP7 DUP3 DUP8 ADD PUSH2 0xD2B JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0xDC3 DUP7 DUP3 DUP8 ADD PUSH2 0xD2B JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH0 PUSH0 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xDE3 JUMPI PUSH2 0xDE2 PUSH2 0xC64 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0xDF0 DUP6 DUP3 DUP7 ADD PUSH2 0xD2B JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0xE01 DUP6 DUP3 DUP7 ADD PUSH2 0xD2B JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0xE2E PUSH2 0xE29 PUSH2 0xE24 DUP5 PUSH2 0xC68 JUMP JUMPDEST PUSH2 0xE0B JUMP JUMPDEST PUSH2 0xC68 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0xE3F DUP3 PUSH2 0xE14 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0xE50 DUP3 PUSH2 0xE35 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xE60 DUP2 PUSH2 0xE46 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xE79 PUSH0 DUP4 ADD DUP5 PUSH2 0xE57 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0xEB6 DUP3 PUSH2 0xC33 JUMP JUMPDEST SWAP2 POP PUSH2 0xEC1 DUP4 PUSH2 0xC33 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 MUL PUSH2 0xECF DUP2 PUSH2 0xC33 JUMP JUMPDEST SWAP2 POP DUP3 DUP3 DIV DUP5 EQ DUP4 ISZERO OR PUSH2 0xEE6 JUMPI PUSH2 0xEE5 PUSH2 0xE7F JUMP JUMPDEST JUMPDEST POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0xF24 DUP3 PUSH2 0xC33 JUMP JUMPDEST SWAP2 POP PUSH2 0xF2F DUP4 PUSH2 0xC33 JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0xF3F JUMPI PUSH2 0xF3E PUSH2 0xEED JUMP JUMPDEST JUMPDEST DUP3 DUP3 DIV SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0xF54 DUP3 PUSH2 0xC33 JUMP JUMPDEST SWAP2 POP PUSH2 0xF5F DUP4 PUSH2 0xC33 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0xF77 JUMPI PUSH2 0xF76 PUSH2 0xE7F JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 PUSH1 0x60 SHL SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0xF93 DUP3 PUSH2 0xF7D JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0xFA4 DUP3 PUSH2 0xF89 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xFBC PUSH2 0xFB7 DUP3 PUSH2 0xC87 JUMP JUMPDEST PUSH2 0xF9A JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xFDC PUSH2 0xFD7 DUP3 PUSH2 0xC33 JUMP JUMPDEST PUSH2 0xFC2 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH2 0xFED DUP3 DUP7 PUSH2 0xFAB JUMP JUMPDEST PUSH1 0x14 DUP3 ADD SWAP2 POP PUSH2 0xFFD DUP3 DUP6 PUSH2 0xFCB JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP2 POP PUSH2 0x100D DUP3 DUP5 PUSH2 0xFCB JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP2 POP DUP2 SWAP1 POP SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x1028 DUP3 PUSH2 0xC33 JUMP JUMPDEST SWAP2 POP PUSH2 0x1033 DUP4 PUSH2 0xC33 JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0x1043 JUMPI PUSH2 0x1042 PUSH2 0xEED JUMP JUMPDEST JUMPDEST DUP3 DUP3 MOD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E6F7420617574686F72697A6564000000000000000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1092 PUSH1 0xE DUP4 PUSH2 0x104E JUMP JUMPDEST SWAP2 POP PUSH2 0x109D DUP3 PUSH2 0x105E JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x10BF DUP2 PUSH2 0x1086 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x43616E6E6F7420726577617264207A65726F2061646472657373000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x10FA PUSH1 0x1A DUP4 PUSH2 0x104E JUMP JUMPDEST SWAP2 POP PUSH2 0x1105 DUP3 PUSH2 0x10C6 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1127 DUP2 PUSH2 0x10EE JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x416D6F756E74206D757374206265203E20300000000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1162 PUSH1 0x12 DUP4 PUSH2 0x104E JUMP JUMPDEST SWAP2 POP PUSH2 0x116D DUP3 PUSH2 0x112E JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x118F DUP2 PUSH2 0x1156 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x11A4 DUP2 PUSH2 0xD15 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x11BF JUMPI PUSH2 0x11BE PUSH2 0xC64 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x11CC DUP5 DUP3 DUP6 ADD PUSH2 0x1196 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x496E73756666696369656E74207265776172642062616C616E63650000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1209 PUSH1 0x1B DUP4 PUSH2 0x104E JUMP JUMPDEST SWAP2 POP PUSH2 0x1214 DUP3 PUSH2 0x11D5 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1236 DUP2 PUSH2 0x11FD JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x1250 PUSH0 DUP4 ADD DUP6 PUSH2 0xCED JUMP JUMPDEST PUSH2 0x125D PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0xC3C JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1278 DUP2 PUSH2 0x1264 JUMP JUMPDEST DUP2 EQ PUSH2 0x1282 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x1293 DUP2 PUSH2 0x126F JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x12AE JUMPI PUSH2 0x12AD PUSH2 0xC64 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x12BB DUP5 DUP3 DUP6 ADD PUSH2 0x1285 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x546F6B656E207472616E73666572206661696C65640000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x12F8 PUSH1 0x15 DUP4 PUSH2 0x104E JUMP JUMPDEST SWAP2 POP PUSH2 0x1303 DUP3 PUSH2 0x12C4 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1325 DUP2 PUSH2 0x12EC JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1362 PUSH2 0x135D PUSH2 0x1358 DUP5 PUSH2 0x132C JUMP JUMPDEST PUSH2 0xE0B JUMP JUMPDEST PUSH2 0x1335 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1372 DUP2 PUSH2 0x1348 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x138B PUSH0 DUP4 ADD DUP5 PUSH2 0x1369 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xB1 PUSH20 0xA8494843163402C4F60C4ABCE281DCEC32739684 REVERT 0xA7 RETURNDATASIZE JUMPDEST 0xC7 0xD2 SWAP16 JUMPI 0x4B 0xDE PUSH5 0x736F6C6343 STOP ADDMOD 0x1E STOP CALLER ",
							"sourceMap": "356:1742:12:-:0;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@__Ownable_init_54": {
									"entryPoint": 2829,
									"id": 54,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@__Ownable_init_unchained_81": {
									"entryPoint": 2961,
									"id": 81,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_checkInitializing_370": {
									"entryPoint": 2897,
									"id": 370,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_checkOwner_122": {
									"entryPoint": 2427,
									"id": 122,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_getInitializableStorage_461": {
									"entryPoint": 2810,
									"id": 461,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_getOwnableStorage_25": {
									"entryPoint": 2771,
									"id": 25,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_initializableStorageSlot_447": {
									"entryPoint": 2856,
									"id": 447,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_isInitializing_438": {
									"entryPoint": 3093,
									"id": 438,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_msgSender_672": {
									"entryPoint": 2849,
									"id": 672,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_transferOwnership_193": {
									"entryPoint": 2562,
									"id": 193,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@calculateReward_1710": {
									"entryPoint": 688,
									"id": 1710,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@distributeReward_1657": {
									"entryPoint": 883,
									"id": 1657,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@initialize_1557": {
									"entryPoint": 1784,
									"id": 1557,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@maxRewardPoints_1523": {
									"entryPoint": 535,
									"id": 1523,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@owner_105": {
									"entryPoint": 635,
									"id": 105,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@platformFee_1521": {
									"entryPoint": 530,
									"id": 1521,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@renounceOwnership_136": {
									"entryPoint": 541,
									"id": 136,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@rewardToken_1526": {
									"entryPoint": 2315,
									"id": 1526,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@setRewardToken_1583": {
									"entryPoint": 560,
									"id": 1583,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@setUCPIContract_1569": {
									"entryPoint": 2352,
									"id": 1569,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@transferOwnership_164": {
									"entryPoint": 2183,
									"id": 164,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@ucpiContract_1528": {
									"entryPoint": 846,
									"id": 1528,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"abi_decode_t_address": {
									"entryPoint": 3246,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_bool_fromMemory": {
									"entryPoint": 4741,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint256": {
									"entryPoint": 3371,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint256_fromMemory": {
									"entryPoint": 4502,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 3266,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_uint256t_uint256": {
									"entryPoint": 3453,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 3
								},
								"abi_decode_tuple_t_bool_fromMemory": {
									"entryPoint": 4761,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256_fromMemory": {
									"entryPoint": 4522,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256t_address": {
									"entryPoint": 3391,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_uint256t_uint256": {
									"entryPoint": 3533,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_encode_t_address_to_t_address_fromStack": {
									"entryPoint": 3309,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_address_to_t_address_nonPadded_inplace_fromStack": {
									"entryPoint": 4011,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_contract$_IERC20_$1103_to_t_address_fromStack": {
									"entryPoint": 3671,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_rational_1_by_1_to_t_uint64_fromStack": {
									"entryPoint": 4969,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_stringliteral_01c242f1c806840acb94ec05d87d4647010419c53a053a581e0026b3f6467dbb_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 4438,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_2321cd843e90d2b7a10272ea91ea7fc0cce1a354f8fe8bd4066914e3f5ab40a2_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 4334,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_574d622dc10d84c5717ad27f807ec76bf0ff5f3560e02149020a00f76077cde0_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 4605,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_74c7d57a908ebeca4ca501d4682067d5006fafb2a418959e98aa45be0419cba4_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 4844,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_fac3bac318c0d00994f57b0f2f4c643c313072b71db2302bf4b900309cc50b36_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 4230,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_uint256_to_t_uint256_fromStack": {
									"entryPoint": 3132,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_uint256_to_t_uint256_nonPadded_inplace_fromStack": {
									"entryPoint": 4043,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_packed_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__nonPadded_inplace_fromStack_reversed": {
									"entryPoint": 4066,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": 3324,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed": {
									"entryPoint": 4669,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_contract$_IERC20_$1103__to_t_address__fromStack_reversed": {
									"entryPoint": 3686,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_rational_1_by_1__to_t_uint64__fromStack_reversed": {
									"entryPoint": 4984,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_01c242f1c806840acb94ec05d87d4647010419c53a053a581e0026b3f6467dbb__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 4472,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_2321cd843e90d2b7a10272ea91ea7fc0cce1a354f8fe8bd4066914e3f5ab40a2__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 4368,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_574d622dc10d84c5717ad27f807ec76bf0ff5f3560e02149020a00f76077cde0__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 4639,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_74c7d57a908ebeca4ca501d4682067d5006fafb2a418959e98aa45be0419cba4__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 4878,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_fac3bac318c0d00994f57b0f2f4c643c313072b71db2302bf4b900309cc50b36__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 4264,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": 3147,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_string_memory_ptr_fromStack": {
									"entryPoint": 4174,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 3914,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_div_t_uint256": {
									"entryPoint": 3866,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_mul_t_uint256": {
									"entryPoint": 3756,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 3207,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_bool": {
									"entryPoint": 4708,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_rational_1_by_1": {
									"entryPoint": 4908,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 3176,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 3123,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint64": {
									"entryPoint": 4917,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"convert_t_contract$_IERC20_$1103_to_t_address": {
									"entryPoint": 3654,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"convert_t_rational_1_by_1_to_t_uint64": {
									"entryPoint": 4936,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"convert_t_uint160_to_t_address": {
									"entryPoint": 3637,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"convert_t_uint160_to_t_uint160": {
									"entryPoint": 3604,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"identity": {
									"entryPoint": 3595,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"leftAlign_t_address": {
									"entryPoint": 3994,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"leftAlign_t_uint160": {
									"entryPoint": 3977,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"leftAlign_t_uint256": {
									"entryPoint": 4034,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"mod_t_uint256": {
									"entryPoint": 4126,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 3711,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x12": {
									"entryPoint": 3821,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 3172,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"shift_left_96": {
									"entryPoint": 3965,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"store_literal_in_memory_01c242f1c806840acb94ec05d87d4647010419c53a053a581e0026b3f6467dbb": {
									"entryPoint": 4398,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_2321cd843e90d2b7a10272ea91ea7fc0cce1a354f8fe8bd4066914e3f5ab40a2": {
									"entryPoint": 4294,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_574d622dc10d84c5717ad27f807ec76bf0ff5f3560e02149020a00f76077cde0": {
									"entryPoint": 4565,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_74c7d57a908ebeca4ca501d4682067d5006fafb2a418959e98aa45be0419cba4": {
									"entryPoint": 4804,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_fac3bac318c0d00994f57b0f2f4c643c313072b71db2302bf4b900309cc50b36": {
									"entryPoint": 4190,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_address": {
									"entryPoint": 3224,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_bool": {
									"entryPoint": 4719,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_uint256": {
									"entryPoint": 3349,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:14710:13",
										"nodeType": "YulBlock",
										"src": "0:14710:13",
										"statements": [
											{
												"body": {
													"nativeSrc": "52:32:13",
													"nodeType": "YulBlock",
													"src": "52:32:13",
													"statements": [
														{
															"nativeSrc": "62:16:13",
															"nodeType": "YulAssignment",
															"src": "62:16:13",
															"value": {
																"name": "value",
																"nativeSrc": "73:5:13",
																"nodeType": "YulIdentifier",
																"src": "73:5:13"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "62:7:13",
																	"nodeType": "YulIdentifier",
																	"src": "62:7:13"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nativeSrc": "7:77:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "34:5:13",
														"nodeType": "YulTypedName",
														"src": "34:5:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "44:7:13",
														"nodeType": "YulTypedName",
														"src": "44:7:13",
														"type": ""
													}
												],
												"src": "7:77:13"
											},
											{
												"body": {
													"nativeSrc": "155:53:13",
													"nodeType": "YulBlock",
													"src": "155:53:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "172:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "172:3:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "195:5:13",
																				"nodeType": "YulIdentifier",
																				"src": "195:5:13"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nativeSrc": "177:17:13",
																			"nodeType": "YulIdentifier",
																			"src": "177:17:13"
																		},
																		"nativeSrc": "177:24:13",
																		"nodeType": "YulFunctionCall",
																		"src": "177:24:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "165:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "165:6:13"
																},
																"nativeSrc": "165:37:13",
																"nodeType": "YulFunctionCall",
																"src": "165:37:13"
															},
															"nativeSrc": "165:37:13",
															"nodeType": "YulExpressionStatement",
															"src": "165:37:13"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
												"nativeSrc": "90:118:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "143:5:13",
														"nodeType": "YulTypedName",
														"src": "143:5:13",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "150:3:13",
														"nodeType": "YulTypedName",
														"src": "150:3:13",
														"type": ""
													}
												],
												"src": "90:118:13"
											},
											{
												"body": {
													"nativeSrc": "312:124:13",
													"nodeType": "YulBlock",
													"src": "312:124:13",
													"statements": [
														{
															"nativeSrc": "322:26:13",
															"nodeType": "YulAssignment",
															"src": "322:26:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "334:9:13",
																		"nodeType": "YulIdentifier",
																		"src": "334:9:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "345:2:13",
																		"nodeType": "YulLiteral",
																		"src": "345:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "330:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "330:3:13"
																},
																"nativeSrc": "330:18:13",
																"nodeType": "YulFunctionCall",
																"src": "330:18:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "322:4:13",
																	"nodeType": "YulIdentifier",
																	"src": "322:4:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "402:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "402:6:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "415:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "415:9:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "426:1:13",
																				"nodeType": "YulLiteral",
																				"src": "426:1:13",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "411:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "411:3:13"
																		},
																		"nativeSrc": "411:17:13",
																		"nodeType": "YulFunctionCall",
																		"src": "411:17:13"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "358:43:13",
																	"nodeType": "YulIdentifier",
																	"src": "358:43:13"
																},
																"nativeSrc": "358:71:13",
																"nodeType": "YulFunctionCall",
																"src": "358:71:13"
															},
															"nativeSrc": "358:71:13",
															"nodeType": "YulExpressionStatement",
															"src": "358:71:13"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nativeSrc": "214:222:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "284:9:13",
														"nodeType": "YulTypedName",
														"src": "284:9:13",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "296:6:13",
														"nodeType": "YulTypedName",
														"src": "296:6:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "307:4:13",
														"nodeType": "YulTypedName",
														"src": "307:4:13",
														"type": ""
													}
												],
												"src": "214:222:13"
											},
											{
												"body": {
													"nativeSrc": "482:35:13",
													"nodeType": "YulBlock",
													"src": "482:35:13",
													"statements": [
														{
															"nativeSrc": "492:19:13",
															"nodeType": "YulAssignment",
															"src": "492:19:13",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "508:2:13",
																		"nodeType": "YulLiteral",
																		"src": "508:2:13",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "502:5:13",
																	"nodeType": "YulIdentifier",
																	"src": "502:5:13"
																},
																"nativeSrc": "502:9:13",
																"nodeType": "YulFunctionCall",
																"src": "502:9:13"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nativeSrc": "492:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "492:6:13"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nativeSrc": "442:75:13",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nativeSrc": "475:6:13",
														"nodeType": "YulTypedName",
														"src": "475:6:13",
														"type": ""
													}
												],
												"src": "442:75:13"
											},
											{
												"body": {
													"nativeSrc": "612:28:13",
													"nodeType": "YulBlock",
													"src": "612:28:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "629:1:13",
																		"nodeType": "YulLiteral",
																		"src": "629:1:13",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "632:1:13",
																		"nodeType": "YulLiteral",
																		"src": "632:1:13",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "622:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "622:6:13"
																},
																"nativeSrc": "622:12:13",
																"nodeType": "YulFunctionCall",
																"src": "622:12:13"
															},
															"nativeSrc": "622:12:13",
															"nodeType": "YulExpressionStatement",
															"src": "622:12:13"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nativeSrc": "523:117:13",
												"nodeType": "YulFunctionDefinition",
												"src": "523:117:13"
											},
											{
												"body": {
													"nativeSrc": "735:28:13",
													"nodeType": "YulBlock",
													"src": "735:28:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "752:1:13",
																		"nodeType": "YulLiteral",
																		"src": "752:1:13",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "755:1:13",
																		"nodeType": "YulLiteral",
																		"src": "755:1:13",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "745:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "745:6:13"
																},
																"nativeSrc": "745:12:13",
																"nodeType": "YulFunctionCall",
																"src": "745:12:13"
															},
															"nativeSrc": "745:12:13",
															"nodeType": "YulExpressionStatement",
															"src": "745:12:13"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nativeSrc": "646:117:13",
												"nodeType": "YulFunctionDefinition",
												"src": "646:117:13"
											},
											{
												"body": {
													"nativeSrc": "814:81:13",
													"nodeType": "YulBlock",
													"src": "814:81:13",
													"statements": [
														{
															"nativeSrc": "824:65:13",
															"nodeType": "YulAssignment",
															"src": "824:65:13",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "839:5:13",
																		"nodeType": "YulIdentifier",
																		"src": "839:5:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "846:42:13",
																		"nodeType": "YulLiteral",
																		"src": "846:42:13",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "835:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "835:3:13"
																},
																"nativeSrc": "835:54:13",
																"nodeType": "YulFunctionCall",
																"src": "835:54:13"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "824:7:13",
																	"nodeType": "YulIdentifier",
																	"src": "824:7:13"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nativeSrc": "769:126:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "796:5:13",
														"nodeType": "YulTypedName",
														"src": "796:5:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "806:7:13",
														"nodeType": "YulTypedName",
														"src": "806:7:13",
														"type": ""
													}
												],
												"src": "769:126:13"
											},
											{
												"body": {
													"nativeSrc": "946:51:13",
													"nodeType": "YulBlock",
													"src": "946:51:13",
													"statements": [
														{
															"nativeSrc": "956:35:13",
															"nodeType": "YulAssignment",
															"src": "956:35:13",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "985:5:13",
																		"nodeType": "YulIdentifier",
																		"src": "985:5:13"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nativeSrc": "967:17:13",
																	"nodeType": "YulIdentifier",
																	"src": "967:17:13"
																},
																"nativeSrc": "967:24:13",
																"nodeType": "YulFunctionCall",
																"src": "967:24:13"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "956:7:13",
																	"nodeType": "YulIdentifier",
																	"src": "956:7:13"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nativeSrc": "901:96:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "928:5:13",
														"nodeType": "YulTypedName",
														"src": "928:5:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "938:7:13",
														"nodeType": "YulTypedName",
														"src": "938:7:13",
														"type": ""
													}
												],
												"src": "901:96:13"
											},
											{
												"body": {
													"nativeSrc": "1046:79:13",
													"nodeType": "YulBlock",
													"src": "1046:79:13",
													"statements": [
														{
															"body": {
																"nativeSrc": "1103:16:13",
																"nodeType": "YulBlock",
																"src": "1103:16:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "1112:1:13",
																					"nodeType": "YulLiteral",
																					"src": "1112:1:13",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1115:1:13",
																					"nodeType": "YulLiteral",
																					"src": "1115:1:13",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "1105:6:13",
																				"nodeType": "YulIdentifier",
																				"src": "1105:6:13"
																			},
																			"nativeSrc": "1105:12:13",
																			"nodeType": "YulFunctionCall",
																			"src": "1105:12:13"
																		},
																		"nativeSrc": "1105:12:13",
																		"nodeType": "YulExpressionStatement",
																		"src": "1105:12:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "1069:5:13",
																				"nodeType": "YulIdentifier",
																				"src": "1069:5:13"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "1094:5:13",
																						"nodeType": "YulIdentifier",
																						"src": "1094:5:13"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nativeSrc": "1076:17:13",
																					"nodeType": "YulIdentifier",
																					"src": "1076:17:13"
																				},
																				"nativeSrc": "1076:24:13",
																				"nodeType": "YulFunctionCall",
																				"src": "1076:24:13"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "1066:2:13",
																			"nodeType": "YulIdentifier",
																			"src": "1066:2:13"
																		},
																		"nativeSrc": "1066:35:13",
																		"nodeType": "YulFunctionCall",
																		"src": "1066:35:13"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "1059:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "1059:6:13"
																},
																"nativeSrc": "1059:43:13",
																"nodeType": "YulFunctionCall",
																"src": "1059:43:13"
															},
															"nativeSrc": "1056:63:13",
															"nodeType": "YulIf",
															"src": "1056:63:13"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nativeSrc": "1003:122:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1039:5:13",
														"nodeType": "YulTypedName",
														"src": "1039:5:13",
														"type": ""
													}
												],
												"src": "1003:122:13"
											},
											{
												"body": {
													"nativeSrc": "1183:87:13",
													"nodeType": "YulBlock",
													"src": "1183:87:13",
													"statements": [
														{
															"nativeSrc": "1193:29:13",
															"nodeType": "YulAssignment",
															"src": "1193:29:13",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "1215:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "1215:6:13"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "1202:12:13",
																	"nodeType": "YulIdentifier",
																	"src": "1202:12:13"
																},
																"nativeSrc": "1202:20:13",
																"nodeType": "YulFunctionCall",
																"src": "1202:20:13"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "1193:5:13",
																	"nodeType": "YulIdentifier",
																	"src": "1193:5:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "1258:5:13",
																		"nodeType": "YulIdentifier",
																		"src": "1258:5:13"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nativeSrc": "1231:26:13",
																	"nodeType": "YulIdentifier",
																	"src": "1231:26:13"
																},
																"nativeSrc": "1231:33:13",
																"nodeType": "YulFunctionCall",
																"src": "1231:33:13"
															},
															"nativeSrc": "1231:33:13",
															"nodeType": "YulExpressionStatement",
															"src": "1231:33:13"
														}
													]
												},
												"name": "abi_decode_t_address",
												"nativeSrc": "1131:139:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "1161:6:13",
														"nodeType": "YulTypedName",
														"src": "1161:6:13",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "1169:3:13",
														"nodeType": "YulTypedName",
														"src": "1169:3:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "1177:5:13",
														"nodeType": "YulTypedName",
														"src": "1177:5:13",
														"type": ""
													}
												],
												"src": "1131:139:13"
											},
											{
												"body": {
													"nativeSrc": "1342:263:13",
													"nodeType": "YulBlock",
													"src": "1342:263:13",
													"statements": [
														{
															"body": {
																"nativeSrc": "1388:83:13",
																"nodeType": "YulBlock",
																"src": "1388:83:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "1390:77:13",
																				"nodeType": "YulIdentifier",
																				"src": "1390:77:13"
																			},
																			"nativeSrc": "1390:79:13",
																			"nodeType": "YulFunctionCall",
																			"src": "1390:79:13"
																		},
																		"nativeSrc": "1390:79:13",
																		"nodeType": "YulExpressionStatement",
																		"src": "1390:79:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1363:7:13",
																				"nodeType": "YulIdentifier",
																				"src": "1363:7:13"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "1372:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "1372:9:13"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "1359:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "1359:3:13"
																		},
																		"nativeSrc": "1359:23:13",
																		"nodeType": "YulFunctionCall",
																		"src": "1359:23:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1384:2:13",
																		"nodeType": "YulLiteral",
																		"src": "1384:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "1355:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "1355:3:13"
																},
																"nativeSrc": "1355:32:13",
																"nodeType": "YulFunctionCall",
																"src": "1355:32:13"
															},
															"nativeSrc": "1352:119:13",
															"nodeType": "YulIf",
															"src": "1352:119:13"
														},
														{
															"nativeSrc": "1481:117:13",
															"nodeType": "YulBlock",
															"src": "1481:117:13",
															"statements": [
																{
																	"nativeSrc": "1496:15:13",
																	"nodeType": "YulVariableDeclaration",
																	"src": "1496:15:13",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "1510:1:13",
																		"nodeType": "YulLiteral",
																		"src": "1510:1:13",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "1500:6:13",
																			"nodeType": "YulTypedName",
																			"src": "1500:6:13",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "1525:63:13",
																	"nodeType": "YulAssignment",
																	"src": "1525:63:13",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "1560:9:13",
																						"nodeType": "YulIdentifier",
																						"src": "1560:9:13"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "1571:6:13",
																						"nodeType": "YulIdentifier",
																						"src": "1571:6:13"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "1556:3:13",
																					"nodeType": "YulIdentifier",
																					"src": "1556:3:13"
																				},
																				"nativeSrc": "1556:22:13",
																				"nodeType": "YulFunctionCall",
																				"src": "1556:22:13"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1580:7:13",
																				"nodeType": "YulIdentifier",
																				"src": "1580:7:13"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "1535:20:13",
																			"nodeType": "YulIdentifier",
																			"src": "1535:20:13"
																		},
																		"nativeSrc": "1535:53:13",
																		"nodeType": "YulFunctionCall",
																		"src": "1535:53:13"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "1525:6:13",
																			"nodeType": "YulIdentifier",
																			"src": "1525:6:13"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nativeSrc": "1276:329:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1312:9:13",
														"nodeType": "YulTypedName",
														"src": "1312:9:13",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "1323:7:13",
														"nodeType": "YulTypedName",
														"src": "1323:7:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "1335:6:13",
														"nodeType": "YulTypedName",
														"src": "1335:6:13",
														"type": ""
													}
												],
												"src": "1276:329:13"
											},
											{
												"body": {
													"nativeSrc": "1676:53:13",
													"nodeType": "YulBlock",
													"src": "1676:53:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "1693:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "1693:3:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "1716:5:13",
																				"nodeType": "YulIdentifier",
																				"src": "1716:5:13"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nativeSrc": "1698:17:13",
																			"nodeType": "YulIdentifier",
																			"src": "1698:17:13"
																		},
																		"nativeSrc": "1698:24:13",
																		"nodeType": "YulFunctionCall",
																		"src": "1698:24:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1686:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "1686:6:13"
																},
																"nativeSrc": "1686:37:13",
																"nodeType": "YulFunctionCall",
																"src": "1686:37:13"
															},
															"nativeSrc": "1686:37:13",
															"nodeType": "YulExpressionStatement",
															"src": "1686:37:13"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nativeSrc": "1611:118:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1664:5:13",
														"nodeType": "YulTypedName",
														"src": "1664:5:13",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "1671:3:13",
														"nodeType": "YulTypedName",
														"src": "1671:3:13",
														"type": ""
													}
												],
												"src": "1611:118:13"
											},
											{
												"body": {
													"nativeSrc": "1833:124:13",
													"nodeType": "YulBlock",
													"src": "1833:124:13",
													"statements": [
														{
															"nativeSrc": "1843:26:13",
															"nodeType": "YulAssignment",
															"src": "1843:26:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1855:9:13",
																		"nodeType": "YulIdentifier",
																		"src": "1855:9:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1866:2:13",
																		"nodeType": "YulLiteral",
																		"src": "1866:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1851:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "1851:3:13"
																},
																"nativeSrc": "1851:18:13",
																"nodeType": "YulFunctionCall",
																"src": "1851:18:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "1843:4:13",
																	"nodeType": "YulIdentifier",
																	"src": "1843:4:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "1923:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "1923:6:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "1936:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "1936:9:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1947:1:13",
																				"nodeType": "YulLiteral",
																				"src": "1947:1:13",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1932:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "1932:3:13"
																		},
																		"nativeSrc": "1932:17:13",
																		"nodeType": "YulFunctionCall",
																		"src": "1932:17:13"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "1879:43:13",
																	"nodeType": "YulIdentifier",
																	"src": "1879:43:13"
																},
																"nativeSrc": "1879:71:13",
																"nodeType": "YulFunctionCall",
																"src": "1879:71:13"
															},
															"nativeSrc": "1879:71:13",
															"nodeType": "YulExpressionStatement",
															"src": "1879:71:13"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nativeSrc": "1735:222:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1805:9:13",
														"nodeType": "YulTypedName",
														"src": "1805:9:13",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "1817:6:13",
														"nodeType": "YulTypedName",
														"src": "1817:6:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "1828:4:13",
														"nodeType": "YulTypedName",
														"src": "1828:4:13",
														"type": ""
													}
												],
												"src": "1735:222:13"
											},
											{
												"body": {
													"nativeSrc": "2006:79:13",
													"nodeType": "YulBlock",
													"src": "2006:79:13",
													"statements": [
														{
															"body": {
																"nativeSrc": "2063:16:13",
																"nodeType": "YulBlock",
																"src": "2063:16:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "2072:1:13",
																					"nodeType": "YulLiteral",
																					"src": "2072:1:13",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2075:1:13",
																					"nodeType": "YulLiteral",
																					"src": "2075:1:13",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "2065:6:13",
																				"nodeType": "YulIdentifier",
																				"src": "2065:6:13"
																			},
																			"nativeSrc": "2065:12:13",
																			"nodeType": "YulFunctionCall",
																			"src": "2065:12:13"
																		},
																		"nativeSrc": "2065:12:13",
																		"nodeType": "YulExpressionStatement",
																		"src": "2065:12:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "2029:5:13",
																				"nodeType": "YulIdentifier",
																				"src": "2029:5:13"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "2054:5:13",
																						"nodeType": "YulIdentifier",
																						"src": "2054:5:13"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nativeSrc": "2036:17:13",
																					"nodeType": "YulIdentifier",
																					"src": "2036:17:13"
																				},
																				"nativeSrc": "2036:24:13",
																				"nodeType": "YulFunctionCall",
																				"src": "2036:24:13"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "2026:2:13",
																			"nodeType": "YulIdentifier",
																			"src": "2026:2:13"
																		},
																		"nativeSrc": "2026:35:13",
																		"nodeType": "YulFunctionCall",
																		"src": "2026:35:13"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "2019:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "2019:6:13"
																},
																"nativeSrc": "2019:43:13",
																"nodeType": "YulFunctionCall",
																"src": "2019:43:13"
															},
															"nativeSrc": "2016:63:13",
															"nodeType": "YulIf",
															"src": "2016:63:13"
														}
													]
												},
												"name": "validator_revert_t_uint256",
												"nativeSrc": "1963:122:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1999:5:13",
														"nodeType": "YulTypedName",
														"src": "1999:5:13",
														"type": ""
													}
												],
												"src": "1963:122:13"
											},
											{
												"body": {
													"nativeSrc": "2143:87:13",
													"nodeType": "YulBlock",
													"src": "2143:87:13",
													"statements": [
														{
															"nativeSrc": "2153:29:13",
															"nodeType": "YulAssignment",
															"src": "2153:29:13",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "2175:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "2175:6:13"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "2162:12:13",
																	"nodeType": "YulIdentifier",
																	"src": "2162:12:13"
																},
																"nativeSrc": "2162:20:13",
																"nodeType": "YulFunctionCall",
																"src": "2162:20:13"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "2153:5:13",
																	"nodeType": "YulIdentifier",
																	"src": "2153:5:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "2218:5:13",
																		"nodeType": "YulIdentifier",
																		"src": "2218:5:13"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nativeSrc": "2191:26:13",
																	"nodeType": "YulIdentifier",
																	"src": "2191:26:13"
																},
																"nativeSrc": "2191:33:13",
																"nodeType": "YulFunctionCall",
																"src": "2191:33:13"
															},
															"nativeSrc": "2191:33:13",
															"nodeType": "YulExpressionStatement",
															"src": "2191:33:13"
														}
													]
												},
												"name": "abi_decode_t_uint256",
												"nativeSrc": "2091:139:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "2121:6:13",
														"nodeType": "YulTypedName",
														"src": "2121:6:13",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "2129:3:13",
														"nodeType": "YulTypedName",
														"src": "2129:3:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "2137:5:13",
														"nodeType": "YulTypedName",
														"src": "2137:5:13",
														"type": ""
													}
												],
												"src": "2091:139:13"
											},
											{
												"body": {
													"nativeSrc": "2319:391:13",
													"nodeType": "YulBlock",
													"src": "2319:391:13",
													"statements": [
														{
															"body": {
																"nativeSrc": "2365:83:13",
																"nodeType": "YulBlock",
																"src": "2365:83:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "2367:77:13",
																				"nodeType": "YulIdentifier",
																				"src": "2367:77:13"
																			},
																			"nativeSrc": "2367:79:13",
																			"nodeType": "YulFunctionCall",
																			"src": "2367:79:13"
																		},
																		"nativeSrc": "2367:79:13",
																		"nodeType": "YulExpressionStatement",
																		"src": "2367:79:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2340:7:13",
																				"nodeType": "YulIdentifier",
																				"src": "2340:7:13"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "2349:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "2349:9:13"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "2336:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "2336:3:13"
																		},
																		"nativeSrc": "2336:23:13",
																		"nodeType": "YulFunctionCall",
																		"src": "2336:23:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2361:2:13",
																		"nodeType": "YulLiteral",
																		"src": "2361:2:13",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "2332:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "2332:3:13"
																},
																"nativeSrc": "2332:32:13",
																"nodeType": "YulFunctionCall",
																"src": "2332:32:13"
															},
															"nativeSrc": "2329:119:13",
															"nodeType": "YulIf",
															"src": "2329:119:13"
														},
														{
															"nativeSrc": "2458:117:13",
															"nodeType": "YulBlock",
															"src": "2458:117:13",
															"statements": [
																{
																	"nativeSrc": "2473:15:13",
																	"nodeType": "YulVariableDeclaration",
																	"src": "2473:15:13",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "2487:1:13",
																		"nodeType": "YulLiteral",
																		"src": "2487:1:13",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "2477:6:13",
																			"nodeType": "YulTypedName",
																			"src": "2477:6:13",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "2502:63:13",
																	"nodeType": "YulAssignment",
																	"src": "2502:63:13",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "2537:9:13",
																						"nodeType": "YulIdentifier",
																						"src": "2537:9:13"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "2548:6:13",
																						"nodeType": "YulIdentifier",
																						"src": "2548:6:13"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "2533:3:13",
																					"nodeType": "YulIdentifier",
																					"src": "2533:3:13"
																				},
																				"nativeSrc": "2533:22:13",
																				"nodeType": "YulFunctionCall",
																				"src": "2533:22:13"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2557:7:13",
																				"nodeType": "YulIdentifier",
																				"src": "2557:7:13"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "2512:20:13",
																			"nodeType": "YulIdentifier",
																			"src": "2512:20:13"
																		},
																		"nativeSrc": "2512:53:13",
																		"nodeType": "YulFunctionCall",
																		"src": "2512:53:13"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "2502:6:13",
																			"nodeType": "YulIdentifier",
																			"src": "2502:6:13"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "2585:118:13",
															"nodeType": "YulBlock",
															"src": "2585:118:13",
															"statements": [
																{
																	"nativeSrc": "2600:16:13",
																	"nodeType": "YulVariableDeclaration",
																	"src": "2600:16:13",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "2614:2:13",
																		"nodeType": "YulLiteral",
																		"src": "2614:2:13",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "2604:6:13",
																			"nodeType": "YulTypedName",
																			"src": "2604:6:13",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "2630:63:13",
																	"nodeType": "YulAssignment",
																	"src": "2630:63:13",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "2665:9:13",
																						"nodeType": "YulIdentifier",
																						"src": "2665:9:13"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "2676:6:13",
																						"nodeType": "YulIdentifier",
																						"src": "2676:6:13"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "2661:3:13",
																					"nodeType": "YulIdentifier",
																					"src": "2661:3:13"
																				},
																				"nativeSrc": "2661:22:13",
																				"nodeType": "YulFunctionCall",
																				"src": "2661:22:13"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2685:7:13",
																				"nodeType": "YulIdentifier",
																				"src": "2685:7:13"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "2640:20:13",
																			"nodeType": "YulIdentifier",
																			"src": "2640:20:13"
																		},
																		"nativeSrc": "2640:53:13",
																		"nodeType": "YulFunctionCall",
																		"src": "2640:53:13"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "2630:6:13",
																			"nodeType": "YulIdentifier",
																			"src": "2630:6:13"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256t_address",
												"nativeSrc": "2236:474:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2281:9:13",
														"nodeType": "YulTypedName",
														"src": "2281:9:13",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "2292:7:13",
														"nodeType": "YulTypedName",
														"src": "2292:7:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "2304:6:13",
														"nodeType": "YulTypedName",
														"src": "2304:6:13",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "2312:6:13",
														"nodeType": "YulTypedName",
														"src": "2312:6:13",
														"type": ""
													}
												],
												"src": "2236:474:13"
											},
											{
												"body": {
													"nativeSrc": "2816:519:13",
													"nodeType": "YulBlock",
													"src": "2816:519:13",
													"statements": [
														{
															"body": {
																"nativeSrc": "2862:83:13",
																"nodeType": "YulBlock",
																"src": "2862:83:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "2864:77:13",
																				"nodeType": "YulIdentifier",
																				"src": "2864:77:13"
																			},
																			"nativeSrc": "2864:79:13",
																			"nodeType": "YulFunctionCall",
																			"src": "2864:79:13"
																		},
																		"nativeSrc": "2864:79:13",
																		"nodeType": "YulExpressionStatement",
																		"src": "2864:79:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2837:7:13",
																				"nodeType": "YulIdentifier",
																				"src": "2837:7:13"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "2846:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "2846:9:13"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "2833:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "2833:3:13"
																		},
																		"nativeSrc": "2833:23:13",
																		"nodeType": "YulFunctionCall",
																		"src": "2833:23:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2858:2:13",
																		"nodeType": "YulLiteral",
																		"src": "2858:2:13",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "2829:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "2829:3:13"
																},
																"nativeSrc": "2829:32:13",
																"nodeType": "YulFunctionCall",
																"src": "2829:32:13"
															},
															"nativeSrc": "2826:119:13",
															"nodeType": "YulIf",
															"src": "2826:119:13"
														},
														{
															"nativeSrc": "2955:117:13",
															"nodeType": "YulBlock",
															"src": "2955:117:13",
															"statements": [
																{
																	"nativeSrc": "2970:15:13",
																	"nodeType": "YulVariableDeclaration",
																	"src": "2970:15:13",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "2984:1:13",
																		"nodeType": "YulLiteral",
																		"src": "2984:1:13",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "2974:6:13",
																			"nodeType": "YulTypedName",
																			"src": "2974:6:13",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "2999:63:13",
																	"nodeType": "YulAssignment",
																	"src": "2999:63:13",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "3034:9:13",
																						"nodeType": "YulIdentifier",
																						"src": "3034:9:13"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "3045:6:13",
																						"nodeType": "YulIdentifier",
																						"src": "3045:6:13"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "3030:3:13",
																					"nodeType": "YulIdentifier",
																					"src": "3030:3:13"
																				},
																				"nativeSrc": "3030:22:13",
																				"nodeType": "YulFunctionCall",
																				"src": "3030:22:13"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "3054:7:13",
																				"nodeType": "YulIdentifier",
																				"src": "3054:7:13"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "3009:20:13",
																			"nodeType": "YulIdentifier",
																			"src": "3009:20:13"
																		},
																		"nativeSrc": "3009:53:13",
																		"nodeType": "YulFunctionCall",
																		"src": "3009:53:13"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "2999:6:13",
																			"nodeType": "YulIdentifier",
																			"src": "2999:6:13"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "3082:118:13",
															"nodeType": "YulBlock",
															"src": "3082:118:13",
															"statements": [
																{
																	"nativeSrc": "3097:16:13",
																	"nodeType": "YulVariableDeclaration",
																	"src": "3097:16:13",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "3111:2:13",
																		"nodeType": "YulLiteral",
																		"src": "3111:2:13",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "3101:6:13",
																			"nodeType": "YulTypedName",
																			"src": "3101:6:13",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "3127:63:13",
																	"nodeType": "YulAssignment",
																	"src": "3127:63:13",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "3162:9:13",
																						"nodeType": "YulIdentifier",
																						"src": "3162:9:13"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "3173:6:13",
																						"nodeType": "YulIdentifier",
																						"src": "3173:6:13"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "3158:3:13",
																					"nodeType": "YulIdentifier",
																					"src": "3158:3:13"
																				},
																				"nativeSrc": "3158:22:13",
																				"nodeType": "YulFunctionCall",
																				"src": "3158:22:13"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "3182:7:13",
																				"nodeType": "YulIdentifier",
																				"src": "3182:7:13"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "3137:20:13",
																			"nodeType": "YulIdentifier",
																			"src": "3137:20:13"
																		},
																		"nativeSrc": "3137:53:13",
																		"nodeType": "YulFunctionCall",
																		"src": "3137:53:13"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "3127:6:13",
																			"nodeType": "YulIdentifier",
																			"src": "3127:6:13"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "3210:118:13",
															"nodeType": "YulBlock",
															"src": "3210:118:13",
															"statements": [
																{
																	"nativeSrc": "3225:16:13",
																	"nodeType": "YulVariableDeclaration",
																	"src": "3225:16:13",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "3239:2:13",
																		"nodeType": "YulLiteral",
																		"src": "3239:2:13",
																		"type": "",
																		"value": "64"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "3229:6:13",
																			"nodeType": "YulTypedName",
																			"src": "3229:6:13",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "3255:63:13",
																	"nodeType": "YulAssignment",
																	"src": "3255:63:13",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "3290:9:13",
																						"nodeType": "YulIdentifier",
																						"src": "3290:9:13"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "3301:6:13",
																						"nodeType": "YulIdentifier",
																						"src": "3301:6:13"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "3286:3:13",
																					"nodeType": "YulIdentifier",
																					"src": "3286:3:13"
																				},
																				"nativeSrc": "3286:22:13",
																				"nodeType": "YulFunctionCall",
																				"src": "3286:22:13"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "3310:7:13",
																				"nodeType": "YulIdentifier",
																				"src": "3310:7:13"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "3265:20:13",
																			"nodeType": "YulIdentifier",
																			"src": "3265:20:13"
																		},
																		"nativeSrc": "3265:53:13",
																		"nodeType": "YulFunctionCall",
																		"src": "3265:53:13"
																	},
																	"variableNames": [
																		{
																			"name": "value2",
																			"nativeSrc": "3255:6:13",
																			"nodeType": "YulIdentifier",
																			"src": "3255:6:13"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_uint256t_uint256",
												"nativeSrc": "2716:619:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2770:9:13",
														"nodeType": "YulTypedName",
														"src": "2770:9:13",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "2781:7:13",
														"nodeType": "YulTypedName",
														"src": "2781:7:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "2793:6:13",
														"nodeType": "YulTypedName",
														"src": "2793:6:13",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "2801:6:13",
														"nodeType": "YulTypedName",
														"src": "2801:6:13",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "2809:6:13",
														"nodeType": "YulTypedName",
														"src": "2809:6:13",
														"type": ""
													}
												],
												"src": "2716:619:13"
											},
											{
												"body": {
													"nativeSrc": "3424:391:13",
													"nodeType": "YulBlock",
													"src": "3424:391:13",
													"statements": [
														{
															"body": {
																"nativeSrc": "3470:83:13",
																"nodeType": "YulBlock",
																"src": "3470:83:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "3472:77:13",
																				"nodeType": "YulIdentifier",
																				"src": "3472:77:13"
																			},
																			"nativeSrc": "3472:79:13",
																			"nodeType": "YulFunctionCall",
																			"src": "3472:79:13"
																		},
																		"nativeSrc": "3472:79:13",
																		"nodeType": "YulExpressionStatement",
																		"src": "3472:79:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "3445:7:13",
																				"nodeType": "YulIdentifier",
																				"src": "3445:7:13"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "3454:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "3454:9:13"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "3441:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "3441:3:13"
																		},
																		"nativeSrc": "3441:23:13",
																		"nodeType": "YulFunctionCall",
																		"src": "3441:23:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3466:2:13",
																		"nodeType": "YulLiteral",
																		"src": "3466:2:13",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "3437:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "3437:3:13"
																},
																"nativeSrc": "3437:32:13",
																"nodeType": "YulFunctionCall",
																"src": "3437:32:13"
															},
															"nativeSrc": "3434:119:13",
															"nodeType": "YulIf",
															"src": "3434:119:13"
														},
														{
															"nativeSrc": "3563:117:13",
															"nodeType": "YulBlock",
															"src": "3563:117:13",
															"statements": [
																{
																	"nativeSrc": "3578:15:13",
																	"nodeType": "YulVariableDeclaration",
																	"src": "3578:15:13",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "3592:1:13",
																		"nodeType": "YulLiteral",
																		"src": "3592:1:13",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "3582:6:13",
																			"nodeType": "YulTypedName",
																			"src": "3582:6:13",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "3607:63:13",
																	"nodeType": "YulAssignment",
																	"src": "3607:63:13",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "3642:9:13",
																						"nodeType": "YulIdentifier",
																						"src": "3642:9:13"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "3653:6:13",
																						"nodeType": "YulIdentifier",
																						"src": "3653:6:13"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "3638:3:13",
																					"nodeType": "YulIdentifier",
																					"src": "3638:3:13"
																				},
																				"nativeSrc": "3638:22:13",
																				"nodeType": "YulFunctionCall",
																				"src": "3638:22:13"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "3662:7:13",
																				"nodeType": "YulIdentifier",
																				"src": "3662:7:13"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "3617:20:13",
																			"nodeType": "YulIdentifier",
																			"src": "3617:20:13"
																		},
																		"nativeSrc": "3617:53:13",
																		"nodeType": "YulFunctionCall",
																		"src": "3617:53:13"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "3607:6:13",
																			"nodeType": "YulIdentifier",
																			"src": "3607:6:13"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "3690:118:13",
															"nodeType": "YulBlock",
															"src": "3690:118:13",
															"statements": [
																{
																	"nativeSrc": "3705:16:13",
																	"nodeType": "YulVariableDeclaration",
																	"src": "3705:16:13",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "3719:2:13",
																		"nodeType": "YulLiteral",
																		"src": "3719:2:13",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "3709:6:13",
																			"nodeType": "YulTypedName",
																			"src": "3709:6:13",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "3735:63:13",
																	"nodeType": "YulAssignment",
																	"src": "3735:63:13",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "3770:9:13",
																						"nodeType": "YulIdentifier",
																						"src": "3770:9:13"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "3781:6:13",
																						"nodeType": "YulIdentifier",
																						"src": "3781:6:13"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "3766:3:13",
																					"nodeType": "YulIdentifier",
																					"src": "3766:3:13"
																				},
																				"nativeSrc": "3766:22:13",
																				"nodeType": "YulFunctionCall",
																				"src": "3766:22:13"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "3790:7:13",
																				"nodeType": "YulIdentifier",
																				"src": "3790:7:13"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "3745:20:13",
																			"nodeType": "YulIdentifier",
																			"src": "3745:20:13"
																		},
																		"nativeSrc": "3745:53:13",
																		"nodeType": "YulFunctionCall",
																		"src": "3745:53:13"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "3735:6:13",
																			"nodeType": "YulIdentifier",
																			"src": "3735:6:13"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256t_uint256",
												"nativeSrc": "3341:474:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3386:9:13",
														"nodeType": "YulTypedName",
														"src": "3386:9:13",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "3397:7:13",
														"nodeType": "YulTypedName",
														"src": "3397:7:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "3409:6:13",
														"nodeType": "YulTypedName",
														"src": "3409:6:13",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "3417:6:13",
														"nodeType": "YulTypedName",
														"src": "3417:6:13",
														"type": ""
													}
												],
												"src": "3341:474:13"
											},
											{
												"body": {
													"nativeSrc": "3853:28:13",
													"nodeType": "YulBlock",
													"src": "3853:28:13",
													"statements": [
														{
															"nativeSrc": "3863:12:13",
															"nodeType": "YulAssignment",
															"src": "3863:12:13",
															"value": {
																"name": "value",
																"nativeSrc": "3870:5:13",
																"nodeType": "YulIdentifier",
																"src": "3870:5:13"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nativeSrc": "3863:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "3863:3:13"
																}
															]
														}
													]
												},
												"name": "identity",
												"nativeSrc": "3821:60:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3839:5:13",
														"nodeType": "YulTypedName",
														"src": "3839:5:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "3849:3:13",
														"nodeType": "YulTypedName",
														"src": "3849:3:13",
														"type": ""
													}
												],
												"src": "3821:60:13"
											},
											{
												"body": {
													"nativeSrc": "3947:82:13",
													"nodeType": "YulBlock",
													"src": "3947:82:13",
													"statements": [
														{
															"nativeSrc": "3957:66:13",
															"nodeType": "YulAssignment",
															"src": "3957:66:13",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "4015:5:13",
																						"nodeType": "YulIdentifier",
																						"src": "4015:5:13"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint160",
																					"nativeSrc": "3997:17:13",
																					"nodeType": "YulIdentifier",
																					"src": "3997:17:13"
																				},
																				"nativeSrc": "3997:24:13",
																				"nodeType": "YulFunctionCall",
																				"src": "3997:24:13"
																			}
																		],
																		"functionName": {
																			"name": "identity",
																			"nativeSrc": "3988:8:13",
																			"nodeType": "YulIdentifier",
																			"src": "3988:8:13"
																		},
																		"nativeSrc": "3988:34:13",
																		"nodeType": "YulFunctionCall",
																		"src": "3988:34:13"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nativeSrc": "3970:17:13",
																	"nodeType": "YulIdentifier",
																	"src": "3970:17:13"
																},
																"nativeSrc": "3970:53:13",
																"nodeType": "YulFunctionCall",
																"src": "3970:53:13"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nativeSrc": "3957:9:13",
																	"nodeType": "YulIdentifier",
																	"src": "3957:9:13"
																}
															]
														}
													]
												},
												"name": "convert_t_uint160_to_t_uint160",
												"nativeSrc": "3887:142:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3927:5:13",
														"nodeType": "YulTypedName",
														"src": "3927:5:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nativeSrc": "3937:9:13",
														"nodeType": "YulTypedName",
														"src": "3937:9:13",
														"type": ""
													}
												],
												"src": "3887:142:13"
											},
											{
												"body": {
													"nativeSrc": "4095:66:13",
													"nodeType": "YulBlock",
													"src": "4095:66:13",
													"statements": [
														{
															"nativeSrc": "4105:50:13",
															"nodeType": "YulAssignment",
															"src": "4105:50:13",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "4149:5:13",
																		"nodeType": "YulIdentifier",
																		"src": "4149:5:13"
																	}
																],
																"functionName": {
																	"name": "convert_t_uint160_to_t_uint160",
																	"nativeSrc": "4118:30:13",
																	"nodeType": "YulIdentifier",
																	"src": "4118:30:13"
																},
																"nativeSrc": "4118:37:13",
																"nodeType": "YulFunctionCall",
																"src": "4118:37:13"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nativeSrc": "4105:9:13",
																	"nodeType": "YulIdentifier",
																	"src": "4105:9:13"
																}
															]
														}
													]
												},
												"name": "convert_t_uint160_to_t_address",
												"nativeSrc": "4035:126:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "4075:5:13",
														"nodeType": "YulTypedName",
														"src": "4075:5:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nativeSrc": "4085:9:13",
														"nodeType": "YulTypedName",
														"src": "4085:9:13",
														"type": ""
													}
												],
												"src": "4035:126:13"
											},
											{
												"body": {
													"nativeSrc": "4242:66:13",
													"nodeType": "YulBlock",
													"src": "4242:66:13",
													"statements": [
														{
															"nativeSrc": "4252:50:13",
															"nodeType": "YulAssignment",
															"src": "4252:50:13",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "4296:5:13",
																		"nodeType": "YulIdentifier",
																		"src": "4296:5:13"
																	}
																],
																"functionName": {
																	"name": "convert_t_uint160_to_t_address",
																	"nativeSrc": "4265:30:13",
																	"nodeType": "YulIdentifier",
																	"src": "4265:30:13"
																},
																"nativeSrc": "4265:37:13",
																"nodeType": "YulFunctionCall",
																"src": "4265:37:13"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nativeSrc": "4252:9:13",
																	"nodeType": "YulIdentifier",
																	"src": "4252:9:13"
																}
															]
														}
													]
												},
												"name": "convert_t_contract$_IERC20_$1103_to_t_address",
												"nativeSrc": "4167:141:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "4222:5:13",
														"nodeType": "YulTypedName",
														"src": "4222:5:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nativeSrc": "4232:9:13",
														"nodeType": "YulTypedName",
														"src": "4232:9:13",
														"type": ""
													}
												],
												"src": "4167:141:13"
											},
											{
												"body": {
													"nativeSrc": "4394:81:13",
													"nodeType": "YulBlock",
													"src": "4394:81:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "4411:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "4411:3:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "4462:5:13",
																				"nodeType": "YulIdentifier",
																				"src": "4462:5:13"
																			}
																		],
																		"functionName": {
																			"name": "convert_t_contract$_IERC20_$1103_to_t_address",
																			"nativeSrc": "4416:45:13",
																			"nodeType": "YulIdentifier",
																			"src": "4416:45:13"
																		},
																		"nativeSrc": "4416:52:13",
																		"nodeType": "YulFunctionCall",
																		"src": "4416:52:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4404:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "4404:6:13"
																},
																"nativeSrc": "4404:65:13",
																"nodeType": "YulFunctionCall",
																"src": "4404:65:13"
															},
															"nativeSrc": "4404:65:13",
															"nodeType": "YulExpressionStatement",
															"src": "4404:65:13"
														}
													]
												},
												"name": "abi_encode_t_contract$_IERC20_$1103_to_t_address_fromStack",
												"nativeSrc": "4314:161:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "4382:5:13",
														"nodeType": "YulTypedName",
														"src": "4382:5:13",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "4389:3:13",
														"nodeType": "YulTypedName",
														"src": "4389:3:13",
														"type": ""
													}
												],
												"src": "4314:161:13"
											},
											{
												"body": {
													"nativeSrc": "4594:139:13",
													"nodeType": "YulBlock",
													"src": "4594:139:13",
													"statements": [
														{
															"nativeSrc": "4604:26:13",
															"nodeType": "YulAssignment",
															"src": "4604:26:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "4616:9:13",
																		"nodeType": "YulIdentifier",
																		"src": "4616:9:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4627:2:13",
																		"nodeType": "YulLiteral",
																		"src": "4627:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "4612:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "4612:3:13"
																},
																"nativeSrc": "4612:18:13",
																"nodeType": "YulFunctionCall",
																"src": "4612:18:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "4604:4:13",
																	"nodeType": "YulIdentifier",
																	"src": "4604:4:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "4699:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "4699:6:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "4712:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "4712:9:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4723:1:13",
																				"nodeType": "YulLiteral",
																				"src": "4723:1:13",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4708:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "4708:3:13"
																		},
																		"nativeSrc": "4708:17:13",
																		"nodeType": "YulFunctionCall",
																		"src": "4708:17:13"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_contract$_IERC20_$1103_to_t_address_fromStack",
																	"nativeSrc": "4640:58:13",
																	"nodeType": "YulIdentifier",
																	"src": "4640:58:13"
																},
																"nativeSrc": "4640:86:13",
																"nodeType": "YulFunctionCall",
																"src": "4640:86:13"
															},
															"nativeSrc": "4640:86:13",
															"nodeType": "YulExpressionStatement",
															"src": "4640:86:13"
														}
													]
												},
												"name": "abi_encode_tuple_t_contract$_IERC20_$1103__to_t_address__fromStack_reversed",
												"nativeSrc": "4481:252:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "4566:9:13",
														"nodeType": "YulTypedName",
														"src": "4566:9:13",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "4578:6:13",
														"nodeType": "YulTypedName",
														"src": "4578:6:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "4589:4:13",
														"nodeType": "YulTypedName",
														"src": "4589:4:13",
														"type": ""
													}
												],
												"src": "4481:252:13"
											},
											{
												"body": {
													"nativeSrc": "4767:152:13",
													"nodeType": "YulBlock",
													"src": "4767:152:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "4784:1:13",
																		"nodeType": "YulLiteral",
																		"src": "4784:1:13",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4787:77:13",
																		"nodeType": "YulLiteral",
																		"src": "4787:77:13",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4777:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "4777:6:13"
																},
																"nativeSrc": "4777:88:13",
																"nodeType": "YulFunctionCall",
																"src": "4777:88:13"
															},
															"nativeSrc": "4777:88:13",
															"nodeType": "YulExpressionStatement",
															"src": "4777:88:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "4881:1:13",
																		"nodeType": "YulLiteral",
																		"src": "4881:1:13",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4884:4:13",
																		"nodeType": "YulLiteral",
																		"src": "4884:4:13",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4874:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "4874:6:13"
																},
																"nativeSrc": "4874:15:13",
																"nodeType": "YulFunctionCall",
																"src": "4874:15:13"
															},
															"nativeSrc": "4874:15:13",
															"nodeType": "YulExpressionStatement",
															"src": "4874:15:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "4905:1:13",
																		"nodeType": "YulLiteral",
																		"src": "4905:1:13",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4908:4:13",
																		"nodeType": "YulLiteral",
																		"src": "4908:4:13",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "4898:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "4898:6:13"
																},
																"nativeSrc": "4898:15:13",
																"nodeType": "YulFunctionCall",
																"src": "4898:15:13"
															},
															"nativeSrc": "4898:15:13",
															"nodeType": "YulExpressionStatement",
															"src": "4898:15:13"
														}
													]
												},
												"name": "panic_error_0x11",
												"nativeSrc": "4739:180:13",
												"nodeType": "YulFunctionDefinition",
												"src": "4739:180:13"
											},
											{
												"body": {
													"nativeSrc": "4973:362:13",
													"nodeType": "YulBlock",
													"src": "4973:362:13",
													"statements": [
														{
															"nativeSrc": "4983:25:13",
															"nodeType": "YulAssignment",
															"src": "4983:25:13",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "5006:1:13",
																		"nodeType": "YulIdentifier",
																		"src": "5006:1:13"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "4988:17:13",
																	"nodeType": "YulIdentifier",
																	"src": "4988:17:13"
																},
																"nativeSrc": "4988:20:13",
																"nodeType": "YulFunctionCall",
																"src": "4988:20:13"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "4983:1:13",
																	"nodeType": "YulIdentifier",
																	"src": "4983:1:13"
																}
															]
														},
														{
															"nativeSrc": "5017:25:13",
															"nodeType": "YulAssignment",
															"src": "5017:25:13",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "5040:1:13",
																		"nodeType": "YulIdentifier",
																		"src": "5040:1:13"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "5022:17:13",
																	"nodeType": "YulIdentifier",
																	"src": "5022:17:13"
																},
																"nativeSrc": "5022:20:13",
																"nodeType": "YulFunctionCall",
																"src": "5022:20:13"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "5017:1:13",
																	"nodeType": "YulIdentifier",
																	"src": "5017:1:13"
																}
															]
														},
														{
															"nativeSrc": "5051:28:13",
															"nodeType": "YulVariableDeclaration",
															"src": "5051:28:13",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "5074:1:13",
																		"nodeType": "YulIdentifier",
																		"src": "5074:1:13"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "5077:1:13",
																		"nodeType": "YulIdentifier",
																		"src": "5077:1:13"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nativeSrc": "5070:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "5070:3:13"
																},
																"nativeSrc": "5070:9:13",
																"nodeType": "YulFunctionCall",
																"src": "5070:9:13"
															},
															"variables": [
																{
																	"name": "product_raw",
																	"nativeSrc": "5055:11:13",
																	"nodeType": "YulTypedName",
																	"src": "5055:11:13",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "5088:41:13",
															"nodeType": "YulAssignment",
															"src": "5088:41:13",
															"value": {
																"arguments": [
																	{
																		"name": "product_raw",
																		"nativeSrc": "5117:11:13",
																		"nodeType": "YulIdentifier",
																		"src": "5117:11:13"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "5099:17:13",
																	"nodeType": "YulIdentifier",
																	"src": "5099:17:13"
																},
																"nativeSrc": "5099:30:13",
																"nodeType": "YulFunctionCall",
																"src": "5099:30:13"
															},
															"variableNames": [
																{
																	"name": "product",
																	"nativeSrc": "5088:7:13",
																	"nodeType": "YulIdentifier",
																	"src": "5088:7:13"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "5306:22:13",
																"nodeType": "YulBlock",
																"src": "5306:22:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "5308:16:13",
																				"nodeType": "YulIdentifier",
																				"src": "5308:16:13"
																			},
																			"nativeSrc": "5308:18:13",
																			"nodeType": "YulFunctionCall",
																			"src": "5308:18:13"
																		},
																		"nativeSrc": "5308:18:13",
																		"nodeType": "YulExpressionStatement",
																		"src": "5308:18:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "x",
																						"nativeSrc": "5239:1:13",
																						"nodeType": "YulIdentifier",
																						"src": "5239:1:13"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nativeSrc": "5232:6:13",
																					"nodeType": "YulIdentifier",
																					"src": "5232:6:13"
																				},
																				"nativeSrc": "5232:9:13",
																				"nodeType": "YulFunctionCall",
																				"src": "5232:9:13"
																			},
																			{
																				"arguments": [
																					{
																						"name": "y",
																						"nativeSrc": "5262:1:13",
																						"nodeType": "YulIdentifier",
																						"src": "5262:1:13"
																					},
																					{
																						"arguments": [
																							{
																								"name": "product",
																								"nativeSrc": "5269:7:13",
																								"nodeType": "YulIdentifier",
																								"src": "5269:7:13"
																							},
																							{
																								"name": "x",
																								"nativeSrc": "5278:1:13",
																								"nodeType": "YulIdentifier",
																								"src": "5278:1:13"
																							}
																						],
																						"functionName": {
																							"name": "div",
																							"nativeSrc": "5265:3:13",
																							"nodeType": "YulIdentifier",
																							"src": "5265:3:13"
																						},
																						"nativeSrc": "5265:15:13",
																						"nodeType": "YulFunctionCall",
																						"src": "5265:15:13"
																					}
																				],
																				"functionName": {
																					"name": "eq",
																					"nativeSrc": "5259:2:13",
																					"nodeType": "YulIdentifier",
																					"src": "5259:2:13"
																				},
																				"nativeSrc": "5259:22:13",
																				"nodeType": "YulFunctionCall",
																				"src": "5259:22:13"
																			}
																		],
																		"functionName": {
																			"name": "or",
																			"nativeSrc": "5212:2:13",
																			"nodeType": "YulIdentifier",
																			"src": "5212:2:13"
																		},
																		"nativeSrc": "5212:83:13",
																		"nodeType": "YulFunctionCall",
																		"src": "5212:83:13"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "5192:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "5192:6:13"
																},
																"nativeSrc": "5192:113:13",
																"nodeType": "YulFunctionCall",
																"src": "5192:113:13"
															},
															"nativeSrc": "5189:139:13",
															"nodeType": "YulIf",
															"src": "5189:139:13"
														}
													]
												},
												"name": "checked_mul_t_uint256",
												"nativeSrc": "4925:410:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "4956:1:13",
														"nodeType": "YulTypedName",
														"src": "4956:1:13",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "4959:1:13",
														"nodeType": "YulTypedName",
														"src": "4959:1:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "product",
														"nativeSrc": "4965:7:13",
														"nodeType": "YulTypedName",
														"src": "4965:7:13",
														"type": ""
													}
												],
												"src": "4925:410:13"
											},
											{
												"body": {
													"nativeSrc": "5369:152:13",
													"nodeType": "YulBlock",
													"src": "5369:152:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "5386:1:13",
																		"nodeType": "YulLiteral",
																		"src": "5386:1:13",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5389:77:13",
																		"nodeType": "YulLiteral",
																		"src": "5389:77:13",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5379:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "5379:6:13"
																},
																"nativeSrc": "5379:88:13",
																"nodeType": "YulFunctionCall",
																"src": "5379:88:13"
															},
															"nativeSrc": "5379:88:13",
															"nodeType": "YulExpressionStatement",
															"src": "5379:88:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "5483:1:13",
																		"nodeType": "YulLiteral",
																		"src": "5483:1:13",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5486:4:13",
																		"nodeType": "YulLiteral",
																		"src": "5486:4:13",
																		"type": "",
																		"value": "0x12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5476:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "5476:6:13"
																},
																"nativeSrc": "5476:15:13",
																"nodeType": "YulFunctionCall",
																"src": "5476:15:13"
															},
															"nativeSrc": "5476:15:13",
															"nodeType": "YulExpressionStatement",
															"src": "5476:15:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "5507:1:13",
																		"nodeType": "YulLiteral",
																		"src": "5507:1:13",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5510:4:13",
																		"nodeType": "YulLiteral",
																		"src": "5510:4:13",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "5500:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "5500:6:13"
																},
																"nativeSrc": "5500:15:13",
																"nodeType": "YulFunctionCall",
																"src": "5500:15:13"
															},
															"nativeSrc": "5500:15:13",
															"nodeType": "YulExpressionStatement",
															"src": "5500:15:13"
														}
													]
												},
												"name": "panic_error_0x12",
												"nativeSrc": "5341:180:13",
												"nodeType": "YulFunctionDefinition",
												"src": "5341:180:13"
											},
											{
												"body": {
													"nativeSrc": "5569:143:13",
													"nodeType": "YulBlock",
													"src": "5569:143:13",
													"statements": [
														{
															"nativeSrc": "5579:25:13",
															"nodeType": "YulAssignment",
															"src": "5579:25:13",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "5602:1:13",
																		"nodeType": "YulIdentifier",
																		"src": "5602:1:13"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "5584:17:13",
																	"nodeType": "YulIdentifier",
																	"src": "5584:17:13"
																},
																"nativeSrc": "5584:20:13",
																"nodeType": "YulFunctionCall",
																"src": "5584:20:13"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "5579:1:13",
																	"nodeType": "YulIdentifier",
																	"src": "5579:1:13"
																}
															]
														},
														{
															"nativeSrc": "5613:25:13",
															"nodeType": "YulAssignment",
															"src": "5613:25:13",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "5636:1:13",
																		"nodeType": "YulIdentifier",
																		"src": "5636:1:13"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "5618:17:13",
																	"nodeType": "YulIdentifier",
																	"src": "5618:17:13"
																},
																"nativeSrc": "5618:20:13",
																"nodeType": "YulFunctionCall",
																"src": "5618:20:13"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "5613:1:13",
																	"nodeType": "YulIdentifier",
																	"src": "5613:1:13"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "5660:22:13",
																"nodeType": "YulBlock",
																"src": "5660:22:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x12",
																				"nativeSrc": "5662:16:13",
																				"nodeType": "YulIdentifier",
																				"src": "5662:16:13"
																			},
																			"nativeSrc": "5662:18:13",
																			"nodeType": "YulFunctionCall",
																			"src": "5662:18:13"
																		},
																		"nativeSrc": "5662:18:13",
																		"nodeType": "YulExpressionStatement",
																		"src": "5662:18:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "5657:1:13",
																		"nodeType": "YulIdentifier",
																		"src": "5657:1:13"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "5650:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "5650:6:13"
																},
																"nativeSrc": "5650:9:13",
																"nodeType": "YulFunctionCall",
																"src": "5650:9:13"
															},
															"nativeSrc": "5647:35:13",
															"nodeType": "YulIf",
															"src": "5647:35:13"
														},
														{
															"nativeSrc": "5692:14:13",
															"nodeType": "YulAssignment",
															"src": "5692:14:13",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "5701:1:13",
																		"nodeType": "YulIdentifier",
																		"src": "5701:1:13"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "5704:1:13",
																		"nodeType": "YulIdentifier",
																		"src": "5704:1:13"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nativeSrc": "5697:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "5697:3:13"
																},
																"nativeSrc": "5697:9:13",
																"nodeType": "YulFunctionCall",
																"src": "5697:9:13"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nativeSrc": "5692:1:13",
																	"nodeType": "YulIdentifier",
																	"src": "5692:1:13"
																}
															]
														}
													]
												},
												"name": "checked_div_t_uint256",
												"nativeSrc": "5527:185:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "5558:1:13",
														"nodeType": "YulTypedName",
														"src": "5558:1:13",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "5561:1:13",
														"nodeType": "YulTypedName",
														"src": "5561:1:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "r",
														"nativeSrc": "5567:1:13",
														"nodeType": "YulTypedName",
														"src": "5567:1:13",
														"type": ""
													}
												],
												"src": "5527:185:13"
											},
											{
												"body": {
													"nativeSrc": "5762:147:13",
													"nodeType": "YulBlock",
													"src": "5762:147:13",
													"statements": [
														{
															"nativeSrc": "5772:25:13",
															"nodeType": "YulAssignment",
															"src": "5772:25:13",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "5795:1:13",
																		"nodeType": "YulIdentifier",
																		"src": "5795:1:13"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "5777:17:13",
																	"nodeType": "YulIdentifier",
																	"src": "5777:17:13"
																},
																"nativeSrc": "5777:20:13",
																"nodeType": "YulFunctionCall",
																"src": "5777:20:13"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "5772:1:13",
																	"nodeType": "YulIdentifier",
																	"src": "5772:1:13"
																}
															]
														},
														{
															"nativeSrc": "5806:25:13",
															"nodeType": "YulAssignment",
															"src": "5806:25:13",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "5829:1:13",
																		"nodeType": "YulIdentifier",
																		"src": "5829:1:13"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "5811:17:13",
																	"nodeType": "YulIdentifier",
																	"src": "5811:17:13"
																},
																"nativeSrc": "5811:20:13",
																"nodeType": "YulFunctionCall",
																"src": "5811:20:13"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "5806:1:13",
																	"nodeType": "YulIdentifier",
																	"src": "5806:1:13"
																}
															]
														},
														{
															"nativeSrc": "5840:16:13",
															"nodeType": "YulAssignment",
															"src": "5840:16:13",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "5851:1:13",
																		"nodeType": "YulIdentifier",
																		"src": "5851:1:13"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "5854:1:13",
																		"nodeType": "YulIdentifier",
																		"src": "5854:1:13"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "5847:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "5847:3:13"
																},
																"nativeSrc": "5847:9:13",
																"nodeType": "YulFunctionCall",
																"src": "5847:9:13"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nativeSrc": "5840:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "5840:3:13"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "5880:22:13",
																"nodeType": "YulBlock",
																"src": "5880:22:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "5882:16:13",
																				"nodeType": "YulIdentifier",
																				"src": "5882:16:13"
																			},
																			"nativeSrc": "5882:18:13",
																			"nodeType": "YulFunctionCall",
																			"src": "5882:18:13"
																		},
																		"nativeSrc": "5882:18:13",
																		"nodeType": "YulExpressionStatement",
																		"src": "5882:18:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "5872:1:13",
																		"nodeType": "YulIdentifier",
																		"src": "5872:1:13"
																	},
																	{
																		"name": "sum",
																		"nativeSrc": "5875:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "5875:3:13"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "5869:2:13",
																	"nodeType": "YulIdentifier",
																	"src": "5869:2:13"
																},
																"nativeSrc": "5869:10:13",
																"nodeType": "YulFunctionCall",
																"src": "5869:10:13"
															},
															"nativeSrc": "5866:36:13",
															"nodeType": "YulIf",
															"src": "5866:36:13"
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nativeSrc": "5718:191:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "5749:1:13",
														"nodeType": "YulTypedName",
														"src": "5749:1:13",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "5752:1:13",
														"nodeType": "YulTypedName",
														"src": "5752:1:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nativeSrc": "5758:3:13",
														"nodeType": "YulTypedName",
														"src": "5758:3:13",
														"type": ""
													}
												],
												"src": "5718:191:13"
											},
											{
												"body": {
													"nativeSrc": "5957:52:13",
													"nodeType": "YulBlock",
													"src": "5957:52:13",
													"statements": [
														{
															"nativeSrc": "5967:35:13",
															"nodeType": "YulAssignment",
															"src": "5967:35:13",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "5992:2:13",
																		"nodeType": "YulLiteral",
																		"src": "5992:2:13",
																		"type": "",
																		"value": "96"
																	},
																	{
																		"name": "value",
																		"nativeSrc": "5996:5:13",
																		"nodeType": "YulIdentifier",
																		"src": "5996:5:13"
																	}
																],
																"functionName": {
																	"name": "shl",
																	"nativeSrc": "5988:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "5988:3:13"
																},
																"nativeSrc": "5988:14:13",
																"nodeType": "YulFunctionCall",
																"src": "5988:14:13"
															},
															"variableNames": [
																{
																	"name": "newValue",
																	"nativeSrc": "5967:8:13",
																	"nodeType": "YulIdentifier",
																	"src": "5967:8:13"
																}
															]
														}
													]
												},
												"name": "shift_left_96",
												"nativeSrc": "5915:94:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "5938:5:13",
														"nodeType": "YulTypedName",
														"src": "5938:5:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "newValue",
														"nativeSrc": "5948:8:13",
														"nodeType": "YulTypedName",
														"src": "5948:8:13",
														"type": ""
													}
												],
												"src": "5915:94:13"
											},
											{
												"body": {
													"nativeSrc": "6062:47:13",
													"nodeType": "YulBlock",
													"src": "6062:47:13",
													"statements": [
														{
															"nativeSrc": "6072:31:13",
															"nodeType": "YulAssignment",
															"src": "6072:31:13",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "6097:5:13",
																		"nodeType": "YulIdentifier",
																		"src": "6097:5:13"
																	}
																],
																"functionName": {
																	"name": "shift_left_96",
																	"nativeSrc": "6083:13:13",
																	"nodeType": "YulIdentifier",
																	"src": "6083:13:13"
																},
																"nativeSrc": "6083:20:13",
																"nodeType": "YulFunctionCall",
																"src": "6083:20:13"
															},
															"variableNames": [
																{
																	"name": "aligned",
																	"nativeSrc": "6072:7:13",
																	"nodeType": "YulIdentifier",
																	"src": "6072:7:13"
																}
															]
														}
													]
												},
												"name": "leftAlign_t_uint160",
												"nativeSrc": "6015:94:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "6044:5:13",
														"nodeType": "YulTypedName",
														"src": "6044:5:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "aligned",
														"nativeSrc": "6054:7:13",
														"nodeType": "YulTypedName",
														"src": "6054:7:13",
														"type": ""
													}
												],
												"src": "6015:94:13"
											},
											{
												"body": {
													"nativeSrc": "6162:53:13",
													"nodeType": "YulBlock",
													"src": "6162:53:13",
													"statements": [
														{
															"nativeSrc": "6172:37:13",
															"nodeType": "YulAssignment",
															"src": "6172:37:13",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "6203:5:13",
																		"nodeType": "YulIdentifier",
																		"src": "6203:5:13"
																	}
																],
																"functionName": {
																	"name": "leftAlign_t_uint160",
																	"nativeSrc": "6183:19:13",
																	"nodeType": "YulIdentifier",
																	"src": "6183:19:13"
																},
																"nativeSrc": "6183:26:13",
																"nodeType": "YulFunctionCall",
																"src": "6183:26:13"
															},
															"variableNames": [
																{
																	"name": "aligned",
																	"nativeSrc": "6172:7:13",
																	"nodeType": "YulIdentifier",
																	"src": "6172:7:13"
																}
															]
														}
													]
												},
												"name": "leftAlign_t_address",
												"nativeSrc": "6115:100:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "6144:5:13",
														"nodeType": "YulTypedName",
														"src": "6144:5:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "aligned",
														"nativeSrc": "6154:7:13",
														"nodeType": "YulTypedName",
														"src": "6154:7:13",
														"type": ""
													}
												],
												"src": "6115:100:13"
											},
											{
												"body": {
													"nativeSrc": "6304:74:13",
													"nodeType": "YulBlock",
													"src": "6304:74:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "6321:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "6321:3:13"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "6364:5:13",
																						"nodeType": "YulIdentifier",
																						"src": "6364:5:13"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nativeSrc": "6346:17:13",
																					"nodeType": "YulIdentifier",
																					"src": "6346:17:13"
																				},
																				"nativeSrc": "6346:24:13",
																				"nodeType": "YulFunctionCall",
																				"src": "6346:24:13"
																			}
																		],
																		"functionName": {
																			"name": "leftAlign_t_address",
																			"nativeSrc": "6326:19:13",
																			"nodeType": "YulIdentifier",
																			"src": "6326:19:13"
																		},
																		"nativeSrc": "6326:45:13",
																		"nodeType": "YulFunctionCall",
																		"src": "6326:45:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6314:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "6314:6:13"
																},
																"nativeSrc": "6314:58:13",
																"nodeType": "YulFunctionCall",
																"src": "6314:58:13"
															},
															"nativeSrc": "6314:58:13",
															"nodeType": "YulExpressionStatement",
															"src": "6314:58:13"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_nonPadded_inplace_fromStack",
												"nativeSrc": "6221:157:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "6292:5:13",
														"nodeType": "YulTypedName",
														"src": "6292:5:13",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "6299:3:13",
														"nodeType": "YulTypedName",
														"src": "6299:3:13",
														"type": ""
													}
												],
												"src": "6221:157:13"
											},
											{
												"body": {
													"nativeSrc": "6431:32:13",
													"nodeType": "YulBlock",
													"src": "6431:32:13",
													"statements": [
														{
															"nativeSrc": "6441:16:13",
															"nodeType": "YulAssignment",
															"src": "6441:16:13",
															"value": {
																"name": "value",
																"nativeSrc": "6452:5:13",
																"nodeType": "YulIdentifier",
																"src": "6452:5:13"
															},
															"variableNames": [
																{
																	"name": "aligned",
																	"nativeSrc": "6441:7:13",
																	"nodeType": "YulIdentifier",
																	"src": "6441:7:13"
																}
															]
														}
													]
												},
												"name": "leftAlign_t_uint256",
												"nativeSrc": "6384:79:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "6413:5:13",
														"nodeType": "YulTypedName",
														"src": "6413:5:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "aligned",
														"nativeSrc": "6423:7:13",
														"nodeType": "YulTypedName",
														"src": "6423:7:13",
														"type": ""
													}
												],
												"src": "6384:79:13"
											},
											{
												"body": {
													"nativeSrc": "6552:74:13",
													"nodeType": "YulBlock",
													"src": "6552:74:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "6569:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "6569:3:13"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "6612:5:13",
																						"nodeType": "YulIdentifier",
																						"src": "6612:5:13"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nativeSrc": "6594:17:13",
																					"nodeType": "YulIdentifier",
																					"src": "6594:17:13"
																				},
																				"nativeSrc": "6594:24:13",
																				"nodeType": "YulFunctionCall",
																				"src": "6594:24:13"
																			}
																		],
																		"functionName": {
																			"name": "leftAlign_t_uint256",
																			"nativeSrc": "6574:19:13",
																			"nodeType": "YulIdentifier",
																			"src": "6574:19:13"
																		},
																		"nativeSrc": "6574:45:13",
																		"nodeType": "YulFunctionCall",
																		"src": "6574:45:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6562:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "6562:6:13"
																},
																"nativeSrc": "6562:58:13",
																"nodeType": "YulFunctionCall",
																"src": "6562:58:13"
															},
															"nativeSrc": "6562:58:13",
															"nodeType": "YulExpressionStatement",
															"src": "6562:58:13"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256_nonPadded_inplace_fromStack",
												"nativeSrc": "6469:157:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "6540:5:13",
														"nodeType": "YulTypedName",
														"src": "6540:5:13",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "6547:3:13",
														"nodeType": "YulTypedName",
														"src": "6547:3:13",
														"type": ""
													}
												],
												"src": "6469:157:13"
											},
											{
												"body": {
													"nativeSrc": "6804:366:13",
													"nodeType": "YulBlock",
													"src": "6804:366:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "6877:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "6877:6:13"
																	},
																	{
																		"name": "pos",
																		"nativeSrc": "6886:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "6886:3:13"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_nonPadded_inplace_fromStack",
																	"nativeSrc": "6815:61:13",
																	"nodeType": "YulIdentifier",
																	"src": "6815:61:13"
																},
																"nativeSrc": "6815:75:13",
																"nodeType": "YulFunctionCall",
																"src": "6815:75:13"
															},
															"nativeSrc": "6815:75:13",
															"nodeType": "YulExpressionStatement",
															"src": "6815:75:13"
														},
														{
															"nativeSrc": "6899:19:13",
															"nodeType": "YulAssignment",
															"src": "6899:19:13",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "6910:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "6910:3:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6915:2:13",
																		"nodeType": "YulLiteral",
																		"src": "6915:2:13",
																		"type": "",
																		"value": "20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "6906:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "6906:3:13"
																},
																"nativeSrc": "6906:12:13",
																"nodeType": "YulFunctionCall",
																"src": "6906:12:13"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "6899:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "6899:3:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "6990:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "6990:6:13"
																	},
																	{
																		"name": "pos",
																		"nativeSrc": "6999:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "6999:3:13"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_nonPadded_inplace_fromStack",
																	"nativeSrc": "6928:61:13",
																	"nodeType": "YulIdentifier",
																	"src": "6928:61:13"
																},
																"nativeSrc": "6928:75:13",
																"nodeType": "YulFunctionCall",
																"src": "6928:75:13"
															},
															"nativeSrc": "6928:75:13",
															"nodeType": "YulExpressionStatement",
															"src": "6928:75:13"
														},
														{
															"nativeSrc": "7012:19:13",
															"nodeType": "YulAssignment",
															"src": "7012:19:13",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "7023:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "7023:3:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7028:2:13",
																		"nodeType": "YulLiteral",
																		"src": "7028:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "7019:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "7019:3:13"
																},
																"nativeSrc": "7019:12:13",
																"nodeType": "YulFunctionCall",
																"src": "7019:12:13"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "7012:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "7012:3:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value2",
																		"nativeSrc": "7103:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "7103:6:13"
																	},
																	{
																		"name": "pos",
																		"nativeSrc": "7112:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "7112:3:13"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_nonPadded_inplace_fromStack",
																	"nativeSrc": "7041:61:13",
																	"nodeType": "YulIdentifier",
																	"src": "7041:61:13"
																},
																"nativeSrc": "7041:75:13",
																"nodeType": "YulFunctionCall",
																"src": "7041:75:13"
															},
															"nativeSrc": "7041:75:13",
															"nodeType": "YulExpressionStatement",
															"src": "7041:75:13"
														},
														{
															"nativeSrc": "7125:19:13",
															"nodeType": "YulAssignment",
															"src": "7125:19:13",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "7136:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "7136:3:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7141:2:13",
																		"nodeType": "YulLiteral",
																		"src": "7141:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "7132:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "7132:3:13"
																},
																"nativeSrc": "7132:12:13",
																"nodeType": "YulFunctionCall",
																"src": "7132:12:13"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "7125:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "7125:3:13"
																}
															]
														},
														{
															"nativeSrc": "7154:10:13",
															"nodeType": "YulAssignment",
															"src": "7154:10:13",
															"value": {
																"name": "pos",
																"nativeSrc": "7161:3:13",
																"nodeType": "YulIdentifier",
																"src": "7161:3:13"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "7154:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "7154:3:13"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_packed_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__nonPadded_inplace_fromStack_reversed",
												"nativeSrc": "6632:538:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "6767:3:13",
														"nodeType": "YulTypedName",
														"src": "6767:3:13",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "6773:6:13",
														"nodeType": "YulTypedName",
														"src": "6773:6:13",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "6781:6:13",
														"nodeType": "YulTypedName",
														"src": "6781:6:13",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "6789:6:13",
														"nodeType": "YulTypedName",
														"src": "6789:6:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "6800:3:13",
														"nodeType": "YulTypedName",
														"src": "6800:3:13",
														"type": ""
													}
												],
												"src": "6632:538:13"
											},
											{
												"body": {
													"nativeSrc": "7210:142:13",
													"nodeType": "YulBlock",
													"src": "7210:142:13",
													"statements": [
														{
															"nativeSrc": "7220:25:13",
															"nodeType": "YulAssignment",
															"src": "7220:25:13",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "7243:1:13",
																		"nodeType": "YulIdentifier",
																		"src": "7243:1:13"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "7225:17:13",
																	"nodeType": "YulIdentifier",
																	"src": "7225:17:13"
																},
																"nativeSrc": "7225:20:13",
																"nodeType": "YulFunctionCall",
																"src": "7225:20:13"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "7220:1:13",
																	"nodeType": "YulIdentifier",
																	"src": "7220:1:13"
																}
															]
														},
														{
															"nativeSrc": "7254:25:13",
															"nodeType": "YulAssignment",
															"src": "7254:25:13",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "7277:1:13",
																		"nodeType": "YulIdentifier",
																		"src": "7277:1:13"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "7259:17:13",
																	"nodeType": "YulIdentifier",
																	"src": "7259:17:13"
																},
																"nativeSrc": "7259:20:13",
																"nodeType": "YulFunctionCall",
																"src": "7259:20:13"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "7254:1:13",
																	"nodeType": "YulIdentifier",
																	"src": "7254:1:13"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "7301:22:13",
																"nodeType": "YulBlock",
																"src": "7301:22:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x12",
																				"nativeSrc": "7303:16:13",
																				"nodeType": "YulIdentifier",
																				"src": "7303:16:13"
																			},
																			"nativeSrc": "7303:18:13",
																			"nodeType": "YulFunctionCall",
																			"src": "7303:18:13"
																		},
																		"nativeSrc": "7303:18:13",
																		"nodeType": "YulExpressionStatement",
																		"src": "7303:18:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "7298:1:13",
																		"nodeType": "YulIdentifier",
																		"src": "7298:1:13"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "7291:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "7291:6:13"
																},
																"nativeSrc": "7291:9:13",
																"nodeType": "YulFunctionCall",
																"src": "7291:9:13"
															},
															"nativeSrc": "7288:35:13",
															"nodeType": "YulIf",
															"src": "7288:35:13"
														},
														{
															"nativeSrc": "7332:14:13",
															"nodeType": "YulAssignment",
															"src": "7332:14:13",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "7341:1:13",
																		"nodeType": "YulIdentifier",
																		"src": "7341:1:13"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "7344:1:13",
																		"nodeType": "YulIdentifier",
																		"src": "7344:1:13"
																	}
																],
																"functionName": {
																	"name": "mod",
																	"nativeSrc": "7337:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "7337:3:13"
																},
																"nativeSrc": "7337:9:13",
																"nodeType": "YulFunctionCall",
																"src": "7337:9:13"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nativeSrc": "7332:1:13",
																	"nodeType": "YulIdentifier",
																	"src": "7332:1:13"
																}
															]
														}
													]
												},
												"name": "mod_t_uint256",
												"nativeSrc": "7176:176:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "7199:1:13",
														"nodeType": "YulTypedName",
														"src": "7199:1:13",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "7202:1:13",
														"nodeType": "YulTypedName",
														"src": "7202:1:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "r",
														"nativeSrc": "7208:1:13",
														"nodeType": "YulTypedName",
														"src": "7208:1:13",
														"type": ""
													}
												],
												"src": "7176:176:13"
											},
											{
												"body": {
													"nativeSrc": "7454:73:13",
													"nodeType": "YulBlock",
													"src": "7454:73:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "7471:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "7471:3:13"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "7476:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "7476:6:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7464:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "7464:6:13"
																},
																"nativeSrc": "7464:19:13",
																"nodeType": "YulFunctionCall",
																"src": "7464:19:13"
															},
															"nativeSrc": "7464:19:13",
															"nodeType": "YulExpressionStatement",
															"src": "7464:19:13"
														},
														{
															"nativeSrc": "7492:29:13",
															"nodeType": "YulAssignment",
															"src": "7492:29:13",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "7511:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "7511:3:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7516:4:13",
																		"nodeType": "YulLiteral",
																		"src": "7516:4:13",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "7507:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "7507:3:13"
																},
																"nativeSrc": "7507:14:13",
																"nodeType": "YulFunctionCall",
																"src": "7507:14:13"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nativeSrc": "7492:11:13",
																	"nodeType": "YulIdentifier",
																	"src": "7492:11:13"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
												"nativeSrc": "7358:169:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "7426:3:13",
														"nodeType": "YulTypedName",
														"src": "7426:3:13",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "7431:6:13",
														"nodeType": "YulTypedName",
														"src": "7431:6:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nativeSrc": "7442:11:13",
														"nodeType": "YulTypedName",
														"src": "7442:11:13",
														"type": ""
													}
												],
												"src": "7358:169:13"
											},
											{
												"body": {
													"nativeSrc": "7639:58:13",
													"nodeType": "YulBlock",
													"src": "7639:58:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "7661:6:13",
																				"nodeType": "YulIdentifier",
																				"src": "7661:6:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7669:1:13",
																				"nodeType": "YulLiteral",
																				"src": "7669:1:13",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "7657:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "7657:3:13"
																		},
																		"nativeSrc": "7657:14:13",
																		"nodeType": "YulFunctionCall",
																		"src": "7657:14:13"
																	},
																	{
																		"hexValue": "4e6f7420617574686f72697a6564",
																		"kind": "string",
																		"nativeSrc": "7673:16:13",
																		"nodeType": "YulLiteral",
																		"src": "7673:16:13",
																		"type": "",
																		"value": "Not authorized"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7650:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "7650:6:13"
																},
																"nativeSrc": "7650:40:13",
																"nodeType": "YulFunctionCall",
																"src": "7650:40:13"
															},
															"nativeSrc": "7650:40:13",
															"nodeType": "YulExpressionStatement",
															"src": "7650:40:13"
														}
													]
												},
												"name": "store_literal_in_memory_fac3bac318c0d00994f57b0f2f4c643c313072b71db2302bf4b900309cc50b36",
												"nativeSrc": "7533:164:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "7631:6:13",
														"nodeType": "YulTypedName",
														"src": "7631:6:13",
														"type": ""
													}
												],
												"src": "7533:164:13"
											},
											{
												"body": {
													"nativeSrc": "7849:220:13",
													"nodeType": "YulBlock",
													"src": "7849:220:13",
													"statements": [
														{
															"nativeSrc": "7859:74:13",
															"nodeType": "YulAssignment",
															"src": "7859:74:13",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "7925:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "7925:3:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7930:2:13",
																		"nodeType": "YulLiteral",
																		"src": "7930:2:13",
																		"type": "",
																		"value": "14"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "7866:58:13",
																	"nodeType": "YulIdentifier",
																	"src": "7866:58:13"
																},
																"nativeSrc": "7866:67:13",
																"nodeType": "YulFunctionCall",
																"src": "7866:67:13"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "7859:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "7859:3:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "8031:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "8031:3:13"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_fac3bac318c0d00994f57b0f2f4c643c313072b71db2302bf4b900309cc50b36",
																	"nativeSrc": "7942:88:13",
																	"nodeType": "YulIdentifier",
																	"src": "7942:88:13"
																},
																"nativeSrc": "7942:93:13",
																"nodeType": "YulFunctionCall",
																"src": "7942:93:13"
															},
															"nativeSrc": "7942:93:13",
															"nodeType": "YulExpressionStatement",
															"src": "7942:93:13"
														},
														{
															"nativeSrc": "8044:19:13",
															"nodeType": "YulAssignment",
															"src": "8044:19:13",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "8055:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "8055:3:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8060:2:13",
																		"nodeType": "YulLiteral",
																		"src": "8060:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "8051:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "8051:3:13"
																},
																"nativeSrc": "8051:12:13",
																"nodeType": "YulFunctionCall",
																"src": "8051:12:13"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "8044:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "8044:3:13"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_fac3bac318c0d00994f57b0f2f4c643c313072b71db2302bf4b900309cc50b36_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "7703:366:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "7837:3:13",
														"nodeType": "YulTypedName",
														"src": "7837:3:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "7845:3:13",
														"nodeType": "YulTypedName",
														"src": "7845:3:13",
														"type": ""
													}
												],
												"src": "7703:366:13"
											},
											{
												"body": {
													"nativeSrc": "8246:248:13",
													"nodeType": "YulBlock",
													"src": "8246:248:13",
													"statements": [
														{
															"nativeSrc": "8256:26:13",
															"nodeType": "YulAssignment",
															"src": "8256:26:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "8268:9:13",
																		"nodeType": "YulIdentifier",
																		"src": "8268:9:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8279:2:13",
																		"nodeType": "YulLiteral",
																		"src": "8279:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "8264:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "8264:3:13"
																},
																"nativeSrc": "8264:18:13",
																"nodeType": "YulFunctionCall",
																"src": "8264:18:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "8256:4:13",
																	"nodeType": "YulIdentifier",
																	"src": "8256:4:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "8303:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "8303:9:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8314:1:13",
																				"nodeType": "YulLiteral",
																				"src": "8314:1:13",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "8299:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "8299:3:13"
																		},
																		"nativeSrc": "8299:17:13",
																		"nodeType": "YulFunctionCall",
																		"src": "8299:17:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "8322:4:13",
																				"nodeType": "YulIdentifier",
																				"src": "8322:4:13"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "8328:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "8328:9:13"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "8318:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "8318:3:13"
																		},
																		"nativeSrc": "8318:20:13",
																		"nodeType": "YulFunctionCall",
																		"src": "8318:20:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8292:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "8292:6:13"
																},
																"nativeSrc": "8292:47:13",
																"nodeType": "YulFunctionCall",
																"src": "8292:47:13"
															},
															"nativeSrc": "8292:47:13",
															"nodeType": "YulExpressionStatement",
															"src": "8292:47:13"
														},
														{
															"nativeSrc": "8348:139:13",
															"nodeType": "YulAssignment",
															"src": "8348:139:13",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "8482:4:13",
																		"nodeType": "YulIdentifier",
																		"src": "8482:4:13"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_fac3bac318c0d00994f57b0f2f4c643c313072b71db2302bf4b900309cc50b36_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "8356:124:13",
																	"nodeType": "YulIdentifier",
																	"src": "8356:124:13"
																},
																"nativeSrc": "8356:131:13",
																"nodeType": "YulFunctionCall",
																"src": "8356:131:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "8348:4:13",
																	"nodeType": "YulIdentifier",
																	"src": "8348:4:13"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_fac3bac318c0d00994f57b0f2f4c643c313072b71db2302bf4b900309cc50b36__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "8075:419:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "8226:9:13",
														"nodeType": "YulTypedName",
														"src": "8226:9:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "8241:4:13",
														"nodeType": "YulTypedName",
														"src": "8241:4:13",
														"type": ""
													}
												],
												"src": "8075:419:13"
											},
											{
												"body": {
													"nativeSrc": "8606:70:13",
													"nodeType": "YulBlock",
													"src": "8606:70:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "8628:6:13",
																				"nodeType": "YulIdentifier",
																				"src": "8628:6:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8636:1:13",
																				"nodeType": "YulLiteral",
																				"src": "8636:1:13",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "8624:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "8624:3:13"
																		},
																		"nativeSrc": "8624:14:13",
																		"nodeType": "YulFunctionCall",
																		"src": "8624:14:13"
																	},
																	{
																		"hexValue": "43616e6e6f7420726577617264207a65726f2061646472657373",
																		"kind": "string",
																		"nativeSrc": "8640:28:13",
																		"nodeType": "YulLiteral",
																		"src": "8640:28:13",
																		"type": "",
																		"value": "Cannot reward zero address"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8617:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "8617:6:13"
																},
																"nativeSrc": "8617:52:13",
																"nodeType": "YulFunctionCall",
																"src": "8617:52:13"
															},
															"nativeSrc": "8617:52:13",
															"nodeType": "YulExpressionStatement",
															"src": "8617:52:13"
														}
													]
												},
												"name": "store_literal_in_memory_2321cd843e90d2b7a10272ea91ea7fc0cce1a354f8fe8bd4066914e3f5ab40a2",
												"nativeSrc": "8500:176:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "8598:6:13",
														"nodeType": "YulTypedName",
														"src": "8598:6:13",
														"type": ""
													}
												],
												"src": "8500:176:13"
											},
											{
												"body": {
													"nativeSrc": "8828:220:13",
													"nodeType": "YulBlock",
													"src": "8828:220:13",
													"statements": [
														{
															"nativeSrc": "8838:74:13",
															"nodeType": "YulAssignment",
															"src": "8838:74:13",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "8904:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "8904:3:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8909:2:13",
																		"nodeType": "YulLiteral",
																		"src": "8909:2:13",
																		"type": "",
																		"value": "26"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "8845:58:13",
																	"nodeType": "YulIdentifier",
																	"src": "8845:58:13"
																},
																"nativeSrc": "8845:67:13",
																"nodeType": "YulFunctionCall",
																"src": "8845:67:13"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "8838:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "8838:3:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "9010:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "9010:3:13"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_2321cd843e90d2b7a10272ea91ea7fc0cce1a354f8fe8bd4066914e3f5ab40a2",
																	"nativeSrc": "8921:88:13",
																	"nodeType": "YulIdentifier",
																	"src": "8921:88:13"
																},
																"nativeSrc": "8921:93:13",
																"nodeType": "YulFunctionCall",
																"src": "8921:93:13"
															},
															"nativeSrc": "8921:93:13",
															"nodeType": "YulExpressionStatement",
															"src": "8921:93:13"
														},
														{
															"nativeSrc": "9023:19:13",
															"nodeType": "YulAssignment",
															"src": "9023:19:13",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "9034:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "9034:3:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9039:2:13",
																		"nodeType": "YulLiteral",
																		"src": "9039:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "9030:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "9030:3:13"
																},
																"nativeSrc": "9030:12:13",
																"nodeType": "YulFunctionCall",
																"src": "9030:12:13"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "9023:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "9023:3:13"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_2321cd843e90d2b7a10272ea91ea7fc0cce1a354f8fe8bd4066914e3f5ab40a2_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "8682:366:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "8816:3:13",
														"nodeType": "YulTypedName",
														"src": "8816:3:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "8824:3:13",
														"nodeType": "YulTypedName",
														"src": "8824:3:13",
														"type": ""
													}
												],
												"src": "8682:366:13"
											},
											{
												"body": {
													"nativeSrc": "9225:248:13",
													"nodeType": "YulBlock",
													"src": "9225:248:13",
													"statements": [
														{
															"nativeSrc": "9235:26:13",
															"nodeType": "YulAssignment",
															"src": "9235:26:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "9247:9:13",
																		"nodeType": "YulIdentifier",
																		"src": "9247:9:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9258:2:13",
																		"nodeType": "YulLiteral",
																		"src": "9258:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "9243:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "9243:3:13"
																},
																"nativeSrc": "9243:18:13",
																"nodeType": "YulFunctionCall",
																"src": "9243:18:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "9235:4:13",
																	"nodeType": "YulIdentifier",
																	"src": "9235:4:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "9282:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "9282:9:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9293:1:13",
																				"nodeType": "YulLiteral",
																				"src": "9293:1:13",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "9278:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "9278:3:13"
																		},
																		"nativeSrc": "9278:17:13",
																		"nodeType": "YulFunctionCall",
																		"src": "9278:17:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "9301:4:13",
																				"nodeType": "YulIdentifier",
																				"src": "9301:4:13"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "9307:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "9307:9:13"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "9297:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "9297:3:13"
																		},
																		"nativeSrc": "9297:20:13",
																		"nodeType": "YulFunctionCall",
																		"src": "9297:20:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9271:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "9271:6:13"
																},
																"nativeSrc": "9271:47:13",
																"nodeType": "YulFunctionCall",
																"src": "9271:47:13"
															},
															"nativeSrc": "9271:47:13",
															"nodeType": "YulExpressionStatement",
															"src": "9271:47:13"
														},
														{
															"nativeSrc": "9327:139:13",
															"nodeType": "YulAssignment",
															"src": "9327:139:13",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "9461:4:13",
																		"nodeType": "YulIdentifier",
																		"src": "9461:4:13"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_2321cd843e90d2b7a10272ea91ea7fc0cce1a354f8fe8bd4066914e3f5ab40a2_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "9335:124:13",
																	"nodeType": "YulIdentifier",
																	"src": "9335:124:13"
																},
																"nativeSrc": "9335:131:13",
																"nodeType": "YulFunctionCall",
																"src": "9335:131:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "9327:4:13",
																	"nodeType": "YulIdentifier",
																	"src": "9327:4:13"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_2321cd843e90d2b7a10272ea91ea7fc0cce1a354f8fe8bd4066914e3f5ab40a2__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "9054:419:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "9205:9:13",
														"nodeType": "YulTypedName",
														"src": "9205:9:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "9220:4:13",
														"nodeType": "YulTypedName",
														"src": "9220:4:13",
														"type": ""
													}
												],
												"src": "9054:419:13"
											},
											{
												"body": {
													"nativeSrc": "9585:62:13",
													"nodeType": "YulBlock",
													"src": "9585:62:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "9607:6:13",
																				"nodeType": "YulIdentifier",
																				"src": "9607:6:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9615:1:13",
																				"nodeType": "YulLiteral",
																				"src": "9615:1:13",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "9603:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "9603:3:13"
																		},
																		"nativeSrc": "9603:14:13",
																		"nodeType": "YulFunctionCall",
																		"src": "9603:14:13"
																	},
																	{
																		"hexValue": "416d6f756e74206d757374206265203e2030",
																		"kind": "string",
																		"nativeSrc": "9619:20:13",
																		"nodeType": "YulLiteral",
																		"src": "9619:20:13",
																		"type": "",
																		"value": "Amount must be > 0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9596:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "9596:6:13"
																},
																"nativeSrc": "9596:44:13",
																"nodeType": "YulFunctionCall",
																"src": "9596:44:13"
															},
															"nativeSrc": "9596:44:13",
															"nodeType": "YulExpressionStatement",
															"src": "9596:44:13"
														}
													]
												},
												"name": "store_literal_in_memory_01c242f1c806840acb94ec05d87d4647010419c53a053a581e0026b3f6467dbb",
												"nativeSrc": "9479:168:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "9577:6:13",
														"nodeType": "YulTypedName",
														"src": "9577:6:13",
														"type": ""
													}
												],
												"src": "9479:168:13"
											},
											{
												"body": {
													"nativeSrc": "9799:220:13",
													"nodeType": "YulBlock",
													"src": "9799:220:13",
													"statements": [
														{
															"nativeSrc": "9809:74:13",
															"nodeType": "YulAssignment",
															"src": "9809:74:13",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "9875:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "9875:3:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9880:2:13",
																		"nodeType": "YulLiteral",
																		"src": "9880:2:13",
																		"type": "",
																		"value": "18"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "9816:58:13",
																	"nodeType": "YulIdentifier",
																	"src": "9816:58:13"
																},
																"nativeSrc": "9816:67:13",
																"nodeType": "YulFunctionCall",
																"src": "9816:67:13"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "9809:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "9809:3:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "9981:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "9981:3:13"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_01c242f1c806840acb94ec05d87d4647010419c53a053a581e0026b3f6467dbb",
																	"nativeSrc": "9892:88:13",
																	"nodeType": "YulIdentifier",
																	"src": "9892:88:13"
																},
																"nativeSrc": "9892:93:13",
																"nodeType": "YulFunctionCall",
																"src": "9892:93:13"
															},
															"nativeSrc": "9892:93:13",
															"nodeType": "YulExpressionStatement",
															"src": "9892:93:13"
														},
														{
															"nativeSrc": "9994:19:13",
															"nodeType": "YulAssignment",
															"src": "9994:19:13",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "10005:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "10005:3:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10010:2:13",
																		"nodeType": "YulLiteral",
																		"src": "10010:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "10001:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "10001:3:13"
																},
																"nativeSrc": "10001:12:13",
																"nodeType": "YulFunctionCall",
																"src": "10001:12:13"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "9994:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "9994:3:13"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_01c242f1c806840acb94ec05d87d4647010419c53a053a581e0026b3f6467dbb_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "9653:366:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "9787:3:13",
														"nodeType": "YulTypedName",
														"src": "9787:3:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "9795:3:13",
														"nodeType": "YulTypedName",
														"src": "9795:3:13",
														"type": ""
													}
												],
												"src": "9653:366:13"
											},
											{
												"body": {
													"nativeSrc": "10196:248:13",
													"nodeType": "YulBlock",
													"src": "10196:248:13",
													"statements": [
														{
															"nativeSrc": "10206:26:13",
															"nodeType": "YulAssignment",
															"src": "10206:26:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "10218:9:13",
																		"nodeType": "YulIdentifier",
																		"src": "10218:9:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10229:2:13",
																		"nodeType": "YulLiteral",
																		"src": "10229:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "10214:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "10214:3:13"
																},
																"nativeSrc": "10214:18:13",
																"nodeType": "YulFunctionCall",
																"src": "10214:18:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "10206:4:13",
																	"nodeType": "YulIdentifier",
																	"src": "10206:4:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "10253:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "10253:9:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "10264:1:13",
																				"nodeType": "YulLiteral",
																				"src": "10264:1:13",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "10249:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "10249:3:13"
																		},
																		"nativeSrc": "10249:17:13",
																		"nodeType": "YulFunctionCall",
																		"src": "10249:17:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "10272:4:13",
																				"nodeType": "YulIdentifier",
																				"src": "10272:4:13"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "10278:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "10278:9:13"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "10268:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "10268:3:13"
																		},
																		"nativeSrc": "10268:20:13",
																		"nodeType": "YulFunctionCall",
																		"src": "10268:20:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "10242:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "10242:6:13"
																},
																"nativeSrc": "10242:47:13",
																"nodeType": "YulFunctionCall",
																"src": "10242:47:13"
															},
															"nativeSrc": "10242:47:13",
															"nodeType": "YulExpressionStatement",
															"src": "10242:47:13"
														},
														{
															"nativeSrc": "10298:139:13",
															"nodeType": "YulAssignment",
															"src": "10298:139:13",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "10432:4:13",
																		"nodeType": "YulIdentifier",
																		"src": "10432:4:13"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_01c242f1c806840acb94ec05d87d4647010419c53a053a581e0026b3f6467dbb_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "10306:124:13",
																	"nodeType": "YulIdentifier",
																	"src": "10306:124:13"
																},
																"nativeSrc": "10306:131:13",
																"nodeType": "YulFunctionCall",
																"src": "10306:131:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "10298:4:13",
																	"nodeType": "YulIdentifier",
																	"src": "10298:4:13"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_01c242f1c806840acb94ec05d87d4647010419c53a053a581e0026b3f6467dbb__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "10025:419:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "10176:9:13",
														"nodeType": "YulTypedName",
														"src": "10176:9:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "10191:4:13",
														"nodeType": "YulTypedName",
														"src": "10191:4:13",
														"type": ""
													}
												],
												"src": "10025:419:13"
											},
											{
												"body": {
													"nativeSrc": "10513:80:13",
													"nodeType": "YulBlock",
													"src": "10513:80:13",
													"statements": [
														{
															"nativeSrc": "10523:22:13",
															"nodeType": "YulAssignment",
															"src": "10523:22:13",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "10538:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "10538:6:13"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "10532:5:13",
																	"nodeType": "YulIdentifier",
																	"src": "10532:5:13"
																},
																"nativeSrc": "10532:13:13",
																"nodeType": "YulFunctionCall",
																"src": "10532:13:13"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "10523:5:13",
																	"nodeType": "YulIdentifier",
																	"src": "10523:5:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "10581:5:13",
																		"nodeType": "YulIdentifier",
																		"src": "10581:5:13"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nativeSrc": "10554:26:13",
																	"nodeType": "YulIdentifier",
																	"src": "10554:26:13"
																},
																"nativeSrc": "10554:33:13",
																"nodeType": "YulFunctionCall",
																"src": "10554:33:13"
															},
															"nativeSrc": "10554:33:13",
															"nodeType": "YulExpressionStatement",
															"src": "10554:33:13"
														}
													]
												},
												"name": "abi_decode_t_uint256_fromMemory",
												"nativeSrc": "10450:143:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "10491:6:13",
														"nodeType": "YulTypedName",
														"src": "10491:6:13",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "10499:3:13",
														"nodeType": "YulTypedName",
														"src": "10499:3:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "10507:5:13",
														"nodeType": "YulTypedName",
														"src": "10507:5:13",
														"type": ""
													}
												],
												"src": "10450:143:13"
											},
											{
												"body": {
													"nativeSrc": "10676:274:13",
													"nodeType": "YulBlock",
													"src": "10676:274:13",
													"statements": [
														{
															"body": {
																"nativeSrc": "10722:83:13",
																"nodeType": "YulBlock",
																"src": "10722:83:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "10724:77:13",
																				"nodeType": "YulIdentifier",
																				"src": "10724:77:13"
																			},
																			"nativeSrc": "10724:79:13",
																			"nodeType": "YulFunctionCall",
																			"src": "10724:79:13"
																		},
																		"nativeSrc": "10724:79:13",
																		"nodeType": "YulExpressionStatement",
																		"src": "10724:79:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "10697:7:13",
																				"nodeType": "YulIdentifier",
																				"src": "10697:7:13"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "10706:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "10706:9:13"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "10693:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "10693:3:13"
																		},
																		"nativeSrc": "10693:23:13",
																		"nodeType": "YulFunctionCall",
																		"src": "10693:23:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10718:2:13",
																		"nodeType": "YulLiteral",
																		"src": "10718:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "10689:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "10689:3:13"
																},
																"nativeSrc": "10689:32:13",
																"nodeType": "YulFunctionCall",
																"src": "10689:32:13"
															},
															"nativeSrc": "10686:119:13",
															"nodeType": "YulIf",
															"src": "10686:119:13"
														},
														{
															"nativeSrc": "10815:128:13",
															"nodeType": "YulBlock",
															"src": "10815:128:13",
															"statements": [
																{
																	"nativeSrc": "10830:15:13",
																	"nodeType": "YulVariableDeclaration",
																	"src": "10830:15:13",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "10844:1:13",
																		"nodeType": "YulLiteral",
																		"src": "10844:1:13",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "10834:6:13",
																			"nodeType": "YulTypedName",
																			"src": "10834:6:13",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "10859:74:13",
																	"nodeType": "YulAssignment",
																	"src": "10859:74:13",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "10905:9:13",
																						"nodeType": "YulIdentifier",
																						"src": "10905:9:13"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "10916:6:13",
																						"nodeType": "YulIdentifier",
																						"src": "10916:6:13"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "10901:3:13",
																					"nodeType": "YulIdentifier",
																					"src": "10901:3:13"
																				},
																				"nativeSrc": "10901:22:13",
																				"nodeType": "YulFunctionCall",
																				"src": "10901:22:13"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "10925:7:13",
																				"nodeType": "YulIdentifier",
																				"src": "10925:7:13"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256_fromMemory",
																			"nativeSrc": "10869:31:13",
																			"nodeType": "YulIdentifier",
																			"src": "10869:31:13"
																		},
																		"nativeSrc": "10869:64:13",
																		"nodeType": "YulFunctionCall",
																		"src": "10869:64:13"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "10859:6:13",
																			"nodeType": "YulIdentifier",
																			"src": "10859:6:13"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256_fromMemory",
												"nativeSrc": "10599:351:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "10646:9:13",
														"nodeType": "YulTypedName",
														"src": "10646:9:13",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "10657:7:13",
														"nodeType": "YulTypedName",
														"src": "10657:7:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "10669:6:13",
														"nodeType": "YulTypedName",
														"src": "10669:6:13",
														"type": ""
													}
												],
												"src": "10599:351:13"
											},
											{
												"body": {
													"nativeSrc": "11062:71:13",
													"nodeType": "YulBlock",
													"src": "11062:71:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "11084:6:13",
																				"nodeType": "YulIdentifier",
																				"src": "11084:6:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "11092:1:13",
																				"nodeType": "YulLiteral",
																				"src": "11092:1:13",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "11080:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "11080:3:13"
																		},
																		"nativeSrc": "11080:14:13",
																		"nodeType": "YulFunctionCall",
																		"src": "11080:14:13"
																	},
																	{
																		"hexValue": "496e73756666696369656e74207265776172642062616c616e6365",
																		"kind": "string",
																		"nativeSrc": "11096:29:13",
																		"nodeType": "YulLiteral",
																		"src": "11096:29:13",
																		"type": "",
																		"value": "Insufficient reward balance"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "11073:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "11073:6:13"
																},
																"nativeSrc": "11073:53:13",
																"nodeType": "YulFunctionCall",
																"src": "11073:53:13"
															},
															"nativeSrc": "11073:53:13",
															"nodeType": "YulExpressionStatement",
															"src": "11073:53:13"
														}
													]
												},
												"name": "store_literal_in_memory_574d622dc10d84c5717ad27f807ec76bf0ff5f3560e02149020a00f76077cde0",
												"nativeSrc": "10956:177:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "11054:6:13",
														"nodeType": "YulTypedName",
														"src": "11054:6:13",
														"type": ""
													}
												],
												"src": "10956:177:13"
											},
											{
												"body": {
													"nativeSrc": "11285:220:13",
													"nodeType": "YulBlock",
													"src": "11285:220:13",
													"statements": [
														{
															"nativeSrc": "11295:74:13",
															"nodeType": "YulAssignment",
															"src": "11295:74:13",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "11361:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "11361:3:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11366:2:13",
																		"nodeType": "YulLiteral",
																		"src": "11366:2:13",
																		"type": "",
																		"value": "27"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "11302:58:13",
																	"nodeType": "YulIdentifier",
																	"src": "11302:58:13"
																},
																"nativeSrc": "11302:67:13",
																"nodeType": "YulFunctionCall",
																"src": "11302:67:13"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "11295:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "11295:3:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "11467:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "11467:3:13"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_574d622dc10d84c5717ad27f807ec76bf0ff5f3560e02149020a00f76077cde0",
																	"nativeSrc": "11378:88:13",
																	"nodeType": "YulIdentifier",
																	"src": "11378:88:13"
																},
																"nativeSrc": "11378:93:13",
																"nodeType": "YulFunctionCall",
																"src": "11378:93:13"
															},
															"nativeSrc": "11378:93:13",
															"nodeType": "YulExpressionStatement",
															"src": "11378:93:13"
														},
														{
															"nativeSrc": "11480:19:13",
															"nodeType": "YulAssignment",
															"src": "11480:19:13",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "11491:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "11491:3:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11496:2:13",
																		"nodeType": "YulLiteral",
																		"src": "11496:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "11487:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "11487:3:13"
																},
																"nativeSrc": "11487:12:13",
																"nodeType": "YulFunctionCall",
																"src": "11487:12:13"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "11480:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "11480:3:13"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_574d622dc10d84c5717ad27f807ec76bf0ff5f3560e02149020a00f76077cde0_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "11139:366:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "11273:3:13",
														"nodeType": "YulTypedName",
														"src": "11273:3:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "11281:3:13",
														"nodeType": "YulTypedName",
														"src": "11281:3:13",
														"type": ""
													}
												],
												"src": "11139:366:13"
											},
											{
												"body": {
													"nativeSrc": "11682:248:13",
													"nodeType": "YulBlock",
													"src": "11682:248:13",
													"statements": [
														{
															"nativeSrc": "11692:26:13",
															"nodeType": "YulAssignment",
															"src": "11692:26:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "11704:9:13",
																		"nodeType": "YulIdentifier",
																		"src": "11704:9:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11715:2:13",
																		"nodeType": "YulLiteral",
																		"src": "11715:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "11700:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "11700:3:13"
																},
																"nativeSrc": "11700:18:13",
																"nodeType": "YulFunctionCall",
																"src": "11700:18:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "11692:4:13",
																	"nodeType": "YulIdentifier",
																	"src": "11692:4:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "11739:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "11739:9:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "11750:1:13",
																				"nodeType": "YulLiteral",
																				"src": "11750:1:13",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "11735:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "11735:3:13"
																		},
																		"nativeSrc": "11735:17:13",
																		"nodeType": "YulFunctionCall",
																		"src": "11735:17:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "11758:4:13",
																				"nodeType": "YulIdentifier",
																				"src": "11758:4:13"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "11764:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "11764:9:13"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "11754:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "11754:3:13"
																		},
																		"nativeSrc": "11754:20:13",
																		"nodeType": "YulFunctionCall",
																		"src": "11754:20:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "11728:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "11728:6:13"
																},
																"nativeSrc": "11728:47:13",
																"nodeType": "YulFunctionCall",
																"src": "11728:47:13"
															},
															"nativeSrc": "11728:47:13",
															"nodeType": "YulExpressionStatement",
															"src": "11728:47:13"
														},
														{
															"nativeSrc": "11784:139:13",
															"nodeType": "YulAssignment",
															"src": "11784:139:13",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "11918:4:13",
																		"nodeType": "YulIdentifier",
																		"src": "11918:4:13"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_574d622dc10d84c5717ad27f807ec76bf0ff5f3560e02149020a00f76077cde0_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "11792:124:13",
																	"nodeType": "YulIdentifier",
																	"src": "11792:124:13"
																},
																"nativeSrc": "11792:131:13",
																"nodeType": "YulFunctionCall",
																"src": "11792:131:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "11784:4:13",
																	"nodeType": "YulIdentifier",
																	"src": "11784:4:13"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_574d622dc10d84c5717ad27f807ec76bf0ff5f3560e02149020a00f76077cde0__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "11511:419:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "11662:9:13",
														"nodeType": "YulTypedName",
														"src": "11662:9:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "11677:4:13",
														"nodeType": "YulTypedName",
														"src": "11677:4:13",
														"type": ""
													}
												],
												"src": "11511:419:13"
											},
											{
												"body": {
													"nativeSrc": "12062:206:13",
													"nodeType": "YulBlock",
													"src": "12062:206:13",
													"statements": [
														{
															"nativeSrc": "12072:26:13",
															"nodeType": "YulAssignment",
															"src": "12072:26:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "12084:9:13",
																		"nodeType": "YulIdentifier",
																		"src": "12084:9:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "12095:2:13",
																		"nodeType": "YulLiteral",
																		"src": "12095:2:13",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "12080:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "12080:3:13"
																},
																"nativeSrc": "12080:18:13",
																"nodeType": "YulFunctionCall",
																"src": "12080:18:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "12072:4:13",
																	"nodeType": "YulIdentifier",
																	"src": "12072:4:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "12152:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "12152:6:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "12165:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "12165:9:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "12176:1:13",
																				"nodeType": "YulLiteral",
																				"src": "12176:1:13",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "12161:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "12161:3:13"
																		},
																		"nativeSrc": "12161:17:13",
																		"nodeType": "YulFunctionCall",
																		"src": "12161:17:13"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "12108:43:13",
																	"nodeType": "YulIdentifier",
																	"src": "12108:43:13"
																},
																"nativeSrc": "12108:71:13",
																"nodeType": "YulFunctionCall",
																"src": "12108:71:13"
															},
															"nativeSrc": "12108:71:13",
															"nodeType": "YulExpressionStatement",
															"src": "12108:71:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "12233:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "12233:6:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "12246:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "12246:9:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "12257:2:13",
																				"nodeType": "YulLiteral",
																				"src": "12257:2:13",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "12242:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "12242:3:13"
																		},
																		"nativeSrc": "12242:18:13",
																		"nodeType": "YulFunctionCall",
																		"src": "12242:18:13"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "12189:43:13",
																	"nodeType": "YulIdentifier",
																	"src": "12189:43:13"
																},
																"nativeSrc": "12189:72:13",
																"nodeType": "YulFunctionCall",
																"src": "12189:72:13"
															},
															"nativeSrc": "12189:72:13",
															"nodeType": "YulExpressionStatement",
															"src": "12189:72:13"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed",
												"nativeSrc": "11936:332:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "12026:9:13",
														"nodeType": "YulTypedName",
														"src": "12026:9:13",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "12038:6:13",
														"nodeType": "YulTypedName",
														"src": "12038:6:13",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "12046:6:13",
														"nodeType": "YulTypedName",
														"src": "12046:6:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "12057:4:13",
														"nodeType": "YulTypedName",
														"src": "12057:4:13",
														"type": ""
													}
												],
												"src": "11936:332:13"
											},
											{
												"body": {
													"nativeSrc": "12316:48:13",
													"nodeType": "YulBlock",
													"src": "12316:48:13",
													"statements": [
														{
															"nativeSrc": "12326:32:13",
															"nodeType": "YulAssignment",
															"src": "12326:32:13",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "12351:5:13",
																				"nodeType": "YulIdentifier",
																				"src": "12351:5:13"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nativeSrc": "12344:6:13",
																			"nodeType": "YulIdentifier",
																			"src": "12344:6:13"
																		},
																		"nativeSrc": "12344:13:13",
																		"nodeType": "YulFunctionCall",
																		"src": "12344:13:13"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "12337:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "12337:6:13"
																},
																"nativeSrc": "12337:21:13",
																"nodeType": "YulFunctionCall",
																"src": "12337:21:13"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "12326:7:13",
																	"nodeType": "YulIdentifier",
																	"src": "12326:7:13"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bool",
												"nativeSrc": "12274:90:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "12298:5:13",
														"nodeType": "YulTypedName",
														"src": "12298:5:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "12308:7:13",
														"nodeType": "YulTypedName",
														"src": "12308:7:13",
														"type": ""
													}
												],
												"src": "12274:90:13"
											},
											{
												"body": {
													"nativeSrc": "12410:76:13",
													"nodeType": "YulBlock",
													"src": "12410:76:13",
													"statements": [
														{
															"body": {
																"nativeSrc": "12464:16:13",
																"nodeType": "YulBlock",
																"src": "12464:16:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "12473:1:13",
																					"nodeType": "YulLiteral",
																					"src": "12473:1:13",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "12476:1:13",
																					"nodeType": "YulLiteral",
																					"src": "12476:1:13",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "12466:6:13",
																				"nodeType": "YulIdentifier",
																				"src": "12466:6:13"
																			},
																			"nativeSrc": "12466:12:13",
																			"nodeType": "YulFunctionCall",
																			"src": "12466:12:13"
																		},
																		"nativeSrc": "12466:12:13",
																		"nodeType": "YulExpressionStatement",
																		"src": "12466:12:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "12433:5:13",
																				"nodeType": "YulIdentifier",
																				"src": "12433:5:13"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "12455:5:13",
																						"nodeType": "YulIdentifier",
																						"src": "12455:5:13"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_bool",
																					"nativeSrc": "12440:14:13",
																					"nodeType": "YulIdentifier",
																					"src": "12440:14:13"
																				},
																				"nativeSrc": "12440:21:13",
																				"nodeType": "YulFunctionCall",
																				"src": "12440:21:13"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "12430:2:13",
																			"nodeType": "YulIdentifier",
																			"src": "12430:2:13"
																		},
																		"nativeSrc": "12430:32:13",
																		"nodeType": "YulFunctionCall",
																		"src": "12430:32:13"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "12423:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "12423:6:13"
																},
																"nativeSrc": "12423:40:13",
																"nodeType": "YulFunctionCall",
																"src": "12423:40:13"
															},
															"nativeSrc": "12420:60:13",
															"nodeType": "YulIf",
															"src": "12420:60:13"
														}
													]
												},
												"name": "validator_revert_t_bool",
												"nativeSrc": "12370:116:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "12403:5:13",
														"nodeType": "YulTypedName",
														"src": "12403:5:13",
														"type": ""
													}
												],
												"src": "12370:116:13"
											},
											{
												"body": {
													"nativeSrc": "12552:77:13",
													"nodeType": "YulBlock",
													"src": "12552:77:13",
													"statements": [
														{
															"nativeSrc": "12562:22:13",
															"nodeType": "YulAssignment",
															"src": "12562:22:13",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "12577:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "12577:6:13"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "12571:5:13",
																	"nodeType": "YulIdentifier",
																	"src": "12571:5:13"
																},
																"nativeSrc": "12571:13:13",
																"nodeType": "YulFunctionCall",
																"src": "12571:13:13"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "12562:5:13",
																	"nodeType": "YulIdentifier",
																	"src": "12562:5:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "12617:5:13",
																		"nodeType": "YulIdentifier",
																		"src": "12617:5:13"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_bool",
																	"nativeSrc": "12593:23:13",
																	"nodeType": "YulIdentifier",
																	"src": "12593:23:13"
																},
																"nativeSrc": "12593:30:13",
																"nodeType": "YulFunctionCall",
																"src": "12593:30:13"
															},
															"nativeSrc": "12593:30:13",
															"nodeType": "YulExpressionStatement",
															"src": "12593:30:13"
														}
													]
												},
												"name": "abi_decode_t_bool_fromMemory",
												"nativeSrc": "12492:137:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "12530:6:13",
														"nodeType": "YulTypedName",
														"src": "12530:6:13",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "12538:3:13",
														"nodeType": "YulTypedName",
														"src": "12538:3:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "12546:5:13",
														"nodeType": "YulTypedName",
														"src": "12546:5:13",
														"type": ""
													}
												],
												"src": "12492:137:13"
											},
											{
												"body": {
													"nativeSrc": "12709:271:13",
													"nodeType": "YulBlock",
													"src": "12709:271:13",
													"statements": [
														{
															"body": {
																"nativeSrc": "12755:83:13",
																"nodeType": "YulBlock",
																"src": "12755:83:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "12757:77:13",
																				"nodeType": "YulIdentifier",
																				"src": "12757:77:13"
																			},
																			"nativeSrc": "12757:79:13",
																			"nodeType": "YulFunctionCall",
																			"src": "12757:79:13"
																		},
																		"nativeSrc": "12757:79:13",
																		"nodeType": "YulExpressionStatement",
																		"src": "12757:79:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "12730:7:13",
																				"nodeType": "YulIdentifier",
																				"src": "12730:7:13"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "12739:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "12739:9:13"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "12726:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "12726:3:13"
																		},
																		"nativeSrc": "12726:23:13",
																		"nodeType": "YulFunctionCall",
																		"src": "12726:23:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "12751:2:13",
																		"nodeType": "YulLiteral",
																		"src": "12751:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "12722:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "12722:3:13"
																},
																"nativeSrc": "12722:32:13",
																"nodeType": "YulFunctionCall",
																"src": "12722:32:13"
															},
															"nativeSrc": "12719:119:13",
															"nodeType": "YulIf",
															"src": "12719:119:13"
														},
														{
															"nativeSrc": "12848:125:13",
															"nodeType": "YulBlock",
															"src": "12848:125:13",
															"statements": [
																{
																	"nativeSrc": "12863:15:13",
																	"nodeType": "YulVariableDeclaration",
																	"src": "12863:15:13",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "12877:1:13",
																		"nodeType": "YulLiteral",
																		"src": "12877:1:13",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "12867:6:13",
																			"nodeType": "YulTypedName",
																			"src": "12867:6:13",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "12892:71:13",
																	"nodeType": "YulAssignment",
																	"src": "12892:71:13",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "12935:9:13",
																						"nodeType": "YulIdentifier",
																						"src": "12935:9:13"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "12946:6:13",
																						"nodeType": "YulIdentifier",
																						"src": "12946:6:13"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "12931:3:13",
																					"nodeType": "YulIdentifier",
																					"src": "12931:3:13"
																				},
																				"nativeSrc": "12931:22:13",
																				"nodeType": "YulFunctionCall",
																				"src": "12931:22:13"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "12955:7:13",
																				"nodeType": "YulIdentifier",
																				"src": "12955:7:13"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bool_fromMemory",
																			"nativeSrc": "12902:28:13",
																			"nodeType": "YulIdentifier",
																			"src": "12902:28:13"
																		},
																		"nativeSrc": "12902:61:13",
																		"nodeType": "YulFunctionCall",
																		"src": "12902:61:13"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "12892:6:13",
																			"nodeType": "YulIdentifier",
																			"src": "12892:6:13"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bool_fromMemory",
												"nativeSrc": "12635:345:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "12679:9:13",
														"nodeType": "YulTypedName",
														"src": "12679:9:13",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "12690:7:13",
														"nodeType": "YulTypedName",
														"src": "12690:7:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "12702:6:13",
														"nodeType": "YulTypedName",
														"src": "12702:6:13",
														"type": ""
													}
												],
												"src": "12635:345:13"
											},
											{
												"body": {
													"nativeSrc": "13092:65:13",
													"nodeType": "YulBlock",
													"src": "13092:65:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "13114:6:13",
																				"nodeType": "YulIdentifier",
																				"src": "13114:6:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "13122:1:13",
																				"nodeType": "YulLiteral",
																				"src": "13122:1:13",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "13110:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "13110:3:13"
																		},
																		"nativeSrc": "13110:14:13",
																		"nodeType": "YulFunctionCall",
																		"src": "13110:14:13"
																	},
																	{
																		"hexValue": "546f6b656e207472616e73666572206661696c6564",
																		"kind": "string",
																		"nativeSrc": "13126:23:13",
																		"nodeType": "YulLiteral",
																		"src": "13126:23:13",
																		"type": "",
																		"value": "Token transfer failed"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "13103:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "13103:6:13"
																},
																"nativeSrc": "13103:47:13",
																"nodeType": "YulFunctionCall",
																"src": "13103:47:13"
															},
															"nativeSrc": "13103:47:13",
															"nodeType": "YulExpressionStatement",
															"src": "13103:47:13"
														}
													]
												},
												"name": "store_literal_in_memory_74c7d57a908ebeca4ca501d4682067d5006fafb2a418959e98aa45be0419cba4",
												"nativeSrc": "12986:171:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "13084:6:13",
														"nodeType": "YulTypedName",
														"src": "13084:6:13",
														"type": ""
													}
												],
												"src": "12986:171:13"
											},
											{
												"body": {
													"nativeSrc": "13309:220:13",
													"nodeType": "YulBlock",
													"src": "13309:220:13",
													"statements": [
														{
															"nativeSrc": "13319:74:13",
															"nodeType": "YulAssignment",
															"src": "13319:74:13",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "13385:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "13385:3:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "13390:2:13",
																		"nodeType": "YulLiteral",
																		"src": "13390:2:13",
																		"type": "",
																		"value": "21"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "13326:58:13",
																	"nodeType": "YulIdentifier",
																	"src": "13326:58:13"
																},
																"nativeSrc": "13326:67:13",
																"nodeType": "YulFunctionCall",
																"src": "13326:67:13"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "13319:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "13319:3:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "13491:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "13491:3:13"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_74c7d57a908ebeca4ca501d4682067d5006fafb2a418959e98aa45be0419cba4",
																	"nativeSrc": "13402:88:13",
																	"nodeType": "YulIdentifier",
																	"src": "13402:88:13"
																},
																"nativeSrc": "13402:93:13",
																"nodeType": "YulFunctionCall",
																"src": "13402:93:13"
															},
															"nativeSrc": "13402:93:13",
															"nodeType": "YulExpressionStatement",
															"src": "13402:93:13"
														},
														{
															"nativeSrc": "13504:19:13",
															"nodeType": "YulAssignment",
															"src": "13504:19:13",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "13515:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "13515:3:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "13520:2:13",
																		"nodeType": "YulLiteral",
																		"src": "13520:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "13511:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "13511:3:13"
																},
																"nativeSrc": "13511:12:13",
																"nodeType": "YulFunctionCall",
																"src": "13511:12:13"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "13504:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "13504:3:13"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_74c7d57a908ebeca4ca501d4682067d5006fafb2a418959e98aa45be0419cba4_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "13163:366:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "13297:3:13",
														"nodeType": "YulTypedName",
														"src": "13297:3:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "13305:3:13",
														"nodeType": "YulTypedName",
														"src": "13305:3:13",
														"type": ""
													}
												],
												"src": "13163:366:13"
											},
											{
												"body": {
													"nativeSrc": "13706:248:13",
													"nodeType": "YulBlock",
													"src": "13706:248:13",
													"statements": [
														{
															"nativeSrc": "13716:26:13",
															"nodeType": "YulAssignment",
															"src": "13716:26:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "13728:9:13",
																		"nodeType": "YulIdentifier",
																		"src": "13728:9:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "13739:2:13",
																		"nodeType": "YulLiteral",
																		"src": "13739:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "13724:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "13724:3:13"
																},
																"nativeSrc": "13724:18:13",
																"nodeType": "YulFunctionCall",
																"src": "13724:18:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "13716:4:13",
																	"nodeType": "YulIdentifier",
																	"src": "13716:4:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "13763:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "13763:9:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "13774:1:13",
																				"nodeType": "YulLiteral",
																				"src": "13774:1:13",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "13759:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "13759:3:13"
																		},
																		"nativeSrc": "13759:17:13",
																		"nodeType": "YulFunctionCall",
																		"src": "13759:17:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "13782:4:13",
																				"nodeType": "YulIdentifier",
																				"src": "13782:4:13"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "13788:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "13788:9:13"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "13778:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "13778:3:13"
																		},
																		"nativeSrc": "13778:20:13",
																		"nodeType": "YulFunctionCall",
																		"src": "13778:20:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "13752:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "13752:6:13"
																},
																"nativeSrc": "13752:47:13",
																"nodeType": "YulFunctionCall",
																"src": "13752:47:13"
															},
															"nativeSrc": "13752:47:13",
															"nodeType": "YulExpressionStatement",
															"src": "13752:47:13"
														},
														{
															"nativeSrc": "13808:139:13",
															"nodeType": "YulAssignment",
															"src": "13808:139:13",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "13942:4:13",
																		"nodeType": "YulIdentifier",
																		"src": "13942:4:13"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_74c7d57a908ebeca4ca501d4682067d5006fafb2a418959e98aa45be0419cba4_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "13816:124:13",
																	"nodeType": "YulIdentifier",
																	"src": "13816:124:13"
																},
																"nativeSrc": "13816:131:13",
																"nodeType": "YulFunctionCall",
																"src": "13816:131:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "13808:4:13",
																	"nodeType": "YulIdentifier",
																	"src": "13808:4:13"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_74c7d57a908ebeca4ca501d4682067d5006fafb2a418959e98aa45be0419cba4__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "13535:419:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "13686:9:13",
														"nodeType": "YulTypedName",
														"src": "13686:9:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "13701:4:13",
														"nodeType": "YulTypedName",
														"src": "13701:4:13",
														"type": ""
													}
												],
												"src": "13535:419:13"
											},
											{
												"body": {
													"nativeSrc": "14013:32:13",
													"nodeType": "YulBlock",
													"src": "14013:32:13",
													"statements": [
														{
															"nativeSrc": "14023:16:13",
															"nodeType": "YulAssignment",
															"src": "14023:16:13",
															"value": {
																"name": "value",
																"nativeSrc": "14034:5:13",
																"nodeType": "YulIdentifier",
																"src": "14034:5:13"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "14023:7:13",
																	"nodeType": "YulIdentifier",
																	"src": "14023:7:13"
																}
															]
														}
													]
												},
												"name": "cleanup_t_rational_1_by_1",
												"nativeSrc": "13960:85:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "13995:5:13",
														"nodeType": "YulTypedName",
														"src": "13995:5:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "14005:7:13",
														"nodeType": "YulTypedName",
														"src": "14005:7:13",
														"type": ""
													}
												],
												"src": "13960:85:13"
											},
											{
												"body": {
													"nativeSrc": "14095:57:13",
													"nodeType": "YulBlock",
													"src": "14095:57:13",
													"statements": [
														{
															"nativeSrc": "14105:41:13",
															"nodeType": "YulAssignment",
															"src": "14105:41:13",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "14120:5:13",
																		"nodeType": "YulIdentifier",
																		"src": "14120:5:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "14127:18:13",
																		"nodeType": "YulLiteral",
																		"src": "14127:18:13",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "14116:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "14116:3:13"
																},
																"nativeSrc": "14116:30:13",
																"nodeType": "YulFunctionCall",
																"src": "14116:30:13"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "14105:7:13",
																	"nodeType": "YulIdentifier",
																	"src": "14105:7:13"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint64",
												"nativeSrc": "14051:101:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "14077:5:13",
														"nodeType": "YulTypedName",
														"src": "14077:5:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "14087:7:13",
														"nodeType": "YulTypedName",
														"src": "14087:7:13",
														"type": ""
													}
												],
												"src": "14051:101:13"
											},
											{
												"body": {
													"nativeSrc": "14225:89:13",
													"nodeType": "YulBlock",
													"src": "14225:89:13",
													"statements": [
														{
															"nativeSrc": "14235:73:13",
															"nodeType": "YulAssignment",
															"src": "14235:73:13",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "14300:5:13",
																						"nodeType": "YulIdentifier",
																						"src": "14300:5:13"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_rational_1_by_1",
																					"nativeSrc": "14274:25:13",
																					"nodeType": "YulIdentifier",
																					"src": "14274:25:13"
																				},
																				"nativeSrc": "14274:32:13",
																				"nodeType": "YulFunctionCall",
																				"src": "14274:32:13"
																			}
																		],
																		"functionName": {
																			"name": "identity",
																			"nativeSrc": "14265:8:13",
																			"nodeType": "YulIdentifier",
																			"src": "14265:8:13"
																		},
																		"nativeSrc": "14265:42:13",
																		"nodeType": "YulFunctionCall",
																		"src": "14265:42:13"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint64",
																	"nativeSrc": "14248:16:13",
																	"nodeType": "YulIdentifier",
																	"src": "14248:16:13"
																},
																"nativeSrc": "14248:60:13",
																"nodeType": "YulFunctionCall",
																"src": "14248:60:13"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nativeSrc": "14235:9:13",
																	"nodeType": "YulIdentifier",
																	"src": "14235:9:13"
																}
															]
														}
													]
												},
												"name": "convert_t_rational_1_by_1_to_t_uint64",
												"nativeSrc": "14158:156:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "14205:5:13",
														"nodeType": "YulTypedName",
														"src": "14205:5:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nativeSrc": "14215:9:13",
														"nodeType": "YulTypedName",
														"src": "14215:9:13",
														"type": ""
													}
												],
												"src": "14158:156:13"
											},
											{
												"body": {
													"nativeSrc": "14392:73:13",
													"nodeType": "YulBlock",
													"src": "14392:73:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "14409:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "14409:3:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "14452:5:13",
																				"nodeType": "YulIdentifier",
																				"src": "14452:5:13"
																			}
																		],
																		"functionName": {
																			"name": "convert_t_rational_1_by_1_to_t_uint64",
																			"nativeSrc": "14414:37:13",
																			"nodeType": "YulIdentifier",
																			"src": "14414:37:13"
																		},
																		"nativeSrc": "14414:44:13",
																		"nodeType": "YulFunctionCall",
																		"src": "14414:44:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "14402:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "14402:6:13"
																},
																"nativeSrc": "14402:57:13",
																"nodeType": "YulFunctionCall",
																"src": "14402:57:13"
															},
															"nativeSrc": "14402:57:13",
															"nodeType": "YulExpressionStatement",
															"src": "14402:57:13"
														}
													]
												},
												"name": "abi_encode_t_rational_1_by_1_to_t_uint64_fromStack",
												"nativeSrc": "14320:145:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "14380:5:13",
														"nodeType": "YulTypedName",
														"src": "14380:5:13",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "14387:3:13",
														"nodeType": "YulTypedName",
														"src": "14387:3:13",
														"type": ""
													}
												],
												"src": "14320:145:13"
											},
											{
												"body": {
													"nativeSrc": "14576:131:13",
													"nodeType": "YulBlock",
													"src": "14576:131:13",
													"statements": [
														{
															"nativeSrc": "14586:26:13",
															"nodeType": "YulAssignment",
															"src": "14586:26:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "14598:9:13",
																		"nodeType": "YulIdentifier",
																		"src": "14598:9:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "14609:2:13",
																		"nodeType": "YulLiteral",
																		"src": "14609:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "14594:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "14594:3:13"
																},
																"nativeSrc": "14594:18:13",
																"nodeType": "YulFunctionCall",
																"src": "14594:18:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "14586:4:13",
																	"nodeType": "YulIdentifier",
																	"src": "14586:4:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "14673:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "14673:6:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "14686:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "14686:9:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "14697:1:13",
																				"nodeType": "YulLiteral",
																				"src": "14697:1:13",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "14682:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "14682:3:13"
																		},
																		"nativeSrc": "14682:17:13",
																		"nodeType": "YulFunctionCall",
																		"src": "14682:17:13"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_rational_1_by_1_to_t_uint64_fromStack",
																	"nativeSrc": "14622:50:13",
																	"nodeType": "YulIdentifier",
																	"src": "14622:50:13"
																},
																"nativeSrc": "14622:78:13",
																"nodeType": "YulFunctionCall",
																"src": "14622:78:13"
															},
															"nativeSrc": "14622:78:13",
															"nodeType": "YulExpressionStatement",
															"src": "14622:78:13"
														}
													]
												},
												"name": "abi_encode_tuple_t_rational_1_by_1__to_t_uint64__fromStack_reversed",
												"nativeSrc": "14471:236:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "14548:9:13",
														"nodeType": "YulTypedName",
														"src": "14548:9:13",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "14560:6:13",
														"nodeType": "YulTypedName",
														"src": "14560:6:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "14571:4:13",
														"nodeType": "YulTypedName",
														"src": "14571:4:13",
														"type": ""
													}
												],
												"src": "14471:236:13"
											}
										]
									},
									"contents": "{\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_uint256t_address(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_addresst_uint256t_uint256(headStart, dataEnd) -> value0, value1, value2 {\n        if slt(sub(dataEnd, headStart), 96) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_uint256t_uint256(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function identity(value) -> ret {\n        ret := value\n    }\n\n    function convert_t_uint160_to_t_uint160(value) -> converted {\n        converted := cleanup_t_uint160(identity(cleanup_t_uint160(value)))\n    }\n\n    function convert_t_uint160_to_t_address(value) -> converted {\n        converted := convert_t_uint160_to_t_uint160(value)\n    }\n\n    function convert_t_contract$_IERC20_$1103_to_t_address(value) -> converted {\n        converted := convert_t_uint160_to_t_address(value)\n    }\n\n    function abi_encode_t_contract$_IERC20_$1103_to_t_address_fromStack(value, pos) {\n        mstore(pos, convert_t_contract$_IERC20_$1103_to_t_address(value))\n    }\n\n    function abi_encode_tuple_t_contract$_IERC20_$1103__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_contract$_IERC20_$1103_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function checked_mul_t_uint256(x, y) -> product {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        let product_raw := mul(x, y)\n        product := cleanup_t_uint256(product_raw)\n\n        // overflow, if x != 0 and y != product/x\n        if iszero(\n            or(\n                iszero(x),\n                eq(y, div(product, x))\n            )\n        ) { panic_error_0x11() }\n\n    }\n\n    function panic_error_0x12() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x12)\n        revert(0, 0x24)\n    }\n\n    function checked_div_t_uint256(x, y) -> r {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        if iszero(y) { panic_error_0x12() }\n\n        r := div(x, y)\n    }\n\n    function checked_add_t_uint256(x, y) -> sum {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        sum := add(x, y)\n\n        if gt(x, sum) { panic_error_0x11() }\n\n    }\n\n    function shift_left_96(value) -> newValue {\n        newValue :=\n\n        shl(96, value)\n\n    }\n\n    function leftAlign_t_uint160(value) -> aligned {\n        aligned := shift_left_96(value)\n    }\n\n    function leftAlign_t_address(value) -> aligned {\n        aligned := leftAlign_t_uint160(value)\n    }\n\n    function abi_encode_t_address_to_t_address_nonPadded_inplace_fromStack(value, pos) {\n        mstore(pos, leftAlign_t_address(cleanup_t_address(value)))\n    }\n\n    function leftAlign_t_uint256(value) -> aligned {\n        aligned := value\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_nonPadded_inplace_fromStack(value, pos) {\n        mstore(pos, leftAlign_t_uint256(cleanup_t_uint256(value)))\n    }\n\n    function abi_encode_tuple_packed_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__nonPadded_inplace_fromStack_reversed(pos , value2, value1, value0) -> end {\n\n        abi_encode_t_address_to_t_address_nonPadded_inplace_fromStack(value0,  pos)\n        pos := add(pos, 20)\n\n        abi_encode_t_uint256_to_t_uint256_nonPadded_inplace_fromStack(value1,  pos)\n        pos := add(pos, 32)\n\n        abi_encode_t_uint256_to_t_uint256_nonPadded_inplace_fromStack(value2,  pos)\n        pos := add(pos, 32)\n\n        end := pos\n    }\n\n    function mod_t_uint256(x, y) -> r {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        if iszero(y) { panic_error_0x12() }\n        r := mod(x, y)\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function store_literal_in_memory_fac3bac318c0d00994f57b0f2f4c643c313072b71db2302bf4b900309cc50b36(memPtr) {\n\n        mstore(add(memPtr, 0), \"Not authorized\")\n\n    }\n\n    function abi_encode_t_stringliteral_fac3bac318c0d00994f57b0f2f4c643c313072b71db2302bf4b900309cc50b36_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 14)\n        store_literal_in_memory_fac3bac318c0d00994f57b0f2f4c643c313072b71db2302bf4b900309cc50b36(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_fac3bac318c0d00994f57b0f2f4c643c313072b71db2302bf4b900309cc50b36__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_fac3bac318c0d00994f57b0f2f4c643c313072b71db2302bf4b900309cc50b36_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_2321cd843e90d2b7a10272ea91ea7fc0cce1a354f8fe8bd4066914e3f5ab40a2(memPtr) {\n\n        mstore(add(memPtr, 0), \"Cannot reward zero address\")\n\n    }\n\n    function abi_encode_t_stringliteral_2321cd843e90d2b7a10272ea91ea7fc0cce1a354f8fe8bd4066914e3f5ab40a2_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 26)\n        store_literal_in_memory_2321cd843e90d2b7a10272ea91ea7fc0cce1a354f8fe8bd4066914e3f5ab40a2(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_2321cd843e90d2b7a10272ea91ea7fc0cce1a354f8fe8bd4066914e3f5ab40a2__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_2321cd843e90d2b7a10272ea91ea7fc0cce1a354f8fe8bd4066914e3f5ab40a2_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_01c242f1c806840acb94ec05d87d4647010419c53a053a581e0026b3f6467dbb(memPtr) {\n\n        mstore(add(memPtr, 0), \"Amount must be > 0\")\n\n    }\n\n    function abi_encode_t_stringliteral_01c242f1c806840acb94ec05d87d4647010419c53a053a581e0026b3f6467dbb_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 18)\n        store_literal_in_memory_01c242f1c806840acb94ec05d87d4647010419c53a053a581e0026b3f6467dbb(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_01c242f1c806840acb94ec05d87d4647010419c53a053a581e0026b3f6467dbb__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_01c242f1c806840acb94ec05d87d4647010419c53a053a581e0026b3f6467dbb_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_decode_t_uint256_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_uint256_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function store_literal_in_memory_574d622dc10d84c5717ad27f807ec76bf0ff5f3560e02149020a00f76077cde0(memPtr) {\n\n        mstore(add(memPtr, 0), \"Insufficient reward balance\")\n\n    }\n\n    function abi_encode_t_stringliteral_574d622dc10d84c5717ad27f807ec76bf0ff5f3560e02149020a00f76077cde0_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 27)\n        store_literal_in_memory_574d622dc10d84c5717ad27f807ec76bf0ff5f3560e02149020a00f76077cde0(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_574d622dc10d84c5717ad27f807ec76bf0ff5f3560e02149020a00f76077cde0__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_574d622dc10d84c5717ad27f807ec76bf0ff5f3560e02149020a00f76077cde0_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function validator_revert_t_bool(value) {\n        if iszero(eq(value, cleanup_t_bool(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_bool_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_bool(value)\n    }\n\n    function abi_decode_tuple_t_bool_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bool_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function store_literal_in_memory_74c7d57a908ebeca4ca501d4682067d5006fafb2a418959e98aa45be0419cba4(memPtr) {\n\n        mstore(add(memPtr, 0), \"Token transfer failed\")\n\n    }\n\n    function abi_encode_t_stringliteral_74c7d57a908ebeca4ca501d4682067d5006fafb2a418959e98aa45be0419cba4_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 21)\n        store_literal_in_memory_74c7d57a908ebeca4ca501d4682067d5006fafb2a418959e98aa45be0419cba4(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_74c7d57a908ebeca4ca501d4682067d5006fafb2a418959e98aa45be0419cba4__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_74c7d57a908ebeca4ca501d4682067d5006fafb2a418959e98aa45be0419cba4_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function cleanup_t_rational_1_by_1(value) -> cleaned {\n        cleaned := value\n    }\n\n    function cleanup_t_uint64(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffff)\n    }\n\n    function convert_t_rational_1_by_1_to_t_uint64(value) -> converted {\n        converted := cleanup_t_uint64(identity(cleanup_t_rational_1_by_1(value)))\n    }\n\n    function abi_encode_t_rational_1_by_1_to_t_uint64_fromStack(value, pos) {\n        mstore(pos, convert_t_rational_1_by_1_to_t_uint64(value))\n    }\n\n    function abi_encode_tuple_t_rational_1_by_1__to_t_uint64__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_rational_1_by_1_to_t_uint64_fromStack(value0,  add(headStart, 0))\n\n    }\n\n}\n",
									"id": 13,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xB2 JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0xB1A5232E GT PUSH2 0x6F JUMPI DUP1 PUSH4 0xB1A5232E EQ PUSH2 0x166 JUMPI DUP1 PUSH4 0xDE5B71F7 EQ PUSH2 0x184 JUMPI DUP1 PUSH4 0xE4A30116 EQ PUSH2 0x1A0 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x1BC JUMPI DUP1 PUSH4 0xF7C618C1 EQ PUSH2 0x1D8 JUMPI DUP1 PUSH4 0xFE95FC1A EQ PUSH2 0x1F6 JUMPI PUSH2 0xB2 JUMP JUMPDEST DUP1 PUSH4 0x26232A2E EQ PUSH2 0xB6 JUMPI DUP1 PUSH4 0x49880782 EQ PUSH2 0xD4 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0xF2 JUMPI DUP1 PUSH4 0x8AEE8127 EQ PUSH2 0xFC JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x118 JUMPI DUP1 PUSH4 0xA18F07A0 EQ PUSH2 0x136 JUMPI JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH2 0xBE PUSH2 0x212 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xCB SWAP2 SWAP1 PUSH2 0xC4B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xDC PUSH2 0x217 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xE9 SWAP2 SWAP1 PUSH2 0xC4B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xFA PUSH2 0x21D JUMP JUMPDEST STOP JUMPDEST PUSH2 0x116 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x111 SWAP2 SWAP1 PUSH2 0xCC2 JUMP JUMPDEST PUSH2 0x230 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x120 PUSH2 0x27B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x12D SWAP2 SWAP1 PUSH2 0xCFC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x150 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x14B SWAP2 SWAP1 PUSH2 0xD3F JUMP JUMPDEST PUSH2 0x2B0 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x15D SWAP2 SWAP1 PUSH2 0xC4B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x16E PUSH2 0x34E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x17B SWAP2 SWAP1 PUSH2 0xCFC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x19E PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x199 SWAP2 SWAP1 PUSH2 0xD7D JUMP JUMPDEST PUSH2 0x373 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1BA PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1B5 SWAP2 SWAP1 PUSH2 0xDCD JUMP JUMPDEST PUSH2 0x6F8 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1D6 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1D1 SWAP2 SWAP1 PUSH2 0xCC2 JUMP JUMPDEST PUSH2 0x887 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1E0 PUSH2 0x90B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1ED SWAP2 SWAP1 PUSH2 0xE66 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x210 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x20B SWAP2 SWAP1 PUSH2 0xCC2 JUMP JUMPDEST PUSH2 0x930 JUMP JUMPDEST STOP JUMPDEST PUSH0 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x1 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x225 PUSH2 0x97B JUMP JUMPDEST PUSH2 0x22E PUSH0 PUSH2 0xA02 JUMP JUMPDEST JUMP JUMPDEST PUSH2 0x238 PUSH2 0x97B JUMP JUMPDEST DUP1 PUSH1 0x2 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH2 0x285 PUSH2 0xAD3 JUMP JUMPDEST SWAP1 POP DUP1 PUSH0 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP2 POP POP SWAP1 JUMP JUMPDEST PUSH0 PUSH0 PUSH2 0x2710 PUSH0 SLOAD DUP6 PUSH2 0x2C2 SWAP2 SWAP1 PUSH2 0xEAC JUMP JUMPDEST PUSH2 0x2CC SWAP2 SWAP1 PUSH2 0xF1A JUMP JUMPDEST SWAP1 POP PUSH0 PUSH1 0x1 PUSH1 0x64 DUP4 PUSH2 0x2DE SWAP2 SWAP1 PUSH2 0xF1A JUMP JUMPDEST PUSH2 0x2E8 SWAP2 SWAP1 PUSH2 0xF4A JUMP JUMPDEST DUP5 TIMESTAMP DUP8 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x2FD SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0xFE2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 PUSH0 SHR PUSH2 0x31F SWAP2 SWAP1 PUSH2 0x101E JUMP JUMPDEST SWAP1 POP PUSH0 DUP2 DUP4 PUSH2 0x32E SWAP2 SWAP1 PUSH2 0xF4A JUMP JUMPDEST SWAP1 POP PUSH1 0x1 SLOAD DUP2 GT PUSH2 0x33F JUMPI DUP1 PUSH2 0x343 JUMP JUMPDEST PUSH1 0x1 SLOAD JUMPDEST SWAP4 POP POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x3 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH2 0x37B PUSH2 0x27B JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ DUP1 PUSH2 0x400 JUMPI POP PUSH1 0x3 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ JUMPDEST PUSH2 0x43F JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x436 SWAP1 PUSH2 0x10A8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x4AD JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x4A4 SWAP1 PUSH2 0x1110 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 DUP3 GT PUSH2 0x4EF JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x4E6 SWAP1 PUSH2 0x1178 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x2 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 ADDRESS PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x54A SWAP2 SWAP1 PUSH2 0xCFC JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x565 JUMPI RETURNDATASIZE PUSH0 PUSH0 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x589 SWAP2 SWAP1 PUSH2 0x11AA JUMP JUMPDEST LT ISZERO PUSH2 0x5CA JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x5C1 SWAP1 PUSH2 0x121F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x2 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xA9059CBB DUP5 DUP4 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x626 SWAP3 SWAP2 SWAP1 PUSH2 0x123D JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x642 JUMPI RETURNDATASIZE PUSH0 PUSH0 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x666 SWAP2 SWAP1 PUSH2 0x1299 JUMP JUMPDEST PUSH2 0x6A5 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x69C SWAP1 PUSH2 0x130E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xE34918FF1C7084970068B53FD71AD6D8B04E9F15D3886CBF006443E6CDC52EA6 DUP3 PUSH1 0x40 MLOAD PUSH2 0x6EB SWAP2 SWAP1 PUSH2 0xC4B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x701 PUSH2 0xAFA JUMP JUMPDEST SWAP1 POP PUSH0 DUP2 PUSH0 ADD PUSH1 0x8 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO SWAP1 POP PUSH0 DUP3 PUSH0 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH8 0xFFFFFFFFFFFFFFFF AND SWAP1 POP PUSH0 PUSH0 DUP3 PUSH8 0xFFFFFFFFFFFFFFFF AND EQ DUP1 ISZERO PUSH2 0x749 JUMPI POP DUP3 JUMPDEST SWAP1 POP PUSH0 PUSH1 0x1 DUP4 PUSH8 0xFFFFFFFFFFFFFFFF AND EQ DUP1 ISZERO PUSH2 0x77C JUMPI POP PUSH0 ADDRESS PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EXTCODESIZE EQ JUMPDEST SWAP1 POP DUP2 ISZERO DUP1 ISZERO PUSH2 0x78A JUMPI POP DUP1 ISZERO JUMPDEST ISZERO PUSH2 0x7C1 JUMPI PUSH1 0x40 MLOAD PUSH32 0xF92EE8A900000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 DUP6 PUSH0 ADD PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH8 0xFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH8 0xFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP4 ISZERO PUSH2 0x80E JUMPI PUSH1 0x1 DUP6 PUSH0 ADD PUSH1 0x8 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP JUMPDEST PUSH2 0x817 CALLER PUSH2 0xB0D JUMP JUMPDEST DUP7 PUSH0 DUP2 SWAP1 SSTORE POP DUP6 PUSH1 0x1 DUP2 SWAP1 SSTORE POP DUP4 ISZERO PUSH2 0x87E JUMPI PUSH0 DUP6 PUSH0 ADD PUSH1 0x8 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH32 0xC7F505B2F371AE2175EE4913F4499E1F2633A7B5936321EED1CDAEB6115181D2 PUSH1 0x1 PUSH1 0x40 MLOAD PUSH2 0x875 SWAP2 SWAP1 PUSH2 0x1378 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 JUMPDEST POP POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0x88F PUSH2 0x97B JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x8FF JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x1E4FBDF700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x8F6 SWAP2 SWAP1 PUSH2 0xCFC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x908 DUP2 PUSH2 0xA02 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x2 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH2 0x938 PUSH2 0x97B JUMP JUMPDEST DUP1 PUSH1 0x3 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH2 0x983 PUSH2 0xB21 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x9A1 PUSH2 0x27B JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xA00 JUMPI PUSH2 0x9C4 PUSH2 0xB21 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x118CDAA700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x9F7 SWAP2 SWAP1 PUSH2 0xCFC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH0 PUSH2 0xA0B PUSH2 0xAD3 JUMP JUMPDEST SWAP1 POP PUSH0 DUP2 PUSH0 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP3 DUP3 PUSH0 ADD PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH0 PUSH32 0x9016D09D72D40FDAE2FD8CEAC6B6234C7706214FD39C1CD1E609A0528C199300 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH0 PUSH2 0xB04 PUSH2 0xB28 JUMP JUMPDEST SWAP1 POP DUP1 SWAP2 POP POP SWAP1 JUMP JUMPDEST PUSH2 0xB15 PUSH2 0xB51 JUMP JUMPDEST PUSH2 0xB1E DUP2 PUSH2 0xB91 JUMP JUMPDEST POP JUMP JUMPDEST PUSH0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH32 0xF0C57E16840DF040F15088DC2F81FE391C3923BEC73E23A9662EFC9C229C6A00 PUSH0 SHL SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0xB59 PUSH2 0xC15 JUMP JUMPDEST PUSH2 0xB8F JUMPI PUSH1 0x40 MLOAD PUSH32 0xD7E6BCF800000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH2 0xB99 PUSH2 0xB51 JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xC09 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x1E4FBDF700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xC00 SWAP2 SWAP1 PUSH2 0xCFC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xC12 DUP2 PUSH2 0xA02 JUMP JUMPDEST POP JUMP JUMPDEST PUSH0 PUSH2 0xC1E PUSH2 0xAFA JUMP JUMPDEST PUSH0 ADD PUSH1 0x8 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xC45 DUP2 PUSH2 0xC33 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xC5E PUSH0 DUP4 ADD DUP5 PUSH2 0xC3C JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0xC91 DUP3 PUSH2 0xC68 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xCA1 DUP2 PUSH2 0xC87 JUMP JUMPDEST DUP2 EQ PUSH2 0xCAB JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xCBC DUP2 PUSH2 0xC98 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xCD7 JUMPI PUSH2 0xCD6 PUSH2 0xC64 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0xCE4 DUP5 DUP3 DUP6 ADD PUSH2 0xCAE JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xCF6 DUP2 PUSH2 0xC87 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xD0F PUSH0 DUP4 ADD DUP5 PUSH2 0xCED JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xD1E DUP2 PUSH2 0xC33 JUMP JUMPDEST DUP2 EQ PUSH2 0xD28 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xD39 DUP2 PUSH2 0xD15 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xD55 JUMPI PUSH2 0xD54 PUSH2 0xC64 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0xD62 DUP6 DUP3 DUP7 ADD PUSH2 0xD2B JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0xD73 DUP6 DUP3 DUP7 ADD PUSH2 0xCAE JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH0 PUSH0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0xD94 JUMPI PUSH2 0xD93 PUSH2 0xC64 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0xDA1 DUP7 DUP3 DUP8 ADD PUSH2 0xCAE JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0xDB2 DUP7 DUP3 DUP8 ADD PUSH2 0xD2B JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0xDC3 DUP7 DUP3 DUP8 ADD PUSH2 0xD2B JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH0 PUSH0 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xDE3 JUMPI PUSH2 0xDE2 PUSH2 0xC64 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0xDF0 DUP6 DUP3 DUP7 ADD PUSH2 0xD2B JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0xE01 DUP6 DUP3 DUP7 ADD PUSH2 0xD2B JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0xE2E PUSH2 0xE29 PUSH2 0xE24 DUP5 PUSH2 0xC68 JUMP JUMPDEST PUSH2 0xE0B JUMP JUMPDEST PUSH2 0xC68 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0xE3F DUP3 PUSH2 0xE14 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0xE50 DUP3 PUSH2 0xE35 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xE60 DUP2 PUSH2 0xE46 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xE79 PUSH0 DUP4 ADD DUP5 PUSH2 0xE57 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0xEB6 DUP3 PUSH2 0xC33 JUMP JUMPDEST SWAP2 POP PUSH2 0xEC1 DUP4 PUSH2 0xC33 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 MUL PUSH2 0xECF DUP2 PUSH2 0xC33 JUMP JUMPDEST SWAP2 POP DUP3 DUP3 DIV DUP5 EQ DUP4 ISZERO OR PUSH2 0xEE6 JUMPI PUSH2 0xEE5 PUSH2 0xE7F JUMP JUMPDEST JUMPDEST POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0xF24 DUP3 PUSH2 0xC33 JUMP JUMPDEST SWAP2 POP PUSH2 0xF2F DUP4 PUSH2 0xC33 JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0xF3F JUMPI PUSH2 0xF3E PUSH2 0xEED JUMP JUMPDEST JUMPDEST DUP3 DUP3 DIV SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0xF54 DUP3 PUSH2 0xC33 JUMP JUMPDEST SWAP2 POP PUSH2 0xF5F DUP4 PUSH2 0xC33 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0xF77 JUMPI PUSH2 0xF76 PUSH2 0xE7F JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 PUSH1 0x60 SHL SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0xF93 DUP3 PUSH2 0xF7D JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0xFA4 DUP3 PUSH2 0xF89 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xFBC PUSH2 0xFB7 DUP3 PUSH2 0xC87 JUMP JUMPDEST PUSH2 0xF9A JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xFDC PUSH2 0xFD7 DUP3 PUSH2 0xC33 JUMP JUMPDEST PUSH2 0xFC2 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH2 0xFED DUP3 DUP7 PUSH2 0xFAB JUMP JUMPDEST PUSH1 0x14 DUP3 ADD SWAP2 POP PUSH2 0xFFD DUP3 DUP6 PUSH2 0xFCB JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP2 POP PUSH2 0x100D DUP3 DUP5 PUSH2 0xFCB JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP2 POP DUP2 SWAP1 POP SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x1028 DUP3 PUSH2 0xC33 JUMP JUMPDEST SWAP2 POP PUSH2 0x1033 DUP4 PUSH2 0xC33 JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0x1043 JUMPI PUSH2 0x1042 PUSH2 0xEED JUMP JUMPDEST JUMPDEST DUP3 DUP3 MOD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E6F7420617574686F72697A6564000000000000000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1092 PUSH1 0xE DUP4 PUSH2 0x104E JUMP JUMPDEST SWAP2 POP PUSH2 0x109D DUP3 PUSH2 0x105E JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x10BF DUP2 PUSH2 0x1086 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x43616E6E6F7420726577617264207A65726F2061646472657373000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x10FA PUSH1 0x1A DUP4 PUSH2 0x104E JUMP JUMPDEST SWAP2 POP PUSH2 0x1105 DUP3 PUSH2 0x10C6 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1127 DUP2 PUSH2 0x10EE JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x416D6F756E74206D757374206265203E20300000000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1162 PUSH1 0x12 DUP4 PUSH2 0x104E JUMP JUMPDEST SWAP2 POP PUSH2 0x116D DUP3 PUSH2 0x112E JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x118F DUP2 PUSH2 0x1156 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x11A4 DUP2 PUSH2 0xD15 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x11BF JUMPI PUSH2 0x11BE PUSH2 0xC64 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x11CC DUP5 DUP3 DUP6 ADD PUSH2 0x1196 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x496E73756666696369656E74207265776172642062616C616E63650000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1209 PUSH1 0x1B DUP4 PUSH2 0x104E JUMP JUMPDEST SWAP2 POP PUSH2 0x1214 DUP3 PUSH2 0x11D5 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1236 DUP2 PUSH2 0x11FD JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x1250 PUSH0 DUP4 ADD DUP6 PUSH2 0xCED JUMP JUMPDEST PUSH2 0x125D PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0xC3C JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1278 DUP2 PUSH2 0x1264 JUMP JUMPDEST DUP2 EQ PUSH2 0x1282 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x1293 DUP2 PUSH2 0x126F JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x12AE JUMPI PUSH2 0x12AD PUSH2 0xC64 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x12BB DUP5 DUP3 DUP6 ADD PUSH2 0x1285 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x546F6B656E207472616E73666572206661696C65640000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x12F8 PUSH1 0x15 DUP4 PUSH2 0x104E JUMP JUMPDEST SWAP2 POP PUSH2 0x1303 DUP3 PUSH2 0x12C4 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1325 DUP2 PUSH2 0x12EC JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1362 PUSH2 0x135D PUSH2 0x1358 DUP5 PUSH2 0x132C JUMP JUMPDEST PUSH2 0xE0B JUMP JUMPDEST PUSH2 0x1335 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1372 DUP2 PUSH2 0x1348 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x138B PUSH0 DUP4 ADD DUP5 PUSH2 0x1369 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xB1 PUSH20 0xA8494843163402C4F60C4ABCE281DCEC32739684 REVERT 0xA7 RETURNDATASIZE JUMPDEST 0xC7 0xD2 SWAP16 JUMPI 0x4B 0xDE PUSH5 0x736F6C6343 STOP ADDMOD 0x1E STOP CALLER ",
							"sourceMap": "356:1742:12:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;423:26;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;456:30;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3155:101:0;;;:::i;:::-;;931:106:12;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;2441:144:0;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1650:445:12;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;525:27;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1191:448;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;631:186;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;3405:215:0;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;493:25:12;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;825:98;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;423:26;;;;:::o;456:30::-;;;;:::o;3155:101:0:-;2334:13;:11;:13::i;:::-;3219:30:::1;3246:1;3219:18;:30::i;:::-;3155:101::o:0;931:106:12:-;2334:13:0;:11;:13::i;:::-;1022:6:12::1;1001:11;;:28;;;;;;;;;;;;;;;;;;931:106:::0;:::o;2441:144:0:-;2487:7;2506:24;2533:20;:18;:20::i;:::-;2506:47;;2570:1;:8;;;;;;;;;;;;2563:15;;;2441:144;:::o;1650:445:12:-;1728:7;1748:18;1792:5;1778:11;;1769:6;:20;;;;:::i;:::-;:28;;;;:::i;:::-;1748:49;;1864:13;1970:1;1964:3;1951:10;:16;;;;:::i;:::-;:20;;;;:::i;:::-;1915:4;1921:15;1938:6;1898:47;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;1888:58;;;;;;1880:67;;:92;;;;:::i;:::-;1864:108;;1983:14;2013:5;2000:10;:18;;;;:::i;:::-;1983:35;;2045:15;;2036:6;:24;:51;;2081:6;2036:51;;;2063:15;;2036:51;2029:58;;;;;1650:445;;;;:::o;525:27::-;;;;;;;;;;;;;:::o;1191:448::-;1105:7;:5;:7::i;:::-;1091:21;;:10;:21;;;:51;;;;1130:12;;;;;;;;;;;1116:26;;:10;:26;;;1091:51;1083:78;;;;;;;;;;;;:::i;:::-;;;;;;;;;1323:1:::1;1307:18;;:4;:18;;::::0;1299:57:::1;;;;;;;;;;;;:::i;:::-;;;;;;;;;1384:1;1375:6;:10;1367:41;;;;;;;;;;;;:::i;:::-;;;;;;;;;1467:6;1427:11;;;;;;;;;;;:21;;;1457:4;1427:36;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:46;;1419:86;;;;;;;;;;;;:::i;:::-;;;;;;;;;1524:11;;;;;;;;;;;:20;;;1545:4;1551:6;1524:34;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1516:68;;;;;;;;;;;;:::i;:::-;;;;;;;;;1618:4;1600:31;;;1624:6;1600:31;;;;;;:::i;:::-;;;;;;;;1191:448:::0;;;:::o;631:186::-;4158:30:1;4191:26;:24;:26::i;:::-;4158:59;;4279:19;4302:1;:15;;;;;;;;;;;;4301:16;4279:38;;4327:18;4348:1;:14;;;;;;;;;;;;4327:35;;4704:17;4739:1;4724:11;:16;;;:34;;;;;4744:14;4724:34;4704:54;;4768:17;4803:1;4788:11;:16;;;:50;;;;;4837:1;4816:4;4808:25;;;:30;4788:50;4768:70;;4854:12;4853:13;:30;;;;;4871:12;4870:13;4853:30;4849:91;;;4906:23;;;;;;;;;;;;;;4849:91;4966:1;4949;:14;;;:18;;;;;;;;;;;;;;;;;;4981:14;4977:67;;;5029:4;5011:1;:15;;;:22;;;;;;;;;;;;;;;;;;4977:67;715:26:12::1;730:10;715:14;:26::i;:::-;766:4;752:11;:18;;;;799:10;781:15;:28;;;;5068:14:1::0;5064:101;;;5116:5;5098:1;:15;;;:23;;;;;;;;;;;;;;;;;;5140:14;5152:1;5140:14;;;;;;:::i;:::-;;;;;;;;5064:101;4092:1079;;;;;631:186:12;;:::o;3405:215:0:-;2334:13;:11;:13::i;:::-;3509:1:::1;3489:22;;:8;:22;;::::0;3485:91:::1;;3562:1;3534:31;;;;;;;;;;;:::i;:::-;;;;;;;;3485:91;3585:28;3604:8;3585:18;:28::i;:::-;3405:215:::0;:::o;493:25:12:-;;;;;;;;;;;;;:::o;825:98::-;2334:13:0;:11;:13::i;:::-;910:5:12::1;895:12;;:20;;;;;;;;;;;;;;;;;;825:98:::0;:::o;2658:162:0:-;2728:12;:10;:12::i;:::-;2717:23;;:7;:5;:7::i;:::-;:23;;;2713:101;;2790:12;:10;:12::i;:::-;2763:40;;;;;;;;;;;:::i;:::-;;;;;;;;2713:101;2658:162::o;3774:248::-;3847:24;3874:20;:18;:20::i;:::-;3847:47;;3904:16;3923:1;:8;;;;;;;;;;;;3904:27;;3952:8;3941:1;:8;;;:19;;;;;;;;;;;;;;;;;;4006:8;3975:40;;3996:8;3975:40;;;;;;;;;;;;3837:185;;3774:248;:::o;1192:159::-;1244:24;1313:22;1303:32;;1192:159;:::o;9071:205:1:-;9129:30;9171:12;9186:27;:25;:27::i;:::-;9171:42;;9256:4;9246:14;;9232:38;9071:205;:::o;1847:127:0:-;6929:20:1;:18;:20::i;:::-;1929:38:0::1;1954:12;1929:24;:38::i;:::-;1847:127:::0;:::o;887:96:3:-;940:7;966:10;959:17;;887:96;:::o;8819:122:1:-;8887:7;3147:66;8913:21;;8906:28;;8819:122;:::o;7082:141::-;7149:17;:15;:17::i;:::-;7144:73;;7189:17;;;;;;;;;;;;;;7144:73;7082:141::o;1980:235:0:-;6929:20:1;:18;:20::i;:::-;2100:1:0::1;2076:26;;:12;:26;;::::0;2072:95:::1;;2153:1;2125:31;;;;;;;;;;;:::i;:::-;;;;;;;;2072:95;2176:32;2195:12;2176:18;:32::i;:::-;1980:235:::0;:::o;8485:120:1:-;8535:4;8558:26;:24;:26::i;:::-;:40;;;;;;;;;;;;8551:47;;8485:120;:::o;7:77:13:-;44:7;73:5;62:16;;7:77;;;:::o;90:118::-;177:24;195:5;177:24;:::i;:::-;172:3;165:37;90:118;;:::o;214:222::-;307:4;345:2;334:9;330:18;322:26;;358:71;426:1;415:9;411:17;402:6;358:71;:::i;:::-;214:222;;;;:::o;523:117::-;632:1;629;622:12;769:126;806:7;846:42;839:5;835:54;824:65;;769:126;;;:::o;901:96::-;938:7;967:24;985:5;967:24;:::i;:::-;956:35;;901:96;;;:::o;1003:122::-;1076:24;1094:5;1076:24;:::i;:::-;1069:5;1066:35;1056:63;;1115:1;1112;1105:12;1056:63;1003:122;:::o;1131:139::-;1177:5;1215:6;1202:20;1193:29;;1231:33;1258:5;1231:33;:::i;:::-;1131:139;;;;:::o;1276:329::-;1335:6;1384:2;1372:9;1363:7;1359:23;1355:32;1352:119;;;1390:79;;:::i;:::-;1352:119;1510:1;1535:53;1580:7;1571:6;1560:9;1556:22;1535:53;:::i;:::-;1525:63;;1481:117;1276:329;;;;:::o;1611:118::-;1698:24;1716:5;1698:24;:::i;:::-;1693:3;1686:37;1611:118;;:::o;1735:222::-;1828:4;1866:2;1855:9;1851:18;1843:26;;1879:71;1947:1;1936:9;1932:17;1923:6;1879:71;:::i;:::-;1735:222;;;;:::o;1963:122::-;2036:24;2054:5;2036:24;:::i;:::-;2029:5;2026:35;2016:63;;2075:1;2072;2065:12;2016:63;1963:122;:::o;2091:139::-;2137:5;2175:6;2162:20;2153:29;;2191:33;2218:5;2191:33;:::i;:::-;2091:139;;;;:::o;2236:474::-;2304:6;2312;2361:2;2349:9;2340:7;2336:23;2332:32;2329:119;;;2367:79;;:::i;:::-;2329:119;2487:1;2512:53;2557:7;2548:6;2537:9;2533:22;2512:53;:::i;:::-;2502:63;;2458:117;2614:2;2640:53;2685:7;2676:6;2665:9;2661:22;2640:53;:::i;:::-;2630:63;;2585:118;2236:474;;;;;:::o;2716:619::-;2793:6;2801;2809;2858:2;2846:9;2837:7;2833:23;2829:32;2826:119;;;2864:79;;:::i;:::-;2826:119;2984:1;3009:53;3054:7;3045:6;3034:9;3030:22;3009:53;:::i;:::-;2999:63;;2955:117;3111:2;3137:53;3182:7;3173:6;3162:9;3158:22;3137:53;:::i;:::-;3127:63;;3082:118;3239:2;3265:53;3310:7;3301:6;3290:9;3286:22;3265:53;:::i;:::-;3255:63;;3210:118;2716:619;;;;;:::o;3341:474::-;3409:6;3417;3466:2;3454:9;3445:7;3441:23;3437:32;3434:119;;;3472:79;;:::i;:::-;3434:119;3592:1;3617:53;3662:7;3653:6;3642:9;3638:22;3617:53;:::i;:::-;3607:63;;3563:117;3719:2;3745:53;3790:7;3781:6;3770:9;3766:22;3745:53;:::i;:::-;3735:63;;3690:118;3341:474;;;;;:::o;3821:60::-;3849:3;3870:5;3863:12;;3821:60;;;:::o;3887:142::-;3937:9;3970:53;3988:34;3997:24;4015:5;3997:24;:::i;:::-;3988:34;:::i;:::-;3970:53;:::i;:::-;3957:66;;3887:142;;;:::o;4035:126::-;4085:9;4118:37;4149:5;4118:37;:::i;:::-;4105:50;;4035:126;;;:::o;4167:141::-;4232:9;4265:37;4296:5;4265:37;:::i;:::-;4252:50;;4167:141;;;:::o;4314:161::-;4416:52;4462:5;4416:52;:::i;:::-;4411:3;4404:65;4314:161;;:::o;4481:252::-;4589:4;4627:2;4616:9;4612:18;4604:26;;4640:86;4723:1;4712:9;4708:17;4699:6;4640:86;:::i;:::-;4481:252;;;;:::o;4739:180::-;4787:77;4784:1;4777:88;4884:4;4881:1;4874:15;4908:4;4905:1;4898:15;4925:410;4965:7;4988:20;5006:1;4988:20;:::i;:::-;4983:25;;5022:20;5040:1;5022:20;:::i;:::-;5017:25;;5077:1;5074;5070:9;5099:30;5117:11;5099:30;:::i;:::-;5088:41;;5278:1;5269:7;5265:15;5262:1;5259:22;5239:1;5232:9;5212:83;5189:139;;5308:18;;:::i;:::-;5189:139;4973:362;4925:410;;;;:::o;5341:180::-;5389:77;5386:1;5379:88;5486:4;5483:1;5476:15;5510:4;5507:1;5500:15;5527:185;5567:1;5584:20;5602:1;5584:20;:::i;:::-;5579:25;;5618:20;5636:1;5618:20;:::i;:::-;5613:25;;5657:1;5647:35;;5662:18;;:::i;:::-;5647:35;5704:1;5701;5697:9;5692:14;;5527:185;;;;:::o;5718:191::-;5758:3;5777:20;5795:1;5777:20;:::i;:::-;5772:25;;5811:20;5829:1;5811:20;:::i;:::-;5806:25;;5854:1;5851;5847:9;5840:16;;5875:3;5872:1;5869:10;5866:36;;;5882:18;;:::i;:::-;5866:36;5718:191;;;;:::o;5915:94::-;5948:8;5996:5;5992:2;5988:14;5967:35;;5915:94;;;:::o;6015:::-;6054:7;6083:20;6097:5;6083:20;:::i;:::-;6072:31;;6015:94;;;:::o;6115:100::-;6154:7;6183:26;6203:5;6183:26;:::i;:::-;6172:37;;6115:100;;;:::o;6221:157::-;6326:45;6346:24;6364:5;6346:24;:::i;:::-;6326:45;:::i;:::-;6321:3;6314:58;6221:157;;:::o;6384:79::-;6423:7;6452:5;6441:16;;6384:79;;;:::o;6469:157::-;6574:45;6594:24;6612:5;6594:24;:::i;:::-;6574:45;:::i;:::-;6569:3;6562:58;6469:157;;:::o;6632:538::-;6800:3;6815:75;6886:3;6877:6;6815:75;:::i;:::-;6915:2;6910:3;6906:12;6899:19;;6928:75;6999:3;6990:6;6928:75;:::i;:::-;7028:2;7023:3;7019:12;7012:19;;7041:75;7112:3;7103:6;7041:75;:::i;:::-;7141:2;7136:3;7132:12;7125:19;;7161:3;7154:10;;6632:538;;;;;;:::o;7176:176::-;7208:1;7225:20;7243:1;7225:20;:::i;:::-;7220:25;;7259:20;7277:1;7259:20;:::i;:::-;7254:25;;7298:1;7288:35;;7303:18;;:::i;:::-;7288:35;7344:1;7341;7337:9;7332:14;;7176:176;;;;:::o;7358:169::-;7442:11;7476:6;7471:3;7464:19;7516:4;7511:3;7507:14;7492:29;;7358:169;;;;:::o;7533:164::-;7673:16;7669:1;7661:6;7657:14;7650:40;7533:164;:::o;7703:366::-;7845:3;7866:67;7930:2;7925:3;7866:67;:::i;:::-;7859:74;;7942:93;8031:3;7942:93;:::i;:::-;8060:2;8055:3;8051:12;8044:19;;7703:366;;;:::o;8075:419::-;8241:4;8279:2;8268:9;8264:18;8256:26;;8328:9;8322:4;8318:20;8314:1;8303:9;8299:17;8292:47;8356:131;8482:4;8356:131;:::i;:::-;8348:139;;8075:419;;;:::o;8500:176::-;8640:28;8636:1;8628:6;8624:14;8617:52;8500:176;:::o;8682:366::-;8824:3;8845:67;8909:2;8904:3;8845:67;:::i;:::-;8838:74;;8921:93;9010:3;8921:93;:::i;:::-;9039:2;9034:3;9030:12;9023:19;;8682:366;;;:::o;9054:419::-;9220:4;9258:2;9247:9;9243:18;9235:26;;9307:9;9301:4;9297:20;9293:1;9282:9;9278:17;9271:47;9335:131;9461:4;9335:131;:::i;:::-;9327:139;;9054:419;;;:::o;9479:168::-;9619:20;9615:1;9607:6;9603:14;9596:44;9479:168;:::o;9653:366::-;9795:3;9816:67;9880:2;9875:3;9816:67;:::i;:::-;9809:74;;9892:93;9981:3;9892:93;:::i;:::-;10010:2;10005:3;10001:12;9994:19;;9653:366;;;:::o;10025:419::-;10191:4;10229:2;10218:9;10214:18;10206:26;;10278:9;10272:4;10268:20;10264:1;10253:9;10249:17;10242:47;10306:131;10432:4;10306:131;:::i;:::-;10298:139;;10025:419;;;:::o;10450:143::-;10507:5;10538:6;10532:13;10523:22;;10554:33;10581:5;10554:33;:::i;:::-;10450:143;;;;:::o;10599:351::-;10669:6;10718:2;10706:9;10697:7;10693:23;10689:32;10686:119;;;10724:79;;:::i;:::-;10686:119;10844:1;10869:64;10925:7;10916:6;10905:9;10901:22;10869:64;:::i;:::-;10859:74;;10815:128;10599:351;;;;:::o;10956:177::-;11096:29;11092:1;11084:6;11080:14;11073:53;10956:177;:::o;11139:366::-;11281:3;11302:67;11366:2;11361:3;11302:67;:::i;:::-;11295:74;;11378:93;11467:3;11378:93;:::i;:::-;11496:2;11491:3;11487:12;11480:19;;11139:366;;;:::o;11511:419::-;11677:4;11715:2;11704:9;11700:18;11692:26;;11764:9;11758:4;11754:20;11750:1;11739:9;11735:17;11728:47;11792:131;11918:4;11792:131;:::i;:::-;11784:139;;11511:419;;;:::o;11936:332::-;12057:4;12095:2;12084:9;12080:18;12072:26;;12108:71;12176:1;12165:9;12161:17;12152:6;12108:71;:::i;:::-;12189:72;12257:2;12246:9;12242:18;12233:6;12189:72;:::i;:::-;11936:332;;;;;:::o;12274:90::-;12308:7;12351:5;12344:13;12337:21;12326:32;;12274:90;;;:::o;12370:116::-;12440:21;12455:5;12440:21;:::i;:::-;12433:5;12430:32;12420:60;;12476:1;12473;12466:12;12420:60;12370:116;:::o;12492:137::-;12546:5;12577:6;12571:13;12562:22;;12593:30;12617:5;12593:30;:::i;:::-;12492:137;;;;:::o;12635:345::-;12702:6;12751:2;12739:9;12730:7;12726:23;12722:32;12719:119;;;12757:79;;:::i;:::-;12719:119;12877:1;12902:61;12955:7;12946:6;12935:9;12931:22;12902:61;:::i;:::-;12892:71;;12848:125;12635:345;;;;:::o;12986:171::-;13126:23;13122:1;13114:6;13110:14;13103:47;12986:171;:::o;13163:366::-;13305:3;13326:67;13390:2;13385:3;13326:67;:::i;:::-;13319:74;;13402:93;13491:3;13402:93;:::i;:::-;13520:2;13515:3;13511:12;13504:19;;13163:366;;;:::o;13535:419::-;13701:4;13739:2;13728:9;13724:18;13716:26;;13788:9;13782:4;13778:20;13774:1;13763:9;13759:17;13752:47;13816:131;13942:4;13816:131;:::i;:::-;13808:139;;13535:419;;;:::o;13960:85::-;14005:7;14034:5;14023:16;;13960:85;;;:::o;14051:101::-;14087:7;14127:18;14120:5;14116:30;14105:41;;14051:101;;;:::o;14158:156::-;14215:9;14248:60;14265:42;14274:32;14300:5;14274:32;:::i;:::-;14265:42;:::i;:::-;14248:60;:::i;:::-;14235:73;;14158:156;;;:::o;14320:145::-;14414:44;14452:5;14414:44;:::i;:::-;14409:3;14402:57;14320:145;;:::o;14471:236::-;14571:4;14609:2;14598:9;14594:18;14586:26;;14622:78;14697:1;14686:9;14682:17;14673:6;14622:78;:::i;:::-;14471:236;;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "1012600",
								"executionCost": "1052",
								"totalCost": "1013652"
							},
							"external": {
								"calculateReward(uint256,address)": "infinite",
								"distributeReward(address,uint256,uint256)": "infinite",
								"initialize(uint256,uint256)": "infinite",
								"maxRewardPoints()": "2448",
								"owner()": "2655",
								"platformFee()": "2425",
								"renounceOwnership()": "infinite",
								"rewardToken()": "infinite",
								"setRewardToken(address)": "infinite",
								"setUCPIContract(address)": "infinite",
								"transferOwnership(address)": "infinite",
								"ucpiContract()": "2508"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 356,
									"end": 2098,
									"name": "PUSH",
									"source": 12,
									"value": "80"
								},
								{
									"begin": 356,
									"end": 2098,
									"name": "PUSH",
									"source": 12,
									"value": "40"
								},
								{
									"begin": 356,
									"end": 2098,
									"name": "MSTORE",
									"source": 12
								},
								{
									"begin": 356,
									"end": 2098,
									"name": "CALLVALUE",
									"source": 12
								},
								{
									"begin": 356,
									"end": 2098,
									"name": "DUP1",
									"source": 12
								},
								{
									"begin": 356,
									"end": 2098,
									"name": "ISZERO",
									"source": 12
								},
								{
									"begin": 356,
									"end": 2098,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "1"
								},
								{
									"begin": 356,
									"end": 2098,
									"name": "JUMPI",
									"source": 12
								},
								{
									"begin": 356,
									"end": 2098,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 356,
									"end": 2098,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 356,
									"end": 2098,
									"name": "REVERT",
									"source": 12
								},
								{
									"begin": 356,
									"end": 2098,
									"name": "tag",
									"source": 12,
									"value": "1"
								},
								{
									"begin": 356,
									"end": 2098,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 356,
									"end": 2098,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 356,
									"end": 2098,
									"name": "PUSH #[$]",
									"source": 12,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 356,
									"end": 2098,
									"name": "DUP1",
									"source": 12
								},
								{
									"begin": 356,
									"end": 2098,
									"name": "PUSH [$]",
									"source": 12,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 356,
									"end": 2098,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 356,
									"end": 2098,
									"name": "CODECOPY",
									"source": 12
								},
								{
									"begin": 356,
									"end": 2098,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 356,
									"end": 2098,
									"name": "RETURN",
									"source": 12
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220b173a8494843163402c4f60c4abce281dcec32739684fda73d5bc7d29f574bde64736f6c634300081e0033",
									".code": [
										{
											"begin": 356,
											"end": 2098,
											"name": "PUSH",
											"source": 12,
											"value": "80"
										},
										{
											"begin": 356,
											"end": 2098,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 356,
											"end": 2098,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 356,
											"end": 2098,
											"name": "CALLVALUE",
											"source": 12
										},
										{
											"begin": 356,
											"end": 2098,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 356,
											"end": 2098,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 356,
											"end": 2098,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "1"
										},
										{
											"begin": 356,
											"end": 2098,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 356,
											"end": 2098,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 356,
											"end": 2098,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 356,
											"end": 2098,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 356,
											"end": 2098,
											"name": "tag",
											"source": 12,
											"value": "1"
										},
										{
											"begin": 356,
											"end": 2098,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 356,
											"end": 2098,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 356,
											"end": 2098,
											"name": "PUSH",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 356,
											"end": 2098,
											"name": "CALLDATASIZE",
											"source": 12
										},
										{
											"begin": 356,
											"end": 2098,
											"name": "LT",
											"source": 12
										},
										{
											"begin": 356,
											"end": 2098,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "2"
										},
										{
											"begin": 356,
											"end": 2098,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 356,
											"end": 2098,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 356,
											"end": 2098,
											"name": "CALLDATALOAD",
											"source": 12
										},
										{
											"begin": 356,
											"end": 2098,
											"name": "PUSH",
											"source": 12,
											"value": "E0"
										},
										{
											"begin": 356,
											"end": 2098,
											"name": "SHR",
											"source": 12
										},
										{
											"begin": 356,
											"end": 2098,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 356,
											"end": 2098,
											"name": "PUSH",
											"source": 12,
											"value": "B1A5232E"
										},
										{
											"begin": 356,
											"end": 2098,
											"name": "GT",
											"source": 12
										},
										{
											"begin": 356,
											"end": 2098,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "15"
										},
										{
											"begin": 356,
											"end": 2098,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 356,
											"end": 2098,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 356,
											"end": 2098,
											"name": "PUSH",
											"source": 12,
											"value": "B1A5232E"
										},
										{
											"begin": 356,
											"end": 2098,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 356,
											"end": 2098,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "9"
										},
										{
											"begin": 356,
											"end": 2098,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 356,
											"end": 2098,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 356,
											"end": 2098,
											"name": "PUSH",
											"source": 12,
											"value": "DE5B71F7"
										},
										{
											"begin": 356,
											"end": 2098,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 356,
											"end": 2098,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "10"
										},
										{
											"begin": 356,
											"end": 2098,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 356,
											"end": 2098,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 356,
											"end": 2098,
											"name": "PUSH",
											"source": 12,
											"value": "E4A30116"
										},
										{
											"begin": 356,
											"end": 2098,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 356,
											"end": 2098,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "11"
										},
										{
											"begin": 356,
											"end": 2098,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 356,
											"end": 2098,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 356,
											"end": 2098,
											"name": "PUSH",
											"source": 12,
											"value": "F2FDE38B"
										},
										{
											"begin": 356,
											"end": 2098,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 356,
											"end": 2098,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "12"
										},
										{
											"begin": 356,
											"end": 2098,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 356,
											"end": 2098,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 356,
											"end": 2098,
											"name": "PUSH",
											"source": 12,
											"value": "F7C618C1"
										},
										{
											"begin": 356,
											"end": 2098,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 356,
											"end": 2098,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "13"
										},
										{
											"begin": 356,
											"end": 2098,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 356,
											"end": 2098,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 356,
											"end": 2098,
											"name": "PUSH",
											"source": 12,
											"value": "FE95FC1A"
										},
										{
											"begin": 356,
											"end": 2098,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 356,
											"end": 2098,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "14"
										},
										{
											"begin": 356,
											"end": 2098,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 356,
											"end": 2098,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "2"
										},
										{
											"begin": 356,
											"end": 2098,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 356,
											"end": 2098,
											"name": "tag",
											"source": 12,
											"value": "15"
										},
										{
											"begin": 356,
											"end": 2098,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 356,
											"end": 2098,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 356,
											"end": 2098,
											"name": "PUSH",
											"source": 12,
											"value": "26232A2E"
										},
										{
											"begin": 356,
											"end": 2098,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 356,
											"end": 2098,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "3"
										},
										{
											"begin": 356,
											"end": 2098,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 356,
											"end": 2098,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 356,
											"end": 2098,
											"name": "PUSH",
											"source": 12,
											"value": "49880782"
										},
										{
											"begin": 356,
											"end": 2098,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 356,
											"end": 2098,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 356,
											"end": 2098,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 356,
											"end": 2098,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 356,
											"end": 2098,
											"name": "PUSH",
											"source": 12,
											"value": "715018A6"
										},
										{
											"begin": 356,
											"end": 2098,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 356,
											"end": 2098,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "5"
										},
										{
											"begin": 356,
											"end": 2098,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 356,
											"end": 2098,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 356,
											"end": 2098,
											"name": "PUSH",
											"source": 12,
											"value": "8AEE8127"
										},
										{
											"begin": 356,
											"end": 2098,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 356,
											"end": 2098,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "6"
										},
										{
											"begin": 356,
											"end": 2098,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 356,
											"end": 2098,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 356,
											"end": 2098,
											"name": "PUSH",
											"source": 12,
											"value": "8DA5CB5B"
										},
										{
											"begin": 356,
											"end": 2098,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 356,
											"end": 2098,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "7"
										},
										{
											"begin": 356,
											"end": 2098,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 356,
											"end": 2098,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 356,
											"end": 2098,
											"name": "PUSH",
											"source": 12,
											"value": "A18F07A0"
										},
										{
											"begin": 356,
											"end": 2098,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 356,
											"end": 2098,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "8"
										},
										{
											"begin": 356,
											"end": 2098,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 356,
											"end": 2098,
											"name": "tag",
											"source": 12,
											"value": "2"
										},
										{
											"begin": 356,
											"end": 2098,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 356,
											"end": 2098,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 356,
											"end": 2098,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 356,
											"end": 2098,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 423,
											"end": 449,
											"name": "tag",
											"source": 12,
											"value": "3"
										},
										{
											"begin": 423,
											"end": 449,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 423,
											"end": 449,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "16"
										},
										{
											"begin": 423,
											"end": 449,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "17"
										},
										{
											"begin": 423,
											"end": 449,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 423,
											"end": 449,
											"name": "tag",
											"source": 12,
											"value": "16"
										},
										{
											"begin": 423,
											"end": 449,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 423,
											"end": 449,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 423,
											"end": 449,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 423,
											"end": 449,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "18"
										},
										{
											"begin": 423,
											"end": 449,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 423,
											"end": 449,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 423,
											"end": 449,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "19"
										},
										{
											"begin": 423,
											"end": 449,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 423,
											"end": 449,
											"name": "tag",
											"source": 12,
											"value": "18"
										},
										{
											"begin": 423,
											"end": 449,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 423,
											"end": 449,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 423,
											"end": 449,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 423,
											"end": 449,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 423,
											"end": 449,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 423,
											"end": 449,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 423,
											"end": 449,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 423,
											"end": 449,
											"name": "RETURN",
											"source": 12
										},
										{
											"begin": 456,
											"end": 486,
											"name": "tag",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 456,
											"end": 486,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 456,
											"end": 486,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 456,
											"end": 486,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "21"
										},
										{
											"begin": 456,
											"end": 486,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 456,
											"end": 486,
											"name": "tag",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 456,
											"end": 486,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 456,
											"end": 486,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 456,
											"end": 486,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 456,
											"end": 486,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "22"
										},
										{
											"begin": 456,
											"end": 486,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 456,
											"end": 486,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 456,
											"end": 486,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "19"
										},
										{
											"begin": 456,
											"end": 486,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 456,
											"end": 486,
											"name": "tag",
											"source": 12,
											"value": "22"
										},
										{
											"begin": 456,
											"end": 486,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 456,
											"end": 486,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 456,
											"end": 486,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 456,
											"end": 486,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 456,
											"end": 486,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 456,
											"end": 486,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 456,
											"end": 486,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 456,
											"end": 486,
											"name": "RETURN",
											"source": 12
										},
										{
											"begin": 3155,
											"end": 3256,
											"name": "tag",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 3155,
											"end": 3256,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3155,
											"end": 3256,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "23"
										},
										{
											"begin": 3155,
											"end": 3256,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 3155,
											"end": 3256,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3155,
											"end": 3256,
											"name": "tag",
											"source": 0,
											"value": "23"
										},
										{
											"begin": 3155,
											"end": 3256,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3155,
											"end": 3256,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 931,
											"end": 1037,
											"name": "tag",
											"source": 12,
											"value": "6"
										},
										{
											"begin": 931,
											"end": 1037,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 931,
											"end": 1037,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "25"
										},
										{
											"begin": 931,
											"end": 1037,
											"name": "PUSH",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 931,
											"end": 1037,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 931,
											"end": 1037,
											"name": "CALLDATASIZE",
											"source": 12
										},
										{
											"begin": 931,
											"end": 1037,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 931,
											"end": 1037,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 931,
											"end": 1037,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 931,
											"end": 1037,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 931,
											"end": 1037,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "26"
										},
										{
											"begin": 931,
											"end": 1037,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 931,
											"end": 1037,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 931,
											"end": 1037,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "27"
										},
										{
											"begin": 931,
											"end": 1037,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 931,
											"end": 1037,
											"name": "tag",
											"source": 12,
											"value": "26"
										},
										{
											"begin": 931,
											"end": 1037,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 931,
											"end": 1037,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "28"
										},
										{
											"begin": 931,
											"end": 1037,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 931,
											"end": 1037,
											"name": "tag",
											"source": 12,
											"value": "25"
										},
										{
											"begin": 931,
											"end": 1037,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 931,
											"end": 1037,
											"name": "STOP",
											"source": 12
										},
										{
											"begin": 2441,
											"end": 2585,
											"name": "tag",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 2441,
											"end": 2585,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2441,
											"end": 2585,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "29"
										},
										{
											"begin": 2441,
											"end": 2585,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "30"
										},
										{
											"begin": 2441,
											"end": 2585,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2441,
											"end": 2585,
											"name": "tag",
											"source": 0,
											"value": "29"
										},
										{
											"begin": 2441,
											"end": 2585,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2441,
											"end": 2585,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2441,
											"end": 2585,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2441,
											"end": 2585,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "31"
										},
										{
											"begin": 2441,
											"end": 2585,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2441,
											"end": 2585,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2441,
											"end": 2585,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "32"
										},
										{
											"begin": 2441,
											"end": 2585,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2441,
											"end": 2585,
											"name": "tag",
											"source": 0,
											"value": "31"
										},
										{
											"begin": 2441,
											"end": 2585,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2441,
											"end": 2585,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2441,
											"end": 2585,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2441,
											"end": 2585,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2441,
											"end": 2585,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2441,
											"end": 2585,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2441,
											"end": 2585,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2441,
											"end": 2585,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 1650,
											"end": 2095,
											"name": "tag",
											"source": 12,
											"value": "8"
										},
										{
											"begin": 1650,
											"end": 2095,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1650,
											"end": 2095,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "33"
										},
										{
											"begin": 1650,
											"end": 2095,
											"name": "PUSH",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 1650,
											"end": 2095,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 1650,
											"end": 2095,
											"name": "CALLDATASIZE",
											"source": 12
										},
										{
											"begin": 1650,
											"end": 2095,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 1650,
											"end": 2095,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 1650,
											"end": 2095,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 1650,
											"end": 2095,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1650,
											"end": 2095,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "34"
										},
										{
											"begin": 1650,
											"end": 2095,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 1650,
											"end": 2095,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1650,
											"end": 2095,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "35"
										},
										{
											"begin": 1650,
											"end": 2095,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 1650,
											"end": 2095,
											"name": "tag",
											"source": 12,
											"value": "34"
										},
										{
											"begin": 1650,
											"end": 2095,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1650,
											"end": 2095,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "36"
										},
										{
											"begin": 1650,
											"end": 2095,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 1650,
											"end": 2095,
											"name": "tag",
											"source": 12,
											"value": "33"
										},
										{
											"begin": 1650,
											"end": 2095,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1650,
											"end": 2095,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 1650,
											"end": 2095,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 1650,
											"end": 2095,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "37"
										},
										{
											"begin": 1650,
											"end": 2095,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 1650,
											"end": 2095,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1650,
											"end": 2095,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "19"
										},
										{
											"begin": 1650,
											"end": 2095,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 1650,
											"end": 2095,
											"name": "tag",
											"source": 12,
											"value": "37"
										},
										{
											"begin": 1650,
											"end": 2095,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1650,
											"end": 2095,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 1650,
											"end": 2095,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 1650,
											"end": 2095,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 1650,
											"end": 2095,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 1650,
											"end": 2095,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 1650,
											"end": 2095,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1650,
											"end": 2095,
											"name": "RETURN",
											"source": 12
										},
										{
											"begin": 525,
											"end": 552,
											"name": "tag",
											"source": 12,
											"value": "9"
										},
										{
											"begin": 525,
											"end": 552,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 525,
											"end": 552,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "38"
										},
										{
											"begin": 525,
											"end": 552,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "39"
										},
										{
											"begin": 525,
											"end": 552,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 525,
											"end": 552,
											"name": "tag",
											"source": 12,
											"value": "38"
										},
										{
											"begin": 525,
											"end": 552,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 525,
											"end": 552,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 525,
											"end": 552,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 525,
											"end": 552,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 525,
											"end": 552,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 525,
											"end": 552,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 525,
											"end": 552,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "32"
										},
										{
											"begin": 525,
											"end": 552,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 525,
											"end": 552,
											"name": "tag",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 525,
											"end": 552,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 525,
											"end": 552,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 525,
											"end": 552,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 525,
											"end": 552,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 525,
											"end": 552,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 525,
											"end": 552,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 525,
											"end": 552,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 525,
											"end": 552,
											"name": "RETURN",
											"source": 12
										},
										{
											"begin": 1191,
											"end": 1639,
											"name": "tag",
											"source": 12,
											"value": "10"
										},
										{
											"begin": 1191,
											"end": 1639,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1191,
											"end": 1639,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "41"
										},
										{
											"begin": 1191,
											"end": 1639,
											"name": "PUSH",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 1191,
											"end": 1639,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 1191,
											"end": 1639,
											"name": "CALLDATASIZE",
											"source": 12
										},
										{
											"begin": 1191,
											"end": 1639,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 1191,
											"end": 1639,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 1191,
											"end": 1639,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 1191,
											"end": 1639,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1191,
											"end": 1639,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "42"
										},
										{
											"begin": 1191,
											"end": 1639,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 1191,
											"end": 1639,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1191,
											"end": 1639,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "43"
										},
										{
											"begin": 1191,
											"end": 1639,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 1191,
											"end": 1639,
											"name": "tag",
											"source": 12,
											"value": "42"
										},
										{
											"begin": 1191,
											"end": 1639,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1191,
											"end": 1639,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "44"
										},
										{
											"begin": 1191,
											"end": 1639,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 1191,
											"end": 1639,
											"name": "tag",
											"source": 12,
											"value": "41"
										},
										{
											"begin": 1191,
											"end": 1639,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1191,
											"end": 1639,
											"name": "STOP",
											"source": 12
										},
										{
											"begin": 631,
											"end": 817,
											"name": "tag",
											"source": 12,
											"value": "11"
										},
										{
											"begin": 631,
											"end": 817,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 631,
											"end": 817,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "45"
										},
										{
											"begin": 631,
											"end": 817,
											"name": "PUSH",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 631,
											"end": 817,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 631,
											"end": 817,
											"name": "CALLDATASIZE",
											"source": 12
										},
										{
											"begin": 631,
											"end": 817,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 631,
											"end": 817,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 631,
											"end": 817,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 631,
											"end": 817,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 631,
											"end": 817,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "46"
										},
										{
											"begin": 631,
											"end": 817,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 631,
											"end": 817,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 631,
											"end": 817,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "47"
										},
										{
											"begin": 631,
											"end": 817,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 631,
											"end": 817,
											"name": "tag",
											"source": 12,
											"value": "46"
										},
										{
											"begin": 631,
											"end": 817,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 631,
											"end": 817,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "48"
										},
										{
											"begin": 631,
											"end": 817,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 631,
											"end": 817,
											"name": "tag",
											"source": 12,
											"value": "45"
										},
										{
											"begin": 631,
											"end": 817,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 631,
											"end": 817,
											"name": "STOP",
											"source": 12
										},
										{
											"begin": 3405,
											"end": 3620,
											"name": "tag",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 3405,
											"end": 3620,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3405,
											"end": 3620,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "49"
										},
										{
											"begin": 3405,
											"end": 3620,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 3405,
											"end": 3620,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3405,
											"end": 3620,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 3405,
											"end": 3620,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 3405,
											"end": 3620,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3405,
											"end": 3620,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3405,
											"end": 3620,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3405,
											"end": 3620,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "50"
										},
										{
											"begin": 3405,
											"end": 3620,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3405,
											"end": 3620,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3405,
											"end": 3620,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "27"
										},
										{
											"begin": 3405,
											"end": 3620,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3405,
											"end": 3620,
											"name": "tag",
											"source": 0,
											"value": "50"
										},
										{
											"begin": 3405,
											"end": 3620,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3405,
											"end": 3620,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "51"
										},
										{
											"begin": 3405,
											"end": 3620,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3405,
											"end": 3620,
											"name": "tag",
											"source": 0,
											"value": "49"
										},
										{
											"begin": 3405,
											"end": 3620,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3405,
											"end": 3620,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 493,
											"end": 518,
											"name": "tag",
											"source": 12,
											"value": "13"
										},
										{
											"begin": 493,
											"end": 518,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 493,
											"end": 518,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "52"
										},
										{
											"begin": 493,
											"end": 518,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "53"
										},
										{
											"begin": 493,
											"end": 518,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 493,
											"end": 518,
											"name": "tag",
											"source": 12,
											"value": "52"
										},
										{
											"begin": 493,
											"end": 518,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 493,
											"end": 518,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 493,
											"end": 518,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 493,
											"end": 518,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "54"
										},
										{
											"begin": 493,
											"end": 518,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 493,
											"end": 518,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 493,
											"end": 518,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "55"
										},
										{
											"begin": 493,
											"end": 518,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 493,
											"end": 518,
											"name": "tag",
											"source": 12,
											"value": "54"
										},
										{
											"begin": 493,
											"end": 518,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 493,
											"end": 518,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 493,
											"end": 518,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 493,
											"end": 518,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 493,
											"end": 518,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 493,
											"end": 518,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 493,
											"end": 518,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 493,
											"end": 518,
											"name": "RETURN",
											"source": 12
										},
										{
											"begin": 825,
											"end": 923,
											"name": "tag",
											"source": 12,
											"value": "14"
										},
										{
											"begin": 825,
											"end": 923,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 825,
											"end": 923,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "56"
										},
										{
											"begin": 825,
											"end": 923,
											"name": "PUSH",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 825,
											"end": 923,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 825,
											"end": 923,
											"name": "CALLDATASIZE",
											"source": 12
										},
										{
											"begin": 825,
											"end": 923,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 825,
											"end": 923,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 825,
											"end": 923,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 825,
											"end": 923,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 825,
											"end": 923,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "57"
										},
										{
											"begin": 825,
											"end": 923,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 825,
											"end": 923,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 825,
											"end": 923,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "27"
										},
										{
											"begin": 825,
											"end": 923,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 825,
											"end": 923,
											"name": "tag",
											"source": 12,
											"value": "57"
										},
										{
											"begin": 825,
											"end": 923,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 825,
											"end": 923,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "58"
										},
										{
											"begin": 825,
											"end": 923,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 825,
											"end": 923,
											"name": "tag",
											"source": 12,
											"value": "56"
										},
										{
											"begin": 825,
											"end": 923,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 825,
											"end": 923,
											"name": "STOP",
											"source": 12
										},
										{
											"begin": 423,
											"end": 449,
											"name": "tag",
											"source": 12,
											"value": "17"
										},
										{
											"begin": 423,
											"end": 449,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 423,
											"end": 449,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 423,
											"end": 449,
											"name": "SLOAD",
											"source": 12
										},
										{
											"begin": 423,
											"end": 449,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 423,
											"end": 449,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 456,
											"end": 486,
											"name": "tag",
											"source": 12,
											"value": "21"
										},
										{
											"begin": 456,
											"end": 486,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 456,
											"end": 486,
											"name": "PUSH",
											"source": 12,
											"value": "1"
										},
										{
											"begin": 456,
											"end": 486,
											"name": "SLOAD",
											"source": 12
										},
										{
											"begin": 456,
											"end": 486,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 456,
											"end": 486,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 3155,
											"end": 3256,
											"name": "tag",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 3155,
											"end": 3256,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2334,
											"end": 2347,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 2334,
											"end": 2345,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "61"
										},
										{
											"begin": 2334,
											"end": 2347,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2334,
											"end": 2347,
											"name": "tag",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 2334,
											"end": 2347,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3219,
											"end": 3249,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "63"
										},
										{
											"begin": 3246,
											"end": 3247,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3219,
											"end": 3237,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 3219,
											"end": 3249,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3219,
											"end": 3249,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "63"
										},
										{
											"begin": 3219,
											"end": 3249,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3155,
											"end": 3256,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 931,
											"end": 1037,
											"name": "tag",
											"source": 12,
											"value": "28"
										},
										{
											"begin": 931,
											"end": 1037,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2334,
											"end": 2347,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "66"
										},
										{
											"begin": 2334,
											"end": 2345,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "61"
										},
										{
											"begin": 2334,
											"end": 2347,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2334,
											"end": 2347,
											"name": "tag",
											"source": 0,
											"value": "66"
										},
										{
											"begin": 2334,
											"end": 2347,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1022,
											"end": 1028,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 1001,
											"end": 1012,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "2"
										},
										{
											"begin": 1001,
											"end": 1012,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 1001,
											"end": 1029,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "100"
										},
										{
											"begin": 1001,
											"end": 1029,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 12
										},
										{
											"begin": 1001,
											"end": 1029,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 1001,
											"end": 1029,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 12
										},
										{
											"begin": 1001,
											"end": 1029,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 1001,
											"end": 1029,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1001,
											"end": 1029,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 12
										},
										{
											"begin": 1001,
											"end": 1029,
											"modifierDepth": 1,
											"name": "NOT",
											"source": 12
										},
										{
											"begin": 1001,
											"end": 1029,
											"modifierDepth": 1,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 1001,
											"end": 1029,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1001,
											"end": 1029,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 1001,
											"end": 1029,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1001,
											"end": 1029,
											"modifierDepth": 1,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 1001,
											"end": 1029,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 12
										},
										{
											"begin": 1001,
											"end": 1029,
											"modifierDepth": 1,
											"name": "OR",
											"source": 12
										},
										{
											"begin": 1001,
											"end": 1029,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1001,
											"end": 1029,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 12
										},
										{
											"begin": 1001,
											"end": 1029,
											"modifierDepth": 1,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 931,
											"end": 1037,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 931,
											"end": 1037,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 2441,
											"end": 2585,
											"name": "tag",
											"source": 0,
											"value": "30"
										},
										{
											"begin": 2441,
											"end": 2585,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2487,
											"end": 2494,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2506,
											"end": 2530,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2533,
											"end": 2553,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "69"
										},
										{
											"begin": 2533,
											"end": 2551,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "70"
										},
										{
											"begin": 2533,
											"end": 2553,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2533,
											"end": 2553,
											"name": "tag",
											"source": 0,
											"value": "69"
										},
										{
											"begin": 2533,
											"end": 2553,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2506,
											"end": 2553,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2506,
											"end": 2553,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2570,
											"end": 2571,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2570,
											"end": 2578,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2570,
											"end": 2578,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2570,
											"end": 2578,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2570,
											"end": 2578,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2570,
											"end": 2578,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 2570,
											"end": 2578,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2570,
											"end": 2578,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 2570,
											"end": 2578,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 2570,
											"end": 2578,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2570,
											"end": 2578,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 2570,
											"end": 2578,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2570,
											"end": 2578,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2563,
											"end": 2578,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2563,
											"end": 2578,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2563,
											"end": 2578,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2441,
											"end": 2585,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2441,
											"end": 2585,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1650,
											"end": 2095,
											"name": "tag",
											"source": 12,
											"value": "36"
										},
										{
											"begin": 1650,
											"end": 2095,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1728,
											"end": 1735,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 1748,
											"end": 1766,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 1792,
											"end": 1797,
											"name": "PUSH",
											"source": 12,
											"value": "2710"
										},
										{
											"begin": 1778,
											"end": 1789,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 1778,
											"end": 1789,
											"name": "SLOAD",
											"source": 12
										},
										{
											"begin": 1769,
											"end": 1775,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 1769,
											"end": 1789,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "72"
										},
										{
											"begin": 1769,
											"end": 1789,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 1769,
											"end": 1789,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1769,
											"end": 1789,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "73"
										},
										{
											"begin": 1769,
											"end": 1789,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 1769,
											"end": 1789,
											"name": "tag",
											"source": 12,
											"value": "72"
										},
										{
											"begin": 1769,
											"end": 1789,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1769,
											"end": 1797,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "74"
										},
										{
											"begin": 1769,
											"end": 1797,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 1769,
											"end": 1797,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1769,
											"end": 1797,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "75"
										},
										{
											"begin": 1769,
											"end": 1797,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 1769,
											"end": 1797,
											"name": "tag",
											"source": 12,
											"value": "74"
										},
										{
											"begin": 1769,
											"end": 1797,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1748,
											"end": 1797,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1748,
											"end": 1797,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1864,
											"end": 1877,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 1970,
											"end": 1971,
											"name": "PUSH",
											"source": 12,
											"value": "1"
										},
										{
											"begin": 1964,
											"end": 1967,
											"name": "PUSH",
											"source": 12,
											"value": "64"
										},
										{
											"begin": 1951,
											"end": 1961,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 1951,
											"end": 1967,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "76"
										},
										{
											"begin": 1951,
											"end": 1967,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 1951,
											"end": 1967,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1951,
											"end": 1967,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "75"
										},
										{
											"begin": 1951,
											"end": 1967,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 1951,
											"end": 1967,
											"name": "tag",
											"source": 12,
											"value": "76"
										},
										{
											"begin": 1951,
											"end": 1967,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1951,
											"end": 1971,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "77"
										},
										{
											"begin": 1951,
											"end": 1971,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 1951,
											"end": 1971,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1951,
											"end": 1971,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "78"
										},
										{
											"begin": 1951,
											"end": 1971,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 1951,
											"end": 1971,
											"name": "tag",
											"source": 12,
											"value": "77"
										},
										{
											"begin": 1951,
											"end": 1971,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1915,
											"end": 1919,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 1921,
											"end": 1936,
											"name": "TIMESTAMP",
											"source": 12
										},
										{
											"begin": 1938,
											"end": 1944,
											"name": "DUP8",
											"source": 12
										},
										{
											"begin": 1898,
											"end": 1945,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 1898,
											"end": 1945,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 1898,
											"end": 1945,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 1898,
											"end": 1945,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 1898,
											"end": 1945,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "79"
										},
										{
											"begin": 1898,
											"end": 1945,
											"name": "SWAP4",
											"source": 12
										},
										{
											"begin": 1898,
											"end": 1945,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 1898,
											"end": 1945,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 1898,
											"end": 1945,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1898,
											"end": 1945,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "80"
										},
										{
											"begin": 1898,
											"end": 1945,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 1898,
											"end": 1945,
											"name": "tag",
											"source": 12,
											"value": "79"
										},
										{
											"begin": 1898,
											"end": 1945,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1898,
											"end": 1945,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 1898,
											"end": 1945,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 1898,
											"end": 1945,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 1898,
											"end": 1945,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 1898,
											"end": 1945,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 1898,
											"end": 1945,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 1898,
											"end": 1945,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 1898,
											"end": 1945,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 1898,
											"end": 1945,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 1898,
											"end": 1945,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1898,
											"end": 1945,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 1898,
											"end": 1945,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 1888,
											"end": 1946,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 1888,
											"end": 1946,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 1888,
											"end": 1946,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1888,
											"end": 1946,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 1888,
											"end": 1946,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 1888,
											"end": 1946,
											"name": "KECCAK256",
											"source": 12
										},
										{
											"begin": 1880,
											"end": 1947,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 1880,
											"end": 1947,
											"name": "SHR",
											"source": 12
										},
										{
											"begin": 1880,
											"end": 1972,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "81"
										},
										{
											"begin": 1880,
											"end": 1972,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 1880,
											"end": 1972,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1880,
											"end": 1972,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "82"
										},
										{
											"begin": 1880,
											"end": 1972,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 1880,
											"end": 1972,
											"name": "tag",
											"source": 12,
											"value": "81"
										},
										{
											"begin": 1880,
											"end": 1972,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1864,
											"end": 1972,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1864,
											"end": 1972,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1983,
											"end": 1997,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 2013,
											"end": 2018,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 2000,
											"end": 2010,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 2000,
											"end": 2018,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "83"
										},
										{
											"begin": 2000,
											"end": 2018,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 2000,
											"end": 2018,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 2000,
											"end": 2018,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "78"
										},
										{
											"begin": 2000,
											"end": 2018,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 2000,
											"end": 2018,
											"name": "tag",
											"source": 12,
											"value": "83"
										},
										{
											"begin": 2000,
											"end": 2018,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1983,
											"end": 2018,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1983,
											"end": 2018,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 2045,
											"end": 2060,
											"name": "PUSH",
											"source": 12,
											"value": "1"
										},
										{
											"begin": 2045,
											"end": 2060,
											"name": "SLOAD",
											"source": 12
										},
										{
											"begin": 2036,
											"end": 2042,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 2036,
											"end": 2060,
											"name": "GT",
											"source": 12
										},
										{
											"begin": 2036,
											"end": 2087,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "84"
										},
										{
											"begin": 2036,
											"end": 2087,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 2081,
											"end": 2087,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 2036,
											"end": 2087,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "85"
										},
										{
											"begin": 2036,
											"end": 2087,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 2036,
											"end": 2087,
											"name": "tag",
											"source": 12,
											"value": "84"
										},
										{
											"begin": 2036,
											"end": 2087,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2063,
											"end": 2078,
											"name": "PUSH",
											"source": 12,
											"value": "1"
										},
										{
											"begin": 2063,
											"end": 2078,
											"name": "SLOAD",
											"source": 12
										},
										{
											"begin": 2036,
											"end": 2087,
											"name": "tag",
											"source": 12,
											"value": "85"
										},
										{
											"begin": 2036,
											"end": 2087,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2029,
											"end": 2087,
											"name": "SWAP4",
											"source": 12
										},
										{
											"begin": 2029,
											"end": 2087,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 2029,
											"end": 2087,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 2029,
											"end": 2087,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 2029,
											"end": 2087,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1650,
											"end": 2095,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 1650,
											"end": 2095,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 1650,
											"end": 2095,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1650,
											"end": 2095,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1650,
											"end": 2095,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 525,
											"end": 552,
											"name": "tag",
											"source": 12,
											"value": "39"
										},
										{
											"begin": 525,
											"end": 552,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 525,
											"end": 552,
											"name": "PUSH",
											"source": 12,
											"value": "3"
										},
										{
											"begin": 525,
											"end": 552,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 525,
											"end": 552,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 525,
											"end": 552,
											"name": "SLOAD",
											"source": 12
										},
										{
											"begin": 525,
											"end": 552,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 525,
											"end": 552,
											"name": "PUSH",
											"source": 12,
											"value": "100"
										},
										{
											"begin": 525,
											"end": 552,
											"name": "EXP",
											"source": 12
										},
										{
											"begin": 525,
											"end": 552,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 525,
											"end": 552,
											"name": "DIV",
											"source": 12
										},
										{
											"begin": 525,
											"end": 552,
											"name": "PUSH",
											"source": 12,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 525,
											"end": 552,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 525,
											"end": 552,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 525,
											"end": 552,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 1191,
											"end": 1639,
											"name": "tag",
											"source": 12,
											"value": "44"
										},
										{
											"begin": 1191,
											"end": 1639,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1105,
											"end": 1112,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "87"
										},
										{
											"begin": 1105,
											"end": 1110,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "30"
										},
										{
											"begin": 1105,
											"end": 1112,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 1105,
											"end": 1112,
											"name": "tag",
											"source": 12,
											"value": "87"
										},
										{
											"begin": 1105,
											"end": 1112,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1091,
											"end": 1112,
											"name": "PUSH",
											"source": 12,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1091,
											"end": 1112,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 1091,
											"end": 1101,
											"name": "CALLER",
											"source": 12
										},
										{
											"begin": 1091,
											"end": 1112,
											"name": "PUSH",
											"source": 12,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1091,
											"end": 1112,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 1091,
											"end": 1112,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 1091,
											"end": 1142,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 1091,
											"end": 1142,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "88"
										},
										{
											"begin": 1091,
											"end": 1142,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 1091,
											"end": 1142,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1130,
											"end": 1142,
											"name": "PUSH",
											"source": 12,
											"value": "3"
										},
										{
											"begin": 1130,
											"end": 1142,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 1130,
											"end": 1142,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1130,
											"end": 1142,
											"name": "SLOAD",
											"source": 12
										},
										{
											"begin": 1130,
											"end": 1142,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1130,
											"end": 1142,
											"name": "PUSH",
											"source": 12,
											"value": "100"
										},
										{
											"begin": 1130,
											"end": 1142,
											"name": "EXP",
											"source": 12
										},
										{
											"begin": 1130,
											"end": 1142,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1130,
											"end": 1142,
											"name": "DIV",
											"source": 12
										},
										{
											"begin": 1130,
											"end": 1142,
											"name": "PUSH",
											"source": 12,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1130,
											"end": 1142,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 1116,
											"end": 1142,
											"name": "PUSH",
											"source": 12,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1116,
											"end": 1142,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 1116,
											"end": 1126,
											"name": "CALLER",
											"source": 12
										},
										{
											"begin": 1116,
											"end": 1142,
											"name": "PUSH",
											"source": 12,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1116,
											"end": 1142,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 1116,
											"end": 1142,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 1091,
											"end": 1142,
											"name": "tag",
											"source": 12,
											"value": "88"
										},
										{
											"begin": 1091,
											"end": 1142,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1083,
											"end": 1161,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "89"
										},
										{
											"begin": 1083,
											"end": 1161,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 1083,
											"end": 1161,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 1083,
											"end": 1161,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 1083,
											"end": 1161,
											"name": "PUSH",
											"source": 12,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1083,
											"end": 1161,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 1083,
											"end": 1161,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 1083,
											"end": 1161,
											"name": "PUSH",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 1083,
											"end": 1161,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 1083,
											"end": 1161,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "90"
										},
										{
											"begin": 1083,
											"end": 1161,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1083,
											"end": 1161,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "91"
										},
										{
											"begin": 1083,
											"end": 1161,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 1083,
											"end": 1161,
											"name": "tag",
											"source": 12,
											"value": "90"
										},
										{
											"begin": 1083,
											"end": 1161,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1083,
											"end": 1161,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 1083,
											"end": 1161,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 1083,
											"end": 1161,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 1083,
											"end": 1161,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 1083,
											"end": 1161,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 1083,
											"end": 1161,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1083,
											"end": 1161,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 1083,
											"end": 1161,
											"name": "tag",
											"source": 12,
											"value": "89"
										},
										{
											"begin": 1083,
											"end": 1161,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1323,
											"end": 1324,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 1307,
											"end": 1325,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1307,
											"end": 1325,
											"modifierDepth": 1,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 1307,
											"end": 1311,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 1307,
											"end": 1325,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1307,
											"end": 1325,
											"modifierDepth": 1,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 1307,
											"end": 1325,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 1299,
											"end": 1356,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "93"
										},
										{
											"begin": 1299,
											"end": 1356,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 1299,
											"end": 1356,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 1299,
											"end": 1356,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 1299,
											"end": 1356,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1299,
											"end": 1356,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 1299,
											"end": 1356,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 1299,
											"end": 1356,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 1299,
											"end": 1356,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 1299,
											"end": 1356,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "94"
										},
										{
											"begin": 1299,
											"end": 1356,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1299,
											"end": 1356,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "95"
										},
										{
											"begin": 1299,
											"end": 1356,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 1299,
											"end": 1356,
											"modifierDepth": 1,
											"name": "tag",
											"source": 12,
											"value": "94"
										},
										{
											"begin": 1299,
											"end": 1356,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1299,
											"end": 1356,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 1299,
											"end": 1356,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 1299,
											"end": 1356,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 1299,
											"end": 1356,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 1299,
											"end": 1356,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 1299,
											"end": 1356,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1299,
											"end": 1356,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 1299,
											"end": 1356,
											"modifierDepth": 1,
											"name": "tag",
											"source": 12,
											"value": "93"
										},
										{
											"begin": 1299,
											"end": 1356,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1384,
											"end": 1385,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 1375,
											"end": 1381,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 1375,
											"end": 1385,
											"modifierDepth": 1,
											"name": "GT",
											"source": 12
										},
										{
											"begin": 1367,
											"end": 1408,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "96"
										},
										{
											"begin": 1367,
											"end": 1408,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 1367,
											"end": 1408,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 1367,
											"end": 1408,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 1367,
											"end": 1408,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1367,
											"end": 1408,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 1367,
											"end": 1408,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 1367,
											"end": 1408,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 1367,
											"end": 1408,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 1367,
											"end": 1408,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "97"
										},
										{
											"begin": 1367,
											"end": 1408,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1367,
											"end": 1408,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "98"
										},
										{
											"begin": 1367,
											"end": 1408,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 1367,
											"end": 1408,
											"modifierDepth": 1,
											"name": "tag",
											"source": 12,
											"value": "97"
										},
										{
											"begin": 1367,
											"end": 1408,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1367,
											"end": 1408,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 1367,
											"end": 1408,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 1367,
											"end": 1408,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 1367,
											"end": 1408,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 1367,
											"end": 1408,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 1367,
											"end": 1408,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1367,
											"end": 1408,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 1367,
											"end": 1408,
											"modifierDepth": 1,
											"name": "tag",
											"source": 12,
											"value": "96"
										},
										{
											"begin": 1367,
											"end": 1408,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1467,
											"end": 1473,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 1427,
											"end": 1438,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "2"
										},
										{
											"begin": 1427,
											"end": 1438,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 1427,
											"end": 1438,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1427,
											"end": 1438,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 12
										},
										{
											"begin": 1427,
											"end": 1438,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1427,
											"end": 1438,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "100"
										},
										{
											"begin": 1427,
											"end": 1438,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 12
										},
										{
											"begin": 1427,
											"end": 1438,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1427,
											"end": 1438,
											"modifierDepth": 1,
											"name": "DIV",
											"source": 12
										},
										{
											"begin": 1427,
											"end": 1438,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1427,
											"end": 1438,
											"modifierDepth": 1,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 1427,
											"end": 1448,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1427,
											"end": 1448,
											"modifierDepth": 1,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 1427,
											"end": 1448,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "70A08231"
										},
										{
											"begin": 1457,
											"end": 1461,
											"modifierDepth": 1,
											"name": "ADDRESS",
											"source": 12
										},
										{
											"begin": 1427,
											"end": 1463,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 1427,
											"end": 1463,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 1427,
											"end": 1463,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 1427,
											"end": 1463,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "FFFFFFFF"
										},
										{
											"begin": 1427,
											"end": 1463,
											"modifierDepth": 1,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 1427,
											"end": 1463,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "E0"
										},
										{
											"begin": 1427,
											"end": 1463,
											"modifierDepth": 1,
											"name": "SHL",
											"source": 12
										},
										{
											"begin": 1427,
											"end": 1463,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 1427,
											"end": 1463,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 1427,
											"end": 1463,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 1427,
											"end": 1463,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 1427,
											"end": 1463,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "99"
										},
										{
											"begin": 1427,
											"end": 1463,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 1427,
											"end": 1463,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1427,
											"end": 1463,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "32"
										},
										{
											"begin": 1427,
											"end": 1463,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 1427,
											"end": 1463,
											"modifierDepth": 1,
											"name": "tag",
											"source": 12,
											"value": "99"
										},
										{
											"begin": 1427,
											"end": 1463,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1427,
											"end": 1463,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 1427,
											"end": 1463,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 1427,
											"end": 1463,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 1427,
											"end": 1463,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 1427,
											"end": 1463,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 1427,
											"end": 1463,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 1427,
											"end": 1463,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 1427,
											"end": 1463,
											"modifierDepth": 1,
											"name": "DUP7",
											"source": 12
										},
										{
											"begin": 1427,
											"end": 1463,
											"modifierDepth": 1,
											"name": "GAS",
											"source": 12
										},
										{
											"begin": 1427,
											"end": 1463,
											"modifierDepth": 1,
											"name": "STATICCALL",
											"source": 12
										},
										{
											"begin": 1427,
											"end": 1463,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 1427,
											"end": 1463,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 1427,
											"end": 1463,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 1427,
											"end": 1463,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "101"
										},
										{
											"begin": 1427,
											"end": 1463,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 1427,
											"end": 1463,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 12
										},
										{
											"begin": 1427,
											"end": 1463,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 1427,
											"end": 1463,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 1427,
											"end": 1463,
											"modifierDepth": 1,
											"name": "RETURNDATACOPY",
											"source": 12
										},
										{
											"begin": 1427,
											"end": 1463,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 12
										},
										{
											"begin": 1427,
											"end": 1463,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 1427,
											"end": 1463,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 1427,
											"end": 1463,
											"modifierDepth": 1,
											"name": "tag",
											"source": 12,
											"value": "101"
										},
										{
											"begin": 1427,
											"end": 1463,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1427,
											"end": 1463,
											"modifierDepth": 1,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1427,
											"end": 1463,
											"modifierDepth": 1,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1427,
											"end": 1463,
											"modifierDepth": 1,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1427,
											"end": 1463,
											"modifierDepth": 1,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1427,
											"end": 1463,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 1427,
											"end": 1463,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 1427,
											"end": 1463,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 12
										},
										{
											"begin": 1427,
											"end": 1463,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "1F"
										},
										{
											"begin": 1427,
											"end": 1463,
											"modifierDepth": 1,
											"name": "NOT",
											"source": 12
										},
										{
											"begin": 1427,
											"end": 1463,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "1F"
										},
										{
											"begin": 1427,
											"end": 1463,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 1427,
											"end": 1463,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 1427,
											"end": 1463,
											"modifierDepth": 1,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 1427,
											"end": 1463,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 1427,
											"end": 1463,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 1427,
											"end": 1463,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 1427,
											"end": 1463,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 1427,
											"end": 1463,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 1427,
											"end": 1463,
											"modifierDepth": 1,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1427,
											"end": 1463,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 1427,
											"end": 1463,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 1427,
											"end": 1463,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1427,
											"end": 1463,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "102"
										},
										{
											"begin": 1427,
											"end": 1463,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 1427,
											"end": 1463,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1427,
											"end": 1463,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "103"
										},
										{
											"begin": 1427,
											"end": 1463,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 1427,
											"end": 1463,
											"modifierDepth": 1,
											"name": "tag",
											"source": 12,
											"value": "102"
										},
										{
											"begin": 1427,
											"end": 1463,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1427,
											"end": 1473,
											"modifierDepth": 1,
											"name": "LT",
											"source": 12
										},
										{
											"begin": 1427,
											"end": 1473,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 1419,
											"end": 1505,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "104"
										},
										{
											"begin": 1419,
											"end": 1505,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 1419,
											"end": 1505,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 1419,
											"end": 1505,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 1419,
											"end": 1505,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1419,
											"end": 1505,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 1419,
											"end": 1505,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 1419,
											"end": 1505,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 1419,
											"end": 1505,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 1419,
											"end": 1505,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "105"
										},
										{
											"begin": 1419,
											"end": 1505,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1419,
											"end": 1505,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "106"
										},
										{
											"begin": 1419,
											"end": 1505,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 1419,
											"end": 1505,
											"modifierDepth": 1,
											"name": "tag",
											"source": 12,
											"value": "105"
										},
										{
											"begin": 1419,
											"end": 1505,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1419,
											"end": 1505,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 1419,
											"end": 1505,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 1419,
											"end": 1505,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 1419,
											"end": 1505,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 1419,
											"end": 1505,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 1419,
											"end": 1505,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1419,
											"end": 1505,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 1419,
											"end": 1505,
											"modifierDepth": 1,
											"name": "tag",
											"source": 12,
											"value": "104"
										},
										{
											"begin": 1419,
											"end": 1505,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1524,
											"end": 1535,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "2"
										},
										{
											"begin": 1524,
											"end": 1535,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 1524,
											"end": 1535,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1524,
											"end": 1535,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 12
										},
										{
											"begin": 1524,
											"end": 1535,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1524,
											"end": 1535,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "100"
										},
										{
											"begin": 1524,
											"end": 1535,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 12
										},
										{
											"begin": 1524,
											"end": 1535,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1524,
											"end": 1535,
											"modifierDepth": 1,
											"name": "DIV",
											"source": 12
										},
										{
											"begin": 1524,
											"end": 1535,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1524,
											"end": 1535,
											"modifierDepth": 1,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 1524,
											"end": 1544,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1524,
											"end": 1544,
											"modifierDepth": 1,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 1524,
											"end": 1544,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "A9059CBB"
										},
										{
											"begin": 1545,
											"end": 1549,
											"modifierDepth": 1,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 1551,
											"end": 1557,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 1524,
											"end": 1558,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 1524,
											"end": 1558,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 1524,
											"end": 1558,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 1524,
											"end": 1558,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "FFFFFFFF"
										},
										{
											"begin": 1524,
											"end": 1558,
											"modifierDepth": 1,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 1524,
											"end": 1558,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "E0"
										},
										{
											"begin": 1524,
											"end": 1558,
											"modifierDepth": 1,
											"name": "SHL",
											"source": 12
										},
										{
											"begin": 1524,
											"end": 1558,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 1524,
											"end": 1558,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 1524,
											"end": 1558,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 1524,
											"end": 1558,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 1524,
											"end": 1558,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "107"
										},
										{
											"begin": 1524,
											"end": 1558,
											"modifierDepth": 1,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 1524,
											"end": 1558,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 1524,
											"end": 1558,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1524,
											"end": 1558,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "108"
										},
										{
											"begin": 1524,
											"end": 1558,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 1524,
											"end": 1558,
											"modifierDepth": 1,
											"name": "tag",
											"source": 12,
											"value": "107"
										},
										{
											"begin": 1524,
											"end": 1558,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1524,
											"end": 1558,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 1524,
											"end": 1558,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 1524,
											"end": 1558,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 1524,
											"end": 1558,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 1524,
											"end": 1558,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 1524,
											"end": 1558,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 1524,
											"end": 1558,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 1524,
											"end": 1558,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 1524,
											"end": 1558,
											"modifierDepth": 1,
											"name": "DUP8",
											"source": 12
										},
										{
											"begin": 1524,
											"end": 1558,
											"modifierDepth": 1,
											"name": "GAS",
											"source": 12
										},
										{
											"begin": 1524,
											"end": 1558,
											"modifierDepth": 1,
											"name": "CALL",
											"source": 12
										},
										{
											"begin": 1524,
											"end": 1558,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 1524,
											"end": 1558,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 1524,
											"end": 1558,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 1524,
											"end": 1558,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "110"
										},
										{
											"begin": 1524,
											"end": 1558,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 1524,
											"end": 1558,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 12
										},
										{
											"begin": 1524,
											"end": 1558,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 1524,
											"end": 1558,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 1524,
											"end": 1558,
											"modifierDepth": 1,
											"name": "RETURNDATACOPY",
											"source": 12
										},
										{
											"begin": 1524,
											"end": 1558,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 12
										},
										{
											"begin": 1524,
											"end": 1558,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 1524,
											"end": 1558,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 1524,
											"end": 1558,
											"modifierDepth": 1,
											"name": "tag",
											"source": 12,
											"value": "110"
										},
										{
											"begin": 1524,
											"end": 1558,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1524,
											"end": 1558,
											"modifierDepth": 1,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1524,
											"end": 1558,
											"modifierDepth": 1,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1524,
											"end": 1558,
											"modifierDepth": 1,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1524,
											"end": 1558,
											"modifierDepth": 1,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1524,
											"end": 1558,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 1524,
											"end": 1558,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 1524,
											"end": 1558,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 12
										},
										{
											"begin": 1524,
											"end": 1558,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "1F"
										},
										{
											"begin": 1524,
											"end": 1558,
											"modifierDepth": 1,
											"name": "NOT",
											"source": 12
										},
										{
											"begin": 1524,
											"end": 1558,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "1F"
										},
										{
											"begin": 1524,
											"end": 1558,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 1524,
											"end": 1558,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 1524,
											"end": 1558,
											"modifierDepth": 1,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 1524,
											"end": 1558,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 1524,
											"end": 1558,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 1524,
											"end": 1558,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 1524,
											"end": 1558,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 1524,
											"end": 1558,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 1524,
											"end": 1558,
											"modifierDepth": 1,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1524,
											"end": 1558,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 1524,
											"end": 1558,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 1524,
											"end": 1558,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1524,
											"end": 1558,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "111"
										},
										{
											"begin": 1524,
											"end": 1558,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 1524,
											"end": 1558,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1524,
											"end": 1558,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "112"
										},
										{
											"begin": 1524,
											"end": 1558,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 1524,
											"end": 1558,
											"modifierDepth": 1,
											"name": "tag",
											"source": 12,
											"value": "111"
										},
										{
											"begin": 1524,
											"end": 1558,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1516,
											"end": 1584,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "113"
										},
										{
											"begin": 1516,
											"end": 1584,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 1516,
											"end": 1584,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 1516,
											"end": 1584,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 1516,
											"end": 1584,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1516,
											"end": 1584,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 1516,
											"end": 1584,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 1516,
											"end": 1584,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 1516,
											"end": 1584,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 1516,
											"end": 1584,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "114"
										},
										{
											"begin": 1516,
											"end": 1584,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1516,
											"end": 1584,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "115"
										},
										{
											"begin": 1516,
											"end": 1584,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 1516,
											"end": 1584,
											"modifierDepth": 1,
											"name": "tag",
											"source": 12,
											"value": "114"
										},
										{
											"begin": 1516,
											"end": 1584,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1516,
											"end": 1584,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 1516,
											"end": 1584,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 1516,
											"end": 1584,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 1516,
											"end": 1584,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 1516,
											"end": 1584,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 1516,
											"end": 1584,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1516,
											"end": 1584,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 1516,
											"end": 1584,
											"modifierDepth": 1,
											"name": "tag",
											"source": 12,
											"value": "113"
										},
										{
											"begin": 1516,
											"end": 1584,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1618,
											"end": 1622,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 1600,
											"end": 1631,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1600,
											"end": 1631,
											"modifierDepth": 1,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 1600,
											"end": 1631,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "E34918FF1C7084970068B53FD71AD6D8B04E9F15D3886CBF006443E6CDC52EA6"
										},
										{
											"begin": 1624,
											"end": 1630,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 1600,
											"end": 1631,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 1600,
											"end": 1631,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 1600,
											"end": 1631,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "116"
										},
										{
											"begin": 1600,
											"end": 1631,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 1600,
											"end": 1631,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1600,
											"end": 1631,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "19"
										},
										{
											"begin": 1600,
											"end": 1631,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 1600,
											"end": 1631,
											"modifierDepth": 1,
											"name": "tag",
											"source": 12,
											"value": "116"
										},
										{
											"begin": 1600,
											"end": 1631,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1600,
											"end": 1631,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 1600,
											"end": 1631,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 1600,
											"end": 1631,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 1600,
											"end": 1631,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 1600,
											"end": 1631,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 1600,
											"end": 1631,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1600,
											"end": 1631,
											"modifierDepth": 1,
											"name": "LOG2",
											"source": 12
										},
										{
											"begin": 1191,
											"end": 1639,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1191,
											"end": 1639,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1191,
											"end": 1639,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1191,
											"end": 1639,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 631,
											"end": 817,
											"name": "tag",
											"source": 12,
											"value": "48"
										},
										{
											"begin": 631,
											"end": 817,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 4158,
											"end": 4188,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4191,
											"end": 4217,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "118"
										},
										{
											"begin": 4191,
											"end": 4215,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "119"
										},
										{
											"begin": 4191,
											"end": 4217,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4191,
											"end": 4217,
											"name": "tag",
											"source": 1,
											"value": "118"
										},
										{
											"begin": 4191,
											"end": 4217,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4158,
											"end": 4217,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4158,
											"end": 4217,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4279,
											"end": 4298,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4302,
											"end": 4303,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4302,
											"end": 4317,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4302,
											"end": 4317,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4302,
											"end": 4317,
											"name": "PUSH",
											"source": 1,
											"value": "8"
										},
										{
											"begin": 4302,
											"end": 4317,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4302,
											"end": 4317,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 4302,
											"end": 4317,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4302,
											"end": 4317,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 4302,
											"end": 4317,
											"name": "EXP",
											"source": 1
										},
										{
											"begin": 4302,
											"end": 4317,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4302,
											"end": 4317,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 4302,
											"end": 4317,
											"name": "PUSH",
											"source": 1,
											"value": "FF"
										},
										{
											"begin": 4302,
											"end": 4317,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 4301,
											"end": 4317,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 4279,
											"end": 4317,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4279,
											"end": 4317,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4327,
											"end": 4345,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4348,
											"end": 4349,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4348,
											"end": 4362,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4348,
											"end": 4362,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4348,
											"end": 4362,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4348,
											"end": 4362,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4348,
											"end": 4362,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 4348,
											"end": 4362,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4348,
											"end": 4362,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 4348,
											"end": 4362,
											"name": "EXP",
											"source": 1
										},
										{
											"begin": 4348,
											"end": 4362,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4348,
											"end": 4362,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 4348,
											"end": 4362,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4348,
											"end": 4362,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 4327,
											"end": 4362,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4327,
											"end": 4362,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4704,
											"end": 4721,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4739,
											"end": 4740,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4724,
											"end": 4735,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4724,
											"end": 4740,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4724,
											"end": 4740,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 4724,
											"end": 4740,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 4724,
											"end": 4758,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4724,
											"end": 4758,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 4724,
											"end": 4758,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "120"
										},
										{
											"begin": 4724,
											"end": 4758,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 4724,
											"end": 4758,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4744,
											"end": 4758,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4724,
											"end": 4758,
											"name": "tag",
											"source": 1,
											"value": "120"
										},
										{
											"begin": 4724,
											"end": 4758,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4704,
											"end": 4758,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4704,
											"end": 4758,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4768,
											"end": 4785,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4803,
											"end": 4804,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 4788,
											"end": 4799,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 4788,
											"end": 4804,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4788,
											"end": 4804,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 4788,
											"end": 4804,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 4788,
											"end": 4838,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4788,
											"end": 4838,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 4788,
											"end": 4838,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "121"
										},
										{
											"begin": 4788,
											"end": 4838,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 4788,
											"end": 4838,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4837,
											"end": 4838,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4816,
											"end": 4820,
											"name": "ADDRESS",
											"source": 1
										},
										{
											"begin": 4808,
											"end": 4833,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4808,
											"end": 4833,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 4808,
											"end": 4833,
											"name": "EXTCODESIZE",
											"source": 1
										},
										{
											"begin": 4808,
											"end": 4838,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 4788,
											"end": 4838,
											"name": "tag",
											"source": 1,
											"value": "121"
										},
										{
											"begin": 4788,
											"end": 4838,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4768,
											"end": 4838,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4768,
											"end": 4838,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4854,
											"end": 4866,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4853,
											"end": 4866,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 4853,
											"end": 4883,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4853,
											"end": 4883,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 4853,
											"end": 4883,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "122"
										},
										{
											"begin": 4853,
											"end": 4883,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 4853,
											"end": 4883,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4871,
											"end": 4883,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4870,
											"end": 4883,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 4853,
											"end": 4883,
											"name": "tag",
											"source": 1,
											"value": "122"
										},
										{
											"begin": 4853,
											"end": 4883,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4849,
											"end": 4940,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 4849,
											"end": 4940,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "123"
										},
										{
											"begin": 4849,
											"end": 4940,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 4906,
											"end": 4929,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 4906,
											"end": 4929,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 4906,
											"end": 4929,
											"name": "PUSH",
											"source": 1,
											"value": "F92EE8A900000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 4906,
											"end": 4929,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4906,
											"end": 4929,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4906,
											"end": 4929,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 4906,
											"end": 4929,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4906,
											"end": 4929,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 4906,
											"end": 4929,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 4906,
											"end": 4929,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4906,
											"end": 4929,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4906,
											"end": 4929,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 4906,
											"end": 4929,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4906,
											"end": 4929,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 4849,
											"end": 4940,
											"name": "tag",
											"source": 1,
											"value": "123"
										},
										{
											"begin": 4849,
											"end": 4940,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4966,
											"end": 4967,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 4949,
											"end": 4950,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 4949,
											"end": 4963,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4949,
											"end": 4963,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4949,
											"end": 4963,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4949,
											"end": 4967,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 4949,
											"end": 4967,
											"name": "EXP",
											"source": 1
										},
										{
											"begin": 4949,
											"end": 4967,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4949,
											"end": 4967,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 4949,
											"end": 4967,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4949,
											"end": 4967,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4949,
											"end": 4967,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 4949,
											"end": 4967,
											"name": "NOT",
											"source": 1
										},
										{
											"begin": 4949,
											"end": 4967,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 4949,
											"end": 4967,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4949,
											"end": 4967,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 4949,
											"end": 4967,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4949,
											"end": 4967,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 4949,
											"end": 4967,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 4949,
											"end": 4967,
											"name": "OR",
											"source": 1
										},
										{
											"begin": 4949,
											"end": 4967,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4949,
											"end": 4967,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 4949,
											"end": 4967,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4981,
											"end": 4995,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 4977,
											"end": 5044,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 4977,
											"end": 5044,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "124"
										},
										{
											"begin": 4977,
											"end": 5044,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 5029,
											"end": 5033,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 5011,
											"end": 5012,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 5011,
											"end": 5026,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5011,
											"end": 5026,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5011,
											"end": 5026,
											"name": "PUSH",
											"source": 1,
											"value": "8"
										},
										{
											"begin": 5011,
											"end": 5033,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 5011,
											"end": 5033,
											"name": "EXP",
											"source": 1
										},
										{
											"begin": 5011,
											"end": 5033,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5011,
											"end": 5033,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 5011,
											"end": 5033,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5011,
											"end": 5033,
											"name": "PUSH",
											"source": 1,
											"value": "FF"
										},
										{
											"begin": 5011,
											"end": 5033,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 5011,
											"end": 5033,
											"name": "NOT",
											"source": 1
										},
										{
											"begin": 5011,
											"end": 5033,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 5011,
											"end": 5033,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5011,
											"end": 5033,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 5011,
											"end": 5033,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 5011,
											"end": 5033,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 5011,
											"end": 5033,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 5011,
											"end": 5033,
											"name": "OR",
											"source": 1
										},
										{
											"begin": 5011,
											"end": 5033,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5011,
											"end": 5033,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 5011,
											"end": 5033,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4977,
											"end": 5044,
											"name": "tag",
											"source": 1,
											"value": "124"
										},
										{
											"begin": 4977,
											"end": 5044,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 715,
											"end": 741,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "126"
										},
										{
											"begin": 730,
											"end": 740,
											"modifierDepth": 1,
											"name": "CALLER",
											"source": 12
										},
										{
											"begin": 715,
											"end": 729,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "127"
										},
										{
											"begin": 715,
											"end": 741,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 715,
											"end": 741,
											"modifierDepth": 1,
											"name": "tag",
											"source": 12,
											"value": "126"
										},
										{
											"begin": 715,
											"end": 741,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 766,
											"end": 770,
											"modifierDepth": 1,
											"name": "DUP7",
											"source": 12
										},
										{
											"begin": 752,
											"end": 763,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 752,
											"end": 770,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 752,
											"end": 770,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 752,
											"end": 770,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 12
										},
										{
											"begin": 752,
											"end": 770,
											"modifierDepth": 1,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 799,
											"end": 809,
											"modifierDepth": 1,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 781,
											"end": 796,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "1"
										},
										{
											"begin": 781,
											"end": 809,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 781,
											"end": 809,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 781,
											"end": 809,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 12
										},
										{
											"begin": 781,
											"end": 809,
											"modifierDepth": 1,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 5068,
											"end": 5082,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 5064,
											"end": 5165,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 5064,
											"end": 5165,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "128"
										},
										{
											"begin": 5064,
											"end": 5165,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 5116,
											"end": 5121,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5098,
											"end": 5099,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 5098,
											"end": 5113,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5098,
											"end": 5113,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5098,
											"end": 5113,
											"name": "PUSH",
											"source": 1,
											"value": "8"
										},
										{
											"begin": 5098,
											"end": 5121,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 5098,
											"end": 5121,
											"name": "EXP",
											"source": 1
										},
										{
											"begin": 5098,
											"end": 5121,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5098,
											"end": 5121,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 5098,
											"end": 5121,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5098,
											"end": 5121,
											"name": "PUSH",
											"source": 1,
											"value": "FF"
										},
										{
											"begin": 5098,
											"end": 5121,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 5098,
											"end": 5121,
											"name": "NOT",
											"source": 1
										},
										{
											"begin": 5098,
											"end": 5121,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 5098,
											"end": 5121,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5098,
											"end": 5121,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 5098,
											"end": 5121,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 5098,
											"end": 5121,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 5098,
											"end": 5121,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 5098,
											"end": 5121,
											"name": "OR",
											"source": 1
										},
										{
											"begin": 5098,
											"end": 5121,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5098,
											"end": 5121,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 5098,
											"end": 5121,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5140,
											"end": 5154,
											"name": "PUSH",
											"source": 1,
											"value": "C7F505B2F371AE2175EE4913F4499E1F2633A7B5936321EED1CDAEB6115181D2"
										},
										{
											"begin": 5152,
											"end": 5153,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 5140,
											"end": 5154,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 5140,
											"end": 5154,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 5140,
											"end": 5154,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "129"
										},
										{
											"begin": 5140,
											"end": 5154,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 5140,
											"end": 5154,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5140,
											"end": 5154,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "130"
										},
										{
											"begin": 5140,
											"end": 5154,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5140,
											"end": 5154,
											"name": "tag",
											"source": 1,
											"value": "129"
										},
										{
											"begin": 5140,
											"end": 5154,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5140,
											"end": 5154,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 5140,
											"end": 5154,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 5140,
											"end": 5154,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 5140,
											"end": 5154,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 5140,
											"end": 5154,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 5140,
											"end": 5154,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5140,
											"end": 5154,
											"name": "LOG1",
											"source": 1
										},
										{
											"begin": 5064,
											"end": 5165,
											"name": "tag",
											"source": 1,
											"value": "128"
										},
										{
											"begin": 5064,
											"end": 5165,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4092,
											"end": 5171,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4092,
											"end": 5171,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4092,
											"end": 5171,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4092,
											"end": 5171,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4092,
											"end": 5171,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 631,
											"end": 817,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 631,
											"end": 817,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 631,
											"end": 817,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 3405,
											"end": 3620,
											"name": "tag",
											"source": 0,
											"value": "51"
										},
										{
											"begin": 3405,
											"end": 3620,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2334,
											"end": 2347,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "132"
										},
										{
											"begin": 2334,
											"end": 2345,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "61"
										},
										{
											"begin": 2334,
											"end": 2347,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2334,
											"end": 2347,
											"name": "tag",
											"source": 0,
											"value": "132"
										},
										{
											"begin": 2334,
											"end": 2347,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3509,
											"end": 3510,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3489,
											"end": 3511,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3489,
											"end": 3511,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3489,
											"end": 3497,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3489,
											"end": 3511,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3489,
											"end": 3511,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3489,
											"end": 3511,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 3485,
											"end": 3576,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "134"
										},
										{
											"begin": 3485,
											"end": 3576,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 3562,
											"end": 3563,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3534,
											"end": 3565,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3534,
											"end": 3565,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3534,
											"end": 3565,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "1E4FBDF700000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 3534,
											"end": 3565,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3534,
											"end": 3565,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3534,
											"end": 3565,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 3534,
											"end": 3565,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3534,
											"end": 3565,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "135"
										},
										{
											"begin": 3534,
											"end": 3565,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3534,
											"end": 3565,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3534,
											"end": 3565,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "32"
										},
										{
											"begin": 3534,
											"end": 3565,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3534,
											"end": 3565,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "135"
										},
										{
											"begin": 3534,
											"end": 3565,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3534,
											"end": 3565,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3534,
											"end": 3565,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3534,
											"end": 3565,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3534,
											"end": 3565,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3534,
											"end": 3565,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 3534,
											"end": 3565,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3534,
											"end": 3565,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 3485,
											"end": 3576,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "134"
										},
										{
											"begin": 3485,
											"end": 3576,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3585,
											"end": 3613,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "136"
										},
										{
											"begin": 3604,
											"end": 3612,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3585,
											"end": 3603,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 3585,
											"end": 3613,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3585,
											"end": 3613,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "136"
										},
										{
											"begin": 3585,
											"end": 3613,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3405,
											"end": 3620,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3405,
											"end": 3620,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 493,
											"end": 518,
											"name": "tag",
											"source": 12,
											"value": "53"
										},
										{
											"begin": 493,
											"end": 518,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 493,
											"end": 518,
											"name": "PUSH",
											"source": 12,
											"value": "2"
										},
										{
											"begin": 493,
											"end": 518,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 493,
											"end": 518,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 493,
											"end": 518,
											"name": "SLOAD",
											"source": 12
										},
										{
											"begin": 493,
											"end": 518,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 493,
											"end": 518,
											"name": "PUSH",
											"source": 12,
											"value": "100"
										},
										{
											"begin": 493,
											"end": 518,
											"name": "EXP",
											"source": 12
										},
										{
											"begin": 493,
											"end": 518,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 493,
											"end": 518,
											"name": "DIV",
											"source": 12
										},
										{
											"begin": 493,
											"end": 518,
											"name": "PUSH",
											"source": 12,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 493,
											"end": 518,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 493,
											"end": 518,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 493,
											"end": 518,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 825,
											"end": 923,
											"name": "tag",
											"source": 12,
											"value": "58"
										},
										{
											"begin": 825,
											"end": 923,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2334,
											"end": 2347,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "138"
										},
										{
											"begin": 2334,
											"end": 2345,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "61"
										},
										{
											"begin": 2334,
											"end": 2347,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2334,
											"end": 2347,
											"name": "tag",
											"source": 0,
											"value": "138"
										},
										{
											"begin": 2334,
											"end": 2347,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 910,
											"end": 915,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 895,
											"end": 907,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "3"
										},
										{
											"begin": 895,
											"end": 907,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 895,
											"end": 915,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "100"
										},
										{
											"begin": 895,
											"end": 915,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 12
										},
										{
											"begin": 895,
											"end": 915,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 895,
											"end": 915,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 12
										},
										{
											"begin": 895,
											"end": 915,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 895,
											"end": 915,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 895,
											"end": 915,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 12
										},
										{
											"begin": 895,
											"end": 915,
											"modifierDepth": 1,
											"name": "NOT",
											"source": 12
										},
										{
											"begin": 895,
											"end": 915,
											"modifierDepth": 1,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 895,
											"end": 915,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 895,
											"end": 915,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 895,
											"end": 915,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 895,
											"end": 915,
											"modifierDepth": 1,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 895,
											"end": 915,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 12
										},
										{
											"begin": 895,
											"end": 915,
											"modifierDepth": 1,
											"name": "OR",
											"source": 12
										},
										{
											"begin": 895,
											"end": 915,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 895,
											"end": 915,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 12
										},
										{
											"begin": 895,
											"end": 915,
											"modifierDepth": 1,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 825,
											"end": 923,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 825,
											"end": 923,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 2658,
											"end": 2820,
											"name": "tag",
											"source": 0,
											"value": "61"
										},
										{
											"begin": 2658,
											"end": 2820,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2728,
											"end": 2740,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "141"
										},
										{
											"begin": 2728,
											"end": 2738,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "142"
										},
										{
											"begin": 2728,
											"end": 2740,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2728,
											"end": 2740,
											"name": "tag",
											"source": 0,
											"value": "141"
										},
										{
											"begin": 2728,
											"end": 2740,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2717,
											"end": 2740,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2717,
											"end": 2740,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2717,
											"end": 2724,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "143"
										},
										{
											"begin": 2717,
											"end": 2722,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "30"
										},
										{
											"begin": 2717,
											"end": 2724,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2717,
											"end": 2724,
											"name": "tag",
											"source": 0,
											"value": "143"
										},
										{
											"begin": 2717,
											"end": 2724,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2717,
											"end": 2740,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2717,
											"end": 2740,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2717,
											"end": 2740,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 2713,
											"end": 2814,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "144"
										},
										{
											"begin": 2713,
											"end": 2814,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2790,
											"end": 2802,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "145"
										},
										{
											"begin": 2790,
											"end": 2800,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "142"
										},
										{
											"begin": 2790,
											"end": 2802,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2790,
											"end": 2802,
											"name": "tag",
											"source": 0,
											"value": "145"
										},
										{
											"begin": 2790,
											"end": 2802,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2763,
											"end": 2803,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2763,
											"end": 2803,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2763,
											"end": 2803,
											"name": "PUSH",
											"source": 0,
											"value": "118CDAA700000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2763,
											"end": 2803,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2763,
											"end": 2803,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2763,
											"end": 2803,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2763,
											"end": 2803,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2763,
											"end": 2803,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "146"
										},
										{
											"begin": 2763,
											"end": 2803,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2763,
											"end": 2803,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2763,
											"end": 2803,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "32"
										},
										{
											"begin": 2763,
											"end": 2803,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2763,
											"end": 2803,
											"name": "tag",
											"source": 0,
											"value": "146"
										},
										{
											"begin": 2763,
											"end": 2803,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2763,
											"end": 2803,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2763,
											"end": 2803,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2763,
											"end": 2803,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2763,
											"end": 2803,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2763,
											"end": 2803,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2763,
											"end": 2803,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2763,
											"end": 2803,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 2713,
											"end": 2814,
											"name": "tag",
											"source": 0,
											"value": "144"
										},
										{
											"begin": 2713,
											"end": 2814,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2658,
											"end": 2820,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3774,
											"end": 4022,
											"name": "tag",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 3774,
											"end": 4022,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3847,
											"end": 3871,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3874,
											"end": 3894,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "148"
										},
										{
											"begin": 3874,
											"end": 3892,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "70"
										},
										{
											"begin": 3874,
											"end": 3894,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3874,
											"end": 3894,
											"name": "tag",
											"source": 0,
											"value": "148"
										},
										{
											"begin": 3874,
											"end": 3894,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3847,
											"end": 3894,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3847,
											"end": 3894,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3904,
											"end": 3920,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3923,
											"end": 3924,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3923,
											"end": 3931,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3923,
											"end": 3931,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3923,
											"end": 3931,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3923,
											"end": 3931,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3923,
											"end": 3931,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 3923,
											"end": 3931,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3923,
											"end": 3931,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 3923,
											"end": 3931,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 3923,
											"end": 3931,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3923,
											"end": 3931,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 3923,
											"end": 3931,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3923,
											"end": 3931,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3904,
											"end": 3931,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3904,
											"end": 3931,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3952,
											"end": 3960,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 3941,
											"end": 3942,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 3941,
											"end": 3949,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3941,
											"end": 3949,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3941,
											"end": 3949,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3941,
											"end": 3960,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 3941,
											"end": 3960,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 3941,
											"end": 3960,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3941,
											"end": 3960,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 3941,
											"end": 3960,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3941,
											"end": 3960,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3941,
											"end": 3960,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 3941,
											"end": 3960,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 3941,
											"end": 3960,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3941,
											"end": 3960,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3941,
											"end": 3960,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 3941,
											"end": 3960,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3941,
											"end": 3960,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3941,
											"end": 3960,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 3941,
											"end": 3960,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 3941,
											"end": 3960,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3941,
											"end": 3960,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 3941,
											"end": 3960,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4006,
											"end": 4014,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 3975,
											"end": 4015,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3975,
											"end": 4015,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3996,
											"end": 4004,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3975,
											"end": 4015,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3975,
											"end": 4015,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3975,
											"end": 4015,
											"name": "PUSH",
											"source": 0,
											"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
										},
										{
											"begin": 3975,
											"end": 4015,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3975,
											"end": 4015,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3975,
											"end": 4015,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3975,
											"end": 4015,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3975,
											"end": 4015,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3975,
											"end": 4015,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3975,
											"end": 4015,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 3975,
											"end": 4015,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3975,
											"end": 4015,
											"name": "LOG3",
											"source": 0
										},
										{
											"begin": 3837,
											"end": 4022,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3837,
											"end": 4022,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3774,
											"end": 4022,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3774,
											"end": 4022,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1192,
											"end": 1351,
											"name": "tag",
											"source": 0,
											"value": "70"
										},
										{
											"begin": 1192,
											"end": 1351,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1244,
											"end": 1268,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1313,
											"end": 1335,
											"name": "PUSH",
											"source": 0,
											"value": "9016D09D72D40FDAE2FD8CEAC6B6234C7706214FD39C1CD1E609A0528C199300"
										},
										{
											"begin": 1303,
											"end": 1335,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1303,
											"end": 1335,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1192,
											"end": 1351,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1192,
											"end": 1351,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 9071,
											"end": 9276,
											"name": "tag",
											"source": 1,
											"value": "119"
										},
										{
											"begin": 9071,
											"end": 9276,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 9129,
											"end": 9159,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 9171,
											"end": 9183,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 9186,
											"end": 9213,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "151"
										},
										{
											"begin": 9186,
											"end": 9211,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "152"
										},
										{
											"begin": 9186,
											"end": 9213,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 9186,
											"end": 9213,
											"name": "tag",
											"source": 1,
											"value": "151"
										},
										{
											"begin": 9186,
											"end": 9213,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 9171,
											"end": 9213,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 9171,
											"end": 9213,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 9256,
											"end": 9260,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 9246,
											"end": 9260,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 9246,
											"end": 9260,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 9232,
											"end": 9270,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 9071,
											"end": 9276,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 9071,
											"end": 9276,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1847,
											"end": 1974,
											"name": "tag",
											"source": 0,
											"value": "127"
										},
										{
											"begin": 1847,
											"end": 1974,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6929,
											"end": 6949,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "154"
										},
										{
											"begin": 6929,
											"end": 6947,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "155"
										},
										{
											"begin": 6929,
											"end": 6949,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6929,
											"end": 6949,
											"name": "tag",
											"source": 1,
											"value": "154"
										},
										{
											"begin": 6929,
											"end": 6949,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1929,
											"end": 1967,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "157"
										},
										{
											"begin": 1954,
											"end": 1966,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1929,
											"end": 1953,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "158"
										},
										{
											"begin": 1929,
											"end": 1967,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1929,
											"end": 1967,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "157"
										},
										{
											"begin": 1929,
											"end": 1967,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1847,
											"end": 1974,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1847,
											"end": 1974,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 887,
											"end": 983,
											"name": "tag",
											"source": 3,
											"value": "142"
										},
										{
											"begin": 887,
											"end": 983,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 940,
											"end": 947,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 966,
											"end": 976,
											"name": "CALLER",
											"source": 3
										},
										{
											"begin": 959,
											"end": 976,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 959,
											"end": 976,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 887,
											"end": 983,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 887,
											"end": 983,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 8819,
											"end": 8941,
											"name": "tag",
											"source": 1,
											"value": "152"
										},
										{
											"begin": 8819,
											"end": 8941,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8887,
											"end": 8894,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3147,
											"end": 3213,
											"name": "PUSH",
											"source": 1,
											"value": "F0C57E16840DF040F15088DC2F81FE391C3923BEC73E23A9662EFC9C229C6A00"
										},
										{
											"begin": 8913,
											"end": 8934,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 8913,
											"end": 8934,
											"name": "SHL",
											"source": 1
										},
										{
											"begin": 8906,
											"end": 8934,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 8906,
											"end": 8934,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 8819,
											"end": 8941,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 8819,
											"end": 8941,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 7082,
											"end": 7223,
											"name": "tag",
											"source": 1,
											"value": "155"
										},
										{
											"begin": 7082,
											"end": 7223,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7149,
											"end": 7166,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "162"
										},
										{
											"begin": 7149,
											"end": 7164,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "163"
										},
										{
											"begin": 7149,
											"end": 7166,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 7149,
											"end": 7166,
											"name": "tag",
											"source": 1,
											"value": "162"
										},
										{
											"begin": 7149,
											"end": 7166,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7144,
											"end": 7217,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "164"
										},
										{
											"begin": 7144,
											"end": 7217,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 7189,
											"end": 7206,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 7189,
											"end": 7206,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 7189,
											"end": 7206,
											"name": "PUSH",
											"source": 1,
											"value": "D7E6BCF800000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 7189,
											"end": 7206,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7189,
											"end": 7206,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 7189,
											"end": 7206,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 7189,
											"end": 7206,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7189,
											"end": 7206,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 7189,
											"end": 7206,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 7189,
											"end": 7206,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 7189,
											"end": 7206,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 7189,
											"end": 7206,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 7189,
											"end": 7206,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7189,
											"end": 7206,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 7144,
											"end": 7217,
											"name": "tag",
											"source": 1,
											"value": "164"
										},
										{
											"begin": 7144,
											"end": 7217,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7082,
											"end": 7223,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1980,
											"end": 2215,
											"name": "tag",
											"source": 0,
											"value": "158"
										},
										{
											"begin": 1980,
											"end": 2215,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6929,
											"end": 6949,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "166"
										},
										{
											"begin": 6929,
											"end": 6947,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "155"
										},
										{
											"begin": 6929,
											"end": 6949,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6929,
											"end": 6949,
											"name": "tag",
											"source": 1,
											"value": "166"
										},
										{
											"begin": 6929,
											"end": 6949,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2100,
											"end": 2101,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2076,
											"end": 2102,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2076,
											"end": 2102,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2076,
											"end": 2088,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2076,
											"end": 2102,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2076,
											"end": 2102,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2076,
											"end": 2102,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2072,
											"end": 2167,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "168"
										},
										{
											"begin": 2072,
											"end": 2167,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2153,
											"end": 2154,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2125,
											"end": 2156,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2125,
											"end": 2156,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2125,
											"end": 2156,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "1E4FBDF700000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2125,
											"end": 2156,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2125,
											"end": 2156,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2125,
											"end": 2156,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2125,
											"end": 2156,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2125,
											"end": 2156,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "169"
										},
										{
											"begin": 2125,
											"end": 2156,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2125,
											"end": 2156,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2125,
											"end": 2156,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "32"
										},
										{
											"begin": 2125,
											"end": 2156,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2125,
											"end": 2156,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "169"
										},
										{
											"begin": 2125,
											"end": 2156,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2125,
											"end": 2156,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2125,
											"end": 2156,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2125,
											"end": 2156,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2125,
											"end": 2156,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2125,
											"end": 2156,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2125,
											"end": 2156,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2125,
											"end": 2156,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 2072,
											"end": 2167,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "168"
										},
										{
											"begin": 2072,
											"end": 2167,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2176,
											"end": 2208,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "170"
										},
										{
											"begin": 2195,
											"end": 2207,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2176,
											"end": 2194,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 2176,
											"end": 2208,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2176,
											"end": 2208,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "170"
										},
										{
											"begin": 2176,
											"end": 2208,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1980,
											"end": 2215,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1980,
											"end": 2215,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 8485,
											"end": 8605,
											"name": "tag",
											"source": 1,
											"value": "163"
										},
										{
											"begin": 8485,
											"end": 8605,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8535,
											"end": 8539,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 8558,
											"end": 8584,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "172"
										},
										{
											"begin": 8558,
											"end": 8582,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "119"
										},
										{
											"begin": 8558,
											"end": 8584,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 8558,
											"end": 8584,
											"name": "tag",
											"source": 1,
											"value": "172"
										},
										{
											"begin": 8558,
											"end": 8584,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8558,
											"end": 8598,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 8558,
											"end": 8598,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 8558,
											"end": 8598,
											"name": "PUSH",
											"source": 1,
											"value": "8"
										},
										{
											"begin": 8558,
											"end": 8598,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 8558,
											"end": 8598,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 8558,
											"end": 8598,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 8558,
											"end": 8598,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 8558,
											"end": 8598,
											"name": "EXP",
											"source": 1
										},
										{
											"begin": 8558,
											"end": 8598,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 8558,
											"end": 8598,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 8558,
											"end": 8598,
											"name": "PUSH",
											"source": 1,
											"value": "FF"
										},
										{
											"begin": 8558,
											"end": 8598,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 8551,
											"end": 8598,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 8551,
											"end": 8598,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 8485,
											"end": 8605,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 8485,
											"end": 8605,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 7,
											"end": 84,
											"name": "tag",
											"source": 13,
											"value": "173"
										},
										{
											"begin": 7,
											"end": 84,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 44,
											"end": 51,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 73,
											"end": 78,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 62,
											"end": 78,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 62,
											"end": 78,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 7,
											"end": 84,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 7,
											"end": 84,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 7,
											"end": 84,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 7,
											"end": 84,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 90,
											"end": 208,
											"name": "tag",
											"source": 13,
											"value": "174"
										},
										{
											"begin": 90,
											"end": 208,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 177,
											"end": 201,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "220"
										},
										{
											"begin": 195,
											"end": 200,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 177,
											"end": 201,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "173"
										},
										{
											"begin": 177,
											"end": 201,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 177,
											"end": 201,
											"name": "tag",
											"source": 13,
											"value": "220"
										},
										{
											"begin": 177,
											"end": 201,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 172,
											"end": 175,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 165,
											"end": 202,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 90,
											"end": 208,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 90,
											"end": 208,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 90,
											"end": 208,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 214,
											"end": 436,
											"name": "tag",
											"source": 13,
											"value": "19"
										},
										{
											"begin": 214,
											"end": 436,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 307,
											"end": 311,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 345,
											"end": 347,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 334,
											"end": 343,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 330,
											"end": 348,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 322,
											"end": 348,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 322,
											"end": 348,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 358,
											"end": 429,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "222"
										},
										{
											"begin": 426,
											"end": 427,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 415,
											"end": 424,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 411,
											"end": 428,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 402,
											"end": 408,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 358,
											"end": 429,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "174"
										},
										{
											"begin": 358,
											"end": 429,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 358,
											"end": 429,
											"name": "tag",
											"source": 13,
											"value": "222"
										},
										{
											"begin": 358,
											"end": 429,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 214,
											"end": 436,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 214,
											"end": 436,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 214,
											"end": 436,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 214,
											"end": 436,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 214,
											"end": 436,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 523,
											"end": 640,
											"name": "tag",
											"source": 13,
											"value": "176"
										},
										{
											"begin": 523,
											"end": 640,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 632,
											"end": 633,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 629,
											"end": 630,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 622,
											"end": 634,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 769,
											"end": 895,
											"name": "tag",
											"source": 13,
											"value": "178"
										},
										{
											"begin": 769,
											"end": 895,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 806,
											"end": 813,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 846,
											"end": 888,
											"name": "PUSH",
											"source": 13,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 839,
											"end": 844,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 835,
											"end": 889,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 824,
											"end": 889,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 824,
											"end": 889,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 769,
											"end": 895,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 769,
											"end": 895,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 769,
											"end": 895,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 769,
											"end": 895,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 901,
											"end": 997,
											"name": "tag",
											"source": 13,
											"value": "179"
										},
										{
											"begin": 901,
											"end": 997,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 938,
											"end": 945,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 967,
											"end": 991,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "228"
										},
										{
											"begin": 985,
											"end": 990,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 967,
											"end": 991,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "178"
										},
										{
											"begin": 967,
											"end": 991,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 967,
											"end": 991,
											"name": "tag",
											"source": 13,
											"value": "228"
										},
										{
											"begin": 967,
											"end": 991,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 956,
											"end": 991,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 956,
											"end": 991,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 901,
											"end": 997,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 901,
											"end": 997,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 901,
											"end": 997,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 901,
											"end": 997,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 1003,
											"end": 1125,
											"name": "tag",
											"source": 13,
											"value": "180"
										},
										{
											"begin": 1003,
											"end": 1125,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1076,
											"end": 1100,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "230"
										},
										{
											"begin": 1094,
											"end": 1099,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 1076,
											"end": 1100,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "179"
										},
										{
											"begin": 1076,
											"end": 1100,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 1076,
											"end": 1100,
											"name": "tag",
											"source": 13,
											"value": "230"
										},
										{
											"begin": 1076,
											"end": 1100,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1069,
											"end": 1074,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 1066,
											"end": 1101,
											"name": "EQ",
											"source": 13
										},
										{
											"begin": 1056,
											"end": 1119,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "231"
										},
										{
											"begin": 1056,
											"end": 1119,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 1115,
											"end": 1116,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 1112,
											"end": 1113,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 1105,
											"end": 1117,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 1056,
											"end": 1119,
											"name": "tag",
											"source": 13,
											"value": "231"
										},
										{
											"begin": 1056,
											"end": 1119,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1003,
											"end": 1125,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1003,
											"end": 1125,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 1131,
											"end": 1270,
											"name": "tag",
											"source": 13,
											"value": "181"
										},
										{
											"begin": 1131,
											"end": 1270,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1177,
											"end": 1182,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 1215,
											"end": 1221,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 1202,
											"end": 1222,
											"name": "CALLDATALOAD",
											"source": 13
										},
										{
											"begin": 1193,
											"end": 1222,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 1193,
											"end": 1222,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1231,
											"end": 1264,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "233"
										},
										{
											"begin": 1258,
											"end": 1263,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 1231,
											"end": 1264,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "180"
										},
										{
											"begin": 1231,
											"end": 1264,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 1231,
											"end": 1264,
											"name": "tag",
											"source": 13,
											"value": "233"
										},
										{
											"begin": 1231,
											"end": 1264,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1131,
											"end": 1270,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 1131,
											"end": 1270,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 1131,
											"end": 1270,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1131,
											"end": 1270,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1131,
											"end": 1270,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 1276,
											"end": 1605,
											"name": "tag",
											"source": 13,
											"value": "27"
										},
										{
											"begin": 1276,
											"end": 1605,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1335,
											"end": 1341,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 1384,
											"end": 1386,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 1372,
											"end": 1381,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 1363,
											"end": 1370,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 1359,
											"end": 1382,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 1355,
											"end": 1387,
											"name": "SLT",
											"source": 13
										},
										{
											"begin": 1352,
											"end": 1471,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 1352,
											"end": 1471,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "235"
										},
										{
											"begin": 1352,
											"end": 1471,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 1390,
											"end": 1469,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "236"
										},
										{
											"begin": 1390,
											"end": 1469,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "176"
										},
										{
											"begin": 1390,
											"end": 1469,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 1390,
											"end": 1469,
											"name": "tag",
											"source": 13,
											"value": "236"
										},
										{
											"begin": 1390,
											"end": 1469,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1352,
											"end": 1471,
											"name": "tag",
											"source": 13,
											"value": "235"
										},
										{
											"begin": 1352,
											"end": 1471,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1510,
											"end": 1511,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 1535,
											"end": 1588,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "237"
										},
										{
											"begin": 1580,
											"end": 1587,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 1571,
											"end": 1577,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 1560,
											"end": 1569,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 1556,
											"end": 1578,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 1535,
											"end": 1588,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "181"
										},
										{
											"begin": 1535,
											"end": 1588,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 1535,
											"end": 1588,
											"name": "tag",
											"source": 13,
											"value": "237"
										},
										{
											"begin": 1535,
											"end": 1588,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1525,
											"end": 1588,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 1525,
											"end": 1588,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1481,
											"end": 1598,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1276,
											"end": 1605,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 1276,
											"end": 1605,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 1276,
											"end": 1605,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1276,
											"end": 1605,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1276,
											"end": 1605,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 1611,
											"end": 1729,
											"name": "tag",
											"source": 13,
											"value": "182"
										},
										{
											"begin": 1611,
											"end": 1729,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1698,
											"end": 1722,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "239"
										},
										{
											"begin": 1716,
											"end": 1721,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 1698,
											"end": 1722,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "179"
										},
										{
											"begin": 1698,
											"end": 1722,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 1698,
											"end": 1722,
											"name": "tag",
											"source": 13,
											"value": "239"
										},
										{
											"begin": 1698,
											"end": 1722,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1693,
											"end": 1696,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 1686,
											"end": 1723,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 1611,
											"end": 1729,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1611,
											"end": 1729,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1611,
											"end": 1729,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 1735,
											"end": 1957,
											"name": "tag",
											"source": 13,
											"value": "32"
										},
										{
											"begin": 1735,
											"end": 1957,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1828,
											"end": 1832,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 1866,
											"end": 1868,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 1855,
											"end": 1864,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 1851,
											"end": 1869,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 1843,
											"end": 1869,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 1843,
											"end": 1869,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1879,
											"end": 1950,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "241"
										},
										{
											"begin": 1947,
											"end": 1948,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 1936,
											"end": 1945,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 1932,
											"end": 1949,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 1923,
											"end": 1929,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 1879,
											"end": 1950,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "182"
										},
										{
											"begin": 1879,
											"end": 1950,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 1879,
											"end": 1950,
											"name": "tag",
											"source": 13,
											"value": "241"
										},
										{
											"begin": 1879,
											"end": 1950,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1735,
											"end": 1957,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 1735,
											"end": 1957,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 1735,
											"end": 1957,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1735,
											"end": 1957,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1735,
											"end": 1957,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 1963,
											"end": 2085,
											"name": "tag",
											"source": 13,
											"value": "183"
										},
										{
											"begin": 1963,
											"end": 2085,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 2036,
											"end": 2060,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "243"
										},
										{
											"begin": 2054,
											"end": 2059,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 2036,
											"end": 2060,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "173"
										},
										{
											"begin": 2036,
											"end": 2060,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 2036,
											"end": 2060,
											"name": "tag",
											"source": 13,
											"value": "243"
										},
										{
											"begin": 2036,
											"end": 2060,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 2029,
											"end": 2034,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 2026,
											"end": 2061,
											"name": "EQ",
											"source": 13
										},
										{
											"begin": 2016,
											"end": 2079,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "244"
										},
										{
											"begin": 2016,
											"end": 2079,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 2075,
											"end": 2076,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 2072,
											"end": 2073,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 2065,
											"end": 2077,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 2016,
											"end": 2079,
											"name": "tag",
											"source": 13,
											"value": "244"
										},
										{
											"begin": 2016,
											"end": 2079,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1963,
											"end": 2085,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1963,
											"end": 2085,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 2091,
											"end": 2230,
											"name": "tag",
											"source": 13,
											"value": "184"
										},
										{
											"begin": 2091,
											"end": 2230,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 2137,
											"end": 2142,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 2175,
											"end": 2181,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 2162,
											"end": 2182,
											"name": "CALLDATALOAD",
											"source": 13
										},
										{
											"begin": 2153,
											"end": 2182,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 2153,
											"end": 2182,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 2191,
											"end": 2224,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "246"
										},
										{
											"begin": 2218,
											"end": 2223,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 2191,
											"end": 2224,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "183"
										},
										{
											"begin": 2191,
											"end": 2224,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 2191,
											"end": 2224,
											"name": "tag",
											"source": 13,
											"value": "246"
										},
										{
											"begin": 2191,
											"end": 2224,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 2091,
											"end": 2230,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 2091,
											"end": 2230,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 2091,
											"end": 2230,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 2091,
											"end": 2230,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 2091,
											"end": 2230,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 2236,
											"end": 2710,
											"name": "tag",
											"source": 13,
											"value": "35"
										},
										{
											"begin": 2236,
											"end": 2710,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 2304,
											"end": 2310,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 2312,
											"end": 2318,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 2361,
											"end": 2363,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 2349,
											"end": 2358,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 2340,
											"end": 2347,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 2336,
											"end": 2359,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 2332,
											"end": 2364,
											"name": "SLT",
											"source": 13
										},
										{
											"begin": 2329,
											"end": 2448,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 2329,
											"end": 2448,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "248"
										},
										{
											"begin": 2329,
											"end": 2448,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 2367,
											"end": 2446,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "249"
										},
										{
											"begin": 2367,
											"end": 2446,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "176"
										},
										{
											"begin": 2367,
											"end": 2446,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 2367,
											"end": 2446,
											"name": "tag",
											"source": 13,
											"value": "249"
										},
										{
											"begin": 2367,
											"end": 2446,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 2329,
											"end": 2448,
											"name": "tag",
											"source": 13,
											"value": "248"
										},
										{
											"begin": 2329,
											"end": 2448,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 2487,
											"end": 2488,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 2512,
											"end": 2565,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "250"
										},
										{
											"begin": 2557,
											"end": 2564,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 2548,
											"end": 2554,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 2537,
											"end": 2546,
											"name": "DUP7",
											"source": 13
										},
										{
											"begin": 2533,
											"end": 2555,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 2512,
											"end": 2565,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "184"
										},
										{
											"begin": 2512,
											"end": 2565,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 2512,
											"end": 2565,
											"name": "tag",
											"source": 13,
											"value": "250"
										},
										{
											"begin": 2512,
											"end": 2565,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 2502,
											"end": 2565,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 2502,
											"end": 2565,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 2458,
											"end": 2575,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 2614,
											"end": 2616,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 2640,
											"end": 2693,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "251"
										},
										{
											"begin": 2685,
											"end": 2692,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 2676,
											"end": 2682,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 2665,
											"end": 2674,
											"name": "DUP7",
											"source": 13
										},
										{
											"begin": 2661,
											"end": 2683,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 2640,
											"end": 2693,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "181"
										},
										{
											"begin": 2640,
											"end": 2693,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 2640,
											"end": 2693,
											"name": "tag",
											"source": 13,
											"value": "251"
										},
										{
											"begin": 2640,
											"end": 2693,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 2630,
											"end": 2693,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 2630,
											"end": 2693,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 2585,
											"end": 2703,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 2236,
											"end": 2710,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 2236,
											"end": 2710,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 2236,
											"end": 2710,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 2236,
											"end": 2710,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 2236,
											"end": 2710,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 2236,
											"end": 2710,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 2716,
											"end": 3335,
											"name": "tag",
											"source": 13,
											"value": "43"
										},
										{
											"begin": 2716,
											"end": 3335,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 2793,
											"end": 2799,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 2801,
											"end": 2807,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 2809,
											"end": 2815,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 2858,
											"end": 2860,
											"name": "PUSH",
											"source": 13,
											"value": "60"
										},
										{
											"begin": 2846,
											"end": 2855,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 2837,
											"end": 2844,
											"name": "DUP7",
											"source": 13
										},
										{
											"begin": 2833,
											"end": 2856,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 2829,
											"end": 2861,
											"name": "SLT",
											"source": 13
										},
										{
											"begin": 2826,
											"end": 2945,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 2826,
											"end": 2945,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "253"
										},
										{
											"begin": 2826,
											"end": 2945,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 2864,
											"end": 2943,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "254"
										},
										{
											"begin": 2864,
											"end": 2943,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "176"
										},
										{
											"begin": 2864,
											"end": 2943,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 2864,
											"end": 2943,
											"name": "tag",
											"source": 13,
											"value": "254"
										},
										{
											"begin": 2864,
											"end": 2943,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 2826,
											"end": 2945,
											"name": "tag",
											"source": 13,
											"value": "253"
										},
										{
											"begin": 2826,
											"end": 2945,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 2984,
											"end": 2985,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 3009,
											"end": 3062,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "255"
										},
										{
											"begin": 3054,
											"end": 3061,
											"name": "DUP7",
											"source": 13
										},
										{
											"begin": 3045,
											"end": 3051,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 3034,
											"end": 3043,
											"name": "DUP8",
											"source": 13
										},
										{
											"begin": 3030,
											"end": 3052,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 3009,
											"end": 3062,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "181"
										},
										{
											"begin": 3009,
											"end": 3062,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 3009,
											"end": 3062,
											"name": "tag",
											"source": 13,
											"value": "255"
										},
										{
											"begin": 3009,
											"end": 3062,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 2999,
											"end": 3062,
											"name": "SWAP4",
											"source": 13
										},
										{
											"begin": 2999,
											"end": 3062,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 2955,
											"end": 3072,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 3111,
											"end": 3113,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 3137,
											"end": 3190,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "256"
										},
										{
											"begin": 3182,
											"end": 3189,
											"name": "DUP7",
											"source": 13
										},
										{
											"begin": 3173,
											"end": 3179,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 3162,
											"end": 3171,
											"name": "DUP8",
											"source": 13
										},
										{
											"begin": 3158,
											"end": 3180,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 3137,
											"end": 3190,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "184"
										},
										{
											"begin": 3137,
											"end": 3190,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 3137,
											"end": 3190,
											"name": "tag",
											"source": 13,
											"value": "256"
										},
										{
											"begin": 3137,
											"end": 3190,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 3127,
											"end": 3190,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 3127,
											"end": 3190,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 3082,
											"end": 3200,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 3239,
											"end": 3241,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 3265,
											"end": 3318,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "257"
										},
										{
											"begin": 3310,
											"end": 3317,
											"name": "DUP7",
											"source": 13
										},
										{
											"begin": 3301,
											"end": 3307,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 3290,
											"end": 3299,
											"name": "DUP8",
											"source": 13
										},
										{
											"begin": 3286,
											"end": 3308,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 3265,
											"end": 3318,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "184"
										},
										{
											"begin": 3265,
											"end": 3318,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 3265,
											"end": 3318,
											"name": "tag",
											"source": 13,
											"value": "257"
										},
										{
											"begin": 3265,
											"end": 3318,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 3255,
											"end": 3318,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 3255,
											"end": 3318,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 3210,
											"end": 3328,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 2716,
											"end": 3335,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 2716,
											"end": 3335,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 2716,
											"end": 3335,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 2716,
											"end": 3335,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 2716,
											"end": 3335,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 2716,
											"end": 3335,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 3341,
											"end": 3815,
											"name": "tag",
											"source": 13,
											"value": "47"
										},
										{
											"begin": 3341,
											"end": 3815,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 3409,
											"end": 3415,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 3417,
											"end": 3423,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 3466,
											"end": 3468,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 3454,
											"end": 3463,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 3445,
											"end": 3452,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 3441,
											"end": 3464,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 3437,
											"end": 3469,
											"name": "SLT",
											"source": 13
										},
										{
											"begin": 3434,
											"end": 3553,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 3434,
											"end": 3553,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "259"
										},
										{
											"begin": 3434,
											"end": 3553,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 3472,
											"end": 3551,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "260"
										},
										{
											"begin": 3472,
											"end": 3551,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "176"
										},
										{
											"begin": 3472,
											"end": 3551,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 3472,
											"end": 3551,
											"name": "tag",
											"source": 13,
											"value": "260"
										},
										{
											"begin": 3472,
											"end": 3551,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 3434,
											"end": 3553,
											"name": "tag",
											"source": 13,
											"value": "259"
										},
										{
											"begin": 3434,
											"end": 3553,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 3592,
											"end": 3593,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 3617,
											"end": 3670,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "261"
										},
										{
											"begin": 3662,
											"end": 3669,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 3653,
											"end": 3659,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 3642,
											"end": 3651,
											"name": "DUP7",
											"source": 13
										},
										{
											"begin": 3638,
											"end": 3660,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 3617,
											"end": 3670,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "184"
										},
										{
											"begin": 3617,
											"end": 3670,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 3617,
											"end": 3670,
											"name": "tag",
											"source": 13,
											"value": "261"
										},
										{
											"begin": 3617,
											"end": 3670,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 3607,
											"end": 3670,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 3607,
											"end": 3670,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 3563,
											"end": 3680,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 3719,
											"end": 3721,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 3745,
											"end": 3798,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "262"
										},
										{
											"begin": 3790,
											"end": 3797,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 3781,
											"end": 3787,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 3770,
											"end": 3779,
											"name": "DUP7",
											"source": 13
										},
										{
											"begin": 3766,
											"end": 3788,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 3745,
											"end": 3798,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "184"
										},
										{
											"begin": 3745,
											"end": 3798,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 3745,
											"end": 3798,
											"name": "tag",
											"source": 13,
											"value": "262"
										},
										{
											"begin": 3745,
											"end": 3798,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 3735,
											"end": 3798,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 3735,
											"end": 3798,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 3690,
											"end": 3808,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 3341,
											"end": 3815,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 3341,
											"end": 3815,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 3341,
											"end": 3815,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 3341,
											"end": 3815,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 3341,
											"end": 3815,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 3341,
											"end": 3815,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 3821,
											"end": 3881,
											"name": "tag",
											"source": 13,
											"value": "185"
										},
										{
											"begin": 3821,
											"end": 3881,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 3849,
											"end": 3852,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 3870,
											"end": 3875,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 3863,
											"end": 3875,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 3863,
											"end": 3875,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 3821,
											"end": 3881,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 3821,
											"end": 3881,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 3821,
											"end": 3881,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 3821,
											"end": 3881,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 3887,
											"end": 4029,
											"name": "tag",
											"source": 13,
											"value": "186"
										},
										{
											"begin": 3887,
											"end": 4029,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 3937,
											"end": 3946,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 3970,
											"end": 4023,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "265"
										},
										{
											"begin": 3988,
											"end": 4022,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "266"
										},
										{
											"begin": 3997,
											"end": 4021,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "267"
										},
										{
											"begin": 4015,
											"end": 4020,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 3997,
											"end": 4021,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "178"
										},
										{
											"begin": 3997,
											"end": 4021,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 3997,
											"end": 4021,
											"name": "tag",
											"source": 13,
											"value": "267"
										},
										{
											"begin": 3997,
											"end": 4021,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 3988,
											"end": 4022,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "185"
										},
										{
											"begin": 3988,
											"end": 4022,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 3988,
											"end": 4022,
											"name": "tag",
											"source": 13,
											"value": "266"
										},
										{
											"begin": 3988,
											"end": 4022,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 3970,
											"end": 4023,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "178"
										},
										{
											"begin": 3970,
											"end": 4023,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 3970,
											"end": 4023,
											"name": "tag",
											"source": 13,
											"value": "265"
										},
										{
											"begin": 3970,
											"end": 4023,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 3957,
											"end": 4023,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 3957,
											"end": 4023,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 3887,
											"end": 4029,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 3887,
											"end": 4029,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 3887,
											"end": 4029,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 3887,
											"end": 4029,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 4035,
											"end": 4161,
											"name": "tag",
											"source": 13,
											"value": "187"
										},
										{
											"begin": 4035,
											"end": 4161,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 4085,
											"end": 4094,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 4118,
											"end": 4155,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "269"
										},
										{
											"begin": 4149,
											"end": 4154,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 4118,
											"end": 4155,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "186"
										},
										{
											"begin": 4118,
											"end": 4155,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 4118,
											"end": 4155,
											"name": "tag",
											"source": 13,
											"value": "269"
										},
										{
											"begin": 4118,
											"end": 4155,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 4105,
											"end": 4155,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 4105,
											"end": 4155,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 4035,
											"end": 4161,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 4035,
											"end": 4161,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 4035,
											"end": 4161,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 4035,
											"end": 4161,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 4167,
											"end": 4308,
											"name": "tag",
											"source": 13,
											"value": "188"
										},
										{
											"begin": 4167,
											"end": 4308,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 4232,
											"end": 4241,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 4265,
											"end": 4302,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "271"
										},
										{
											"begin": 4296,
											"end": 4301,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 4265,
											"end": 4302,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "187"
										},
										{
											"begin": 4265,
											"end": 4302,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 4265,
											"end": 4302,
											"name": "tag",
											"source": 13,
											"value": "271"
										},
										{
											"begin": 4265,
											"end": 4302,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 4252,
											"end": 4302,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 4252,
											"end": 4302,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 4167,
											"end": 4308,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 4167,
											"end": 4308,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 4167,
											"end": 4308,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 4167,
											"end": 4308,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 4314,
											"end": 4475,
											"name": "tag",
											"source": 13,
											"value": "189"
										},
										{
											"begin": 4314,
											"end": 4475,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 4416,
											"end": 4468,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "273"
										},
										{
											"begin": 4462,
											"end": 4467,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 4416,
											"end": 4468,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "188"
										},
										{
											"begin": 4416,
											"end": 4468,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 4416,
											"end": 4468,
											"name": "tag",
											"source": 13,
											"value": "273"
										},
										{
											"begin": 4416,
											"end": 4468,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 4411,
											"end": 4414,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 4404,
											"end": 4469,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 4314,
											"end": 4475,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 4314,
											"end": 4475,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 4314,
											"end": 4475,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 4481,
											"end": 4733,
											"name": "tag",
											"source": 13,
											"value": "55"
										},
										{
											"begin": 4481,
											"end": 4733,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 4589,
											"end": 4593,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 4627,
											"end": 4629,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 4616,
											"end": 4625,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 4612,
											"end": 4630,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 4604,
											"end": 4630,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 4604,
											"end": 4630,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 4640,
											"end": 4726,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "275"
										},
										{
											"begin": 4723,
											"end": 4724,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 4712,
											"end": 4721,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 4708,
											"end": 4725,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 4699,
											"end": 4705,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 4640,
											"end": 4726,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "189"
										},
										{
											"begin": 4640,
											"end": 4726,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 4640,
											"end": 4726,
											"name": "tag",
											"source": 13,
											"value": "275"
										},
										{
											"begin": 4640,
											"end": 4726,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 4481,
											"end": 4733,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 4481,
											"end": 4733,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 4481,
											"end": 4733,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 4481,
											"end": 4733,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 4481,
											"end": 4733,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 4739,
											"end": 4919,
											"name": "tag",
											"source": 13,
											"value": "190"
										},
										{
											"begin": 4739,
											"end": 4919,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 4787,
											"end": 4864,
											"name": "PUSH",
											"source": 13,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 4784,
											"end": 4785,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 4777,
											"end": 4865,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 4884,
											"end": 4888,
											"name": "PUSH",
											"source": 13,
											"value": "11"
										},
										{
											"begin": 4881,
											"end": 4882,
											"name": "PUSH",
											"source": 13,
											"value": "4"
										},
										{
											"begin": 4874,
											"end": 4889,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 4908,
											"end": 4912,
											"name": "PUSH",
											"source": 13,
											"value": "24"
										},
										{
											"begin": 4905,
											"end": 4906,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 4898,
											"end": 4913,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 4925,
											"end": 5335,
											"name": "tag",
											"source": 13,
											"value": "73"
										},
										{
											"begin": 4925,
											"end": 5335,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 4965,
											"end": 4972,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 4988,
											"end": 5008,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "278"
										},
										{
											"begin": 5006,
											"end": 5007,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 4988,
											"end": 5008,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "173"
										},
										{
											"begin": 4988,
											"end": 5008,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 4988,
											"end": 5008,
											"name": "tag",
											"source": 13,
											"value": "278"
										},
										{
											"begin": 4988,
											"end": 5008,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 4983,
											"end": 5008,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 4983,
											"end": 5008,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 5022,
											"end": 5042,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "279"
										},
										{
											"begin": 5040,
											"end": 5041,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 5022,
											"end": 5042,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "173"
										},
										{
											"begin": 5022,
											"end": 5042,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 5022,
											"end": 5042,
											"name": "tag",
											"source": 13,
											"value": "279"
										},
										{
											"begin": 5022,
											"end": 5042,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 5017,
											"end": 5042,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 5017,
											"end": 5042,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 5077,
											"end": 5078,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 5074,
											"end": 5075,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 5070,
											"end": 5079,
											"name": "MUL",
											"source": 13
										},
										{
											"begin": 5099,
											"end": 5129,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "280"
										},
										{
											"begin": 5117,
											"end": 5128,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 5099,
											"end": 5129,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "173"
										},
										{
											"begin": 5099,
											"end": 5129,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 5099,
											"end": 5129,
											"name": "tag",
											"source": 13,
											"value": "280"
										},
										{
											"begin": 5099,
											"end": 5129,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 5088,
											"end": 5129,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 5088,
											"end": 5129,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 5278,
											"end": 5279,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 5269,
											"end": 5276,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 5265,
											"end": 5280,
											"name": "DIV",
											"source": 13
										},
										{
											"begin": 5262,
											"end": 5263,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 5259,
											"end": 5281,
											"name": "EQ",
											"source": 13
										},
										{
											"begin": 5239,
											"end": 5240,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 5232,
											"end": 5241,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 5212,
											"end": 5295,
											"name": "OR",
											"source": 13
										},
										{
											"begin": 5189,
											"end": 5328,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "281"
										},
										{
											"begin": 5189,
											"end": 5328,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 5308,
											"end": 5326,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "282"
										},
										{
											"begin": 5308,
											"end": 5326,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "190"
										},
										{
											"begin": 5308,
											"end": 5326,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 5308,
											"end": 5326,
											"name": "tag",
											"source": 13,
											"value": "282"
										},
										{
											"begin": 5308,
											"end": 5326,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 5189,
											"end": 5328,
											"name": "tag",
											"source": 13,
											"value": "281"
										},
										{
											"begin": 5189,
											"end": 5328,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 4973,
											"end": 5335,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 4925,
											"end": 5335,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 4925,
											"end": 5335,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 4925,
											"end": 5335,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 4925,
											"end": 5335,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 4925,
											"end": 5335,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 5341,
											"end": 5521,
											"name": "tag",
											"source": 13,
											"value": "191"
										},
										{
											"begin": 5341,
											"end": 5521,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 5389,
											"end": 5466,
											"name": "PUSH",
											"source": 13,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 5386,
											"end": 5387,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 5379,
											"end": 5467,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 5486,
											"end": 5490,
											"name": "PUSH",
											"source": 13,
											"value": "12"
										},
										{
											"begin": 5483,
											"end": 5484,
											"name": "PUSH",
											"source": 13,
											"value": "4"
										},
										{
											"begin": 5476,
											"end": 5491,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 5510,
											"end": 5514,
											"name": "PUSH",
											"source": 13,
											"value": "24"
										},
										{
											"begin": 5507,
											"end": 5508,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 5500,
											"end": 5515,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 5527,
											"end": 5712,
											"name": "tag",
											"source": 13,
											"value": "75"
										},
										{
											"begin": 5527,
											"end": 5712,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 5567,
											"end": 5568,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 5584,
											"end": 5604,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "285"
										},
										{
											"begin": 5602,
											"end": 5603,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 5584,
											"end": 5604,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "173"
										},
										{
											"begin": 5584,
											"end": 5604,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 5584,
											"end": 5604,
											"name": "tag",
											"source": 13,
											"value": "285"
										},
										{
											"begin": 5584,
											"end": 5604,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 5579,
											"end": 5604,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 5579,
											"end": 5604,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 5618,
											"end": 5638,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "286"
										},
										{
											"begin": 5636,
											"end": 5637,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 5618,
											"end": 5638,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "173"
										},
										{
											"begin": 5618,
											"end": 5638,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 5618,
											"end": 5638,
											"name": "tag",
											"source": 13,
											"value": "286"
										},
										{
											"begin": 5618,
											"end": 5638,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 5613,
											"end": 5638,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 5613,
											"end": 5638,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 5657,
											"end": 5658,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 5647,
											"end": 5682,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "287"
										},
										{
											"begin": 5647,
											"end": 5682,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 5662,
											"end": 5680,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "288"
										},
										{
											"begin": 5662,
											"end": 5680,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "191"
										},
										{
											"begin": 5662,
											"end": 5680,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 5662,
											"end": 5680,
											"name": "tag",
											"source": 13,
											"value": "288"
										},
										{
											"begin": 5662,
											"end": 5680,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 5647,
											"end": 5682,
											"name": "tag",
											"source": 13,
											"value": "287"
										},
										{
											"begin": 5647,
											"end": 5682,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 5704,
											"end": 5705,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 5701,
											"end": 5702,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 5697,
											"end": 5706,
											"name": "DIV",
											"source": 13
										},
										{
											"begin": 5692,
											"end": 5706,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 5692,
											"end": 5706,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 5527,
											"end": 5712,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 5527,
											"end": 5712,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 5527,
											"end": 5712,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 5527,
											"end": 5712,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 5527,
											"end": 5712,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 5718,
											"end": 5909,
											"name": "tag",
											"source": 13,
											"value": "78"
										},
										{
											"begin": 5718,
											"end": 5909,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 5758,
											"end": 5761,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 5777,
											"end": 5797,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "290"
										},
										{
											"begin": 5795,
											"end": 5796,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 5777,
											"end": 5797,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "173"
										},
										{
											"begin": 5777,
											"end": 5797,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 5777,
											"end": 5797,
											"name": "tag",
											"source": 13,
											"value": "290"
										},
										{
											"begin": 5777,
											"end": 5797,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 5772,
											"end": 5797,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 5772,
											"end": 5797,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 5811,
											"end": 5831,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "291"
										},
										{
											"begin": 5829,
											"end": 5830,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 5811,
											"end": 5831,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "173"
										},
										{
											"begin": 5811,
											"end": 5831,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 5811,
											"end": 5831,
											"name": "tag",
											"source": 13,
											"value": "291"
										},
										{
											"begin": 5811,
											"end": 5831,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 5806,
											"end": 5831,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 5806,
											"end": 5831,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 5854,
											"end": 5855,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 5851,
											"end": 5852,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 5847,
											"end": 5856,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 5840,
											"end": 5856,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 5840,
											"end": 5856,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 5875,
											"end": 5878,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 5872,
											"end": 5873,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 5869,
											"end": 5879,
											"name": "GT",
											"source": 13
										},
										{
											"begin": 5866,
											"end": 5902,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 5866,
											"end": 5902,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "292"
										},
										{
											"begin": 5866,
											"end": 5902,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 5882,
											"end": 5900,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "293"
										},
										{
											"begin": 5882,
											"end": 5900,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "190"
										},
										{
											"begin": 5882,
											"end": 5900,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 5882,
											"end": 5900,
											"name": "tag",
											"source": 13,
											"value": "293"
										},
										{
											"begin": 5882,
											"end": 5900,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 5866,
											"end": 5902,
											"name": "tag",
											"source": 13,
											"value": "292"
										},
										{
											"begin": 5866,
											"end": 5902,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 5718,
											"end": 5909,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 5718,
											"end": 5909,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 5718,
											"end": 5909,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 5718,
											"end": 5909,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 5718,
											"end": 5909,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 5915,
											"end": 6009,
											"name": "tag",
											"source": 13,
											"value": "192"
										},
										{
											"begin": 5915,
											"end": 6009,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 5948,
											"end": 5956,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 5996,
											"end": 6001,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 5992,
											"end": 5994,
											"name": "PUSH",
											"source": 13,
											"value": "60"
										},
										{
											"begin": 5988,
											"end": 6002,
											"name": "SHL",
											"source": 13
										},
										{
											"begin": 5967,
											"end": 6002,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 5967,
											"end": 6002,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 5915,
											"end": 6009,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 5915,
											"end": 6009,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 5915,
											"end": 6009,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 5915,
											"end": 6009,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 6015,
											"end": 6109,
											"name": "tag",
											"source": 13,
											"value": "193"
										},
										{
											"begin": 6015,
											"end": 6109,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 6054,
											"end": 6061,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 6083,
											"end": 6103,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "296"
										},
										{
											"begin": 6097,
											"end": 6102,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 6083,
											"end": 6103,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "192"
										},
										{
											"begin": 6083,
											"end": 6103,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 6083,
											"end": 6103,
											"name": "tag",
											"source": 13,
											"value": "296"
										},
										{
											"begin": 6083,
											"end": 6103,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 6072,
											"end": 6103,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 6072,
											"end": 6103,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 6015,
											"end": 6109,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 6015,
											"end": 6109,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 6015,
											"end": 6109,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 6015,
											"end": 6109,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 6115,
											"end": 6215,
											"name": "tag",
											"source": 13,
											"value": "194"
										},
										{
											"begin": 6115,
											"end": 6215,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 6154,
											"end": 6161,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 6183,
											"end": 6209,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "298"
										},
										{
											"begin": 6203,
											"end": 6208,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 6183,
											"end": 6209,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "193"
										},
										{
											"begin": 6183,
											"end": 6209,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 6183,
											"end": 6209,
											"name": "tag",
											"source": 13,
											"value": "298"
										},
										{
											"begin": 6183,
											"end": 6209,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 6172,
											"end": 6209,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 6172,
											"end": 6209,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 6115,
											"end": 6215,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 6115,
											"end": 6215,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 6115,
											"end": 6215,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 6115,
											"end": 6215,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 6221,
											"end": 6378,
											"name": "tag",
											"source": 13,
											"value": "195"
										},
										{
											"begin": 6221,
											"end": 6378,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 6326,
											"end": 6371,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "300"
										},
										{
											"begin": 6346,
											"end": 6370,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "301"
										},
										{
											"begin": 6364,
											"end": 6369,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 6346,
											"end": 6370,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "179"
										},
										{
											"begin": 6346,
											"end": 6370,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 6346,
											"end": 6370,
											"name": "tag",
											"source": 13,
											"value": "301"
										},
										{
											"begin": 6346,
											"end": 6370,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 6326,
											"end": 6371,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "194"
										},
										{
											"begin": 6326,
											"end": 6371,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 6326,
											"end": 6371,
											"name": "tag",
											"source": 13,
											"value": "300"
										},
										{
											"begin": 6326,
											"end": 6371,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 6321,
											"end": 6324,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 6314,
											"end": 6372,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 6221,
											"end": 6378,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 6221,
											"end": 6378,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 6221,
											"end": 6378,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 6384,
											"end": 6463,
											"name": "tag",
											"source": 13,
											"value": "196"
										},
										{
											"begin": 6384,
											"end": 6463,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 6423,
											"end": 6430,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 6452,
											"end": 6457,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 6441,
											"end": 6457,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 6441,
											"end": 6457,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 6384,
											"end": 6463,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 6384,
											"end": 6463,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 6384,
											"end": 6463,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 6384,
											"end": 6463,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 6469,
											"end": 6626,
											"name": "tag",
											"source": 13,
											"value": "197"
										},
										{
											"begin": 6469,
											"end": 6626,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 6574,
											"end": 6619,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "304"
										},
										{
											"begin": 6594,
											"end": 6618,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "305"
										},
										{
											"begin": 6612,
											"end": 6617,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 6594,
											"end": 6618,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "173"
										},
										{
											"begin": 6594,
											"end": 6618,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 6594,
											"end": 6618,
											"name": "tag",
											"source": 13,
											"value": "305"
										},
										{
											"begin": 6594,
											"end": 6618,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 6574,
											"end": 6619,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "196"
										},
										{
											"begin": 6574,
											"end": 6619,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 6574,
											"end": 6619,
											"name": "tag",
											"source": 13,
											"value": "304"
										},
										{
											"begin": 6574,
											"end": 6619,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 6569,
											"end": 6572,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 6562,
											"end": 6620,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 6469,
											"end": 6626,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 6469,
											"end": 6626,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 6469,
											"end": 6626,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 6632,
											"end": 7170,
											"name": "tag",
											"source": 13,
											"value": "80"
										},
										{
											"begin": 6632,
											"end": 7170,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 6800,
											"end": 6803,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 6815,
											"end": 6890,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "307"
										},
										{
											"begin": 6886,
											"end": 6889,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 6877,
											"end": 6883,
											"name": "DUP7",
											"source": 13
										},
										{
											"begin": 6815,
											"end": 6890,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "195"
										},
										{
											"begin": 6815,
											"end": 6890,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 6815,
											"end": 6890,
											"name": "tag",
											"source": 13,
											"value": "307"
										},
										{
											"begin": 6815,
											"end": 6890,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 6915,
											"end": 6917,
											"name": "PUSH",
											"source": 13,
											"value": "14"
										},
										{
											"begin": 6910,
											"end": 6913,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 6906,
											"end": 6918,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 6899,
											"end": 6918,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 6899,
											"end": 6918,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 6928,
											"end": 7003,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "308"
										},
										{
											"begin": 6999,
											"end": 7002,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 6990,
											"end": 6996,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 6928,
											"end": 7003,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "197"
										},
										{
											"begin": 6928,
											"end": 7003,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 6928,
											"end": 7003,
											"name": "tag",
											"source": 13,
											"value": "308"
										},
										{
											"begin": 6928,
											"end": 7003,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 7028,
											"end": 7030,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 7023,
											"end": 7026,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 7019,
											"end": 7031,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 7012,
											"end": 7031,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 7012,
											"end": 7031,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 7041,
											"end": 7116,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "309"
										},
										{
											"begin": 7112,
											"end": 7115,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 7103,
											"end": 7109,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 7041,
											"end": 7116,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "197"
										},
										{
											"begin": 7041,
											"end": 7116,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 7041,
											"end": 7116,
											"name": "tag",
											"source": 13,
											"value": "309"
										},
										{
											"begin": 7041,
											"end": 7116,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 7141,
											"end": 7143,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 7136,
											"end": 7139,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 7132,
											"end": 7144,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 7125,
											"end": 7144,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 7125,
											"end": 7144,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 7161,
											"end": 7164,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 7154,
											"end": 7164,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 7154,
											"end": 7164,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 6632,
											"end": 7170,
											"name": "SWAP5",
											"source": 13
										},
										{
											"begin": 6632,
											"end": 7170,
											"name": "SWAP4",
											"source": 13
										},
										{
											"begin": 6632,
											"end": 7170,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 6632,
											"end": 7170,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 6632,
											"end": 7170,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 6632,
											"end": 7170,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 6632,
											"end": 7170,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 7176,
											"end": 7352,
											"name": "tag",
											"source": 13,
											"value": "82"
										},
										{
											"begin": 7176,
											"end": 7352,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 7208,
											"end": 7209,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 7225,
											"end": 7245,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "311"
										},
										{
											"begin": 7243,
											"end": 7244,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 7225,
											"end": 7245,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "173"
										},
										{
											"begin": 7225,
											"end": 7245,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 7225,
											"end": 7245,
											"name": "tag",
											"source": 13,
											"value": "311"
										},
										{
											"begin": 7225,
											"end": 7245,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 7220,
											"end": 7245,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 7220,
											"end": 7245,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 7259,
											"end": 7279,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "312"
										},
										{
											"begin": 7277,
											"end": 7278,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 7259,
											"end": 7279,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "173"
										},
										{
											"begin": 7259,
											"end": 7279,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 7259,
											"end": 7279,
											"name": "tag",
											"source": 13,
											"value": "312"
										},
										{
											"begin": 7259,
											"end": 7279,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 7254,
											"end": 7279,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 7254,
											"end": 7279,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 7298,
											"end": 7299,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 7288,
											"end": 7323,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "313"
										},
										{
											"begin": 7288,
											"end": 7323,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 7303,
											"end": 7321,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "314"
										},
										{
											"begin": 7303,
											"end": 7321,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "191"
										},
										{
											"begin": 7303,
											"end": 7321,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 7303,
											"end": 7321,
											"name": "tag",
											"source": 13,
											"value": "314"
										},
										{
											"begin": 7303,
											"end": 7321,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 7288,
											"end": 7323,
											"name": "tag",
											"source": 13,
											"value": "313"
										},
										{
											"begin": 7288,
											"end": 7323,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 7344,
											"end": 7345,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 7341,
											"end": 7342,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 7337,
											"end": 7346,
											"name": "MOD",
											"source": 13
										},
										{
											"begin": 7332,
											"end": 7346,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 7332,
											"end": 7346,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 7176,
											"end": 7352,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 7176,
											"end": 7352,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 7176,
											"end": 7352,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 7176,
											"end": 7352,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 7176,
											"end": 7352,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 7358,
											"end": 7527,
											"name": "tag",
											"source": 13,
											"value": "198"
										},
										{
											"begin": 7358,
											"end": 7527,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 7442,
											"end": 7453,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 7476,
											"end": 7482,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 7471,
											"end": 7474,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 7464,
											"end": 7483,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 7516,
											"end": 7520,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 7511,
											"end": 7514,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 7507,
											"end": 7521,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 7492,
											"end": 7521,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 7492,
											"end": 7521,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 7358,
											"end": 7527,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 7358,
											"end": 7527,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 7358,
											"end": 7527,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 7358,
											"end": 7527,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 7358,
											"end": 7527,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 7533,
											"end": 7697,
											"name": "tag",
											"source": 13,
											"value": "199"
										},
										{
											"begin": 7533,
											"end": 7697,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 7673,
											"end": 7689,
											"name": "PUSH",
											"source": 13,
											"value": "4E6F7420617574686F72697A6564000000000000000000000000000000000000"
										},
										{
											"begin": 7669,
											"end": 7670,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 7661,
											"end": 7667,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 7657,
											"end": 7671,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 7650,
											"end": 7690,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 7533,
											"end": 7697,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 7533,
											"end": 7697,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 7703,
											"end": 8069,
											"name": "tag",
											"source": 13,
											"value": "200"
										},
										{
											"begin": 7703,
											"end": 8069,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 7845,
											"end": 7848,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 7866,
											"end": 7933,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "318"
										},
										{
											"begin": 7930,
											"end": 7932,
											"name": "PUSH",
											"source": 13,
											"value": "E"
										},
										{
											"begin": 7925,
											"end": 7928,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 7866,
											"end": 7933,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "198"
										},
										{
											"begin": 7866,
											"end": 7933,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 7866,
											"end": 7933,
											"name": "tag",
											"source": 13,
											"value": "318"
										},
										{
											"begin": 7866,
											"end": 7933,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 7859,
											"end": 7933,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 7859,
											"end": 7933,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 7942,
											"end": 8035,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "319"
										},
										{
											"begin": 8031,
											"end": 8034,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 7942,
											"end": 8035,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "199"
										},
										{
											"begin": 7942,
											"end": 8035,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 7942,
											"end": 8035,
											"name": "tag",
											"source": 13,
											"value": "319"
										},
										{
											"begin": 7942,
											"end": 8035,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 8060,
											"end": 8062,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 8055,
											"end": 8058,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 8051,
											"end": 8063,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 8044,
											"end": 8063,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 8044,
											"end": 8063,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 7703,
											"end": 8069,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 7703,
											"end": 8069,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 7703,
											"end": 8069,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 7703,
											"end": 8069,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 8075,
											"end": 8494,
											"name": "tag",
											"source": 13,
											"value": "91"
										},
										{
											"begin": 8075,
											"end": 8494,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 8241,
											"end": 8245,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 8279,
											"end": 8281,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 8268,
											"end": 8277,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 8264,
											"end": 8282,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 8256,
											"end": 8282,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 8256,
											"end": 8282,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 8328,
											"end": 8337,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 8322,
											"end": 8326,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 8318,
											"end": 8338,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 8314,
											"end": 8315,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 8303,
											"end": 8312,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 8299,
											"end": 8316,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 8292,
											"end": 8339,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 8356,
											"end": 8487,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "321"
										},
										{
											"begin": 8482,
											"end": 8486,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 8356,
											"end": 8487,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "200"
										},
										{
											"begin": 8356,
											"end": 8487,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 8356,
											"end": 8487,
											"name": "tag",
											"source": 13,
											"value": "321"
										},
										{
											"begin": 8356,
											"end": 8487,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 8348,
											"end": 8487,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 8348,
											"end": 8487,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 8075,
											"end": 8494,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 8075,
											"end": 8494,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 8075,
											"end": 8494,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 8075,
											"end": 8494,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 8500,
											"end": 8676,
											"name": "tag",
											"source": 13,
											"value": "201"
										},
										{
											"begin": 8500,
											"end": 8676,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 8640,
											"end": 8668,
											"name": "PUSH",
											"source": 13,
											"value": "43616E6E6F7420726577617264207A65726F2061646472657373000000000000"
										},
										{
											"begin": 8636,
											"end": 8637,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 8628,
											"end": 8634,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 8624,
											"end": 8638,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 8617,
											"end": 8669,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 8500,
											"end": 8676,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 8500,
											"end": 8676,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 8682,
											"end": 9048,
											"name": "tag",
											"source": 13,
											"value": "202"
										},
										{
											"begin": 8682,
											"end": 9048,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 8824,
											"end": 8827,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 8845,
											"end": 8912,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "324"
										},
										{
											"begin": 8909,
											"end": 8911,
											"name": "PUSH",
											"source": 13,
											"value": "1A"
										},
										{
											"begin": 8904,
											"end": 8907,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 8845,
											"end": 8912,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "198"
										},
										{
											"begin": 8845,
											"end": 8912,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 8845,
											"end": 8912,
											"name": "tag",
											"source": 13,
											"value": "324"
										},
										{
											"begin": 8845,
											"end": 8912,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 8838,
											"end": 8912,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 8838,
											"end": 8912,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 8921,
											"end": 9014,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "325"
										},
										{
											"begin": 9010,
											"end": 9013,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 8921,
											"end": 9014,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "201"
										},
										{
											"begin": 8921,
											"end": 9014,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 8921,
											"end": 9014,
											"name": "tag",
											"source": 13,
											"value": "325"
										},
										{
											"begin": 8921,
											"end": 9014,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 9039,
											"end": 9041,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 9034,
											"end": 9037,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 9030,
											"end": 9042,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 9023,
											"end": 9042,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 9023,
											"end": 9042,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 8682,
											"end": 9048,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 8682,
											"end": 9048,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 8682,
											"end": 9048,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 8682,
											"end": 9048,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 9054,
											"end": 9473,
											"name": "tag",
											"source": 13,
											"value": "95"
										},
										{
											"begin": 9054,
											"end": 9473,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 9220,
											"end": 9224,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 9258,
											"end": 9260,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 9247,
											"end": 9256,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 9243,
											"end": 9261,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 9235,
											"end": 9261,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 9235,
											"end": 9261,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 9307,
											"end": 9316,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 9301,
											"end": 9305,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 9297,
											"end": 9317,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 9293,
											"end": 9294,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 9282,
											"end": 9291,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 9278,
											"end": 9295,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 9271,
											"end": 9318,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 9335,
											"end": 9466,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "327"
										},
										{
											"begin": 9461,
											"end": 9465,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 9335,
											"end": 9466,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "202"
										},
										{
											"begin": 9335,
											"end": 9466,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 9335,
											"end": 9466,
											"name": "tag",
											"source": 13,
											"value": "327"
										},
										{
											"begin": 9335,
											"end": 9466,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 9327,
											"end": 9466,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 9327,
											"end": 9466,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 9054,
											"end": 9473,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 9054,
											"end": 9473,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 9054,
											"end": 9473,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 9054,
											"end": 9473,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 9479,
											"end": 9647,
											"name": "tag",
											"source": 13,
											"value": "203"
										},
										{
											"begin": 9479,
											"end": 9647,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 9619,
											"end": 9639,
											"name": "PUSH",
											"source": 13,
											"value": "416D6F756E74206D757374206265203E20300000000000000000000000000000"
										},
										{
											"begin": 9615,
											"end": 9616,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 9607,
											"end": 9613,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 9603,
											"end": 9617,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 9596,
											"end": 9640,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 9479,
											"end": 9647,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 9479,
											"end": 9647,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 9653,
											"end": 10019,
											"name": "tag",
											"source": 13,
											"value": "204"
										},
										{
											"begin": 9653,
											"end": 10019,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 9795,
											"end": 9798,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 9816,
											"end": 9883,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "330"
										},
										{
											"begin": 9880,
											"end": 9882,
											"name": "PUSH",
											"source": 13,
											"value": "12"
										},
										{
											"begin": 9875,
											"end": 9878,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 9816,
											"end": 9883,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "198"
										},
										{
											"begin": 9816,
											"end": 9883,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 9816,
											"end": 9883,
											"name": "tag",
											"source": 13,
											"value": "330"
										},
										{
											"begin": 9816,
											"end": 9883,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 9809,
											"end": 9883,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 9809,
											"end": 9883,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 9892,
											"end": 9985,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "331"
										},
										{
											"begin": 9981,
											"end": 9984,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 9892,
											"end": 9985,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "203"
										},
										{
											"begin": 9892,
											"end": 9985,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 9892,
											"end": 9985,
											"name": "tag",
											"source": 13,
											"value": "331"
										},
										{
											"begin": 9892,
											"end": 9985,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 10010,
											"end": 10012,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 10005,
											"end": 10008,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 10001,
											"end": 10013,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 9994,
											"end": 10013,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 9994,
											"end": 10013,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 9653,
											"end": 10019,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 9653,
											"end": 10019,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 9653,
											"end": 10019,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 9653,
											"end": 10019,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 10025,
											"end": 10444,
											"name": "tag",
											"source": 13,
											"value": "98"
										},
										{
											"begin": 10025,
											"end": 10444,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 10191,
											"end": 10195,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 10229,
											"end": 10231,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 10218,
											"end": 10227,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 10214,
											"end": 10232,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 10206,
											"end": 10232,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 10206,
											"end": 10232,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 10278,
											"end": 10287,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 10272,
											"end": 10276,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 10268,
											"end": 10288,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 10264,
											"end": 10265,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 10253,
											"end": 10262,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 10249,
											"end": 10266,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 10242,
											"end": 10289,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 10306,
											"end": 10437,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "333"
										},
										{
											"begin": 10432,
											"end": 10436,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 10306,
											"end": 10437,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "204"
										},
										{
											"begin": 10306,
											"end": 10437,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 10306,
											"end": 10437,
											"name": "tag",
											"source": 13,
											"value": "333"
										},
										{
											"begin": 10306,
											"end": 10437,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 10298,
											"end": 10437,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 10298,
											"end": 10437,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 10025,
											"end": 10444,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 10025,
											"end": 10444,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 10025,
											"end": 10444,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 10025,
											"end": 10444,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 10450,
											"end": 10593,
											"name": "tag",
											"source": 13,
											"value": "205"
										},
										{
											"begin": 10450,
											"end": 10593,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 10507,
											"end": 10512,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 10538,
											"end": 10544,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 10532,
											"end": 10545,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 10523,
											"end": 10545,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 10523,
											"end": 10545,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 10554,
											"end": 10587,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "335"
										},
										{
											"begin": 10581,
											"end": 10586,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 10554,
											"end": 10587,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "183"
										},
										{
											"begin": 10554,
											"end": 10587,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 10554,
											"end": 10587,
											"name": "tag",
											"source": 13,
											"value": "335"
										},
										{
											"begin": 10554,
											"end": 10587,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 10450,
											"end": 10593,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 10450,
											"end": 10593,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 10450,
											"end": 10593,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 10450,
											"end": 10593,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 10450,
											"end": 10593,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 10599,
											"end": 10950,
											"name": "tag",
											"source": 13,
											"value": "103"
										},
										{
											"begin": 10599,
											"end": 10950,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 10669,
											"end": 10675,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 10718,
											"end": 10720,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 10706,
											"end": 10715,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 10697,
											"end": 10704,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 10693,
											"end": 10716,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 10689,
											"end": 10721,
											"name": "SLT",
											"source": 13
										},
										{
											"begin": 10686,
											"end": 10805,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 10686,
											"end": 10805,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "337"
										},
										{
											"begin": 10686,
											"end": 10805,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 10724,
											"end": 10803,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "338"
										},
										{
											"begin": 10724,
											"end": 10803,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "176"
										},
										{
											"begin": 10724,
											"end": 10803,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 10724,
											"end": 10803,
											"name": "tag",
											"source": 13,
											"value": "338"
										},
										{
											"begin": 10724,
											"end": 10803,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 10686,
											"end": 10805,
											"name": "tag",
											"source": 13,
											"value": "337"
										},
										{
											"begin": 10686,
											"end": 10805,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 10844,
											"end": 10845,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 10869,
											"end": 10933,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "339"
										},
										{
											"begin": 10925,
											"end": 10932,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 10916,
											"end": 10922,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 10905,
											"end": 10914,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 10901,
											"end": 10923,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 10869,
											"end": 10933,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "205"
										},
										{
											"begin": 10869,
											"end": 10933,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 10869,
											"end": 10933,
											"name": "tag",
											"source": 13,
											"value": "339"
										},
										{
											"begin": 10869,
											"end": 10933,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 10859,
											"end": 10933,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 10859,
											"end": 10933,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 10815,
											"end": 10943,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 10599,
											"end": 10950,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 10599,
											"end": 10950,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 10599,
											"end": 10950,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 10599,
											"end": 10950,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 10599,
											"end": 10950,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 10956,
											"end": 11133,
											"name": "tag",
											"source": 13,
											"value": "206"
										},
										{
											"begin": 10956,
											"end": 11133,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 11096,
											"end": 11125,
											"name": "PUSH",
											"source": 13,
											"value": "496E73756666696369656E74207265776172642062616C616E63650000000000"
										},
										{
											"begin": 11092,
											"end": 11093,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 11084,
											"end": 11090,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 11080,
											"end": 11094,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 11073,
											"end": 11126,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 10956,
											"end": 11133,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 10956,
											"end": 11133,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 11139,
											"end": 11505,
											"name": "tag",
											"source": 13,
											"value": "207"
										},
										{
											"begin": 11139,
											"end": 11505,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 11281,
											"end": 11284,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 11302,
											"end": 11369,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "342"
										},
										{
											"begin": 11366,
											"end": 11368,
											"name": "PUSH",
											"source": 13,
											"value": "1B"
										},
										{
											"begin": 11361,
											"end": 11364,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 11302,
											"end": 11369,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "198"
										},
										{
											"begin": 11302,
											"end": 11369,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 11302,
											"end": 11369,
											"name": "tag",
											"source": 13,
											"value": "342"
										},
										{
											"begin": 11302,
											"end": 11369,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 11295,
											"end": 11369,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 11295,
											"end": 11369,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 11378,
											"end": 11471,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "343"
										},
										{
											"begin": 11467,
											"end": 11470,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 11378,
											"end": 11471,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "206"
										},
										{
											"begin": 11378,
											"end": 11471,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 11378,
											"end": 11471,
											"name": "tag",
											"source": 13,
											"value": "343"
										},
										{
											"begin": 11378,
											"end": 11471,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 11496,
											"end": 11498,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 11491,
											"end": 11494,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 11487,
											"end": 11499,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 11480,
											"end": 11499,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 11480,
											"end": 11499,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 11139,
											"end": 11505,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 11139,
											"end": 11505,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 11139,
											"end": 11505,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 11139,
											"end": 11505,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 11511,
											"end": 11930,
											"name": "tag",
											"source": 13,
											"value": "106"
										},
										{
											"begin": 11511,
											"end": 11930,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 11677,
											"end": 11681,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 11715,
											"end": 11717,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 11704,
											"end": 11713,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 11700,
											"end": 11718,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 11692,
											"end": 11718,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 11692,
											"end": 11718,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 11764,
											"end": 11773,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 11758,
											"end": 11762,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 11754,
											"end": 11774,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 11750,
											"end": 11751,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 11739,
											"end": 11748,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 11735,
											"end": 11752,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 11728,
											"end": 11775,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 11792,
											"end": 11923,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "345"
										},
										{
											"begin": 11918,
											"end": 11922,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 11792,
											"end": 11923,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "207"
										},
										{
											"begin": 11792,
											"end": 11923,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 11792,
											"end": 11923,
											"name": "tag",
											"source": 13,
											"value": "345"
										},
										{
											"begin": 11792,
											"end": 11923,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 11784,
											"end": 11923,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 11784,
											"end": 11923,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 11511,
											"end": 11930,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 11511,
											"end": 11930,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 11511,
											"end": 11930,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 11511,
											"end": 11930,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 11936,
											"end": 12268,
											"name": "tag",
											"source": 13,
											"value": "108"
										},
										{
											"begin": 11936,
											"end": 12268,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 12057,
											"end": 12061,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 12095,
											"end": 12097,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 12084,
											"end": 12093,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 12080,
											"end": 12098,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 12072,
											"end": 12098,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 12072,
											"end": 12098,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 12108,
											"end": 12179,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "347"
										},
										{
											"begin": 12176,
											"end": 12177,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 12165,
											"end": 12174,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 12161,
											"end": 12178,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 12152,
											"end": 12158,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 12108,
											"end": 12179,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "182"
										},
										{
											"begin": 12108,
											"end": 12179,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 12108,
											"end": 12179,
											"name": "tag",
											"source": 13,
											"value": "347"
										},
										{
											"begin": 12108,
											"end": 12179,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 12189,
											"end": 12261,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "348"
										},
										{
											"begin": 12257,
											"end": 12259,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 12246,
											"end": 12255,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 12242,
											"end": 12260,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 12233,
											"end": 12239,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 12189,
											"end": 12261,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "174"
										},
										{
											"begin": 12189,
											"end": 12261,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 12189,
											"end": 12261,
											"name": "tag",
											"source": 13,
											"value": "348"
										},
										{
											"begin": 12189,
											"end": 12261,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 11936,
											"end": 12268,
											"name": "SWAP4",
											"source": 13
										},
										{
											"begin": 11936,
											"end": 12268,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 11936,
											"end": 12268,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 11936,
											"end": 12268,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 11936,
											"end": 12268,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 11936,
											"end": 12268,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 12274,
											"end": 12364,
											"name": "tag",
											"source": 13,
											"value": "208"
										},
										{
											"begin": 12274,
											"end": 12364,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 12308,
											"end": 12315,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 12351,
											"end": 12356,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 12344,
											"end": 12357,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 12337,
											"end": 12358,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 12326,
											"end": 12358,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 12326,
											"end": 12358,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 12274,
											"end": 12364,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 12274,
											"end": 12364,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 12274,
											"end": 12364,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 12274,
											"end": 12364,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 12370,
											"end": 12486,
											"name": "tag",
											"source": 13,
											"value": "209"
										},
										{
											"begin": 12370,
											"end": 12486,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 12440,
											"end": 12461,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "351"
										},
										{
											"begin": 12455,
											"end": 12460,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 12440,
											"end": 12461,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "208"
										},
										{
											"begin": 12440,
											"end": 12461,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 12440,
											"end": 12461,
											"name": "tag",
											"source": 13,
											"value": "351"
										},
										{
											"begin": 12440,
											"end": 12461,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 12433,
											"end": 12438,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 12430,
											"end": 12462,
											"name": "EQ",
											"source": 13
										},
										{
											"begin": 12420,
											"end": 12480,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "352"
										},
										{
											"begin": 12420,
											"end": 12480,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 12476,
											"end": 12477,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 12473,
											"end": 12474,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 12466,
											"end": 12478,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 12420,
											"end": 12480,
											"name": "tag",
											"source": 13,
											"value": "352"
										},
										{
											"begin": 12420,
											"end": 12480,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 12370,
											"end": 12486,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 12370,
											"end": 12486,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 12492,
											"end": 12629,
											"name": "tag",
											"source": 13,
											"value": "210"
										},
										{
											"begin": 12492,
											"end": 12629,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 12546,
											"end": 12551,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 12577,
											"end": 12583,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 12571,
											"end": 12584,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 12562,
											"end": 12584,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 12562,
											"end": 12584,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 12593,
											"end": 12623,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "354"
										},
										{
											"begin": 12617,
											"end": 12622,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 12593,
											"end": 12623,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "209"
										},
										{
											"begin": 12593,
											"end": 12623,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 12593,
											"end": 12623,
											"name": "tag",
											"source": 13,
											"value": "354"
										},
										{
											"begin": 12593,
											"end": 12623,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 12492,
											"end": 12629,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 12492,
											"end": 12629,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 12492,
											"end": 12629,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 12492,
											"end": 12629,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 12492,
											"end": 12629,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 12635,
											"end": 12980,
											"name": "tag",
											"source": 13,
											"value": "112"
										},
										{
											"begin": 12635,
											"end": 12980,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 12702,
											"end": 12708,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 12751,
											"end": 12753,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 12739,
											"end": 12748,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 12730,
											"end": 12737,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 12726,
											"end": 12749,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 12722,
											"end": 12754,
											"name": "SLT",
											"source": 13
										},
										{
											"begin": 12719,
											"end": 12838,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 12719,
											"end": 12838,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "356"
										},
										{
											"begin": 12719,
											"end": 12838,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 12757,
											"end": 12836,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "357"
										},
										{
											"begin": 12757,
											"end": 12836,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "176"
										},
										{
											"begin": 12757,
											"end": 12836,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 12757,
											"end": 12836,
											"name": "tag",
											"source": 13,
											"value": "357"
										},
										{
											"begin": 12757,
											"end": 12836,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 12719,
											"end": 12838,
											"name": "tag",
											"source": 13,
											"value": "356"
										},
										{
											"begin": 12719,
											"end": 12838,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 12877,
											"end": 12878,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 12902,
											"end": 12963,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "358"
										},
										{
											"begin": 12955,
											"end": 12962,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 12946,
											"end": 12952,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 12935,
											"end": 12944,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 12931,
											"end": 12953,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 12902,
											"end": 12963,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "210"
										},
										{
											"begin": 12902,
											"end": 12963,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 12902,
											"end": 12963,
											"name": "tag",
											"source": 13,
											"value": "358"
										},
										{
											"begin": 12902,
											"end": 12963,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 12892,
											"end": 12963,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 12892,
											"end": 12963,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 12848,
											"end": 12973,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 12635,
											"end": 12980,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 12635,
											"end": 12980,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 12635,
											"end": 12980,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 12635,
											"end": 12980,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 12635,
											"end": 12980,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 12986,
											"end": 13157,
											"name": "tag",
											"source": 13,
											"value": "211"
										},
										{
											"begin": 12986,
											"end": 13157,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 13126,
											"end": 13149,
											"name": "PUSH",
											"source": 13,
											"value": "546F6B656E207472616E73666572206661696C65640000000000000000000000"
										},
										{
											"begin": 13122,
											"end": 13123,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 13114,
											"end": 13120,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 13110,
											"end": 13124,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 13103,
											"end": 13150,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 12986,
											"end": 13157,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 12986,
											"end": 13157,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 13163,
											"end": 13529,
											"name": "tag",
											"source": 13,
											"value": "212"
										},
										{
											"begin": 13163,
											"end": 13529,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 13305,
											"end": 13308,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 13326,
											"end": 13393,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "361"
										},
										{
											"begin": 13390,
											"end": 13392,
											"name": "PUSH",
											"source": 13,
											"value": "15"
										},
										{
											"begin": 13385,
											"end": 13388,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 13326,
											"end": 13393,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "198"
										},
										{
											"begin": 13326,
											"end": 13393,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 13326,
											"end": 13393,
											"name": "tag",
											"source": 13,
											"value": "361"
										},
										{
											"begin": 13326,
											"end": 13393,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 13319,
											"end": 13393,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 13319,
											"end": 13393,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 13402,
											"end": 13495,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "362"
										},
										{
											"begin": 13491,
											"end": 13494,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 13402,
											"end": 13495,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "211"
										},
										{
											"begin": 13402,
											"end": 13495,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 13402,
											"end": 13495,
											"name": "tag",
											"source": 13,
											"value": "362"
										},
										{
											"begin": 13402,
											"end": 13495,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 13520,
											"end": 13522,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 13515,
											"end": 13518,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 13511,
											"end": 13523,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 13504,
											"end": 13523,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 13504,
											"end": 13523,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 13163,
											"end": 13529,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 13163,
											"end": 13529,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 13163,
											"end": 13529,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 13163,
											"end": 13529,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 13535,
											"end": 13954,
											"name": "tag",
											"source": 13,
											"value": "115"
										},
										{
											"begin": 13535,
											"end": 13954,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 13701,
											"end": 13705,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 13739,
											"end": 13741,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 13728,
											"end": 13737,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 13724,
											"end": 13742,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 13716,
											"end": 13742,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 13716,
											"end": 13742,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 13788,
											"end": 13797,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 13782,
											"end": 13786,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 13778,
											"end": 13798,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 13774,
											"end": 13775,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 13763,
											"end": 13772,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 13759,
											"end": 13776,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 13752,
											"end": 13799,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 13816,
											"end": 13947,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "364"
										},
										{
											"begin": 13942,
											"end": 13946,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 13816,
											"end": 13947,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "212"
										},
										{
											"begin": 13816,
											"end": 13947,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 13816,
											"end": 13947,
											"name": "tag",
											"source": 13,
											"value": "364"
										},
										{
											"begin": 13816,
											"end": 13947,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 13808,
											"end": 13947,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 13808,
											"end": 13947,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 13535,
											"end": 13954,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 13535,
											"end": 13954,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 13535,
											"end": 13954,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 13535,
											"end": 13954,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 13960,
											"end": 14045,
											"name": "tag",
											"source": 13,
											"value": "213"
										},
										{
											"begin": 13960,
											"end": 14045,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 14005,
											"end": 14012,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 14034,
											"end": 14039,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 14023,
											"end": 14039,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 14023,
											"end": 14039,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 13960,
											"end": 14045,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 13960,
											"end": 14045,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 13960,
											"end": 14045,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 13960,
											"end": 14045,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 14051,
											"end": 14152,
											"name": "tag",
											"source": 13,
											"value": "214"
										},
										{
											"begin": 14051,
											"end": 14152,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 14087,
											"end": 14094,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 14127,
											"end": 14145,
											"name": "PUSH",
											"source": 13,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 14120,
											"end": 14125,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 14116,
											"end": 14146,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 14105,
											"end": 14146,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 14105,
											"end": 14146,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 14051,
											"end": 14152,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 14051,
											"end": 14152,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 14051,
											"end": 14152,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 14051,
											"end": 14152,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 14158,
											"end": 14314,
											"name": "tag",
											"source": 13,
											"value": "215"
										},
										{
											"begin": 14158,
											"end": 14314,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 14215,
											"end": 14224,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 14248,
											"end": 14308,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "368"
										},
										{
											"begin": 14265,
											"end": 14307,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "369"
										},
										{
											"begin": 14274,
											"end": 14306,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "370"
										},
										{
											"begin": 14300,
											"end": 14305,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 14274,
											"end": 14306,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "213"
										},
										{
											"begin": 14274,
											"end": 14306,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 14274,
											"end": 14306,
											"name": "tag",
											"source": 13,
											"value": "370"
										},
										{
											"begin": 14274,
											"end": 14306,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 14265,
											"end": 14307,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "185"
										},
										{
											"begin": 14265,
											"end": 14307,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 14265,
											"end": 14307,
											"name": "tag",
											"source": 13,
											"value": "369"
										},
										{
											"begin": 14265,
											"end": 14307,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 14248,
											"end": 14308,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "214"
										},
										{
											"begin": 14248,
											"end": 14308,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 14248,
											"end": 14308,
											"name": "tag",
											"source": 13,
											"value": "368"
										},
										{
											"begin": 14248,
											"end": 14308,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 14235,
											"end": 14308,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 14235,
											"end": 14308,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 14158,
											"end": 14314,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 14158,
											"end": 14314,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 14158,
											"end": 14314,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 14158,
											"end": 14314,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 14320,
											"end": 14465,
											"name": "tag",
											"source": 13,
											"value": "216"
										},
										{
											"begin": 14320,
											"end": 14465,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 14414,
											"end": 14458,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "372"
										},
										{
											"begin": 14452,
											"end": 14457,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 14414,
											"end": 14458,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "215"
										},
										{
											"begin": 14414,
											"end": 14458,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 14414,
											"end": 14458,
											"name": "tag",
											"source": 13,
											"value": "372"
										},
										{
											"begin": 14414,
											"end": 14458,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 14409,
											"end": 14412,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 14402,
											"end": 14459,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 14320,
											"end": 14465,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 14320,
											"end": 14465,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 14320,
											"end": 14465,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 14471,
											"end": 14707,
											"name": "tag",
											"source": 13,
											"value": "130"
										},
										{
											"begin": 14471,
											"end": 14707,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 14571,
											"end": 14575,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 14609,
											"end": 14611,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 14598,
											"end": 14607,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 14594,
											"end": 14612,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 14586,
											"end": 14612,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 14586,
											"end": 14612,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 14622,
											"end": 14700,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "374"
										},
										{
											"begin": 14697,
											"end": 14698,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 14686,
											"end": 14695,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 14682,
											"end": 14699,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 14673,
											"end": 14679,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 14622,
											"end": 14700,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "216"
										},
										{
											"begin": 14622,
											"end": 14700,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 14622,
											"end": 14700,
											"name": "tag",
											"source": 13,
											"value": "374"
										},
										{
											"begin": 14622,
											"end": 14700,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 14471,
											"end": 14707,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 14471,
											"end": 14707,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 14471,
											"end": 14707,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 14471,
											"end": 14707,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 14471,
											"end": 14707,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol",
								"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol",
								"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol",
								"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol",
								"@openzeppelin/contracts/interfaces/IERC1967.sol",
								"@openzeppelin/contracts/interfaces/draft-IERC1822.sol",
								"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol",
								"@openzeppelin/contracts/proxy/beacon/IBeacon.sol",
								"@openzeppelin/contracts/token/ERC20/IERC20.sol",
								"@openzeppelin/contracts/utils/Address.sol",
								"@openzeppelin/contracts/utils/Errors.sol",
								"@openzeppelin/contracts/utils/StorageSlot.sol",
								"contracts/RewardManager.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"calculateReward(uint256,address)": "a18f07a0",
							"distributeReward(address,uint256,uint256)": "de5b71f7",
							"initialize(uint256,uint256)": "e4a30116",
							"maxRewardPoints()": "49880782",
							"owner()": "8da5cb5b",
							"platformFee()": "26232a2e",
							"renounceOwnership()": "715018a6",
							"rewardToken()": "f7c618c1",
							"setRewardToken(address)": "8aee8127",
							"setUCPIContract(address)": "fe95fc1a",
							"transferOwnership(address)": "f2fde38b",
							"ucpiContract()": "b1a5232e"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.30+commit.73712a01\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"InvalidInitialization\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NotInitializing\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint64\",\"name\":\"version\",\"type\":\"uint64\"}],\"name\":\"Initialized\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"points\",\"type\":\"uint256\"}],\"name\":\"RewardDistributed\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"}],\"name\":\"calculateReward\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"reward\",\"type\":\"uint256\"}],\"name\":\"distributeReward\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_fee\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_maxPoints\",\"type\":\"uint256\"}],\"name\":\"initialize\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"maxRewardPoints\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"platformFee\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"rewardToken\",\"outputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_token\",\"type\":\"address\"}],\"name\":\"setRewardToken\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_ucpi\",\"type\":\"address\"}],\"name\":\"setUCPIContract\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"ucpiContract\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"errors\":{\"InvalidInitialization()\":[{\"details\":\"The contract is already initialized.\"}],\"NotInitializing()\":[{\"details\":\"The contract is not initializing.\"}],\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}]},\"events\":{\"Initialized(uint64)\":{\"details\":\"Triggered when the contract has been initialized or reinitialized.\"}},\"kind\":\"dev\",\"methods\":{\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/RewardManager.sol\":\"RewardManager\"},\"evmVersion\":\"prague\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":{\"keccak256\":\"0xc163fcf9bb10138631a9ba5564df1fa25db9adff73bd9ee868a8ae1858fe093a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9706d43a0124053d9880f6e31a59f31bc0a6a3dc1acd66ce0a16e1111658c5f6\",\"dweb:/ipfs/QmUFmfowzkRwGtDu36cXV9SPTBHJ3n7dG9xQiK5B28jTf2\"]},\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":{\"keccak256\":\"0xdb4d24ee2c087c391d587cd17adfe5b3f9d93b3110b1388c2ab6c7c0ad1dcd05\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ab7b6d5b9e2b88176312967fe0f0e78f3d9a1422fa5e4b64e2440c35869b5d08\",\"dweb:/ipfs/QmXKYWWyzcLg1B2k7Sb1qkEXgLCYfXecR9wYW5obRzWP1Q\"]},\"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":{\"keccak256\":\"0x574a7451e42724f7de29e2855c392a8a5020acd695169466a18459467d719d63\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5bc189f63b639ee173dd7b6fecc39baf7113bf161776aea22b34c57fdd1872ec\",\"dweb:/ipfs/QmZAf2VtjDLRULqjJkde6LNsxAg12tUqpPqgUQQZbAjgtZ\"]},\"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":{\"keccak256\":\"0xdbef5f0c787055227243a7318ef74c8a5a1108ca3a07f2b3a00ef67769e1e397\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://08e39f23d5b4692f9a40803e53a8156b72b4c1f9902a88cd65ba964db103dab9\",\"dweb:/ipfs/QmPKn6EYDgpga7KtpkA8wV2yJCYGMtc9K4LkJfhKX2RVSV\"]},\"@openzeppelin/contracts/interfaces/IERC1967.sol\":{\"keccak256\":\"0xb25a4f11fa80c702bf5cd85adec90e6f6f507f32f4a8e6f5dbc31e8c10029486\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6917f8a323e7811f041aecd4d9fd6e92455a6fba38a797ac6f6e208c7912b79d\",\"dweb:/ipfs/QmShuYv55wYHGi4EFkDB8QfF7ZCHoKk2efyz3AWY1ExSq7\"]},\"@openzeppelin/contracts/interfaces/draft-IERC1822.sol\":{\"keccak256\":\"0xc42facb5094f2f35f066a7155bda23545e39a3156faef3ddc00185544443ba7d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d3b36282ab029b46bd082619a308a2ea11c309967b9425b7b7a6eb0b0c1c3196\",\"dweb:/ipfs/QmP2YVfDB2FoREax3vJu7QhDnyYRMw52WPrCD4vdT2kuDA\"]},\"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":{\"keccak256\":\"0x8decfa54cec979c824b044b8128cd91d713f72c71fd7dfa54974624d8c949898\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://271f914261a19d87117a777e0924ada545c16191ef9b00cc40b0134fc14ebc70\",\"dweb:/ipfs/QmdvVNWHGHQrGGPonZJs5NuzTevTjZRM2zayKrDJf7WBA2\"]},\"@openzeppelin/contracts/proxy/beacon/IBeacon.sol\":{\"keccak256\":\"0xc59a78b07b44b2cf2e8ab4175fca91e8eca1eee2df7357b8d2a8833e5ea1f64c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5aa4f07e65444784c29cd7bfcc2341b34381e4e5b5da9f0c5bd00d7f430e66fa\",\"dweb:/ipfs/QmWRMh4Q9DpaU9GvsiXmDdoNYMyyece9if7hnfLz7uqzWM\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]},\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0xaaa1d17c1129b127a4a401db2fbd72960e2671474be3d08cae71ccdc42f7624c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://cb2f27cd3952aa667e198fba0d9b7bcec52fbb12c16f013c25fe6fb52b29cc0e\",\"dweb:/ipfs/QmeuohBFoeyDPZA9JNCTEDz3VBfBD4EABWuWXVhHAuEpKR\"]},\"@openzeppelin/contracts/utils/Errors.sol\":{\"keccak256\":\"0x6afa713bfd42cf0f7656efa91201007ac465e42049d7de1d50753a373648c123\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ba1d02f4847670a1b83dec9f7d37f0b0418d6043447b69f3a29a5f9efc547fcf\",\"dweb:/ipfs/QmQ7iH2keLNUKgq2xSWcRmuBE5eZ3F5whYAkAGzCNNoEWB\"]},\"@openzeppelin/contracts/utils/StorageSlot.sol\":{\"keccak256\":\"0xcf74f855663ce2ae00ed8352666b7935f6cddea2932fdf2c3ecd30a9b1cd0e97\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9f660b1f351b757dfe01438e59888f31f33ded3afcf5cb5b0d9bf9aa6f320a8b\",\"dweb:/ipfs/QmarDJ5hZEgBtCmmrVzEZWjub9769eD686jmzb2XpSU1cM\"]},\"contracts/RewardManager.sol\":{\"keccak256\":\"0xcdaffd2de2f3c9bf46b6ccfb929bda033e2649d5a65942cb1e014d3a89732585\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://23fba182a013a52c45f33aad1b68a3344f48cbd331c969b496234ce1de31414e\",\"dweb:/ipfs/QmR6UZDfN7cRPbfwAo1z2GeydJVhb5uf1MZt5pyn6bwdRB\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 1521,
								"contract": "contracts/RewardManager.sol:RewardManager",
								"label": "platformFee",
								"offset": 0,
								"slot": "0",
								"type": "t_uint256"
							},
							{
								"astId": 1523,
								"contract": "contracts/RewardManager.sol:RewardManager",
								"label": "maxRewardPoints",
								"offset": 0,
								"slot": "1",
								"type": "t_uint256"
							},
							{
								"astId": 1526,
								"contract": "contracts/RewardManager.sol:RewardManager",
								"label": "rewardToken",
								"offset": 0,
								"slot": "2",
								"type": "t_contract(IERC20)1103"
							},
							{
								"astId": 1528,
								"contract": "contracts/RewardManager.sol:RewardManager",
								"label": "ucpiContract",
								"offset": 0,
								"slot": "3",
								"type": "t_address"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_contract(IERC20)1103": {
								"encoding": "inplace",
								"label": "contract IERC20",
								"numberOfBytes": "20"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol",
					"exportedSymbols": {
						"ContextUpgradeable": [
							690
						],
						"Initializable": [
							462
						],
						"OwnableUpgradeable": [
							194
						]
					},
					"id": 195,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "102:24:0"
						},
						{
							"absolutePath": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol",
							"file": "../utils/ContextUpgradeable.sol",
							"id": 3,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 195,
							"sourceUnit": 691,
							"src": "128:67:0",
							"symbolAliases": [
								{
									"foreign": {
										"id": 2,
										"name": "ContextUpgradeable",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 690,
										"src": "136:18:0",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol",
							"file": "../proxy/utils/Initializable.sol",
							"id": 5,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 195,
							"sourceUnit": 463,
							"src": "196:63:0",
							"symbolAliases": [
								{
									"foreign": {
										"id": 4,
										"name": "Initializable",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 462,
										"src": "204:13:0",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 7,
										"name": "Initializable",
										"nameLocations": [
											"789:13:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 462,
										"src": "789:13:0"
									},
									"id": 8,
									"nodeType": "InheritanceSpecifier",
									"src": "789:13:0"
								},
								{
									"baseName": {
										"id": 9,
										"name": "ContextUpgradeable",
										"nameLocations": [
											"804:18:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 690,
										"src": "804:18:0"
									},
									"id": 10,
									"nodeType": "InheritanceSpecifier",
									"src": "804:18:0"
								}
							],
							"canonicalName": "OwnableUpgradeable",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 6,
								"nodeType": "StructuredDocumentation",
								"src": "261:487:0",
								"text": " @dev Contract module which provides a basic access control mechanism, where\n there is an account (an owner) that can be granted exclusive access to\n specific functions.\n The initial owner is set to the address provided by the deployer. This can\n later be changed with {transferOwnership}.\n This module is used through inheritance. It will make available the modifier\n `onlyOwner`, which can be applied to your functions to restrict their use to\n the owner."
							},
							"fullyImplemented": true,
							"id": 194,
							"linearizedBaseContracts": [
								194,
								690,
								462
							],
							"name": "OwnableUpgradeable",
							"nameLocation": "767:18:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"canonicalName": "OwnableUpgradeable.OwnableStorage",
									"documentation": {
										"id": 11,
										"nodeType": "StructuredDocumentation",
										"src": "829:65:0",
										"text": "@custom:storage-location erc7201:openzeppelin.storage.Ownable"
									},
									"id": 14,
									"members": [
										{
											"constant": false,
											"id": 13,
											"mutability": "mutable",
											"name": "_owner",
											"nameLocation": "939:6:0",
											"nodeType": "VariableDeclaration",
											"scope": 14,
											"src": "931:14:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 12,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "931:7:0",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "OwnableStorage",
									"nameLocation": "906:14:0",
									"nodeType": "StructDefinition",
									"scope": 194,
									"src": "899:53:0",
									"visibility": "public"
								},
								{
									"constant": true,
									"id": 17,
									"mutability": "constant",
									"name": "OwnableStorageLocation",
									"nameLocation": "1094:22:0",
									"nodeType": "VariableDeclaration",
									"scope": 194,
									"src": "1069:116:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes32",
										"typeString": "bytes32"
									},
									"typeName": {
										"id": 15,
										"name": "bytes32",
										"nodeType": "ElementaryTypeName",
										"src": "1069:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"value": {
										"hexValue": "307839303136643039643732643430666461653266643863656163366236323334633737303632313466643339633163643165363039613035323863313939333030",
										"id": 16,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1119:66:0",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_65173360639460082030725920392146925864023520599682862633725751242436743107328_by_1",
											"typeString": "int_const 6517...(69 digits omitted)...7328"
										},
										"value": "0x9016d09d72d40fdae2fd8ceac6b6234c7706214fd39c1cd1e609a0528c199300"
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 24,
										"nodeType": "Block",
										"src": "1270:81:0",
										"statements": [
											{
												"AST": {
													"nativeSrc": "1289:56:0",
													"nodeType": "YulBlock",
													"src": "1289:56:0",
													"statements": [
														{
															"nativeSrc": "1303:32:0",
															"nodeType": "YulAssignment",
															"src": "1303:32:0",
															"value": {
																"name": "OwnableStorageLocation",
																"nativeSrc": "1313:22:0",
																"nodeType": "YulIdentifier",
																"src": "1313:22:0"
															},
															"variableNames": [
																{
																	"name": "$.slot",
																	"nativeSrc": "1303:6:0",
																	"nodeType": "YulIdentifier",
																	"src": "1303:6:0"
																}
															]
														}
													]
												},
												"evmVersion": "prague",
												"externalReferences": [
													{
														"declaration": 21,
														"isOffset": false,
														"isSlot": true,
														"src": "1303:6:0",
														"suffix": "slot",
														"valueSize": 1
													},
													{
														"declaration": 17,
														"isOffset": false,
														"isSlot": false,
														"src": "1313:22:0",
														"valueSize": 1
													}
												],
												"id": 23,
												"nodeType": "InlineAssembly",
												"src": "1280:65:0"
											}
										]
									},
									"id": 25,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_getOwnableStorage",
									"nameLocation": "1201:18:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 18,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1219:2:0"
									},
									"returnParameters": {
										"id": 22,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 21,
												"mutability": "mutable",
												"name": "$",
												"nameLocation": "1267:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 25,
												"src": "1244:24:0",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_OwnableStorage_$14_storage_ptr",
													"typeString": "struct OwnableUpgradeable.OwnableStorage"
												},
												"typeName": {
													"id": 20,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 19,
														"name": "OwnableStorage",
														"nameLocations": [
															"1244:14:0"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 14,
														"src": "1244:14:0"
													},
													"referencedDeclaration": 14,
													"src": "1244:14:0",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_OwnableStorage_$14_storage_ptr",
														"typeString": "struct OwnableUpgradeable.OwnableStorage"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1243:26:0"
									},
									"scope": 194,
									"src": "1192:159:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "private"
								},
								{
									"documentation": {
										"id": 26,
										"nodeType": "StructuredDocumentation",
										"src": "1357:85:0",
										"text": " @dev The caller account is not authorized to perform an operation."
									},
									"errorSelector": "118cdaa7",
									"id": 30,
									"name": "OwnableUnauthorizedAccount",
									"nameLocation": "1453:26:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 29,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 28,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "1488:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 30,
												"src": "1480:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 27,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1480:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1479:17:0"
									},
									"src": "1447:50:0"
								},
								{
									"documentation": {
										"id": 31,
										"nodeType": "StructuredDocumentation",
										"src": "1503:82:0",
										"text": " @dev The owner is not a valid owner account. (eg. `address(0)`)"
									},
									"errorSelector": "1e4fbdf7",
									"id": 35,
									"name": "OwnableInvalidOwner",
									"nameLocation": "1596:19:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 34,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 33,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1624:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 35,
												"src": "1616:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 32,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1616:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1615:15:0"
									},
									"src": "1590:41:0"
								},
								{
									"anonymous": false,
									"eventSelector": "8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0",
									"id": 41,
									"name": "OwnershipTransferred",
									"nameLocation": "1643:20:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 40,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 37,
												"indexed": true,
												"mutability": "mutable",
												"name": "previousOwner",
												"nameLocation": "1680:13:0",
												"nodeType": "VariableDeclaration",
												"scope": 41,
												"src": "1664:29:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 36,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1664:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 39,
												"indexed": true,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "1711:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 41,
												"src": "1695:24:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 38,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1695:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1663:57:0"
									},
									"src": "1637:84:0"
								},
								{
									"body": {
										"id": 53,
										"nodeType": "Block",
										"src": "1919:55:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 50,
															"name": "initialOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 44,
															"src": "1954:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 49,
														"name": "__Ownable_init_unchained",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 81,
														"src": "1929:24:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 51,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1929:38:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 52,
												"nodeType": "ExpressionStatement",
												"src": "1929:38:0"
											}
										]
									},
									"documentation": {
										"id": 42,
										"nodeType": "StructuredDocumentation",
										"src": "1727:115:0",
										"text": " @dev Initializes the contract setting the address provided by the deployer as the initial owner."
									},
									"id": 54,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 47,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 46,
												"name": "onlyInitializing",
												"nameLocations": [
													"1902:16:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 357,
												"src": "1902:16:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "1902:16:0"
										}
									],
									"name": "__Ownable_init",
									"nameLocation": "1856:14:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 45,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 44,
												"mutability": "mutable",
												"name": "initialOwner",
												"nameLocation": "1879:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 54,
												"src": "1871:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 43,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1871:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1870:22:0"
									},
									"returnParameters": {
										"id": 48,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1919:0:0"
									},
									"scope": 194,
									"src": "1847:127:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 80,
										"nodeType": "Block",
										"src": "2062:153:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 66,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 61,
														"name": "initialOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 56,
														"src": "2076:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 64,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2100:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 63,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "2092:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 62,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "2092:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 65,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2092:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "2076:26:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 75,
												"nodeType": "IfStatement",
												"src": "2072:95:0",
												"trueBody": {
													"id": 74,
													"nodeType": "Block",
													"src": "2104:63:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 70,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "2153:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 69,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "2145:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 68,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "2145:7:0",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 71,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "2145:10:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 67,
																	"name": "OwnableInvalidOwner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 35,
																	"src": "2125:19:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 72,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2125:31:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 73,
															"nodeType": "RevertStatement",
															"src": "2118:38:0"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 77,
															"name": "initialOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 56,
															"src": "2195:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 76,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 193,
														"src": "2176:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 78,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2176:32:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 79,
												"nodeType": "ExpressionStatement",
												"src": "2176:32:0"
											}
										]
									},
									"id": 81,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 59,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 58,
												"name": "onlyInitializing",
												"nameLocations": [
													"2045:16:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 357,
												"src": "2045:16:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "2045:16:0"
										}
									],
									"name": "__Ownable_init_unchained",
									"nameLocation": "1989:24:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 57,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 56,
												"mutability": "mutable",
												"name": "initialOwner",
												"nameLocation": "2022:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 81,
												"src": "2014:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 55,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2014:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2013:22:0"
									},
									"returnParameters": {
										"id": 60,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2062:0:0"
									},
									"scope": 194,
									"src": "1980:235:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 88,
										"nodeType": "Block",
										"src": "2324:41:0",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 84,
														"name": "_checkOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 122,
														"src": "2334:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$__$",
															"typeString": "function () view"
														}
													},
													"id": 85,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2334:13:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 86,
												"nodeType": "ExpressionStatement",
												"src": "2334:13:0"
											},
											{
												"id": 87,
												"nodeType": "PlaceholderStatement",
												"src": "2357:1:0"
											}
										]
									},
									"documentation": {
										"id": 82,
										"nodeType": "StructuredDocumentation",
										"src": "2221:77:0",
										"text": " @dev Throws if called by any account other than the owner."
									},
									"id": 89,
									"name": "onlyOwner",
									"nameLocation": "2312:9:0",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 83,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2321:2:0"
									},
									"src": "2303:62:0",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 104,
										"nodeType": "Block",
										"src": "2496:89:0",
										"statements": [
											{
												"assignments": [
													97
												],
												"declarations": [
													{
														"constant": false,
														"id": 97,
														"mutability": "mutable",
														"name": "$",
														"nameLocation": "2529:1:0",
														"nodeType": "VariableDeclaration",
														"scope": 104,
														"src": "2506:24:0",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_OwnableStorage_$14_storage_ptr",
															"typeString": "struct OwnableUpgradeable.OwnableStorage"
														},
														"typeName": {
															"id": 96,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 95,
																"name": "OwnableStorage",
																"nameLocations": [
																	"2506:14:0"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 14,
																"src": "2506:14:0"
															},
															"referencedDeclaration": 14,
															"src": "2506:14:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_OwnableStorage_$14_storage_ptr",
																"typeString": "struct OwnableUpgradeable.OwnableStorage"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 100,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 98,
														"name": "_getOwnableStorage",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 25,
														"src": "2533:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$__$returns$_t_struct$_OwnableStorage_$14_storage_ptr_$",
															"typeString": "function () pure returns (struct OwnableUpgradeable.OwnableStorage storage pointer)"
														}
													},
													"id": 99,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2533:20:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_OwnableStorage_$14_storage_ptr",
														"typeString": "struct OwnableUpgradeable.OwnableStorage storage pointer"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2506:47:0"
											},
											{
												"expression": {
													"expression": {
														"id": 101,
														"name": "$",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 97,
														"src": "2570:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_OwnableStorage_$14_storage_ptr",
															"typeString": "struct OwnableUpgradeable.OwnableStorage storage pointer"
														}
													},
													"id": 102,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "2572:6:0",
													"memberName": "_owner",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 13,
													"src": "2570:8:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 94,
												"id": 103,
												"nodeType": "Return",
												"src": "2563:15:0"
											}
										]
									},
									"documentation": {
										"id": 90,
										"nodeType": "StructuredDocumentation",
										"src": "2371:65:0",
										"text": " @dev Returns the address of the current owner."
									},
									"functionSelector": "8da5cb5b",
									"id": 105,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "owner",
									"nameLocation": "2450:5:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 91,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2455:2:0"
									},
									"returnParameters": {
										"id": 94,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 93,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 105,
												"src": "2487:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 92,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2487:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2486:9:0"
									},
									"scope": 194,
									"src": "2441:144:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 121,
										"nodeType": "Block",
										"src": "2703:117:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 113,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 109,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 105,
															"src": "2717:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																"typeString": "function () view returns (address)"
															}
														},
														"id": 110,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2717:7:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 111,
															"name": "_msgSender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 672,
															"src": "2728:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																"typeString": "function () view returns (address)"
															}
														},
														"id": 112,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2728:12:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "2717:23:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 120,
												"nodeType": "IfStatement",
												"src": "2713:101:0",
												"trueBody": {
													"id": 119,
													"nodeType": "Block",
													"src": "2742:72:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 115,
																			"name": "_msgSender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 672,
																			"src": "2790:10:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																				"typeString": "function () view returns (address)"
																			}
																		},
																		"id": 116,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "2790:12:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 114,
																	"name": "OwnableUnauthorizedAccount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 30,
																	"src": "2763:26:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 117,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2763:40:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 118,
															"nodeType": "RevertStatement",
															"src": "2756:47:0"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 106,
										"nodeType": "StructuredDocumentation",
										"src": "2591:62:0",
										"text": " @dev Throws if the sender is not the owner."
									},
									"id": 122,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_checkOwner",
									"nameLocation": "2667:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 107,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2678:2:0"
									},
									"returnParameters": {
										"id": 108,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2703:0:0"
									},
									"scope": 194,
									"src": "2658:162:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 135,
										"nodeType": "Block",
										"src": "3209:47:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 131,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "3246:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 130,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "3238:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 129,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "3238:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 132,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3238:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 128,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 193,
														"src": "3219:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 133,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3219:30:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 134,
												"nodeType": "ExpressionStatement",
												"src": "3219:30:0"
											}
										]
									},
									"documentation": {
										"id": 123,
										"nodeType": "StructuredDocumentation",
										"src": "2826:324:0",
										"text": " @dev Leaves the contract without owner. It will not be possible to call\n `onlyOwner` functions. Can only be called by the current owner.\n NOTE: Renouncing ownership will leave the contract without an owner,\n thereby disabling any functionality that is only available to the owner."
									},
									"functionSelector": "715018a6",
									"id": 136,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 126,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 125,
												"name": "onlyOwner",
												"nameLocations": [
													"3199:9:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 89,
												"src": "3199:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "3199:9:0"
										}
									],
									"name": "renounceOwnership",
									"nameLocation": "3164:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 124,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3181:2:0"
									},
									"returnParameters": {
										"id": 127,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3209:0:0"
									},
									"scope": 194,
									"src": "3155:101:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 163,
										"nodeType": "Block",
										"src": "3475:145:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 149,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 144,
														"name": "newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 139,
														"src": "3489:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 147,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "3509:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 146,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "3501:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 145,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "3501:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 148,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "3501:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "3489:22:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 158,
												"nodeType": "IfStatement",
												"src": "3485:91:0",
												"trueBody": {
													"id": 157,
													"nodeType": "Block",
													"src": "3513:63:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 153,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "3562:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 152,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "3554:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 151,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "3554:7:0",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 154,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "3554:10:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 150,
																	"name": "OwnableInvalidOwner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 35,
																	"src": "3534:19:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 155,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3534:31:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 156,
															"nodeType": "RevertStatement",
															"src": "3527:38:0"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 160,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 139,
															"src": "3604:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 159,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 193,
														"src": "3585:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 161,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3585:28:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 162,
												"nodeType": "ExpressionStatement",
												"src": "3585:28:0"
											}
										]
									},
									"documentation": {
										"id": 137,
										"nodeType": "StructuredDocumentation",
										"src": "3262:138:0",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Can only be called by the current owner."
									},
									"functionSelector": "f2fde38b",
									"id": 164,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 142,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 141,
												"name": "onlyOwner",
												"nameLocations": [
													"3465:9:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 89,
												"src": "3465:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "3465:9:0"
										}
									],
									"name": "transferOwnership",
									"nameLocation": "3414:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 140,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 139,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "3440:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 164,
												"src": "3432:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 138,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3432:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3431:18:0"
									},
									"returnParameters": {
										"id": 143,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3475:0:0"
									},
									"scope": 194,
									"src": "3405:215:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 192,
										"nodeType": "Block",
										"src": "3837:185:0",
										"statements": [
											{
												"assignments": [
													172
												],
												"declarations": [
													{
														"constant": false,
														"id": 172,
														"mutability": "mutable",
														"name": "$",
														"nameLocation": "3870:1:0",
														"nodeType": "VariableDeclaration",
														"scope": 192,
														"src": "3847:24:0",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_OwnableStorage_$14_storage_ptr",
															"typeString": "struct OwnableUpgradeable.OwnableStorage"
														},
														"typeName": {
															"id": 171,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 170,
																"name": "OwnableStorage",
																"nameLocations": [
																	"3847:14:0"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 14,
																"src": "3847:14:0"
															},
															"referencedDeclaration": 14,
															"src": "3847:14:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_OwnableStorage_$14_storage_ptr",
																"typeString": "struct OwnableUpgradeable.OwnableStorage"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 175,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 173,
														"name": "_getOwnableStorage",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 25,
														"src": "3874:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$__$returns$_t_struct$_OwnableStorage_$14_storage_ptr_$",
															"typeString": "function () pure returns (struct OwnableUpgradeable.OwnableStorage storage pointer)"
														}
													},
													"id": 174,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3874:20:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_OwnableStorage_$14_storage_ptr",
														"typeString": "struct OwnableUpgradeable.OwnableStorage storage pointer"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3847:47:0"
											},
											{
												"assignments": [
													177
												],
												"declarations": [
													{
														"constant": false,
														"id": 177,
														"mutability": "mutable",
														"name": "oldOwner",
														"nameLocation": "3912:8:0",
														"nodeType": "VariableDeclaration",
														"scope": 192,
														"src": "3904:16:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 176,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "3904:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 180,
												"initialValue": {
													"expression": {
														"id": 178,
														"name": "$",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 172,
														"src": "3923:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_OwnableStorage_$14_storage_ptr",
															"typeString": "struct OwnableUpgradeable.OwnableStorage storage pointer"
														}
													},
													"id": 179,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "3925:6:0",
													"memberName": "_owner",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 13,
													"src": "3923:8:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3904:27:0"
											},
											{
												"expression": {
													"id": 185,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 181,
															"name": "$",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 172,
															"src": "3941:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_OwnableStorage_$14_storage_ptr",
																"typeString": "struct OwnableUpgradeable.OwnableStorage storage pointer"
															}
														},
														"id": 183,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "3943:6:0",
														"memberName": "_owner",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 13,
														"src": "3941:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 184,
														"name": "newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 167,
														"src": "3952:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "3941:19:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 186,
												"nodeType": "ExpressionStatement",
												"src": "3941:19:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 188,
															"name": "oldOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 177,
															"src": "3996:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 189,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 167,
															"src": "4006:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 187,
														"name": "OwnershipTransferred",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 41,
														"src": "3975:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 190,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3975:40:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 191,
												"nodeType": "EmitStatement",
												"src": "3970:45:0"
											}
										]
									},
									"documentation": {
										"id": 165,
										"nodeType": "StructuredDocumentation",
										"src": "3626:143:0",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Internal function without access restriction."
									},
									"id": 193,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transferOwnership",
									"nameLocation": "3783:18:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 168,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 167,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "3810:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 193,
												"src": "3802:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 166,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3802:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3801:18:0"
									},
									"returnParameters": {
										"id": 169,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3837:0:0"
									},
									"scope": 194,
									"src": "3774:248:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 195,
							"src": "749:3275:0",
							"usedErrors": [
								30,
								35,
								211,
								214
							],
							"usedEvents": [
								41,
								219
							]
						}
					],
					"src": "102:3923:0"
				},
				"id": 0
			},
			"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol",
					"exportedSymbols": {
						"Initializable": [
							462
						]
					},
					"id": 463,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 196,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "113:24:1"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"canonicalName": "Initializable",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 197,
								"nodeType": "StructuredDocumentation",
								"src": "139:2209:1",
								"text": " @dev This is a base contract to aid in writing upgradeable contracts, or any kind of contract that will be deployed\n behind a proxy. Since proxied contracts do not make use of a constructor, it's common to move constructor logic to an\n external initializer function, usually called `initialize`. It then becomes necessary to protect this initializer\n function so it can only be called once. The {initializer} modifier provided by this contract will have this effect.\n The initialization functions use a version number. Once a version number is used, it is consumed and cannot be\n reused. This mechanism prevents re-execution of each \"step\" but allows the creation of new initialization steps in\n case an upgrade adds a module that needs to be initialized.\n For example:\n [.hljs-theme-light.nopadding]\n ```solidity\n contract MyToken is ERC20Upgradeable {\n     function initialize() initializer public {\n         __ERC20_init(\"MyToken\", \"MTK\");\n     }\n }\n contract MyTokenV2 is MyToken, ERC20PermitUpgradeable {\n     function initializeV2() reinitializer(2) public {\n         __ERC20Permit_init(\"MyToken\");\n     }\n }\n ```\n TIP: To avoid leaving the proxy in an uninitialized state, the initializer function should be called as early as\n possible by providing the encoded function call as the `_data` argument to {ERC1967Proxy-constructor}.\n CAUTION: When used with inheritance, manual care must be taken to not invoke a parent initializer twice, or to ensure\n that all initializers are idempotent. This is not verified automatically as constructors are by Solidity.\n [CAUTION]\n ====\n Avoid leaving a contract uninitialized.\n An uninitialized contract can be taken over by an attacker. This applies to both a proxy and its implementation\n contract, which may impact the proxy. To prevent the implementation contract from being used, you should invoke\n the {_disableInitializers} function in the constructor to automatically lock it when it is deployed:\n [.hljs-theme-light.nopadding]\n ```\n /// @custom:oz-upgrades-unsafe-allow constructor\n constructor() {\n     _disableInitializers();\n }\n ```\n ===="
							},
							"fullyImplemented": true,
							"id": 462,
							"linearizedBaseContracts": [
								462
							],
							"name": "Initializable",
							"nameLocation": "2367:13:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"canonicalName": "Initializable.InitializableStorage",
									"documentation": {
										"id": 198,
										"nodeType": "StructuredDocumentation",
										"src": "2387:293:1",
										"text": " @dev Storage of the initializable contract.\n It's implemented on a custom ERC-7201 namespace to reduce the risk of storage collisions\n when using with upgradeable contracts.\n @custom:storage-location erc7201:openzeppelin.storage.Initializable"
									},
									"id": 205,
									"members": [
										{
											"constant": false,
											"id": 201,
											"mutability": "mutable",
											"name": "_initialized",
											"nameLocation": "2820:12:1",
											"nodeType": "VariableDeclaration",
											"scope": 205,
											"src": "2813:19:1",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint64",
												"typeString": "uint64"
											},
											"typeName": {
												"id": 200,
												"name": "uint64",
												"nodeType": "ElementaryTypeName",
												"src": "2813:6:1",
												"typeDescriptions": {
													"typeIdentifier": "t_uint64",
													"typeString": "uint64"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 204,
											"mutability": "mutable",
											"name": "_initializing",
											"nameLocation": "2955:13:1",
											"nodeType": "VariableDeclaration",
											"scope": 205,
											"src": "2950:18:1",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bool",
												"typeString": "bool"
											},
											"typeName": {
												"id": 203,
												"name": "bool",
												"nodeType": "ElementaryTypeName",
												"src": "2950:4:1",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "InitializableStorage",
									"nameLocation": "2692:20:1",
									"nodeType": "StructDefinition",
									"scope": 462,
									"src": "2685:290:1",
									"visibility": "public"
								},
								{
									"constant": true,
									"id": 208,
									"mutability": "constant",
									"name": "INITIALIZABLE_STORAGE",
									"nameLocation": "3123:21:1",
									"nodeType": "VariableDeclaration",
									"scope": 462,
									"src": "3098:115:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes32",
										"typeString": "bytes32"
									},
									"typeName": {
										"id": 206,
										"name": "bytes32",
										"nodeType": "ElementaryTypeName",
										"src": "3098:7:1",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"value": {
										"hexValue": "307866306335376531363834306466303430663135303838646332663831666533393163333932336265633733653233613936363265666339633232396336613030",
										"id": 207,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "3147:66:1",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_108904022758810753673719992590105913556127789646572562039383141376366747609600_by_1",
											"typeString": "int_const 1089...(70 digits omitted)...9600"
										},
										"value": "0xf0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a00"
									},
									"visibility": "private"
								},
								{
									"documentation": {
										"id": 209,
										"nodeType": "StructuredDocumentation",
										"src": "3220:60:1",
										"text": " @dev The contract is already initialized."
									},
									"errorSelector": "f92ee8a9",
									"id": 211,
									"name": "InvalidInitialization",
									"nameLocation": "3291:21:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 210,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3312:2:1"
									},
									"src": "3285:30:1"
								},
								{
									"documentation": {
										"id": 212,
										"nodeType": "StructuredDocumentation",
										"src": "3321:57:1",
										"text": " @dev The contract is not initializing."
									},
									"errorSelector": "d7e6bcf8",
									"id": 214,
									"name": "NotInitializing",
									"nameLocation": "3389:15:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 213,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3404:2:1"
									},
									"src": "3383:24:1"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 215,
										"nodeType": "StructuredDocumentation",
										"src": "3413:90:1",
										"text": " @dev Triggered when the contract has been initialized or reinitialized."
									},
									"eventSelector": "c7f505b2f371ae2175ee4913f4499e1f2633a7b5936321eed1cdaeb6115181d2",
									"id": 219,
									"name": "Initialized",
									"nameLocation": "3514:11:1",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 218,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 217,
												"indexed": false,
												"mutability": "mutable",
												"name": "version",
												"nameLocation": "3533:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 219,
												"src": "3526:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint64",
													"typeString": "uint64"
												},
												"typeName": {
													"id": 216,
													"name": "uint64",
													"nodeType": "ElementaryTypeName",
													"src": "3526:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3525:16:1"
									},
									"src": "3508:34:1"
								},
								{
									"body": {
										"id": 301,
										"nodeType": "Block",
										"src": "4092:1079:1",
										"statements": [
											{
												"assignments": [
													224
												],
												"declarations": [
													{
														"constant": false,
														"id": 224,
														"mutability": "mutable",
														"name": "$",
														"nameLocation": "4187:1:1",
														"nodeType": "VariableDeclaration",
														"scope": 301,
														"src": "4158:30:1",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_InitializableStorage_$205_storage_ptr",
															"typeString": "struct Initializable.InitializableStorage"
														},
														"typeName": {
															"id": 223,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 222,
																"name": "InitializableStorage",
																"nameLocations": [
																	"4158:20:1"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 205,
																"src": "4158:20:1"
															},
															"referencedDeclaration": 205,
															"src": "4158:20:1",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_InitializableStorage_$205_storage_ptr",
																"typeString": "struct Initializable.InitializableStorage"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 227,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 225,
														"name": "_getInitializableStorage",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 461,
														"src": "4191:24:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$__$returns$_t_struct$_InitializableStorage_$205_storage_ptr_$",
															"typeString": "function () pure returns (struct Initializable.InitializableStorage storage pointer)"
														}
													},
													"id": 226,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4191:26:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_InitializableStorage_$205_storage_ptr",
														"typeString": "struct Initializable.InitializableStorage storage pointer"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4158:59:1"
											},
											{
												"assignments": [
													229
												],
												"declarations": [
													{
														"constant": false,
														"id": 229,
														"mutability": "mutable",
														"name": "isTopLevelCall",
														"nameLocation": "4284:14:1",
														"nodeType": "VariableDeclaration",
														"scope": 301,
														"src": "4279:19:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 228,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "4279:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 233,
												"initialValue": {
													"id": 232,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "4301:16:1",
													"subExpression": {
														"expression": {
															"id": 230,
															"name": "$",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 224,
															"src": "4302:1:1",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_InitializableStorage_$205_storage_ptr",
																"typeString": "struct Initializable.InitializableStorage storage pointer"
															}
														},
														"id": 231,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "4304:13:1",
														"memberName": "_initializing",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 204,
														"src": "4302:15:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4279:38:1"
											},
											{
												"assignments": [
													235
												],
												"declarations": [
													{
														"constant": false,
														"id": 235,
														"mutability": "mutable",
														"name": "initialized",
														"nameLocation": "4334:11:1",
														"nodeType": "VariableDeclaration",
														"scope": 301,
														"src": "4327:18:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint64",
															"typeString": "uint64"
														},
														"typeName": {
															"id": 234,
															"name": "uint64",
															"nodeType": "ElementaryTypeName",
															"src": "4327:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint64",
																"typeString": "uint64"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 238,
												"initialValue": {
													"expression": {
														"id": 236,
														"name": "$",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 224,
														"src": "4348:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_InitializableStorage_$205_storage_ptr",
															"typeString": "struct Initializable.InitializableStorage storage pointer"
														}
													},
													"id": 237,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "4350:12:1",
													"memberName": "_initialized",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 201,
													"src": "4348:14:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4327:35:1"
											},
											{
												"assignments": [
													240
												],
												"declarations": [
													{
														"constant": false,
														"id": 240,
														"mutability": "mutable",
														"name": "initialSetup",
														"nameLocation": "4709:12:1",
														"nodeType": "VariableDeclaration",
														"scope": 301,
														"src": "4704:17:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 239,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "4704:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 246,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 245,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint64",
															"typeString": "uint64"
														},
														"id": 243,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 241,
															"name": "initialized",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 235,
															"src": "4724:11:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint64",
																"typeString": "uint64"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"hexValue": "30",
															"id": 242,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4739:1:1",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "4724:16:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"id": 244,
														"name": "isTopLevelCall",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 229,
														"src": "4744:14:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "4724:34:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4704:54:1"
											},
											{
												"assignments": [
													248
												],
												"declarations": [
													{
														"constant": false,
														"id": 248,
														"mutability": "mutable",
														"name": "construction",
														"nameLocation": "4773:12:1",
														"nodeType": "VariableDeclaration",
														"scope": 301,
														"src": "4768:17:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 247,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "4768:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 261,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 260,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint64",
															"typeString": "uint64"
														},
														"id": 251,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 249,
															"name": "initialized",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 235,
															"src": "4788:11:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint64",
																"typeString": "uint64"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"hexValue": "31",
															"id": 250,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4803:1:1",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														},
														"src": "4788:16:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 259,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"expression": {
																"expression": {
																	"arguments": [
																		{
																			"id": 254,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967268,
																			"src": "4816:4:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_Initializable_$462",
																				"typeString": "contract Initializable"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_Initializable_$462",
																				"typeString": "contract Initializable"
																			}
																		],
																		"id": 253,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "4808:7:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 252,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "4808:7:1",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 255,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "4808:13:1",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"id": 256,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "4822:4:1",
																"memberName": "code",
																"nodeType": "MemberAccess",
																"src": "4808:18:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"id": 257,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "4827:6:1",
															"memberName": "length",
															"nodeType": "MemberAccess",
															"src": "4808:25:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"hexValue": "30",
															"id": 258,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4837:1:1",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "4808:30:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "4788:50:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4768:70:1"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 266,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 263,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "!",
														"prefix": true,
														"src": "4853:13:1",
														"subExpression": {
															"id": 262,
															"name": "initialSetup",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 240,
															"src": "4854:12:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"id": 265,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "!",
														"prefix": true,
														"src": "4870:13:1",
														"subExpression": {
															"id": 264,
															"name": "construction",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 248,
															"src": "4871:12:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "4853:30:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 271,
												"nodeType": "IfStatement",
												"src": "4849:91:1",
												"trueBody": {
													"id": 270,
													"nodeType": "Block",
													"src": "4885:55:1",
													"statements": [
														{
															"errorCall": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 267,
																	"name": "InvalidInitialization",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 211,
																	"src": "4906:21:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
																		"typeString": "function () pure returns (error)"
																	}
																},
																"id": 268,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4906:23:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 269,
															"nodeType": "RevertStatement",
															"src": "4899:30:1"
														}
													]
												}
											},
											{
												"expression": {
													"id": 276,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 272,
															"name": "$",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 224,
															"src": "4949:1:1",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_InitializableStorage_$205_storage_ptr",
																"typeString": "struct Initializable.InitializableStorage storage pointer"
															}
														},
														"id": 274,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "4951:12:1",
														"memberName": "_initialized",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 201,
														"src": "4949:14:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint64",
															"typeString": "uint64"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "31",
														"id": 275,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "4966:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"src": "4949:18:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													}
												},
												"id": 277,
												"nodeType": "ExpressionStatement",
												"src": "4949:18:1"
											},
											{
												"condition": {
													"id": 278,
													"name": "isTopLevelCall",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 229,
													"src": "4981:14:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 286,
												"nodeType": "IfStatement",
												"src": "4977:67:1",
												"trueBody": {
													"id": 285,
													"nodeType": "Block",
													"src": "4997:47:1",
													"statements": [
														{
															"expression": {
																"id": 283,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"expression": {
																		"id": 279,
																		"name": "$",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 224,
																		"src": "5011:1:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_InitializableStorage_$205_storage_ptr",
																			"typeString": "struct Initializable.InitializableStorage storage pointer"
																		}
																	},
																	"id": 281,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"memberLocation": "5013:13:1",
																	"memberName": "_initializing",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 204,
																	"src": "5011:15:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"hexValue": "74727565",
																	"id": 282,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "5029:4:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																"src": "5011:22:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 284,
															"nodeType": "ExpressionStatement",
															"src": "5011:22:1"
														}
													]
												}
											},
											{
												"id": 287,
												"nodeType": "PlaceholderStatement",
												"src": "5053:1:1"
											},
											{
												"condition": {
													"id": 288,
													"name": "isTopLevelCall",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 229,
													"src": "5068:14:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 300,
												"nodeType": "IfStatement",
												"src": "5064:101:1",
												"trueBody": {
													"id": 299,
													"nodeType": "Block",
													"src": "5084:81:1",
													"statements": [
														{
															"expression": {
																"id": 293,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"expression": {
																		"id": 289,
																		"name": "$",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 224,
																		"src": "5098:1:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_InitializableStorage_$205_storage_ptr",
																			"typeString": "struct Initializable.InitializableStorage storage pointer"
																		}
																	},
																	"id": 291,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"memberLocation": "5100:13:1",
																	"memberName": "_initializing",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 204,
																	"src": "5098:15:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"hexValue": "66616c7365",
																	"id": 292,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "5116:5:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "false"
																},
																"src": "5098:23:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 294,
															"nodeType": "ExpressionStatement",
															"src": "5098:23:1"
														},
														{
															"eventCall": {
																"arguments": [
																	{
																		"hexValue": "31",
																		"id": 296,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "5152:1:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_1_by_1",
																			"typeString": "int_const 1"
																		},
																		"value": "1"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_1_by_1",
																			"typeString": "int_const 1"
																		}
																	],
																	"id": 295,
																	"name": "Initialized",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 219,
																	"src": "5140:11:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_event_nonpayable$_t_uint64_$returns$__$",
																		"typeString": "function (uint64)"
																	}
																},
																"id": 297,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5140:14:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 298,
															"nodeType": "EmitStatement",
															"src": "5135:19:1"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 220,
										"nodeType": "StructuredDocumentation",
										"src": "3548:516:1",
										"text": " @dev A modifier that defines a protected initializer function that can be invoked at most once. In its scope,\n `onlyInitializing` functions can be used to initialize parent contracts.\n Similar to `reinitializer(1)`, except that in the context of a constructor an `initializer` may be invoked any\n number of times. This behavior in the constructor can be useful during testing and is not expected to be used in\n production.\n Emits an {Initialized} event."
									},
									"id": 302,
									"name": "initializer",
									"nameLocation": "4078:11:1",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 221,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4089:2:1"
									},
									"src": "4069:1102:1",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 348,
										"nodeType": "Block",
										"src": "6289:392:1",
										"statements": [
											{
												"assignments": [
													309
												],
												"declarations": [
													{
														"constant": false,
														"id": 309,
														"mutability": "mutable",
														"name": "$",
														"nameLocation": "6384:1:1",
														"nodeType": "VariableDeclaration",
														"scope": 348,
														"src": "6355:30:1",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_InitializableStorage_$205_storage_ptr",
															"typeString": "struct Initializable.InitializableStorage"
														},
														"typeName": {
															"id": 308,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 307,
																"name": "InitializableStorage",
																"nameLocations": [
																	"6355:20:1"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 205,
																"src": "6355:20:1"
															},
															"referencedDeclaration": 205,
															"src": "6355:20:1",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_InitializableStorage_$205_storage_ptr",
																"typeString": "struct Initializable.InitializableStorage"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 312,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 310,
														"name": "_getInitializableStorage",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 461,
														"src": "6388:24:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$__$returns$_t_struct$_InitializableStorage_$205_storage_ptr_$",
															"typeString": "function () pure returns (struct Initializable.InitializableStorage storage pointer)"
														}
													},
													"id": 311,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6388:26:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_InitializableStorage_$205_storage_ptr",
														"typeString": "struct Initializable.InitializableStorage storage pointer"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6355:59:1"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 319,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 313,
															"name": "$",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 309,
															"src": "6429:1:1",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_InitializableStorage_$205_storage_ptr",
																"typeString": "struct Initializable.InitializableStorage storage pointer"
															}
														},
														"id": 314,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "6431:13:1",
														"memberName": "_initializing",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 204,
														"src": "6429:15:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "||",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_uint64",
															"typeString": "uint64"
														},
														"id": 318,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"expression": {
																"id": 315,
																"name": "$",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 309,
																"src": "6448:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_InitializableStorage_$205_storage_ptr",
																	"typeString": "struct Initializable.InitializableStorage storage pointer"
																}
															},
															"id": 316,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "6450:12:1",
															"memberName": "_initialized",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 201,
															"src": "6448:14:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint64",
																"typeString": "uint64"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">=",
														"rightExpression": {
															"id": 317,
															"name": "version",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 305,
															"src": "6466:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint64",
																"typeString": "uint64"
															}
														},
														"src": "6448:25:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "6429:44:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 324,
												"nodeType": "IfStatement",
												"src": "6425:105:1",
												"trueBody": {
													"id": 323,
													"nodeType": "Block",
													"src": "6475:55:1",
													"statements": [
														{
															"errorCall": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 320,
																	"name": "InvalidInitialization",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 211,
																	"src": "6496:21:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
																		"typeString": "function () pure returns (error)"
																	}
																},
																"id": 321,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "6496:23:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 322,
															"nodeType": "RevertStatement",
															"src": "6489:30:1"
														}
													]
												}
											},
											{
												"expression": {
													"id": 329,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 325,
															"name": "$",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 309,
															"src": "6539:1:1",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_InitializableStorage_$205_storage_ptr",
																"typeString": "struct Initializable.InitializableStorage storage pointer"
															}
														},
														"id": 327,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "6541:12:1",
														"memberName": "_initialized",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 201,
														"src": "6539:14:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint64",
															"typeString": "uint64"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 328,
														"name": "version",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 305,
														"src": "6556:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint64",
															"typeString": "uint64"
														}
													},
													"src": "6539:24:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													}
												},
												"id": 330,
												"nodeType": "ExpressionStatement",
												"src": "6539:24:1"
											},
											{
												"expression": {
													"id": 335,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 331,
															"name": "$",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 309,
															"src": "6573:1:1",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_InitializableStorage_$205_storage_ptr",
																"typeString": "struct Initializable.InitializableStorage storage pointer"
															}
														},
														"id": 333,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "6575:13:1",
														"memberName": "_initializing",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 204,
														"src": "6573:15:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "74727565",
														"id": 334,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "6591:4:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "true"
													},
													"src": "6573:22:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 336,
												"nodeType": "ExpressionStatement",
												"src": "6573:22:1"
											},
											{
												"id": 337,
												"nodeType": "PlaceholderStatement",
												"src": "6605:1:1"
											},
											{
												"expression": {
													"id": 342,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 338,
															"name": "$",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 309,
															"src": "6616:1:1",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_InitializableStorage_$205_storage_ptr",
																"typeString": "struct Initializable.InitializableStorage storage pointer"
															}
														},
														"id": 340,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "6618:13:1",
														"memberName": "_initializing",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 204,
														"src": "6616:15:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "66616c7365",
														"id": 341,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "6634:5:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "false"
													},
													"src": "6616:23:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 343,
												"nodeType": "ExpressionStatement",
												"src": "6616:23:1"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 345,
															"name": "version",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 305,
															"src": "6666:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint64",
																"typeString": "uint64"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint64",
																"typeString": "uint64"
															}
														],
														"id": 344,
														"name": "Initialized",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 219,
														"src": "6654:11:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_uint64_$returns$__$",
															"typeString": "function (uint64)"
														}
													},
													"id": 346,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6654:20:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 347,
												"nodeType": "EmitStatement",
												"src": "6649:25:1"
											}
										]
									},
									"documentation": {
										"id": 303,
										"nodeType": "StructuredDocumentation",
										"src": "5177:1068:1",
										"text": " @dev A modifier that defines a protected reinitializer function that can be invoked at most once, and only if the\n contract hasn't been initialized to a greater version before. In its scope, `onlyInitializing` functions can be\n used to initialize parent contracts.\n A reinitializer may be used after the original initialization step. This is essential to configure modules that\n are added through upgrades and that require initialization.\n When `version` is 1, this modifier is similar to `initializer`, except that functions marked with `reinitializer`\n cannot be nested. If one is invoked in the context of another, execution will revert.\n Note that versions can jump in increments greater than 1; this implies that if multiple reinitializers coexist in\n a contract, executing them in the right order is up to the developer or operator.\n WARNING: Setting the version to 2**64 - 1 will prevent any future reinitialization.\n Emits an {Initialized} event."
									},
									"id": 349,
									"name": "reinitializer",
									"nameLocation": "6259:13:1",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 306,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 305,
												"mutability": "mutable",
												"name": "version",
												"nameLocation": "6280:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 349,
												"src": "6273:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint64",
													"typeString": "uint64"
												},
												"typeName": {
													"id": 304,
													"name": "uint64",
													"nodeType": "ElementaryTypeName",
													"src": "6273:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6272:16:1"
									},
									"src": "6250:431:1",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 356,
										"nodeType": "Block",
										"src": "6919:48:1",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 352,
														"name": "_checkInitializing",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 370,
														"src": "6929:18:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$__$",
															"typeString": "function () view"
														}
													},
													"id": 353,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6929:20:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 354,
												"nodeType": "ExpressionStatement",
												"src": "6929:20:1"
											},
											{
												"id": 355,
												"nodeType": "PlaceholderStatement",
												"src": "6959:1:1"
											}
										]
									},
									"documentation": {
										"id": 350,
										"nodeType": "StructuredDocumentation",
										"src": "6687:199:1",
										"text": " @dev Modifier to protect an initialization function so that it can only be invoked by functions with the\n {initializer} and {reinitializer} modifiers, directly or indirectly."
									},
									"id": 357,
									"name": "onlyInitializing",
									"nameLocation": "6900:16:1",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 351,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6916:2:1"
									},
									"src": "6891:76:1",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 369,
										"nodeType": "Block",
										"src": "7134:89:1",
										"statements": [
											{
												"condition": {
													"id": 363,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "7148:18:1",
													"subExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 361,
															"name": "_isInitializing",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 438,
															"src": "7149:15:1",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_bool_$",
																"typeString": "function () view returns (bool)"
															}
														},
														"id": 362,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "7149:17:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 368,
												"nodeType": "IfStatement",
												"src": "7144:73:1",
												"trueBody": {
													"id": 367,
													"nodeType": "Block",
													"src": "7168:49:1",
													"statements": [
														{
															"errorCall": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 364,
																	"name": "NotInitializing",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 214,
																	"src": "7189:15:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
																		"typeString": "function () pure returns (error)"
																	}
																},
																"id": 365,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "7189:17:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 366,
															"nodeType": "RevertStatement",
															"src": "7182:24:1"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 358,
										"nodeType": "StructuredDocumentation",
										"src": "6973:104:1",
										"text": " @dev Reverts if the contract is not in an initializing state. See {onlyInitializing}."
									},
									"id": 370,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_checkInitializing",
									"nameLocation": "7091:18:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 359,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7109:2:1"
									},
									"returnParameters": {
										"id": 360,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7134:0:1"
									},
									"scope": 462,
									"src": "7082:141:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 415,
										"nodeType": "Block",
										"src": "7758:373:1",
										"statements": [
											{
												"assignments": [
													376
												],
												"declarations": [
													{
														"constant": false,
														"id": 376,
														"mutability": "mutable",
														"name": "$",
														"nameLocation": "7853:1:1",
														"nodeType": "VariableDeclaration",
														"scope": 415,
														"src": "7824:30:1",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_InitializableStorage_$205_storage_ptr",
															"typeString": "struct Initializable.InitializableStorage"
														},
														"typeName": {
															"id": 375,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 374,
																"name": "InitializableStorage",
																"nameLocations": [
																	"7824:20:1"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 205,
																"src": "7824:20:1"
															},
															"referencedDeclaration": 205,
															"src": "7824:20:1",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_InitializableStorage_$205_storage_ptr",
																"typeString": "struct Initializable.InitializableStorage"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 379,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 377,
														"name": "_getInitializableStorage",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 461,
														"src": "7857:24:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$__$returns$_t_struct$_InitializableStorage_$205_storage_ptr_$",
															"typeString": "function () pure returns (struct Initializable.InitializableStorage storage pointer)"
														}
													},
													"id": 378,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7857:26:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_InitializableStorage_$205_storage_ptr",
														"typeString": "struct Initializable.InitializableStorage storage pointer"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "7824:59:1"
											},
											{
												"condition": {
													"expression": {
														"id": 380,
														"name": "$",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 376,
														"src": "7898:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_InitializableStorage_$205_storage_ptr",
															"typeString": "struct Initializable.InitializableStorage storage pointer"
														}
													},
													"id": 381,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "7900:13:1",
													"memberName": "_initializing",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 204,
													"src": "7898:15:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 386,
												"nodeType": "IfStatement",
												"src": "7894:76:1",
												"trueBody": {
													"id": 385,
													"nodeType": "Block",
													"src": "7915:55:1",
													"statements": [
														{
															"errorCall": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 382,
																	"name": "InvalidInitialization",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 211,
																	"src": "7936:21:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
																		"typeString": "function () pure returns (error)"
																	}
																},
																"id": 383,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "7936:23:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 384,
															"nodeType": "RevertStatement",
															"src": "7929:30:1"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													},
													"id": 394,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 387,
															"name": "$",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 376,
															"src": "7983:1:1",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_InitializableStorage_$205_storage_ptr",
																"typeString": "struct Initializable.InitializableStorage storage pointer"
															}
														},
														"id": 388,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "7985:12:1",
														"memberName": "_initialized",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 201,
														"src": "7983:14:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint64",
															"typeString": "uint64"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 391,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "8006:6:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint64_$",
																		"typeString": "type(uint64)"
																	},
																	"typeName": {
																		"id": 390,
																		"name": "uint64",
																		"nodeType": "ElementaryTypeName",
																		"src": "8006:6:1",
																		"typeDescriptions": {}
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_type$_t_uint64_$",
																		"typeString": "type(uint64)"
																	}
																],
																"id": 389,
																"name": "type",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967269,
																"src": "8001:4:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 392,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "8001:12:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_magic_meta_type_t_uint64",
																"typeString": "type(uint64)"
															}
														},
														"id": 393,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "8014:3:1",
														"memberName": "max",
														"nodeType": "MemberAccess",
														"src": "8001:16:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint64",
															"typeString": "uint64"
														}
													},
													"src": "7983:34:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 414,
												"nodeType": "IfStatement",
												"src": "7979:146:1",
												"trueBody": {
													"id": 413,
													"nodeType": "Block",
													"src": "8019:106:1",
													"statements": [
														{
															"expression": {
																"id": 403,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"expression": {
																		"id": 395,
																		"name": "$",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 376,
																		"src": "8033:1:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_InitializableStorage_$205_storage_ptr",
																			"typeString": "struct Initializable.InitializableStorage storage pointer"
																		}
																	},
																	"id": 397,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"memberLocation": "8035:12:1",
																	"memberName": "_initialized",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 201,
																	"src": "8033:14:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint64",
																		"typeString": "uint64"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"expression": {
																		"arguments": [
																			{
																				"id": 400,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "ElementaryTypeNameExpression",
																				"src": "8055:6:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_uint64_$",
																					"typeString": "type(uint64)"
																				},
																				"typeName": {
																					"id": 399,
																					"name": "uint64",
																					"nodeType": "ElementaryTypeName",
																					"src": "8055:6:1",
																					"typeDescriptions": {}
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_type$_t_uint64_$",
																					"typeString": "type(uint64)"
																				}
																			],
																			"id": 398,
																			"name": "type",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967269,
																			"src": "8050:4:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																				"typeString": "function () pure"
																			}
																		},
																		"id": 401,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "8050:12:1",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_meta_type_t_uint64",
																			"typeString": "type(uint64)"
																		}
																	},
																	"id": 402,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"memberLocation": "8063:3:1",
																	"memberName": "max",
																	"nodeType": "MemberAccess",
																	"src": "8050:16:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint64",
																		"typeString": "uint64"
																	}
																},
																"src": "8033:33:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint64",
																	"typeString": "uint64"
																}
															},
															"id": 404,
															"nodeType": "ExpressionStatement",
															"src": "8033:33:1"
														},
														{
															"eventCall": {
																"arguments": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"id": 408,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"lValueRequested": false,
																					"nodeType": "ElementaryTypeNameExpression",
																					"src": "8102:6:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_type$_t_uint64_$",
																						"typeString": "type(uint64)"
																					},
																					"typeName": {
																						"id": 407,
																						"name": "uint64",
																						"nodeType": "ElementaryTypeName",
																						"src": "8102:6:1",
																						"typeDescriptions": {}
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_type$_t_uint64_$",
																						"typeString": "type(uint64)"
																					}
																				],
																				"id": 406,
																				"name": "type",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967269,
																				"src": "8097:4:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																					"typeString": "function () pure"
																				}
																			},
																			"id": 409,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "8097:12:1",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_meta_type_t_uint64",
																				"typeString": "type(uint64)"
																			}
																		},
																		"id": 410,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"memberLocation": "8110:3:1",
																		"memberName": "max",
																		"nodeType": "MemberAccess",
																		"src": "8097:16:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint64",
																			"typeString": "uint64"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint64",
																			"typeString": "uint64"
																		}
																	],
																	"id": 405,
																	"name": "Initialized",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 219,
																	"src": "8085:11:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_event_nonpayable$_t_uint64_$returns$__$",
																		"typeString": "function (uint64)"
																	}
																},
																"id": 411,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "8085:29:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 412,
															"nodeType": "EmitStatement",
															"src": "8080:34:1"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 371,
										"nodeType": "StructuredDocumentation",
										"src": "7229:475:1",
										"text": " @dev Locks the contract, preventing any future reinitialization. This cannot be part of an initializer call.\n Calling this in the constructor of a contract will prevent that contract from being initialized or reinitialized\n to any version. It is recommended to use this to lock implementation contracts that are designed to be called\n through proxies.\n Emits an {Initialized} event the first time it is successfully executed."
									},
									"id": 416,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_disableInitializers",
									"nameLocation": "7718:20:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 372,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7738:2:1"
									},
									"returnParameters": {
										"id": 373,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7758:0:1"
									},
									"scope": 462,
									"src": "7709:422:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 426,
										"nodeType": "Block",
										"src": "8306:63:1",
										"statements": [
											{
												"expression": {
													"expression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 422,
															"name": "_getInitializableStorage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 461,
															"src": "8323:24:1",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$__$returns$_t_struct$_InitializableStorage_$205_storage_ptr_$",
																"typeString": "function () pure returns (struct Initializable.InitializableStorage storage pointer)"
															}
														},
														"id": 423,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "8323:26:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_InitializableStorage_$205_storage_ptr",
															"typeString": "struct Initializable.InitializableStorage storage pointer"
														}
													},
													"id": 424,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "8350:12:1",
													"memberName": "_initialized",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 201,
													"src": "8323:39:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													}
												},
												"functionReturnParameters": 421,
												"id": 425,
												"nodeType": "Return",
												"src": "8316:46:1"
											}
										]
									},
									"documentation": {
										"id": 417,
										"nodeType": "StructuredDocumentation",
										"src": "8137:99:1",
										"text": " @dev Returns the highest version that has been initialized. See {reinitializer}."
									},
									"id": 427,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_getInitializedVersion",
									"nameLocation": "8250:22:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 418,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8272:2:1"
									},
									"returnParameters": {
										"id": 421,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 420,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 427,
												"src": "8298:6:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint64",
													"typeString": "uint64"
												},
												"typeName": {
													"id": 419,
													"name": "uint64",
													"nodeType": "ElementaryTypeName",
													"src": "8298:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8297:8:1"
									},
									"scope": 462,
									"src": "8241:128:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 437,
										"nodeType": "Block",
										"src": "8541:64:1",
										"statements": [
											{
												"expression": {
													"expression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 433,
															"name": "_getInitializableStorage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 461,
															"src": "8558:24:1",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$__$returns$_t_struct$_InitializableStorage_$205_storage_ptr_$",
																"typeString": "function () pure returns (struct Initializable.InitializableStorage storage pointer)"
															}
														},
														"id": 434,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "8558:26:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_InitializableStorage_$205_storage_ptr",
															"typeString": "struct Initializable.InitializableStorage storage pointer"
														}
													},
													"id": 435,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "8585:13:1",
													"memberName": "_initializing",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 204,
													"src": "8558:40:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 432,
												"id": 436,
												"nodeType": "Return",
												"src": "8551:47:1"
											}
										]
									},
									"documentation": {
										"id": 428,
										"nodeType": "StructuredDocumentation",
										"src": "8375:105:1",
										"text": " @dev Returns `true` if the contract is currently initializing. See {onlyInitializing}."
									},
									"id": 438,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_isInitializing",
									"nameLocation": "8494:15:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 429,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8509:2:1"
									},
									"returnParameters": {
										"id": 432,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 431,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 438,
												"src": "8535:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 430,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "8535:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8534:6:1"
									},
									"scope": 462,
									"src": "8485:120:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 446,
										"nodeType": "Block",
										"src": "8896:45:1",
										"statements": [
											{
												"expression": {
													"id": 444,
													"name": "INITIALIZABLE_STORAGE",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 208,
													"src": "8913:21:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"functionReturnParameters": 443,
												"id": 445,
												"nodeType": "Return",
												"src": "8906:28:1"
											}
										]
									},
									"documentation": {
										"id": 439,
										"nodeType": "StructuredDocumentation",
										"src": "8611:203:1",
										"text": " @dev Pointer to storage slot. Allows integrators to override it with a custom storage location.\n NOTE: Consider following the ERC-7201 formula to derive storage locations."
									},
									"id": 447,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_initializableStorageSlot",
									"nameLocation": "8828:25:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 440,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8853:2:1"
									},
									"returnParameters": {
										"id": 443,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 442,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 447,
												"src": "8887:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 441,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "8887:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8886:9:1"
									},
									"scope": 462,
									"src": "8819:122:1",
									"stateMutability": "pure",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 460,
										"nodeType": "Block",
										"src": "9161:115:1",
										"statements": [
											{
												"assignments": [
													455
												],
												"declarations": [
													{
														"constant": false,
														"id": 455,
														"mutability": "mutable",
														"name": "slot",
														"nameLocation": "9179:4:1",
														"nodeType": "VariableDeclaration",
														"scope": 460,
														"src": "9171:12:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														},
														"typeName": {
															"id": 454,
															"name": "bytes32",
															"nodeType": "ElementaryTypeName",
															"src": "9171:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 458,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 456,
														"name": "_initializableStorageSlot",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 447,
														"src": "9186:25:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$__$returns$_t_bytes32_$",
															"typeString": "function () pure returns (bytes32)"
														}
													},
													"id": 457,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9186:27:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "9171:42:1"
											},
											{
												"AST": {
													"nativeSrc": "9232:38:1",
													"nodeType": "YulBlock",
													"src": "9232:38:1",
													"statements": [
														{
															"nativeSrc": "9246:14:1",
															"nodeType": "YulAssignment",
															"src": "9246:14:1",
															"value": {
																"name": "slot",
																"nativeSrc": "9256:4:1",
																"nodeType": "YulIdentifier",
																"src": "9256:4:1"
															},
															"variableNames": [
																{
																	"name": "$.slot",
																	"nativeSrc": "9246:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "9246:6:1"
																}
															]
														}
													]
												},
												"evmVersion": "prague",
												"externalReferences": [
													{
														"declaration": 452,
														"isOffset": false,
														"isSlot": true,
														"src": "9246:6:1",
														"suffix": "slot",
														"valueSize": 1
													},
													{
														"declaration": 455,
														"isOffset": false,
														"isSlot": false,
														"src": "9256:4:1",
														"valueSize": 1
													}
												],
												"id": 459,
												"nodeType": "InlineAssembly",
												"src": "9223:47:1"
											}
										]
									},
									"documentation": {
										"id": 448,
										"nodeType": "StructuredDocumentation",
										"src": "8947:67:1",
										"text": " @dev Returns a pointer to the storage namespace."
									},
									"id": 461,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_getInitializableStorage",
									"nameLocation": "9080:24:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 449,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "9104:2:1"
									},
									"returnParameters": {
										"id": 453,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 452,
												"mutability": "mutable",
												"name": "$",
												"nameLocation": "9158:1:1",
												"nodeType": "VariableDeclaration",
												"scope": 461,
												"src": "9129:30:1",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_InitializableStorage_$205_storage_ptr",
													"typeString": "struct Initializable.InitializableStorage"
												},
												"typeName": {
													"id": 451,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 450,
														"name": "InitializableStorage",
														"nameLocations": [
															"9129:20:1"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 205,
														"src": "9129:20:1"
													},
													"referencedDeclaration": 205,
													"src": "9129:20:1",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_InitializableStorage_$205_storage_ptr",
														"typeString": "struct Initializable.InitializableStorage"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9128:32:1"
									},
									"scope": 462,
									"src": "9071:205:1",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "private"
								}
							],
							"scope": 463,
							"src": "2349:6929:1",
							"usedErrors": [
								211,
								214
							],
							"usedEvents": [
								219
							]
						}
					],
					"src": "113:9166:1"
				},
				"id": 1
			},
			"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol",
					"exportedSymbols": {
						"ERC1967Utils": [
							1015
						],
						"IERC1822Proxiable": [
							721
						],
						"Initializable": [
							462
						],
						"UUPSUpgradeable": [
							644
						]
					},
					"id": 645,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 464,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".22"
							],
							"nodeType": "PragmaDirective",
							"src": "115:24:2"
						},
						{
							"absolutePath": "@openzeppelin/contracts/interfaces/draft-IERC1822.sol",
							"file": "@openzeppelin/contracts/interfaces/draft-IERC1822.sol",
							"id": 466,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 645,
							"sourceUnit": 722,
							"src": "141:88:2",
							"symbolAliases": [
								{
									"foreign": {
										"id": 465,
										"name": "IERC1822Proxiable",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 721,
										"src": "149:17:2",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol",
							"file": "@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol",
							"id": 468,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 645,
							"sourceUnit": 1016,
							"src": "230:84:2",
							"symbolAliases": [
								{
									"foreign": {
										"id": 467,
										"name": "ERC1967Utils",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1015,
										"src": "238:12:2",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol",
							"file": "./Initializable.sol",
							"id": 470,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 645,
							"sourceUnit": 463,
							"src": "315:50:2",
							"symbolAliases": [
								{
									"foreign": {
										"id": 469,
										"name": "Initializable",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 462,
										"src": "323:13:2",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 472,
										"name": "Initializable",
										"nameLocations": [
											"1023:13:2"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 462,
										"src": "1023:13:2"
									},
									"id": 473,
									"nodeType": "InheritanceSpecifier",
									"src": "1023:13:2"
								},
								{
									"baseName": {
										"id": 474,
										"name": "IERC1822Proxiable",
										"nameLocations": [
											"1038:17:2"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 721,
										"src": "1038:17:2"
									},
									"id": 475,
									"nodeType": "InheritanceSpecifier",
									"src": "1038:17:2"
								}
							],
							"canonicalName": "UUPSUpgradeable",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 471,
								"nodeType": "StructuredDocumentation",
								"src": "367:618:2",
								"text": " @dev An upgradeability mechanism designed for UUPS proxies. The functions included here can perform an upgrade of an\n {ERC1967Proxy}, when this contract is set as the implementation behind such a proxy.\n A security mechanism ensures that an upgrade does not turn off upgradeability accidentally, although this risk is\n reinstated if the upgrade retains upgradeability but removes the security mechanism, e.g. by replacing\n `UUPSUpgradeable` with a custom implementation of upgrades.\n The {_authorizeUpgrade} function must be overridden to include access restriction to the upgrade mechanism."
							},
							"fullyImplemented": false,
							"id": 644,
							"linearizedBaseContracts": [
								644,
								721,
								462
							],
							"name": "UUPSUpgradeable",
							"nameLocation": "1004:15:2",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"documentation": {
										"id": 476,
										"nodeType": "StructuredDocumentation",
										"src": "1062:61:2",
										"text": "@custom:oz-upgrades-unsafe-allow state-variable-immutable"
									},
									"id": 482,
									"mutability": "immutable",
									"name": "__self",
									"nameLocation": "1154:6:2",
									"nodeType": "VariableDeclaration",
									"scope": 644,
									"src": "1128:48:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 477,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "1128:7:2",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"value": {
										"arguments": [
											{
												"id": 480,
												"name": "this",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 4294967268,
												"src": "1171:4:2",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_UUPSUpgradeable_$644",
													"typeString": "contract UUPSUpgradeable"
												}
											}
										],
										"expression": {
											"argumentTypes": [
												{
													"typeIdentifier": "t_contract$_UUPSUpgradeable_$644",
													"typeString": "contract UUPSUpgradeable"
												}
											],
											"id": 479,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"lValueRequested": false,
											"nodeType": "ElementaryTypeNameExpression",
											"src": "1163:7:2",
											"typeDescriptions": {
												"typeIdentifier": "t_type$_t_address_$",
												"typeString": "type(address)"
											},
											"typeName": {
												"id": 478,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "1163:7:2",
												"typeDescriptions": {}
											}
										},
										"id": 481,
										"isConstant": false,
										"isLValue": false,
										"isPure": false,
										"kind": "typeConversion",
										"lValueRequested": false,
										"nameLocations": [],
										"names": [],
										"nodeType": "FunctionCall",
										"src": "1163:13:2",
										"tryCall": false,
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "private"
								},
								{
									"constant": true,
									"documentation": {
										"id": 483,
										"nodeType": "StructuredDocumentation",
										"src": "1183:631:2",
										"text": " @dev The version of the upgrade interface of the contract. If this getter is missing, both `upgradeTo(address)`\n and `upgradeToAndCall(address,bytes)` are present, and `upgradeTo` must be used if no function should be called,\n while `upgradeToAndCall` will invoke the `receive` function if the second argument is the empty byte string.\n If the getter returns `\"5.0.0\"`, only `upgradeToAndCall(address,bytes)` is present, and the second argument must\n be the empty byte string if no function should be called, making it impossible to invoke the `receive` function\n during an upgrade."
									},
									"functionSelector": "ad3cb1cc",
									"id": 486,
									"mutability": "constant",
									"name": "UPGRADE_INTERFACE_VERSION",
									"nameLocation": "1842:25:2",
									"nodeType": "VariableDeclaration",
									"scope": 644,
									"src": "1819:58:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_memory_ptr",
										"typeString": "string"
									},
									"typeName": {
										"id": 484,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "1819:6:2",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"value": {
										"hexValue": "352e302e30",
										"id": 485,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "string",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1870:7:2",
										"typeDescriptions": {
											"typeIdentifier": "t_stringliteral_2ade050ecfcf8ae20ae1d10a23573f9d7e0bad85e74a2cf8338a65401e64558c",
											"typeString": "literal_string \"5.0.0\""
										},
										"value": "5.0.0"
									},
									"visibility": "public"
								},
								{
									"documentation": {
										"id": 487,
										"nodeType": "StructuredDocumentation",
										"src": "1884:65:2",
										"text": " @dev The call is from an unauthorized context."
									},
									"errorSelector": "e07c8dba",
									"id": 489,
									"name": "UUPSUnauthorizedCallContext",
									"nameLocation": "1960:27:2",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 488,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1987:2:2"
									},
									"src": "1954:36:2"
								},
								{
									"documentation": {
										"id": 490,
										"nodeType": "StructuredDocumentation",
										"src": "1996:68:2",
										"text": " @dev The storage `slot` is unsupported as a UUID."
									},
									"errorSelector": "aa1d49a4",
									"id": 494,
									"name": "UUPSUnsupportedProxiableUUID",
									"nameLocation": "2075:28:2",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 493,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 492,
												"mutability": "mutable",
												"name": "slot",
												"nameLocation": "2112:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 494,
												"src": "2104:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 491,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2104:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2103:14:2"
									},
									"src": "2069:49:2"
								},
								{
									"body": {
										"id": 501,
										"nodeType": "Block",
										"src": "2645:41:2",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 497,
														"name": "_checkProxy",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 576,
														"src": "2655:11:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$__$",
															"typeString": "function () view"
														}
													},
													"id": 498,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2655:13:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 499,
												"nodeType": "ExpressionStatement",
												"src": "2655:13:2"
											},
											{
												"id": 500,
												"nodeType": "PlaceholderStatement",
												"src": "2678:1:2"
											}
										]
									},
									"documentation": {
										"id": 495,
										"nodeType": "StructuredDocumentation",
										"src": "2124:495:2",
										"text": " @dev Check that the execution is being performed through a delegatecall call and that the execution context is\n a proxy contract with an implementation (as defined in ERC-1967) pointing to self. This should only be the case\n for UUPS and transparent proxies that are using the current contract as their implementation. Execution of a\n function through ERC-1167 minimal proxies (clones) would not normally pass this test, but is not guaranteed to\n fail."
									},
									"id": 502,
									"name": "onlyProxy",
									"nameLocation": "2633:9:2",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 496,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2642:2:2"
									},
									"src": "2624:62:2",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 509,
										"nodeType": "Block",
										"src": "2916:48:2",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 505,
														"name": "_checkNotDelegated",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 592,
														"src": "2926:18:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$__$",
															"typeString": "function () view"
														}
													},
													"id": 506,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2926:20:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 507,
												"nodeType": "ExpressionStatement",
												"src": "2926:20:2"
											},
											{
												"id": 508,
												"nodeType": "PlaceholderStatement",
												"src": "2956:1:2"
											}
										]
									},
									"documentation": {
										"id": 503,
										"nodeType": "StructuredDocumentation",
										"src": "2692:195:2",
										"text": " @dev Check that the execution is not being performed through a delegate call. This allows a function to be\n callable on the implementing contract but not through proxies."
									},
									"id": 510,
									"name": "notDelegated",
									"nameLocation": "2901:12:2",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 504,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2913:2:2"
									},
									"src": "2892:72:2",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 515,
										"nodeType": "Block",
										"src": "3030:7:2",
										"statements": []
									},
									"id": 516,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 513,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 512,
												"name": "onlyInitializing",
												"nameLocations": [
													"3013:16:2"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 357,
												"src": "3013:16:2"
											},
											"nodeType": "ModifierInvocation",
											"src": "3013:16:2"
										}
									],
									"name": "__UUPSUpgradeable_init",
									"nameLocation": "2979:22:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 511,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3001:2:2"
									},
									"returnParameters": {
										"id": 514,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3030:0:2"
									},
									"scope": 644,
									"src": "2970:67:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 521,
										"nodeType": "Block",
										"src": "3113:7:2",
										"statements": []
									},
									"id": 522,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 519,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 518,
												"name": "onlyInitializing",
												"nameLocations": [
													"3096:16:2"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 357,
												"src": "3096:16:2"
											},
											"nodeType": "ModifierInvocation",
											"src": "3096:16:2"
										}
									],
									"name": "__UUPSUpgradeable_init_unchained",
									"nameLocation": "3052:32:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 517,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3084:2:2"
									},
									"returnParameters": {
										"id": 520,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3113:0:2"
									},
									"scope": 644,
									"src": "3043:77:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"baseFunctions": [
										720
									],
									"body": {
										"id": 533,
										"nodeType": "Block",
										"src": "3786:56:2",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 530,
														"name": "ERC1967Utils",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1015,
														"src": "3803:12:2",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_contract$_ERC1967Utils_$1015_$",
															"typeString": "type(library ERC1967Utils)"
														}
													},
													"id": 531,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"lValueRequested": false,
													"memberLocation": "3816:19:2",
													"memberName": "IMPLEMENTATION_SLOT",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 736,
													"src": "3803:32:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"functionReturnParameters": 529,
												"id": 532,
												"nodeType": "Return",
												"src": "3796:39:2"
											}
										]
									},
									"documentation": {
										"id": 523,
										"nodeType": "StructuredDocumentation",
										"src": "3125:578:2",
										"text": " @dev Implementation of the ERC-1822 {proxiableUUID} function. This returns the storage slot used by the\n implementation. It is used to validate the implementation's compatibility when performing an upgrade.\n IMPORTANT: A proxy pointing at a proxiable contract should not be considered proxiable itself, because this risks\n bricking a proxy that upgrades to it, by delegating to itself until out of gas. Thus it is critical that this\n function revert if invoked through a proxy. This is guaranteed by the `notDelegated` modifier."
									},
									"functionSelector": "52d1902d",
									"id": 534,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 526,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 525,
												"name": "notDelegated",
												"nameLocations": [
													"3755:12:2"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 510,
												"src": "3755:12:2"
											},
											"nodeType": "ModifierInvocation",
											"src": "3755:12:2"
										}
									],
									"name": "proxiableUUID",
									"nameLocation": "3717:13:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 524,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3730:2:2"
									},
									"returnParameters": {
										"id": 529,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 528,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 534,
												"src": "3777:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 527,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "3777:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3776:9:2"
									},
									"scope": 644,
									"src": "3708:134:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "external"
								},
								{
									"body": {
										"id": 553,
										"nodeType": "Block",
										"src": "4266:109:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 545,
															"name": "newImplementation",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 537,
															"src": "4294:17:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 544,
														"name": "_authorizeUpgrade",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 598,
														"src": "4276:17:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 546,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4276:36:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 547,
												"nodeType": "ExpressionStatement",
												"src": "4276:36:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 549,
															"name": "newImplementation",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 537,
															"src": "4344:17:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 550,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 539,
															"src": "4363:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 548,
														"name": "_upgradeToAndCallUUPS",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 643,
														"src": "4322:21:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,bytes memory)"
														}
													},
													"id": 551,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4322:46:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 552,
												"nodeType": "ExpressionStatement",
												"src": "4322:46:2"
											}
										]
									},
									"documentation": {
										"id": 535,
										"nodeType": "StructuredDocumentation",
										"src": "3848:308:2",
										"text": " @dev Upgrade the implementation of the proxy to `newImplementation`, and subsequently execute the function call\n encoded in `data`.\n Calls {_authorizeUpgrade}.\n Emits an {Upgraded} event.\n @custom:oz-upgrades-unsafe-allow-reachable delegatecall"
									},
									"functionSelector": "4f1ef286",
									"id": 554,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 542,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 541,
												"name": "onlyProxy",
												"nameLocations": [
													"4256:9:2"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 502,
												"src": "4256:9:2"
											},
											"nodeType": "ModifierInvocation",
											"src": "4256:9:2"
										}
									],
									"name": "upgradeToAndCall",
									"nameLocation": "4170:16:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 540,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 537,
												"mutability": "mutable",
												"name": "newImplementation",
												"nameLocation": "4195:17:2",
												"nodeType": "VariableDeclaration",
												"scope": 554,
												"src": "4187:25:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 536,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4187:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 539,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "4227:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 554,
												"src": "4214:17:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 538,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4214:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4186:46:2"
									},
									"returnParameters": {
										"id": 543,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4266:0:2"
									},
									"scope": 644,
									"src": "4161:214:2",
									"stateMutability": "payable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 575,
										"nodeType": "Block",
										"src": "4623:267:2",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 569,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"id": 563,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"arguments": [
																{
																	"id": 560,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "4658:4:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_UUPSUpgradeable_$644",
																		"typeString": "contract UUPSUpgradeable"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_UUPSUpgradeable_$644",
																		"typeString": "contract UUPSUpgradeable"
																	}
																],
																"id": 559,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "4650:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 558,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "4650:7:2",
																	"typeDescriptions": {}
																}
															},
															"id": 561,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4650:13:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"id": 562,
															"name": "__self",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 482,
															"src": "4667:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"src": "4650:23:2",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "||",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"id": 568,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"expression": {
																	"id": 564,
																	"name": "ERC1967Utils",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1015,
																	"src": "4728:12:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_contract$_ERC1967Utils_$1015_$",
																		"typeString": "type(library ERC1967Utils)"
																	}
																},
																"id": 565,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "4741:17:2",
																"memberName": "getImplementation",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 767,
																"src": "4728:30:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 566,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4728:32:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "!=",
														"rightExpression": {
															"id": 567,
															"name": "__self",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 482,
															"src": "4764:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"src": "4728:42:2",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "4650:120:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 574,
												"nodeType": "IfStatement",
												"src": "4633:251:2",
												"trueBody": {
													"id": 573,
													"nodeType": "Block",
													"src": "4823:61:2",
													"statements": [
														{
															"errorCall": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 570,
																	"name": "UUPSUnauthorizedCallContext",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 489,
																	"src": "4844:27:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
																		"typeString": "function () pure returns (error)"
																	}
																},
																"id": 571,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4844:29:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 572,
															"nodeType": "RevertStatement",
															"src": "4837:36:2"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 555,
										"nodeType": "StructuredDocumentation",
										"src": "4381:192:2",
										"text": " @dev Reverts if the execution is not performed via delegatecall or the execution\n context is not of a proxy with an ERC-1967 compliant implementation pointing to self."
									},
									"id": 576,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_checkProxy",
									"nameLocation": "4587:11:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 556,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4598:2:2"
									},
									"returnParameters": {
										"id": 557,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4623:0:2"
									},
									"scope": 644,
									"src": "4578:312:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 591,
										"nodeType": "Block",
										"src": "5059:161:2",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 585,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"arguments": [
															{
																"id": 582,
																"name": "this",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967268,
																"src": "5081:4:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_UUPSUpgradeable_$644",
																	"typeString": "contract UUPSUpgradeable"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_contract$_UUPSUpgradeable_$644",
																	"typeString": "contract UUPSUpgradeable"
																}
															],
															"id": 581,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "5073:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 580,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "5073:7:2",
																"typeDescriptions": {}
															}
														},
														"id": 583,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "5073:13:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"id": 584,
														"name": "__self",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 482,
														"src": "5090:6:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "5073:23:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 590,
												"nodeType": "IfStatement",
												"src": "5069:145:2",
												"trueBody": {
													"id": 589,
													"nodeType": "Block",
													"src": "5098:116:2",
													"statements": [
														{
															"errorCall": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 586,
																	"name": "UUPSUnauthorizedCallContext",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 489,
																	"src": "5174:27:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
																		"typeString": "function () pure returns (error)"
																	}
																},
																"id": 587,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5174:29:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 588,
															"nodeType": "RevertStatement",
															"src": "5167:36:2"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 577,
										"nodeType": "StructuredDocumentation",
										"src": "4896:106:2",
										"text": " @dev Reverts if the execution is performed via delegatecall.\n See {notDelegated}."
									},
									"id": 592,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_checkNotDelegated",
									"nameLocation": "5016:18:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 578,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5034:2:2"
									},
									"returnParameters": {
										"id": 579,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5059:0:2"
									},
									"scope": 644,
									"src": "5007:213:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"documentation": {
										"id": 593,
										"nodeType": "StructuredDocumentation",
										"src": "5226:372:2",
										"text": " @dev Function that should revert when `msg.sender` is not authorized to upgrade the contract. Called by\n {upgradeToAndCall}.\n Normally, this function will use an xref:access.adoc[access control] modifier such as {Ownable-onlyOwner}.\n ```solidity\n function _authorizeUpgrade(address) internal onlyOwner {}\n ```"
									},
									"id": 598,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "_authorizeUpgrade",
									"nameLocation": "5612:17:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 596,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 595,
												"mutability": "mutable",
												"name": "newImplementation",
												"nameLocation": "5638:17:2",
												"nodeType": "VariableDeclaration",
												"scope": 598,
												"src": "5630:25:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 594,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5630:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5629:27:2"
									},
									"returnParameters": {
										"id": 597,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5673:0:2"
									},
									"scope": 644,
									"src": "5603:71:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 642,
										"nodeType": "Block",
										"src": "6117:453:2",
										"statements": [
											{
												"clauses": [
													{
														"block": {
															"id": 631,
															"nodeType": "Block",
															"src": "6207:212:2",
															"statements": [
																{
																	"condition": {
																		"commonType": {
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		},
																		"id": 617,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 614,
																			"name": "slot",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 612,
																			"src": "6225:4:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bytes32",
																				"typeString": "bytes32"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "!=",
																		"rightExpression": {
																			"expression": {
																				"id": 615,
																				"name": "ERC1967Utils",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1015,
																				"src": "6233:12:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_contract$_ERC1967Utils_$1015_$",
																					"typeString": "type(library ERC1967Utils)"
																				}
																			},
																			"id": 616,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"memberLocation": "6246:19:2",
																			"memberName": "IMPLEMENTATION_SLOT",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 736,
																			"src": "6233:32:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bytes32",
																				"typeString": "bytes32"
																			}
																		},
																		"src": "6225:40:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"id": 623,
																	"nodeType": "IfStatement",
																	"src": "6221:120:2",
																	"trueBody": {
																		"id": 622,
																		"nodeType": "Block",
																		"src": "6267:74:2",
																		"statements": [
																			{
																				"errorCall": {
																					"arguments": [
																						{
																							"id": 619,
																							"name": "slot",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 612,
																							"src": "6321:4:2",
																							"typeDescriptions": {
																								"typeIdentifier": "t_bytes32",
																								"typeString": "bytes32"
																							}
																						}
																					],
																					"expression": {
																						"argumentTypes": [
																							{
																								"typeIdentifier": "t_bytes32",
																								"typeString": "bytes32"
																							}
																						],
																						"id": 618,
																						"name": "UUPSUnsupportedProxiableUUID",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 494,
																						"src": "6292:28:2",
																						"typeDescriptions": {
																							"typeIdentifier": "t_function_error_pure$_t_bytes32_$returns$_t_error_$",
																							"typeString": "function (bytes32) pure returns (error)"
																						}
																					},
																					"id": 620,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"kind": "functionCall",
																					"lValueRequested": false,
																					"nameLocations": [],
																					"names": [],
																					"nodeType": "FunctionCall",
																					"src": "6292:34:2",
																					"tryCall": false,
																					"typeDescriptions": {
																						"typeIdentifier": "t_error",
																						"typeString": "error"
																					}
																				},
																				"id": 621,
																				"nodeType": "RevertStatement",
																				"src": "6285:41:2"
																			}
																		]
																	}
																},
																{
																	"expression": {
																		"arguments": [
																			{
																				"id": 627,
																				"name": "newImplementation",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 601,
																				"src": "6384:17:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			{
																				"id": 628,
																				"name": "data",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 603,
																				"src": "6403:4:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes_memory_ptr",
																					"typeString": "bytes memory"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				},
																				{
																					"typeIdentifier": "t_bytes_memory_ptr",
																					"typeString": "bytes memory"
																				}
																			],
																			"expression": {
																				"id": 624,
																				"name": "ERC1967Utils",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1015,
																				"src": "6354:12:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_contract$_ERC1967Utils_$1015_$",
																					"typeString": "type(library ERC1967Utils)"
																				}
																			},
																			"id": 626,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "6367:16:2",
																			"memberName": "upgradeToAndCall",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 830,
																			"src": "6354:29:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$returns$__$",
																				"typeString": "function (address,bytes memory)"
																			}
																		},
																		"id": 629,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "6354:54:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_tuple$__$",
																			"typeString": "tuple()"
																		}
																	},
																	"id": 630,
																	"nodeType": "ExpressionStatement",
																	"src": "6354:54:2"
																}
															]
														},
														"errorName": "",
														"id": 632,
														"nodeType": "TryCatchClause",
														"parameters": {
															"id": 613,
															"nodeType": "ParameterList",
															"parameters": [
																{
																	"constant": false,
																	"id": 612,
																	"mutability": "mutable",
																	"name": "slot",
																	"nameLocation": "6201:4:2",
																	"nodeType": "VariableDeclaration",
																	"scope": 632,
																	"src": "6193:12:2",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	},
																	"typeName": {
																		"id": 611,
																		"name": "bytes32",
																		"nodeType": "ElementaryTypeName",
																		"src": "6193:7:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"src": "6192:14:2"
														},
														"src": "6184:235:2"
													},
													{
														"block": {
															"id": 639,
															"nodeType": "Block",
															"src": "6426:138:2",
															"statements": [
																{
																	"errorCall": {
																		"arguments": [
																			{
																				"id": 636,
																				"name": "newImplementation",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 601,
																				"src": "6535:17:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			],
																			"expression": {
																				"id": 633,
																				"name": "ERC1967Utils",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1015,
																				"src": "6493:12:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_contract$_ERC1967Utils_$1015_$",
																					"typeString": "type(library ERC1967Utils)"
																				}
																			},
																			"id": 635,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "6506:28:2",
																			"memberName": "ERC1967InvalidImplementation",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 741,
																			"src": "6493:41:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																				"typeString": "function (address) pure returns (error)"
																			}
																		},
																		"id": 637,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "6493:60:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_error",
																			"typeString": "error"
																		}
																	},
																	"id": 638,
																	"nodeType": "RevertStatement",
																	"src": "6486:67:2"
																}
															]
														},
														"errorName": "",
														"id": 640,
														"nodeType": "TryCatchClause",
														"src": "6420:144:2"
													}
												],
												"externalCall": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"expression": {
															"arguments": [
																{
																	"id": 607,
																	"name": "newImplementation",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 601,
																	"src": "6149:17:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 606,
																"name": "IERC1822Proxiable",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 721,
																"src": "6131:17:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_IERC1822Proxiable_$721_$",
																	"typeString": "type(contract IERC1822Proxiable)"
																}
															},
															"id": 608,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6131:36:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC1822Proxiable_$721",
																"typeString": "contract IERC1822Proxiable"
															}
														},
														"id": 609,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "6168:13:2",
														"memberName": "proxiableUUID",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 720,
														"src": "6131:50:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_view$__$returns$_t_bytes32_$",
															"typeString": "function () view external returns (bytes32)"
														}
													},
													"id": 610,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6131:52:2",
													"tryCall": true,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"id": 641,
												"nodeType": "TryStatement",
												"src": "6127:437:2"
											}
										]
									},
									"documentation": {
										"id": 599,
										"nodeType": "StructuredDocumentation",
										"src": "5680:347:2",
										"text": " @dev Performs an implementation upgrade with a security check for UUPS proxies, and additional setup call.\n As a security check, {proxiableUUID} is invoked in the new implementation, and the return value\n is expected to be the implementation slot in ERC-1967.\n Emits an {IERC1967-Upgraded} event."
									},
									"id": 643,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_upgradeToAndCallUUPS",
									"nameLocation": "6041:21:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 604,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 601,
												"mutability": "mutable",
												"name": "newImplementation",
												"nameLocation": "6071:17:2",
												"nodeType": "VariableDeclaration",
												"scope": 643,
												"src": "6063:25:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 600,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6063:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 603,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "6103:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 643,
												"src": "6090:17:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 602,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6090:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6062:46:2"
									},
									"returnParameters": {
										"id": 605,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6117:0:2"
									},
									"scope": 644,
									"src": "6032:538:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								}
							],
							"scope": 645,
							"src": "986:5586:2",
							"usedErrors": [
								211,
								214,
								489,
								494,
								741,
								754,
								1113,
								1376
							],
							"usedEvents": [
								219,
								698
							]
						}
					],
					"src": "115:6458:2"
				},
				"id": 2
			},
			"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol",
					"exportedSymbols": {
						"ContextUpgradeable": [
							690
						],
						"Initializable": [
							462
						]
					},
					"id": 691,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 646,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "101:24:3"
						},
						{
							"absolutePath": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol",
							"file": "../proxy/utils/Initializable.sol",
							"id": 648,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 691,
							"sourceUnit": 463,
							"src": "126:63:3",
							"symbolAliases": [
								{
									"foreign": {
										"id": 647,
										"name": "Initializable",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 462,
										"src": "134:13:3",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 650,
										"name": "Initializable",
										"nameLocations": [
											"728:13:3"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 462,
										"src": "728:13:3"
									},
									"id": 651,
									"nodeType": "InheritanceSpecifier",
									"src": "728:13:3"
								}
							],
							"canonicalName": "ContextUpgradeable",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 649,
								"nodeType": "StructuredDocumentation",
								"src": "191:496:3",
								"text": " @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."
							},
							"fullyImplemented": true,
							"id": 690,
							"linearizedBaseContracts": [
								690,
								462
							],
							"name": "ContextUpgradeable",
							"nameLocation": "706:18:3",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 656,
										"nodeType": "Block",
										"src": "800:7:3",
										"statements": []
									},
									"id": 657,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 654,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 653,
												"name": "onlyInitializing",
												"nameLocations": [
													"783:16:3"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 357,
												"src": "783:16:3"
											},
											"nodeType": "ModifierInvocation",
											"src": "783:16:3"
										}
									],
									"name": "__Context_init",
									"nameLocation": "757:14:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 652,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "771:2:3"
									},
									"returnParameters": {
										"id": 655,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "800:0:3"
									},
									"scope": 690,
									"src": "748:59:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 662,
										"nodeType": "Block",
										"src": "875:7:3",
										"statements": []
									},
									"id": 663,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 660,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 659,
												"name": "onlyInitializing",
												"nameLocations": [
													"858:16:3"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 357,
												"src": "858:16:3"
											},
											"nodeType": "ModifierInvocation",
											"src": "858:16:3"
										}
									],
									"name": "__Context_init_unchained",
									"nameLocation": "822:24:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 658,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "846:2:3"
									},
									"returnParameters": {
										"id": 661,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "875:0:3"
									},
									"scope": 690,
									"src": "813:69:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 671,
										"nodeType": "Block",
										"src": "949:34:3",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 668,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "966:3:3",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 669,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "970:6:3",
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "966:10:3",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 667,
												"id": 670,
												"nodeType": "Return",
												"src": "959:17:3"
											}
										]
									},
									"id": 672,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgSender",
									"nameLocation": "896:10:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 664,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "906:2:3"
									},
									"returnParameters": {
										"id": 667,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 666,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 672,
												"src": "940:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 665,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "940:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "939:9:3"
									},
									"scope": 690,
									"src": "887:96:3",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 680,
										"nodeType": "Block",
										"src": "1056:32:3",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 677,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "1073:3:3",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 678,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "1077:4:3",
													"memberName": "data",
													"nodeType": "MemberAccess",
													"src": "1073:8:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_calldata_ptr",
														"typeString": "bytes calldata"
													}
												},
												"functionReturnParameters": 676,
												"id": 679,
												"nodeType": "Return",
												"src": "1066:15:3"
											}
										]
									},
									"id": 681,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgData",
									"nameLocation": "998:8:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 673,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1006:2:3"
									},
									"returnParameters": {
										"id": 676,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 675,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 681,
												"src": "1040:14:3",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 674,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "1040:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1039:16:3"
									},
									"scope": 690,
									"src": "989:99:3",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 688,
										"nodeType": "Block",
										"src": "1166:25:3",
										"statements": [
											{
												"expression": {
													"hexValue": "30",
													"id": 686,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "1183:1:3",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"functionReturnParameters": 685,
												"id": 687,
												"nodeType": "Return",
												"src": "1176:8:3"
											}
										]
									},
									"id": 689,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_contextSuffixLength",
									"nameLocation": "1103:20:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 682,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1123:2:3"
									},
									"returnParameters": {
										"id": 685,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 684,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 689,
												"src": "1157:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 683,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1157:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1156:9:3"
									},
									"scope": 690,
									"src": "1094:97:3",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 691,
							"src": "688:505:3",
							"usedErrors": [
								211,
								214
							],
							"usedEvents": [
								219
							]
						}
					],
					"src": "101:1093:3"
				},
				"id": 3
			},
			"@openzeppelin/contracts/interfaces/IERC1967.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/interfaces/IERC1967.sol",
					"exportedSymbols": {
						"IERC1967": [
							711
						]
					},
					"id": 712,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 692,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "107:24:4"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC1967",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 693,
								"nodeType": "StructuredDocumentation",
								"src": "133:101:4",
								"text": " @dev ERC-1967: Proxy Storage Slots. This interface contains the events defined in the ERC."
							},
							"fullyImplemented": true,
							"id": 711,
							"linearizedBaseContracts": [
								711
							],
							"name": "IERC1967",
							"nameLocation": "245:8:4",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 694,
										"nodeType": "StructuredDocumentation",
										"src": "260:68:4",
										"text": " @dev Emitted when the implementation is upgraded."
									},
									"eventSelector": "bc7cd75a20ee27fd9adebab32041f755214dbc6bffa90cc0225b39da2e5c2d3b",
									"id": 698,
									"name": "Upgraded",
									"nameLocation": "339:8:4",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 697,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 696,
												"indexed": true,
												"mutability": "mutable",
												"name": "implementation",
												"nameLocation": "364:14:4",
												"nodeType": "VariableDeclaration",
												"scope": 698,
												"src": "348:30:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 695,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "348:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "347:32:4"
									},
									"src": "333:47:4"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 699,
										"nodeType": "StructuredDocumentation",
										"src": "386:67:4",
										"text": " @dev Emitted when the admin account has changed."
									},
									"eventSelector": "7e644d79422f17c01e4894b5f4f588d331ebfa28653d42ae832dc59e38c9798f",
									"id": 705,
									"name": "AdminChanged",
									"nameLocation": "464:12:4",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 704,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 701,
												"indexed": false,
												"mutability": "mutable",
												"name": "previousAdmin",
												"nameLocation": "485:13:4",
												"nodeType": "VariableDeclaration",
												"scope": 705,
												"src": "477:21:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 700,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "477:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 703,
												"indexed": false,
												"mutability": "mutable",
												"name": "newAdmin",
												"nameLocation": "508:8:4",
												"nodeType": "VariableDeclaration",
												"scope": 705,
												"src": "500:16:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 702,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "500:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "476:41:4"
									},
									"src": "458:60:4"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 706,
										"nodeType": "StructuredDocumentation",
										"src": "524:59:4",
										"text": " @dev Emitted when the beacon is changed."
									},
									"eventSelector": "1cf3b03a6cf19fa2baba4df148e9dcabedea7f8a5c07840e207e5c089be95d3e",
									"id": 710,
									"name": "BeaconUpgraded",
									"nameLocation": "594:14:4",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 709,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 708,
												"indexed": true,
												"mutability": "mutable",
												"name": "beacon",
												"nameLocation": "625:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 710,
												"src": "609:22:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 707,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "609:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "608:24:4"
									},
									"src": "588:45:4"
								}
							],
							"scope": 712,
							"src": "235:400:4",
							"usedErrors": [],
							"usedEvents": [
								698,
								705,
								710
							]
						}
					],
					"src": "107:529:4"
				},
				"id": 4
			},
			"@openzeppelin/contracts/interfaces/draft-IERC1822.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/interfaces/draft-IERC1822.sol",
					"exportedSymbols": {
						"IERC1822Proxiable": [
							721
						]
					},
					"id": 722,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 713,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "113:24:5"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC1822Proxiable",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 714,
								"nodeType": "StructuredDocumentation",
								"src": "139:204:5",
								"text": " @dev ERC-1822: Universal Upgradeable Proxy Standard (UUPS) documents a method for upgradeability through a simplified\n proxy whose upgrades are fully controlled by the current implementation."
							},
							"fullyImplemented": false,
							"id": 721,
							"linearizedBaseContracts": [
								721
							],
							"name": "IERC1822Proxiable",
							"nameLocation": "354:17:5",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 715,
										"nodeType": "StructuredDocumentation",
										"src": "378:438:5",
										"text": " @dev Returns the storage slot that the proxiable contract assumes is being used to store the implementation\n address.\n IMPORTANT: A proxy pointing at a proxiable contract should not be considered proxiable itself, because this risks\n bricking a proxy that upgrades to it, by delegating to itself until out of gas. Thus it is critical that this\n function revert if invoked through a proxy."
									},
									"functionSelector": "52d1902d",
									"id": 720,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "proxiableUUID",
									"nameLocation": "830:13:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 716,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "843:2:5"
									},
									"returnParameters": {
										"id": 719,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 718,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 720,
												"src": "869:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 717,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "869:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "868:9:5"
									},
									"scope": 721,
									"src": "821:57:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 722,
							"src": "344:536:5",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "113:768:5"
				},
				"id": 5
			},
			"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol",
					"exportedSymbols": {
						"Address": [
							1363
						],
						"ERC1967Utils": [
							1015
						],
						"IBeacon": [
							1025
						],
						"IERC1967": [
							711
						],
						"StorageSlot": [
							1509
						]
					},
					"id": 1016,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 723,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".22"
							],
							"nodeType": "PragmaDirective",
							"src": "114:24:6"
						},
						{
							"absolutePath": "@openzeppelin/contracts/proxy/beacon/IBeacon.sol",
							"file": "../beacon/IBeacon.sol",
							"id": 725,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1016,
							"sourceUnit": 1026,
							"src": "140:46:6",
							"symbolAliases": [
								{
									"foreign": {
										"id": 724,
										"name": "IBeacon",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1025,
										"src": "148:7:6",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/interfaces/IERC1967.sol",
							"file": "../../interfaces/IERC1967.sol",
							"id": 727,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1016,
							"sourceUnit": 712,
							"src": "187:55:6",
							"symbolAliases": [
								{
									"foreign": {
										"id": 726,
										"name": "IERC1967",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 711,
										"src": "195:8:6",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Address.sol",
							"file": "../../utils/Address.sol",
							"id": 729,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1016,
							"sourceUnit": 1364,
							"src": "243:48:6",
							"symbolAliases": [
								{
									"foreign": {
										"id": 728,
										"name": "Address",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1363,
										"src": "251:7:6",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/StorageSlot.sol",
							"file": "../../utils/StorageSlot.sol",
							"id": 731,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1016,
							"sourceUnit": 1510,
							"src": "292:56:6",
							"symbolAliases": [
								{
									"foreign": {
										"id": 730,
										"name": "StorageSlot",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1509,
										"src": "300:11:6",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "ERC1967Utils",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 732,
								"nodeType": "StructuredDocumentation",
								"src": "350:145:6",
								"text": " @dev This library provides getters and event emitting update functions for\n https://eips.ethereum.org/EIPS/eip-1967[ERC-1967] slots."
							},
							"fullyImplemented": true,
							"id": 1015,
							"linearizedBaseContracts": [
								1015
							],
							"name": "ERC1967Utils",
							"nameLocation": "504:12:6",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": true,
									"documentation": {
										"id": 733,
										"nodeType": "StructuredDocumentation",
										"src": "523:170:6",
										"text": " @dev Storage slot with the address of the current implementation.\n This is the keccak-256 hash of \"eip1967.proxy.implementation\" subtracted by 1."
									},
									"id": 736,
									"mutability": "constant",
									"name": "IMPLEMENTATION_SLOT",
									"nameLocation": "789:19:6",
									"nodeType": "VariableDeclaration",
									"scope": 1015,
									"src": "763:114:6",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes32",
										"typeString": "bytes32"
									},
									"typeName": {
										"id": 734,
										"name": "bytes32",
										"nodeType": "ElementaryTypeName",
										"src": "763:7:6",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"value": {
										"hexValue": "307833363038393461313362613161333231303636376338323834393264623938646361336532303736636333373335613932306133636135303564333832626263",
										"id": 735,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "811:66:6",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_24440054405305269366569402256811496959409073762505157381672968839269610695612_by_1",
											"typeString": "int_const 2444...(69 digits omitted)...5612"
										},
										"value": "0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc"
									},
									"visibility": "internal"
								},
								{
									"documentation": {
										"id": 737,
										"nodeType": "StructuredDocumentation",
										"src": "884:69:6",
										"text": " @dev The `implementation` of the proxy is invalid."
									},
									"errorSelector": "4c9c8ce3",
									"id": 741,
									"name": "ERC1967InvalidImplementation",
									"nameLocation": "964:28:6",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 740,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 739,
												"mutability": "mutable",
												"name": "implementation",
												"nameLocation": "1001:14:6",
												"nodeType": "VariableDeclaration",
												"scope": 741,
												"src": "993:22:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 738,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "993:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "992:24:6"
									},
									"src": "958:59:6"
								},
								{
									"documentation": {
										"id": 742,
										"nodeType": "StructuredDocumentation",
										"src": "1023:60:6",
										"text": " @dev The `admin` of the proxy is invalid."
									},
									"errorSelector": "62e77ba2",
									"id": 746,
									"name": "ERC1967InvalidAdmin",
									"nameLocation": "1094:19:6",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 745,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 744,
												"mutability": "mutable",
												"name": "admin",
												"nameLocation": "1122:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 746,
												"src": "1114:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 743,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1114:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1113:15:6"
									},
									"src": "1088:41:6"
								},
								{
									"documentation": {
										"id": 747,
										"nodeType": "StructuredDocumentation",
										"src": "1135:61:6",
										"text": " @dev The `beacon` of the proxy is invalid."
									},
									"errorSelector": "64ced0ec",
									"id": 751,
									"name": "ERC1967InvalidBeacon",
									"nameLocation": "1207:20:6",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 750,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 749,
												"mutability": "mutable",
												"name": "beacon",
												"nameLocation": "1236:6:6",
												"nodeType": "VariableDeclaration",
												"scope": 751,
												"src": "1228:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 748,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1228:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1227:16:6"
									},
									"src": "1201:43:6"
								},
								{
									"documentation": {
										"id": 752,
										"nodeType": "StructuredDocumentation",
										"src": "1250:82:6",
										"text": " @dev An upgrade function sees `msg.value > 0` that may be lost."
									},
									"errorSelector": "b398979f",
									"id": 754,
									"name": "ERC1967NonPayable",
									"nameLocation": "1343:17:6",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 753,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1360:2:6"
									},
									"src": "1337:26:6"
								},
								{
									"body": {
										"id": 766,
										"nodeType": "Block",
										"src": "1502:77:6",
										"statements": [
											{
												"expression": {
													"expression": {
														"arguments": [
															{
																"id": 762,
																"name": "IMPLEMENTATION_SLOT",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 736,
																"src": "1546:19:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															],
															"expression": {
																"id": 760,
																"name": "StorageSlot",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1509,
																"src": "1519:11:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_StorageSlot_$1509_$",
																	"typeString": "type(library StorageSlot)"
																}
															},
															"id": 761,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1531:14:6",
															"memberName": "getAddressSlot",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1420,
															"src": "1519:26:6",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_bytes32_$returns$_t_struct$_AddressSlot_$1391_storage_ptr_$",
																"typeString": "function (bytes32) pure returns (struct StorageSlot.AddressSlot storage pointer)"
															}
														},
														"id": 763,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1519:47:6",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_AddressSlot_$1391_storage_ptr",
															"typeString": "struct StorageSlot.AddressSlot storage pointer"
														}
													},
													"id": 764,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "1567:5:6",
													"memberName": "value",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 1390,
													"src": "1519:53:6",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 759,
												"id": 765,
												"nodeType": "Return",
												"src": "1512:60:6"
											}
										]
									},
									"documentation": {
										"id": 755,
										"nodeType": "StructuredDocumentation",
										"src": "1369:67:6",
										"text": " @dev Returns the current implementation address."
									},
									"id": 767,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getImplementation",
									"nameLocation": "1450:17:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 756,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1467:2:6"
									},
									"returnParameters": {
										"id": 759,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 758,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 767,
												"src": "1493:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 757,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1493:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1492:9:6"
									},
									"scope": 1015,
									"src": "1441:138:6",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 793,
										"nodeType": "Block",
										"src": "1734:218:6",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 777,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"expression": {
																"id": 773,
																"name": "newImplementation",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 770,
																"src": "1748:17:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 774,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1766:4:6",
															"memberName": "code",
															"nodeType": "MemberAccess",
															"src": "1748:22:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 775,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1771:6:6",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "1748:29:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 776,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1781:1:6",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "1748:34:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 783,
												"nodeType": "IfStatement",
												"src": "1744:119:6",
												"trueBody": {
													"id": 782,
													"nodeType": "Block",
													"src": "1784:79:6",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"id": 779,
																		"name": "newImplementation",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 770,
																		"src": "1834:17:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 778,
																	"name": "ERC1967InvalidImplementation",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 741,
																	"src": "1805:28:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 780,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1805:47:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 781,
															"nodeType": "RevertStatement",
															"src": "1798:54:6"
														}
													]
												}
											},
											{
												"expression": {
													"id": 791,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"arguments": [
																{
																	"id": 787,
																	"name": "IMPLEMENTATION_SLOT",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 736,
																	"src": "1899:19:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																],
																"expression": {
																	"id": 784,
																	"name": "StorageSlot",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1509,
																	"src": "1872:11:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_contract$_StorageSlot_$1509_$",
																		"typeString": "type(library StorageSlot)"
																	}
																},
																"id": 786,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "1884:14:6",
																"memberName": "getAddressSlot",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 1420,
																"src": "1872:26:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_bytes32_$returns$_t_struct$_AddressSlot_$1391_storage_ptr_$",
																	"typeString": "function (bytes32) pure returns (struct StorageSlot.AddressSlot storage pointer)"
																}
															},
															"id": 788,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1872:47:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_AddressSlot_$1391_storage_ptr",
																"typeString": "struct StorageSlot.AddressSlot storage pointer"
															}
														},
														"id": 789,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "1920:5:6",
														"memberName": "value",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1390,
														"src": "1872:53:6",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 790,
														"name": "newImplementation",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 770,
														"src": "1928:17:6",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1872:73:6",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 792,
												"nodeType": "ExpressionStatement",
												"src": "1872:73:6"
											}
										]
									},
									"documentation": {
										"id": 768,
										"nodeType": "StructuredDocumentation",
										"src": "1585:81:6",
										"text": " @dev Stores a new address in the ERC-1967 implementation slot."
									},
									"id": 794,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_setImplementation",
									"nameLocation": "1680:18:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 771,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 770,
												"mutability": "mutable",
												"name": "newImplementation",
												"nameLocation": "1707:17:6",
												"nodeType": "VariableDeclaration",
												"scope": 794,
												"src": "1699:25:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 769,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1699:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1698:27:6"
									},
									"returnParameters": {
										"id": 772,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1734:0:6"
									},
									"scope": 1015,
									"src": "1671:281:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 829,
										"nodeType": "Block",
										"src": "2345:263:6",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 803,
															"name": "newImplementation",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 797,
															"src": "2374:17:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 802,
														"name": "_setImplementation",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 794,
														"src": "2355:18:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 804,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2355:37:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 805,
												"nodeType": "ExpressionStatement",
												"src": "2355:37:6"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 809,
															"name": "newImplementation",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 797,
															"src": "2425:17:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"expression": {
															"id": 806,
															"name": "IERC1967",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 711,
															"src": "2407:8:6",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_IERC1967_$711_$",
																"typeString": "type(contract IERC1967)"
															}
														},
														"id": 808,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "2416:8:6",
														"memberName": "Upgraded",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 698,
														"src": "2407:17:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 810,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2407:36:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 811,
												"nodeType": "EmitStatement",
												"src": "2402:41:6"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 815,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 812,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 799,
															"src": "2458:4:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 813,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "2463:6:6",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "2458:11:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 814,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2472:1:6",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "2458:15:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 827,
													"nodeType": "Block",
													"src": "2559:43:6",
													"statements": [
														{
															"expression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 824,
																	"name": "_checkNonPayable",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1014,
																	"src": "2573:16:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
																		"typeString": "function ()"
																	}
																},
																"id": 825,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2573:18:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 826,
															"nodeType": "ExpressionStatement",
															"src": "2573:18:6"
														}
													]
												},
												"id": 828,
												"nodeType": "IfStatement",
												"src": "2454:148:6",
												"trueBody": {
													"id": 823,
													"nodeType": "Block",
													"src": "2475:78:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 819,
																		"name": "newImplementation",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 797,
																		"src": "2518:17:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 820,
																		"name": "data",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 799,
																		"src": "2537:4:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	],
																	"expression": {
																		"id": 816,
																		"name": "Address",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1363,
																		"src": "2489:7:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_contract$_Address_$1363_$",
																			"typeString": "type(library Address)"
																		}
																	},
																	"id": 818,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "2497:20:6",
																	"memberName": "functionDelegateCall",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1280,
																	"src": "2489:28:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$returns$_t_bytes_memory_ptr_$",
																		"typeString": "function (address,bytes memory) returns (bytes memory)"
																	}
																},
																"id": 821,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2489:53:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"id": 822,
															"nodeType": "ExpressionStatement",
															"src": "2489:53:6"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 795,
										"nodeType": "StructuredDocumentation",
										"src": "1958:301:6",
										"text": " @dev Performs implementation upgrade with additional setup call if data is nonempty.\n This function is payable only if the setup call is performed, otherwise `msg.value` is rejected\n to avoid stuck value in the contract.\n Emits an {IERC1967-Upgraded} event."
									},
									"id": 830,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "upgradeToAndCall",
									"nameLocation": "2273:16:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 800,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 797,
												"mutability": "mutable",
												"name": "newImplementation",
												"nameLocation": "2298:17:6",
												"nodeType": "VariableDeclaration",
												"scope": 830,
												"src": "2290:25:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 796,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2290:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 799,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "2330:4:6",
												"nodeType": "VariableDeclaration",
												"scope": 830,
												"src": "2317:17:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 798,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "2317:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2289:46:6"
									},
									"returnParameters": {
										"id": 801,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2345:0:6"
									},
									"scope": 1015,
									"src": "2264:344:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"constant": true,
									"documentation": {
										"id": 831,
										"nodeType": "StructuredDocumentation",
										"src": "2614:145:6",
										"text": " @dev Storage slot with the admin of the contract.\n This is the keccak-256 hash of \"eip1967.proxy.admin\" subtracted by 1."
									},
									"id": 834,
									"mutability": "constant",
									"name": "ADMIN_SLOT",
									"nameLocation": "2855:10:6",
									"nodeType": "VariableDeclaration",
									"scope": 1015,
									"src": "2829:105:6",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes32",
										"typeString": "bytes32"
									},
									"typeName": {
										"id": 832,
										"name": "bytes32",
										"nodeType": "ElementaryTypeName",
										"src": "2829:7:6",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"value": {
										"hexValue": "307862353331323736383461353638623331373361653133623966386136303136653234336536336236653865653131373864366137313738353062356436313033",
										"id": 833,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "2868:66:6",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_81955473079516046949633743016697847541294818689821282749996681496272635257091_by_1",
											"typeString": "int_const 8195...(69 digits omitted)...7091"
										},
										"value": "0xb53127684a568b3173ae13b9f8a6016e243e63b6e8ee1178d6a717850b5d6103"
									},
									"visibility": "internal"
								},
								{
									"body": {
										"id": 846,
										"nodeType": "Block",
										"src": "3339:68:6",
										"statements": [
											{
												"expression": {
													"expression": {
														"arguments": [
															{
																"id": 842,
																"name": "ADMIN_SLOT",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 834,
																"src": "3383:10:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															],
															"expression": {
																"id": 840,
																"name": "StorageSlot",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1509,
																"src": "3356:11:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_StorageSlot_$1509_$",
																	"typeString": "type(library StorageSlot)"
																}
															},
															"id": 841,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "3368:14:6",
															"memberName": "getAddressSlot",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1420,
															"src": "3356:26:6",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_bytes32_$returns$_t_struct$_AddressSlot_$1391_storage_ptr_$",
																"typeString": "function (bytes32) pure returns (struct StorageSlot.AddressSlot storage pointer)"
															}
														},
														"id": 843,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "3356:38:6",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_AddressSlot_$1391_storage_ptr",
															"typeString": "struct StorageSlot.AddressSlot storage pointer"
														}
													},
													"id": 844,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "3395:5:6",
													"memberName": "value",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 1390,
													"src": "3356:44:6",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 839,
												"id": 845,
												"nodeType": "Return",
												"src": "3349:51:6"
											}
										]
									},
									"documentation": {
										"id": 835,
										"nodeType": "StructuredDocumentation",
										"src": "2941:341:6",
										"text": " @dev Returns the current admin.\n TIP: To get this value clients can read directly from the storage slot shown below (specified by ERC-1967) using\n the https://eth.wiki/json-rpc/API#eth_getstorageat[`eth_getStorageAt`] RPC call.\n `0xb53127684a568b3173ae13b9f8a6016e243e63b6e8ee1178d6a717850b5d6103`"
									},
									"id": 847,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getAdmin",
									"nameLocation": "3296:8:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 836,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3304:2:6"
									},
									"returnParameters": {
										"id": 839,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 838,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 847,
												"src": "3330:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 837,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3330:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3329:9:6"
									},
									"scope": 1015,
									"src": "3287:120:6",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 877,
										"nodeType": "Block",
										"src": "3535:172:6",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 858,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 853,
														"name": "newAdmin",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 850,
														"src": "3549:8:6",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 856,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "3569:1:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 855,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "3561:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 854,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "3561:7:6",
																"typeDescriptions": {}
															}
														},
														"id": 857,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "3561:10:6",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "3549:22:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 867,
												"nodeType": "IfStatement",
												"src": "3545:91:6",
												"trueBody": {
													"id": 866,
													"nodeType": "Block",
													"src": "3573:63:6",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 862,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "3622:1:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 861,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "3614:7:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 860,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "3614:7:6",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 863,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "3614:10:6",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 859,
																	"name": "ERC1967InvalidAdmin",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 746,
																	"src": "3594:19:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 864,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3594:31:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 865,
															"nodeType": "RevertStatement",
															"src": "3587:38:6"
														}
													]
												}
											},
											{
												"expression": {
													"id": 875,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"arguments": [
																{
																	"id": 871,
																	"name": "ADMIN_SLOT",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 834,
																	"src": "3672:10:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																],
																"expression": {
																	"id": 868,
																	"name": "StorageSlot",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1509,
																	"src": "3645:11:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_contract$_StorageSlot_$1509_$",
																		"typeString": "type(library StorageSlot)"
																	}
																},
																"id": 870,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "3657:14:6",
																"memberName": "getAddressSlot",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 1420,
																"src": "3645:26:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_bytes32_$returns$_t_struct$_AddressSlot_$1391_storage_ptr_$",
																	"typeString": "function (bytes32) pure returns (struct StorageSlot.AddressSlot storage pointer)"
																}
															},
															"id": 872,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3645:38:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_AddressSlot_$1391_storage_ptr",
																"typeString": "struct StorageSlot.AddressSlot storage pointer"
															}
														},
														"id": 873,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "3684:5:6",
														"memberName": "value",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1390,
														"src": "3645:44:6",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 874,
														"name": "newAdmin",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 850,
														"src": "3692:8:6",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "3645:55:6",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 876,
												"nodeType": "ExpressionStatement",
												"src": "3645:55:6"
											}
										]
									},
									"documentation": {
										"id": 848,
										"nodeType": "StructuredDocumentation",
										"src": "3413:72:6",
										"text": " @dev Stores a new address in the ERC-1967 admin slot."
									},
									"id": 878,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_setAdmin",
									"nameLocation": "3499:9:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 851,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 850,
												"mutability": "mutable",
												"name": "newAdmin",
												"nameLocation": "3517:8:6",
												"nodeType": "VariableDeclaration",
												"scope": 878,
												"src": "3509:16:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 849,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3509:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3508:18:6"
									},
									"returnParameters": {
										"id": 852,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3535:0:6"
									},
									"scope": 1015,
									"src": "3490:217:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 896,
										"nodeType": "Block",
										"src": "3875:94:6",
										"statements": [
											{
												"eventCall": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 887,
																"name": "getAdmin",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 847,
																"src": "3912:8:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 888,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3912:10:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 889,
															"name": "newAdmin",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 881,
															"src": "3924:8:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"expression": {
															"id": 884,
															"name": "IERC1967",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 711,
															"src": "3890:8:6",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_IERC1967_$711_$",
																"typeString": "type(contract IERC1967)"
															}
														},
														"id": 886,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "3899:12:6",
														"memberName": "AdminChanged",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 705,
														"src": "3890:21:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 890,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3890:43:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 891,
												"nodeType": "EmitStatement",
												"src": "3885:48:6"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 893,
															"name": "newAdmin",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 881,
															"src": "3953:8:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 892,
														"name": "_setAdmin",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 878,
														"src": "3943:9:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 894,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3943:19:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 895,
												"nodeType": "ExpressionStatement",
												"src": "3943:19:6"
											}
										]
									},
									"documentation": {
										"id": 879,
										"nodeType": "StructuredDocumentation",
										"src": "3713:109:6",
										"text": " @dev Changes the admin of the proxy.\n Emits an {IERC1967-AdminChanged} event."
									},
									"id": 897,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "changeAdmin",
									"nameLocation": "3836:11:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 882,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 881,
												"mutability": "mutable",
												"name": "newAdmin",
												"nameLocation": "3856:8:6",
												"nodeType": "VariableDeclaration",
												"scope": 897,
												"src": "3848:16:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 880,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3848:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3847:18:6"
									},
									"returnParameters": {
										"id": 883,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3875:0:6"
									},
									"scope": 1015,
									"src": "3827:142:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"constant": true,
									"documentation": {
										"id": 898,
										"nodeType": "StructuredDocumentation",
										"src": "3975:201:6",
										"text": " @dev The storage slot of the UpgradeableBeacon contract which defines the implementation for this proxy.\n This is the keccak-256 hash of \"eip1967.proxy.beacon\" subtracted by 1."
									},
									"id": 901,
									"mutability": "constant",
									"name": "BEACON_SLOT",
									"nameLocation": "4272:11:6",
									"nodeType": "VariableDeclaration",
									"scope": 1015,
									"src": "4246:106:6",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes32",
										"typeString": "bytes32"
									},
									"typeName": {
										"id": 899,
										"name": "bytes32",
										"nodeType": "ElementaryTypeName",
										"src": "4246:7:6",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"value": {
										"hexValue": "307861336630616437346535343233616562666438306433656634333436353738333335613961373261656165653539666636636233353832623335313333643530",
										"id": 900,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "4286:66:6",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_74152234768234802001998023604048924213078445070507226371336425913862612794704_by_1",
											"typeString": "int_const 7415...(69 digits omitted)...4704"
										},
										"value": "0xa3f0ad74e5423aebfd80d3ef4346578335a9a72aeaee59ff6cb3582b35133d50"
									},
									"visibility": "internal"
								},
								{
									"body": {
										"id": 913,
										"nodeType": "Block",
										"src": "4468:69:6",
										"statements": [
											{
												"expression": {
													"expression": {
														"arguments": [
															{
																"id": 909,
																"name": "BEACON_SLOT",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 901,
																"src": "4512:11:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															],
															"expression": {
																"id": 907,
																"name": "StorageSlot",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1509,
																"src": "4485:11:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_StorageSlot_$1509_$",
																	"typeString": "type(library StorageSlot)"
																}
															},
															"id": 908,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "4497:14:6",
															"memberName": "getAddressSlot",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1420,
															"src": "4485:26:6",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_bytes32_$returns$_t_struct$_AddressSlot_$1391_storage_ptr_$",
																"typeString": "function (bytes32) pure returns (struct StorageSlot.AddressSlot storage pointer)"
															}
														},
														"id": 910,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "4485:39:6",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_AddressSlot_$1391_storage_ptr",
															"typeString": "struct StorageSlot.AddressSlot storage pointer"
														}
													},
													"id": 911,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "4525:5:6",
													"memberName": "value",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 1390,
													"src": "4485:45:6",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 906,
												"id": 912,
												"nodeType": "Return",
												"src": "4478:52:6"
											}
										]
									},
									"documentation": {
										"id": 902,
										"nodeType": "StructuredDocumentation",
										"src": "4359:51:6",
										"text": " @dev Returns the current beacon."
									},
									"id": 914,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getBeacon",
									"nameLocation": "4424:9:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 903,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4433:2:6"
									},
									"returnParameters": {
										"id": 906,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 905,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 914,
												"src": "4459:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 904,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4459:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4458:9:6"
									},
									"scope": 1015,
									"src": "4415:122:6",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 959,
										"nodeType": "Block",
										"src": "4667:390:6",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 924,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"expression": {
																"id": 920,
																"name": "newBeacon",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 917,
																"src": "4681:9:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 921,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "4691:4:6",
															"memberName": "code",
															"nodeType": "MemberAccess",
															"src": "4681:14:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 922,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "4696:6:6",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "4681:21:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 923,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "4706:1:6",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "4681:26:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 930,
												"nodeType": "IfStatement",
												"src": "4677:95:6",
												"trueBody": {
													"id": 929,
													"nodeType": "Block",
													"src": "4709:63:6",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"id": 926,
																		"name": "newBeacon",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 917,
																		"src": "4751:9:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 925,
																	"name": "ERC1967InvalidBeacon",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 751,
																	"src": "4730:20:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 927,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4730:31:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 928,
															"nodeType": "RevertStatement",
															"src": "4723:38:6"
														}
													]
												}
											},
											{
												"expression": {
													"id": 938,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"arguments": [
																{
																	"id": 934,
																	"name": "BEACON_SLOT",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 901,
																	"src": "4809:11:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																],
																"expression": {
																	"id": 931,
																	"name": "StorageSlot",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1509,
																	"src": "4782:11:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_contract$_StorageSlot_$1509_$",
																		"typeString": "type(library StorageSlot)"
																	}
																},
																"id": 933,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "4794:14:6",
																"memberName": "getAddressSlot",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 1420,
																"src": "4782:26:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_bytes32_$returns$_t_struct$_AddressSlot_$1391_storage_ptr_$",
																	"typeString": "function (bytes32) pure returns (struct StorageSlot.AddressSlot storage pointer)"
																}
															},
															"id": 935,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4782:39:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_AddressSlot_$1391_storage_ptr",
																"typeString": "struct StorageSlot.AddressSlot storage pointer"
															}
														},
														"id": 936,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "4822:5:6",
														"memberName": "value",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1390,
														"src": "4782:45:6",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 937,
														"name": "newBeacon",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 917,
														"src": "4830:9:6",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "4782:57:6",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 939,
												"nodeType": "ExpressionStatement",
												"src": "4782:57:6"
											},
											{
												"assignments": [
													941
												],
												"declarations": [
													{
														"constant": false,
														"id": 941,
														"mutability": "mutable",
														"name": "beaconImplementation",
														"nameLocation": "4858:20:6",
														"nodeType": "VariableDeclaration",
														"scope": 959,
														"src": "4850:28:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 940,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "4850:7:6",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 947,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"expression": {
															"arguments": [
																{
																	"id": 943,
																	"name": "newBeacon",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 917,
																	"src": "4889:9:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 942,
																"name": "IBeacon",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1025,
																"src": "4881:7:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_IBeacon_$1025_$",
																	"typeString": "type(contract IBeacon)"
																}
															},
															"id": 944,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4881:18:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IBeacon_$1025",
																"typeString": "contract IBeacon"
															}
														},
														"id": 945,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "4900:14:6",
														"memberName": "implementation",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1024,
														"src": "4881:33:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_view$__$returns$_t_address_$",
															"typeString": "function () view external returns (address)"
														}
													},
													"id": 946,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4881:35:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4850:66:6"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 952,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"expression": {
																"id": 948,
																"name": "beaconImplementation",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 941,
																"src": "4930:20:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 949,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "4951:4:6",
															"memberName": "code",
															"nodeType": "MemberAccess",
															"src": "4930:25:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 950,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "4956:6:6",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "4930:32:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 951,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "4966:1:6",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "4930:37:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 958,
												"nodeType": "IfStatement",
												"src": "4926:125:6",
												"trueBody": {
													"id": 957,
													"nodeType": "Block",
													"src": "4969:82:6",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"id": 954,
																		"name": "beaconImplementation",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 941,
																		"src": "5019:20:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 953,
																	"name": "ERC1967InvalidImplementation",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 741,
																	"src": "4990:28:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 955,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4990:50:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 956,
															"nodeType": "RevertStatement",
															"src": "4983:57:6"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 915,
										"nodeType": "StructuredDocumentation",
										"src": "4543:72:6",
										"text": " @dev Stores a new beacon in the ERC-1967 beacon slot."
									},
									"id": 960,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_setBeacon",
									"nameLocation": "4629:10:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 918,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 917,
												"mutability": "mutable",
												"name": "newBeacon",
												"nameLocation": "4648:9:6",
												"nodeType": "VariableDeclaration",
												"scope": 960,
												"src": "4640:17:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 916,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4640:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4639:19:6"
									},
									"returnParameters": {
										"id": 919,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4667:0:6"
									},
									"scope": 1015,
									"src": "4620:437:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 999,
										"nodeType": "Block",
										"src": "5661:263:6",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 969,
															"name": "newBeacon",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 963,
															"src": "5682:9:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 968,
														"name": "_setBeacon",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 960,
														"src": "5671:10:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 970,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5671:21:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 971,
												"nodeType": "ExpressionStatement",
												"src": "5671:21:6"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 975,
															"name": "newBeacon",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 963,
															"src": "5731:9:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"expression": {
															"id": 972,
															"name": "IERC1967",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 711,
															"src": "5707:8:6",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_IERC1967_$711_$",
																"typeString": "type(contract IERC1967)"
															}
														},
														"id": 974,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "5716:14:6",
														"memberName": "BeaconUpgraded",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 710,
														"src": "5707:23:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 976,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5707:34:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 977,
												"nodeType": "EmitStatement",
												"src": "5702:39:6"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 981,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 978,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 965,
															"src": "5756:4:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 979,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "5761:6:6",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "5756:11:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 980,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "5770:1:6",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "5756:15:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 997,
													"nodeType": "Block",
													"src": "5875:43:6",
													"statements": [
														{
															"expression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 994,
																	"name": "_checkNonPayable",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1014,
																	"src": "5889:16:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
																		"typeString": "function ()"
																	}
																},
																"id": 995,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5889:18:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 996,
															"nodeType": "ExpressionStatement",
															"src": "5889:18:6"
														}
													]
												},
												"id": 998,
												"nodeType": "IfStatement",
												"src": "5752:166:6",
												"trueBody": {
													"id": 993,
													"nodeType": "Block",
													"src": "5773:96:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"expression": {
																				"arguments": [
																					{
																						"id": 986,
																						"name": "newBeacon",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 963,
																						"src": "5824:9:6",
																						"typeDescriptions": {
																							"typeIdentifier": "t_address",
																							"typeString": "address"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_address",
																							"typeString": "address"
																						}
																					],
																					"id": 985,
																					"name": "IBeacon",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1025,
																					"src": "5816:7:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_type$_t_contract$_IBeacon_$1025_$",
																						"typeString": "type(contract IBeacon)"
																					}
																				},
																				"id": 987,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "typeConversion",
																				"lValueRequested": false,
																				"nameLocations": [],
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "5816:18:6",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_contract$_IBeacon_$1025",
																					"typeString": "contract IBeacon"
																				}
																			},
																			"id": 988,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "5835:14:6",
																			"memberName": "implementation",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 1024,
																			"src": "5816:33:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_external_view$__$returns$_t_address_$",
																				"typeString": "function () view external returns (address)"
																			}
																		},
																		"id": 989,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "5816:35:6",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 990,
																		"name": "data",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 965,
																		"src": "5853:4:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	],
																	"expression": {
																		"id": 982,
																		"name": "Address",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1363,
																		"src": "5787:7:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_contract$_Address_$1363_$",
																			"typeString": "type(library Address)"
																		}
																	},
																	"id": 984,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "5795:20:6",
																	"memberName": "functionDelegateCall",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1280,
																	"src": "5787:28:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$returns$_t_bytes_memory_ptr_$",
																		"typeString": "function (address,bytes memory) returns (bytes memory)"
																	}
																},
																"id": 991,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5787:71:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"id": 992,
															"nodeType": "ExpressionStatement",
															"src": "5787:71:6"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 961,
										"nodeType": "StructuredDocumentation",
										"src": "5063:514:6",
										"text": " @dev Change the beacon and trigger a setup call if data is nonempty.\n This function is payable only if the setup call is performed, otherwise `msg.value` is rejected\n to avoid stuck value in the contract.\n Emits an {IERC1967-BeaconUpgraded} event.\n CAUTION: Invoking this function has no effect on an instance of {BeaconProxy} since v5, since\n it uses an immutable beacon without looking at the value of the ERC-1967 beacon slot for\n efficiency."
									},
									"id": 1000,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "upgradeBeaconToAndCall",
									"nameLocation": "5591:22:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 966,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 963,
												"mutability": "mutable",
												"name": "newBeacon",
												"nameLocation": "5622:9:6",
												"nodeType": "VariableDeclaration",
												"scope": 1000,
												"src": "5614:17:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 962,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5614:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 965,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "5646:4:6",
												"nodeType": "VariableDeclaration",
												"scope": 1000,
												"src": "5633:17:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 964,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5633:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5613:38:6"
									},
									"returnParameters": {
										"id": 967,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5661:0:6"
									},
									"scope": 1015,
									"src": "5582:342:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1013,
										"nodeType": "Block",
										"src": "6149:86:6",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1007,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 1004,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967281,
															"src": "6163:3:6",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 1005,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "6167:5:6",
														"memberName": "value",
														"nodeType": "MemberAccess",
														"src": "6163:9:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 1006,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "6175:1:6",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "6163:13:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1012,
												"nodeType": "IfStatement",
												"src": "6159:70:6",
												"trueBody": {
													"id": 1011,
													"nodeType": "Block",
													"src": "6178:51:6",
													"statements": [
														{
															"errorCall": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 1008,
																	"name": "ERC1967NonPayable",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 754,
																	"src": "6199:17:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
																		"typeString": "function () pure returns (error)"
																	}
																},
																"id": 1009,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "6199:19:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 1010,
															"nodeType": "RevertStatement",
															"src": "6192:26:6"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 1001,
										"nodeType": "StructuredDocumentation",
										"src": "5930:178:6",
										"text": " @dev Reverts if `msg.value` is not zero. It can be used to avoid `msg.value` stuck in the contract\n if an upgrade doesn't perform an initialization call."
									},
									"id": 1014,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_checkNonPayable",
									"nameLocation": "6122:16:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1002,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6138:2:6"
									},
									"returnParameters": {
										"id": 1003,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6149:0:6"
									},
									"scope": 1015,
									"src": "6113:122:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								}
							],
							"scope": 1016,
							"src": "496:5741:6",
							"usedErrors": [
								741,
								746,
								751,
								754
							],
							"usedEvents": []
						}
					],
					"src": "114:6124:6"
				},
				"id": 6
			},
			"@openzeppelin/contracts/proxy/beacon/IBeacon.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/proxy/beacon/IBeacon.sol",
					"exportedSymbols": {
						"IBeacon": [
							1025
						]
					},
					"id": 1026,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1017,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "108:24:7"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IBeacon",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 1018,
								"nodeType": "StructuredDocumentation",
								"src": "134:79:7",
								"text": " @dev This is the interface that {BeaconProxy} expects of its beacon."
							},
							"fullyImplemented": false,
							"id": 1025,
							"linearizedBaseContracts": [
								1025
							],
							"name": "IBeacon",
							"nameLocation": "224:7:7",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 1019,
										"nodeType": "StructuredDocumentation",
										"src": "238:168:7",
										"text": " @dev Must return an address that can be used as a delegate call target.\n {UpgradeableBeacon} will check that this address is a contract."
									},
									"functionSelector": "5c60da1b",
									"id": 1024,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "implementation",
									"nameLocation": "420:14:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1020,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "434:2:7"
									},
									"returnParameters": {
										"id": 1023,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1022,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1024,
												"src": "460:7:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1021,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "460:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "459:9:7"
									},
									"scope": 1025,
									"src": "411:58:7",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1026,
							"src": "214:257:7",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "108:364:7"
				},
				"id": 7
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
					"exportedSymbols": {
						"IERC20": [
							1103
						]
					},
					"id": 1104,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1027,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "106:24:8"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 1028,
								"nodeType": "StructuredDocumentation",
								"src": "132:71:8",
								"text": " @dev Interface of the ERC-20 standard as defined in the ERC."
							},
							"fullyImplemented": false,
							"id": 1103,
							"linearizedBaseContracts": [
								1103
							],
							"name": "IERC20",
							"nameLocation": "214:6:8",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 1029,
										"nodeType": "StructuredDocumentation",
										"src": "227:158:8",
										"text": " @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."
									},
									"eventSelector": "ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef",
									"id": 1037,
									"name": "Transfer",
									"nameLocation": "396:8:8",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1036,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1031,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "421:4:8",
												"nodeType": "VariableDeclaration",
												"scope": 1037,
												"src": "405:20:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1030,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "405:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1033,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "443:2:8",
												"nodeType": "VariableDeclaration",
												"scope": 1037,
												"src": "427:18:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1032,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "427:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1035,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "455:5:8",
												"nodeType": "VariableDeclaration",
												"scope": 1037,
												"src": "447:13:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1034,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "447:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "404:57:8"
									},
									"src": "390:72:8"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 1038,
										"nodeType": "StructuredDocumentation",
										"src": "468:148:8",
										"text": " @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."
									},
									"eventSelector": "8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925",
									"id": 1046,
									"name": "Approval",
									"nameLocation": "627:8:8",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1045,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1040,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "652:5:8",
												"nodeType": "VariableDeclaration",
												"scope": 1046,
												"src": "636:21:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1039,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "636:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1042,
												"indexed": true,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "675:7:8",
												"nodeType": "VariableDeclaration",
												"scope": 1046,
												"src": "659:23:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1041,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "659:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1044,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "692:5:8",
												"nodeType": "VariableDeclaration",
												"scope": 1046,
												"src": "684:13:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1043,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "684:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "635:63:8"
									},
									"src": "621:78:8"
								},
								{
									"documentation": {
										"id": 1047,
										"nodeType": "StructuredDocumentation",
										"src": "705:65:8",
										"text": " @dev Returns the value of tokens in existence."
									},
									"functionSelector": "18160ddd",
									"id": 1052,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "784:11:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1048,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "795:2:8"
									},
									"returnParameters": {
										"id": 1051,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1050,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1052,
												"src": "821:7:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1049,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "821:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "820:9:8"
									},
									"scope": 1103,
									"src": "775:55:8",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1053,
										"nodeType": "StructuredDocumentation",
										"src": "836:71:8",
										"text": " @dev Returns the value of tokens owned by `account`."
									},
									"functionSelector": "70a08231",
									"id": 1060,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "921:9:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1056,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1055,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "939:7:8",
												"nodeType": "VariableDeclaration",
												"scope": 1060,
												"src": "931:15:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1054,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "931:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "930:17:8"
									},
									"returnParameters": {
										"id": 1059,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1058,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1060,
												"src": "971:7:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1057,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "971:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "970:9:8"
									},
									"scope": 1103,
									"src": "912:68:8",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1061,
										"nodeType": "StructuredDocumentation",
										"src": "986:213:8",
										"text": " @dev Moves a `value` amount of tokens from the caller's account to `to`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "a9059cbb",
									"id": 1070,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "1213:8:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1066,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1063,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1230:2:8",
												"nodeType": "VariableDeclaration",
												"scope": 1070,
												"src": "1222:10:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1062,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1222:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1065,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1242:5:8",
												"nodeType": "VariableDeclaration",
												"scope": 1070,
												"src": "1234:13:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1064,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1234:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1221:27:8"
									},
									"returnParameters": {
										"id": 1069,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1068,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1070,
												"src": "1267:4:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1067,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1267:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1266:6:8"
									},
									"scope": 1103,
									"src": "1204:69:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1071,
										"nodeType": "StructuredDocumentation",
										"src": "1279:264:8",
										"text": " @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."
									},
									"functionSelector": "dd62ed3e",
									"id": 1080,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "1557:9:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1076,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1073,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1575:5:8",
												"nodeType": "VariableDeclaration",
												"scope": 1080,
												"src": "1567:13:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1072,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1567:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1075,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1590:7:8",
												"nodeType": "VariableDeclaration",
												"scope": 1080,
												"src": "1582:15:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1074,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1582:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1566:32:8"
									},
									"returnParameters": {
										"id": 1079,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1078,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1080,
												"src": "1622:7:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1077,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1622:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1621:9:8"
									},
									"scope": 1103,
									"src": "1548:83:8",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1081,
										"nodeType": "StructuredDocumentation",
										"src": "1637:667:8",
										"text": " @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."
									},
									"functionSelector": "095ea7b3",
									"id": 1090,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "2318:7:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1086,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1083,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2334:7:8",
												"nodeType": "VariableDeclaration",
												"scope": 1090,
												"src": "2326:15:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1082,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2326:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1085,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2351:5:8",
												"nodeType": "VariableDeclaration",
												"scope": 1090,
												"src": "2343:13:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1084,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2343:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2325:32:8"
									},
									"returnParameters": {
										"id": 1089,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1088,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1090,
												"src": "2376:4:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1087,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2376:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2375:6:8"
									},
									"scope": 1103,
									"src": "2309:73:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1091,
										"nodeType": "StructuredDocumentation",
										"src": "2388:297:8",
										"text": " @dev Moves a `value` amount of tokens from `from` to `to` using the\n allowance mechanism. `value` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "23b872dd",
									"id": 1102,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "2699:12:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1098,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1093,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2720:4:8",
												"nodeType": "VariableDeclaration",
												"scope": 1102,
												"src": "2712:12:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1092,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2712:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1095,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2734:2:8",
												"nodeType": "VariableDeclaration",
												"scope": 1102,
												"src": "2726:10:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1094,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2726:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1097,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2746:5:8",
												"nodeType": "VariableDeclaration",
												"scope": 1102,
												"src": "2738:13:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1096,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2738:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2711:41:8"
									},
									"returnParameters": {
										"id": 1101,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1100,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1102,
												"src": "2771:4:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1099,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2771:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2770:6:8"
									},
									"scope": 1103,
									"src": "2690:87:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1104,
							"src": "204:2575:8",
							"usedErrors": [],
							"usedEvents": [
								1037,
								1046
							]
						}
					],
					"src": "106:2674:8"
				},
				"id": 8
			},
			"@openzeppelin/contracts/utils/Address.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/Address.sol",
					"exportedSymbols": {
						"Address": [
							1363
						],
						"Errors": [
							1385
						]
					},
					"id": 1364,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1105,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "101:24:9"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Errors.sol",
							"file": "./Errors.sol",
							"id": 1107,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1364,
							"sourceUnit": 1386,
							"src": "127:36:9",
							"symbolAliases": [
								{
									"foreign": {
										"id": 1106,
										"name": "Errors",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1385,
										"src": "135:6:9",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "Address",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 1108,
								"nodeType": "StructuredDocumentation",
								"src": "165:67:9",
								"text": " @dev Collection of functions related to the address type"
							},
							"fullyImplemented": true,
							"id": 1363,
							"linearizedBaseContracts": [
								1363
							],
							"name": "Address",
							"nameLocation": "241:7:9",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 1109,
										"nodeType": "StructuredDocumentation",
										"src": "255:75:9",
										"text": " @dev There's no code at `target` (it is not a contract)."
									},
									"errorSelector": "9996b315",
									"id": 1113,
									"name": "AddressEmptyCode",
									"nameLocation": "341:16:9",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1112,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1111,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "366:6:9",
												"nodeType": "VariableDeclaration",
												"scope": 1113,
												"src": "358:14:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1110,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "358:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "357:16:9"
									},
									"src": "335:39:9"
								},
								{
									"body": {
										"id": 1160,
										"nodeType": "Block",
										"src": "1361:294:9",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1127,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 1123,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "1383:4:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_Address_$1363",
																		"typeString": "library Address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_Address_$1363",
																		"typeString": "library Address"
																	}
																],
																"id": 1122,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "1375:7:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1121,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "1375:7:9",
																	"typeDescriptions": {}
																}
															},
															"id": 1124,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1375:13:9",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 1125,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1389:7:9",
														"memberName": "balance",
														"nodeType": "MemberAccess",
														"src": "1375:21:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"id": 1126,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1118,
														"src": "1399:6:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1375:30:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1140,
												"nodeType": "IfStatement",
												"src": "1371:125:9",
												"trueBody": {
													"id": 1139,
													"nodeType": "Block",
													"src": "1407:89:9",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"id": 1133,
																					"name": "this",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 4294967268,
																					"src": "1463:4:9",
																					"typeDescriptions": {
																						"typeIdentifier": "t_contract$_Address_$1363",
																						"typeString": "library Address"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_contract$_Address_$1363",
																						"typeString": "library Address"
																					}
																				],
																				"id": 1132,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "ElementaryTypeNameExpression",
																				"src": "1455:7:9",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_address_$",
																					"typeString": "type(address)"
																				},
																				"typeName": {
																					"id": 1131,
																					"name": "address",
																					"nodeType": "ElementaryTypeName",
																					"src": "1455:7:9",
																					"typeDescriptions": {}
																				}
																			},
																			"id": 1134,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "typeConversion",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "1455:13:9",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"id": 1135,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "1469:7:9",
																		"memberName": "balance",
																		"nodeType": "MemberAccess",
																		"src": "1455:21:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	{
																		"id": 1136,
																		"name": "amount",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1118,
																		"src": "1478:6:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"id": 1128,
																		"name": "Errors",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1385,
																		"src": "1428:6:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_contract$_Errors_$1385_$",
																			"typeString": "type(library Errors)"
																		}
																	},
																	"id": 1130,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "1435:19:9",
																	"memberName": "InsufficientBalance",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1373,
																	"src": "1428:26:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint256_$_t_uint256_$returns$_t_error_$",
																		"typeString": "function (uint256,uint256) pure returns (error)"
																	}
																},
																"id": 1137,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1428:57:9",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 1138,
															"nodeType": "RevertStatement",
															"src": "1421:64:9"
														}
													]
												}
											},
											{
												"assignments": [
													1142,
													1144
												],
												"declarations": [
													{
														"constant": false,
														"id": 1142,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "1512:7:9",
														"nodeType": "VariableDeclaration",
														"scope": 1160,
														"src": "1507:12:9",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 1141,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "1507:4:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 1144,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "1534:10:9",
														"nodeType": "VariableDeclaration",
														"scope": 1160,
														"src": "1521:23:9",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 1143,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "1521:5:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1151,
												"initialValue": {
													"arguments": [
														{
															"hexValue": "",
															"id": 1149,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1578:2:9",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															},
															"value": ""
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																	"typeString": "literal_string \"\""
																}
															],
															"expression": {
																"id": 1145,
																"name": "recipient",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1116,
																"src": "1548:9:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"id": 1146,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1558:4:9",
															"memberName": "call",
															"nodeType": "MemberAccess",
															"src": "1548:14:9",
															"typeDescriptions": {
																"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
																"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
															}
														},
														"id": 1148,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"names": [
															"value"
														],
														"nodeType": "FunctionCallOptions",
														"options": [
															{
																"id": 1147,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1118,
																"src": "1570:6:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"src": "1548:29:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 1150,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1548:33:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1506:75:9"
											},
											{
												"condition": {
													"id": 1153,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "1595:8:9",
													"subExpression": {
														"id": 1152,
														"name": "success",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1142,
														"src": "1596:7:9",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1159,
												"nodeType": "IfStatement",
												"src": "1591:58:9",
												"trueBody": {
													"id": 1158,
													"nodeType": "Block",
													"src": "1605:44:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 1155,
																		"name": "returndata",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1144,
																		"src": "1627:10:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	],
																	"id": 1154,
																	"name": "_revert",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1362,
																	"src": "1619:7:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_bytes_memory_ptr_$returns$__$",
																		"typeString": "function (bytes memory) pure"
																	}
																},
																"id": 1156,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1619:19:9",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1157,
															"nodeType": "ExpressionStatement",
															"src": "1619:19:9"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 1114,
										"nodeType": "StructuredDocumentation",
										"src": "380:905:9",
										"text": " @dev Replacement for Solidity's `transfer`: sends `amount` wei to\n `recipient`, forwarding all available gas and reverting on errors.\n https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\n of certain opcodes, possibly making contracts go over the 2300 gas limit\n imposed by `transfer`, making them unable to receive funds via\n `transfer`. {sendValue} removes this limitation.\n https://consensys.net/diligence/blog/2019/09/stop-using-soliditys-transfer-now/[Learn more].\n IMPORTANT: because control is transferred to `recipient`, care must be\n taken to not create reentrancy vulnerabilities. Consider using\n {ReentrancyGuard} or the\n https://solidity.readthedocs.io/en/v0.8.20/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern]."
									},
									"id": 1161,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sendValue",
									"nameLocation": "1299:9:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1119,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1116,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "1325:9:9",
												"nodeType": "VariableDeclaration",
												"scope": 1161,
												"src": "1309:25:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address_payable",
													"typeString": "address payable"
												},
												"typeName": {
													"id": 1115,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1309:15:9",
													"stateMutability": "payable",
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1118,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "1344:6:9",
												"nodeType": "VariableDeclaration",
												"scope": 1161,
												"src": "1336:14:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1117,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1336:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1308:43:9"
									},
									"returnParameters": {
										"id": 1120,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1361:0:9"
									},
									"scope": 1363,
									"src": "1290:365:9",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1177,
										"nodeType": "Block",
										"src": "2589:62:9",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1172,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1164,
															"src": "2628:6:9",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1173,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1166,
															"src": "2636:4:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "30",
															"id": 1174,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2642:1:9",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															}
														],
														"id": 1171,
														"name": "functionCallWithValue",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1228,
														"src": "2606:21:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,uint256) returns (bytes memory)"
														}
													},
													"id": 1175,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2606:38:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 1170,
												"id": 1176,
												"nodeType": "Return",
												"src": "2599:45:9"
											}
										]
									},
									"documentation": {
										"id": 1162,
										"nodeType": "StructuredDocumentation",
										"src": "1661:834:9",
										"text": " @dev Performs a Solidity function call using a low level `call`. A\n plain `call` is an unsafe replacement for a function call: use this\n function instead.\n If `target` reverts with a revert reason or custom error, it is bubbled\n up by this function (like regular Solidity function calls). However, if\n the call reverted with no returned reason, this function reverts with a\n {Errors.FailedCall} error.\n Returns the raw returned data. To convert to the expected return value,\n use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\n Requirements:\n - `target` must be a contract.\n - calling `target` with `data` must not revert."
									},
									"id": 1178,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCall",
									"nameLocation": "2509:12:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1167,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1164,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "2530:6:9",
												"nodeType": "VariableDeclaration",
												"scope": 1178,
												"src": "2522:14:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1163,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2522:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1166,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "2551:4:9",
												"nodeType": "VariableDeclaration",
												"scope": 1178,
												"src": "2538:17:9",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1165,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "2538:5:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2521:35:9"
									},
									"returnParameters": {
										"id": 1170,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1169,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1178,
												"src": "2575:12:9",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1168,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "2575:5:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2574:14:9"
									},
									"scope": 1363,
									"src": "2500:151:9",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1227,
										"nodeType": "Block",
										"src": "3088:294:9",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1196,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 1192,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "3110:4:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_Address_$1363",
																		"typeString": "library Address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_Address_$1363",
																		"typeString": "library Address"
																	}
																],
																"id": 1191,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "3102:7:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1190,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "3102:7:9",
																	"typeDescriptions": {}
																}
															},
															"id": 1193,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3102:13:9",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 1194,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "3116:7:9",
														"memberName": "balance",
														"nodeType": "MemberAccess",
														"src": "3102:21:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"id": 1195,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1185,
														"src": "3126:5:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3102:29:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1209,
												"nodeType": "IfStatement",
												"src": "3098:123:9",
												"trueBody": {
													"id": 1208,
													"nodeType": "Block",
													"src": "3133:88:9",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"id": 1202,
																					"name": "this",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 4294967268,
																					"src": "3189:4:9",
																					"typeDescriptions": {
																						"typeIdentifier": "t_contract$_Address_$1363",
																						"typeString": "library Address"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_contract$_Address_$1363",
																						"typeString": "library Address"
																					}
																				],
																				"id": 1201,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "ElementaryTypeNameExpression",
																				"src": "3181:7:9",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_address_$",
																					"typeString": "type(address)"
																				},
																				"typeName": {
																					"id": 1200,
																					"name": "address",
																					"nodeType": "ElementaryTypeName",
																					"src": "3181:7:9",
																					"typeDescriptions": {}
																				}
																			},
																			"id": 1203,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "typeConversion",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "3181:13:9",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"id": 1204,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "3195:7:9",
																		"memberName": "balance",
																		"nodeType": "MemberAccess",
																		"src": "3181:21:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	{
																		"id": 1205,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1185,
																		"src": "3204:5:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"id": 1197,
																		"name": "Errors",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1385,
																		"src": "3154:6:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_contract$_Errors_$1385_$",
																			"typeString": "type(library Errors)"
																		}
																	},
																	"id": 1199,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "3161:19:9",
																	"memberName": "InsufficientBalance",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1373,
																	"src": "3154:26:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint256_$_t_uint256_$returns$_t_error_$",
																		"typeString": "function (uint256,uint256) pure returns (error)"
																	}
																},
																"id": 1206,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3154:56:9",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 1207,
															"nodeType": "RevertStatement",
															"src": "3147:63:9"
														}
													]
												}
											},
											{
												"assignments": [
													1211,
													1213
												],
												"declarations": [
													{
														"constant": false,
														"id": 1211,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "3236:7:9",
														"nodeType": "VariableDeclaration",
														"scope": 1227,
														"src": "3231:12:9",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 1210,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "3231:4:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 1213,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "3258:10:9",
														"nodeType": "VariableDeclaration",
														"scope": 1227,
														"src": "3245:23:9",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 1212,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "3245:5:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1220,
												"initialValue": {
													"arguments": [
														{
															"id": 1218,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1183,
															"src": "3298:4:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															],
															"expression": {
																"id": 1214,
																"name": "target",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1181,
																"src": "3272:6:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 1215,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "3279:4:9",
															"memberName": "call",
															"nodeType": "MemberAccess",
															"src": "3272:11:9",
															"typeDescriptions": {
																"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
																"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
															}
														},
														"id": 1217,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"names": [
															"value"
														],
														"nodeType": "FunctionCallOptions",
														"options": [
															{
																"id": 1216,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1185,
																"src": "3291:5:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"src": "3272:25:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 1219,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3272:31:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3230:73:9"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1222,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1181,
															"src": "3347:6:9",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1223,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1211,
															"src": "3355:7:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 1224,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1213,
															"src": "3364:10:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 1221,
														"name": "verifyCallResultFromTarget",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1320,
														"src": "3320:26:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_bool_$_t_bytes_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bool,bytes memory) view returns (bytes memory)"
														}
													},
													"id": 1225,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3320:55:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 1189,
												"id": 1226,
												"nodeType": "Return",
												"src": "3313:62:9"
											}
										]
									},
									"documentation": {
										"id": 1179,
										"nodeType": "StructuredDocumentation",
										"src": "2657:313:9",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but also transferring `value` wei to `target`.\n Requirements:\n - the calling contract must have an ETH balance of at least `value`.\n - the called Solidity function must be `payable`."
									},
									"id": 1228,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCallWithValue",
									"nameLocation": "2984:21:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1186,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1181,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "3014:6:9",
												"nodeType": "VariableDeclaration",
												"scope": 1228,
												"src": "3006:14:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1180,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3006:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1183,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "3035:4:9",
												"nodeType": "VariableDeclaration",
												"scope": 1228,
												"src": "3022:17:9",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1182,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3022:5:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1185,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "3049:5:9",
												"nodeType": "VariableDeclaration",
												"scope": 1228,
												"src": "3041:13:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1184,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3041:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3005:50:9"
									},
									"returnParameters": {
										"id": 1189,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1188,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1228,
												"src": "3074:12:9",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1187,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3074:5:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3073:14:9"
									},
									"scope": 1363,
									"src": "2975:407:9",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1253,
										"nodeType": "Block",
										"src": "3621:154:9",
										"statements": [
											{
												"assignments": [
													1239,
													1241
												],
												"declarations": [
													{
														"constant": false,
														"id": 1239,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "3637:7:9",
														"nodeType": "VariableDeclaration",
														"scope": 1253,
														"src": "3632:12:9",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 1238,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "3632:4:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 1241,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "3659:10:9",
														"nodeType": "VariableDeclaration",
														"scope": 1253,
														"src": "3646:23:9",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 1240,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "3646:5:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1246,
												"initialValue": {
													"arguments": [
														{
															"id": 1244,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1233,
															"src": "3691:4:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"id": 1242,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1231,
															"src": "3673:6:9",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 1243,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "3680:10:9",
														"memberName": "staticcall",
														"nodeType": "MemberAccess",
														"src": "3673:17:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barestaticcall_view$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
															"typeString": "function (bytes memory) view returns (bool,bytes memory)"
														}
													},
													"id": 1245,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3673:23:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3631:65:9"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1248,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1231,
															"src": "3740:6:9",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1249,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1239,
															"src": "3748:7:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 1250,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1241,
															"src": "3757:10:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 1247,
														"name": "verifyCallResultFromTarget",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1320,
														"src": "3713:26:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_bool_$_t_bytes_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bool,bytes memory) view returns (bytes memory)"
														}
													},
													"id": 1251,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3713:55:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 1237,
												"id": 1252,
												"nodeType": "Return",
												"src": "3706:62:9"
											}
										]
									},
									"documentation": {
										"id": 1229,
										"nodeType": "StructuredDocumentation",
										"src": "3388:128:9",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but performing a static call."
									},
									"id": 1254,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionStaticCall",
									"nameLocation": "3530:18:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1234,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1231,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "3557:6:9",
												"nodeType": "VariableDeclaration",
												"scope": 1254,
												"src": "3549:14:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1230,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3549:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1233,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "3578:4:9",
												"nodeType": "VariableDeclaration",
												"scope": 1254,
												"src": "3565:17:9",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1232,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3565:5:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3548:35:9"
									},
									"returnParameters": {
										"id": 1237,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1236,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1254,
												"src": "3607:12:9",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1235,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3607:5:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3606:14:9"
									},
									"scope": 1363,
									"src": "3521:254:9",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1279,
										"nodeType": "Block",
										"src": "4013:156:9",
										"statements": [
											{
												"assignments": [
													1265,
													1267
												],
												"declarations": [
													{
														"constant": false,
														"id": 1265,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "4029:7:9",
														"nodeType": "VariableDeclaration",
														"scope": 1279,
														"src": "4024:12:9",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 1264,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "4024:4:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 1267,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "4051:10:9",
														"nodeType": "VariableDeclaration",
														"scope": 1279,
														"src": "4038:23:9",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 1266,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "4038:5:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1272,
												"initialValue": {
													"arguments": [
														{
															"id": 1270,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1259,
															"src": "4085:4:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"id": 1268,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1257,
															"src": "4065:6:9",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 1269,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "4072:12:9",
														"memberName": "delegatecall",
														"nodeType": "MemberAccess",
														"src": "4065:19:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_baredelegatecall_nonpayable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
															"typeString": "function (bytes memory) returns (bool,bytes memory)"
														}
													},
													"id": 1271,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4065:25:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4023:67:9"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1274,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1257,
															"src": "4134:6:9",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1275,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1265,
															"src": "4142:7:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 1276,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1267,
															"src": "4151:10:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 1273,
														"name": "verifyCallResultFromTarget",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1320,
														"src": "4107:26:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_bool_$_t_bytes_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bool,bytes memory) view returns (bytes memory)"
														}
													},
													"id": 1277,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4107:55:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 1263,
												"id": 1278,
												"nodeType": "Return",
												"src": "4100:62:9"
											}
										]
									},
									"documentation": {
										"id": 1255,
										"nodeType": "StructuredDocumentation",
										"src": "3781:130:9",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but performing a delegate call."
									},
									"id": 1280,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionDelegateCall",
									"nameLocation": "3925:20:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1260,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1257,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "3954:6:9",
												"nodeType": "VariableDeclaration",
												"scope": 1280,
												"src": "3946:14:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1256,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3946:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1259,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "3975:4:9",
												"nodeType": "VariableDeclaration",
												"scope": 1280,
												"src": "3962:17:9",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1258,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3962:5:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3945:35:9"
									},
									"returnParameters": {
										"id": 1263,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1262,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1280,
												"src": "3999:12:9",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1261,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3999:5:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3998:14:9"
									},
									"scope": 1363,
									"src": "3916:253:9",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1319,
										"nodeType": "Block",
										"src": "4595:424:9",
										"statements": [
											{
												"condition": {
													"id": 1293,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "4609:8:9",
													"subExpression": {
														"id": 1292,
														"name": "success",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1285,
														"src": "4610:7:9",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 1317,
													"nodeType": "Block",
													"src": "4669:344:9",
													"statements": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"id": 1308,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1302,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"expression": {
																			"id": 1299,
																			"name": "returndata",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1287,
																			"src": "4857:10:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bytes_memory_ptr",
																				"typeString": "bytes memory"
																			}
																		},
																		"id": 1300,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "4868:6:9",
																		"memberName": "length",
																		"nodeType": "MemberAccess",
																		"src": "4857:17:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "==",
																	"rightExpression": {
																		"hexValue": "30",
																		"id": 1301,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "4878:1:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	},
																	"src": "4857:22:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "&&",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1307,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"expression": {
																			"expression": {
																				"id": 1303,
																				"name": "target",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1283,
																				"src": "4883:6:9",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"id": 1304,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "4890:4:9",
																			"memberName": "code",
																			"nodeType": "MemberAccess",
																			"src": "4883:11:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bytes_memory_ptr",
																				"typeString": "bytes memory"
																			}
																		},
																		"id": 1305,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "4895:6:9",
																		"memberName": "length",
																		"nodeType": "MemberAccess",
																		"src": "4883:18:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "==",
																	"rightExpression": {
																		"hexValue": "30",
																		"id": 1306,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "4905:1:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	},
																	"src": "4883:23:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"src": "4857:49:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 1314,
															"nodeType": "IfStatement",
															"src": "4853:119:9",
															"trueBody": {
																"id": 1313,
																"nodeType": "Block",
																"src": "4908:64:9",
																"statements": [
																	{
																		"errorCall": {
																			"arguments": [
																				{
																					"id": 1310,
																					"name": "target",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1283,
																					"src": "4950:6:9",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				],
																				"id": 1309,
																				"name": "AddressEmptyCode",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1113,
																				"src": "4933:16:9",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																					"typeString": "function (address) pure returns (error)"
																				}
																			},
																			"id": 1311,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "4933:24:9",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_error",
																				"typeString": "error"
																			}
																		},
																		"id": 1312,
																		"nodeType": "RevertStatement",
																		"src": "4926:31:9"
																	}
																]
															}
														},
														{
															"expression": {
																"id": 1315,
																"name": "returndata",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1287,
																"src": "4992:10:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"functionReturnParameters": 1291,
															"id": 1316,
															"nodeType": "Return",
															"src": "4985:17:9"
														}
													]
												},
												"id": 1318,
												"nodeType": "IfStatement",
												"src": "4605:408:9",
												"trueBody": {
													"id": 1298,
													"nodeType": "Block",
													"src": "4619:44:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 1295,
																		"name": "returndata",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1287,
																		"src": "4641:10:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	],
																	"id": 1294,
																	"name": "_revert",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1362,
																	"src": "4633:7:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_bytes_memory_ptr_$returns$__$",
																		"typeString": "function (bytes memory) pure"
																	}
																},
																"id": 1296,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4633:19:9",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1297,
															"nodeType": "ExpressionStatement",
															"src": "4633:19:9"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 1281,
										"nodeType": "StructuredDocumentation",
										"src": "4175:257:9",
										"text": " @dev Tool to verify that a low level call to smart-contract was successful, and reverts if the target\n was not a contract or bubbling up the revert reason (falling back to {Errors.FailedCall}) in case\n of an unsuccessful call."
									},
									"id": 1320,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "verifyCallResultFromTarget",
									"nameLocation": "4446:26:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1288,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1283,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "4490:6:9",
												"nodeType": "VariableDeclaration",
												"scope": 1320,
												"src": "4482:14:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1282,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4482:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1285,
												"mutability": "mutable",
												"name": "success",
												"nameLocation": "4511:7:9",
												"nodeType": "VariableDeclaration",
												"scope": 1320,
												"src": "4506:12:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1284,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4506:4:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1287,
												"mutability": "mutable",
												"name": "returndata",
												"nameLocation": "4541:10:9",
												"nodeType": "VariableDeclaration",
												"scope": 1320,
												"src": "4528:23:9",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1286,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4528:5:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4472:85:9"
									},
									"returnParameters": {
										"id": 1291,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1290,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1320,
												"src": "4581:12:9",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1289,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4581:5:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4580:14:9"
									},
									"scope": 1363,
									"src": "4437:582:9",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1341,
										"nodeType": "Block",
										"src": "5323:122:9",
										"statements": [
											{
												"condition": {
													"id": 1331,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "5337:8:9",
													"subExpression": {
														"id": 1330,
														"name": "success",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1323,
														"src": "5338:7:9",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 1339,
													"nodeType": "Block",
													"src": "5397:42:9",
													"statements": [
														{
															"expression": {
																"id": 1337,
																"name": "returndata",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1325,
																"src": "5418:10:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"functionReturnParameters": 1329,
															"id": 1338,
															"nodeType": "Return",
															"src": "5411:17:9"
														}
													]
												},
												"id": 1340,
												"nodeType": "IfStatement",
												"src": "5333:106:9",
												"trueBody": {
													"id": 1336,
													"nodeType": "Block",
													"src": "5347:44:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 1333,
																		"name": "returndata",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1325,
																		"src": "5369:10:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	],
																	"id": 1332,
																	"name": "_revert",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1362,
																	"src": "5361:7:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_bytes_memory_ptr_$returns$__$",
																		"typeString": "function (bytes memory) pure"
																	}
																},
																"id": 1334,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5361:19:9",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1335,
															"nodeType": "ExpressionStatement",
															"src": "5361:19:9"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 1321,
										"nodeType": "StructuredDocumentation",
										"src": "5025:191:9",
										"text": " @dev Tool to verify that a low level call was successful, and reverts if it wasn't, either by bubbling the\n revert reason or with a default {Errors.FailedCall} error."
									},
									"id": 1342,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "verifyCallResult",
									"nameLocation": "5230:16:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1326,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1323,
												"mutability": "mutable",
												"name": "success",
												"nameLocation": "5252:7:9",
												"nodeType": "VariableDeclaration",
												"scope": 1342,
												"src": "5247:12:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1322,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "5247:4:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1325,
												"mutability": "mutable",
												"name": "returndata",
												"nameLocation": "5274:10:9",
												"nodeType": "VariableDeclaration",
												"scope": 1342,
												"src": "5261:23:9",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1324,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5261:5:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5246:39:9"
									},
									"returnParameters": {
										"id": 1329,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1328,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1342,
												"src": "5309:12:9",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1327,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5309:5:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5308:14:9"
									},
									"scope": 1363,
									"src": "5221:224:9",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1361,
										"nodeType": "Block",
										"src": "5614:432:9",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1351,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 1348,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1345,
															"src": "5690:10:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 1349,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "5701:6:9",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "5690:17:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 1350,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "5710:1:9",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "5690:21:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 1359,
													"nodeType": "Block",
													"src": "5989:51:9",
													"statements": [
														{
															"errorCall": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"expression": {
																		"id": 1354,
																		"name": "Errors",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1385,
																		"src": "6010:6:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_contract$_Errors_$1385_$",
																			"typeString": "type(library Errors)"
																		}
																	},
																	"id": 1356,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "6017:10:9",
																	"memberName": "FailedCall",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1376,
																	"src": "6010:17:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
																		"typeString": "function () pure returns (error)"
																	}
																},
																"id": 1357,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "6010:19:9",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 1358,
															"nodeType": "RevertStatement",
															"src": "6003:26:9"
														}
													]
												},
												"id": 1360,
												"nodeType": "IfStatement",
												"src": "5686:354:9",
												"trueBody": {
													"id": 1353,
													"nodeType": "Block",
													"src": "5713:270:9",
													"statements": [
														{
															"AST": {
																"nativeSrc": "5840:133:9",
																"nodeType": "YulBlock",
																"src": "5840:133:9",
																"statements": [
																	{
																		"nativeSrc": "5858:40:9",
																		"nodeType": "YulVariableDeclaration",
																		"src": "5858:40:9",
																		"value": {
																			"arguments": [
																				{
																					"name": "returndata",
																					"nativeSrc": "5887:10:9",
																					"nodeType": "YulIdentifier",
																					"src": "5887:10:9"
																				}
																			],
																			"functionName": {
																				"name": "mload",
																				"nativeSrc": "5881:5:9",
																				"nodeType": "YulIdentifier",
																				"src": "5881:5:9"
																			},
																			"nativeSrc": "5881:17:9",
																			"nodeType": "YulFunctionCall",
																			"src": "5881:17:9"
																		},
																		"variables": [
																			{
																				"name": "returndata_size",
																				"nativeSrc": "5862:15:9",
																				"nodeType": "YulTypedName",
																				"src": "5862:15:9",
																				"type": ""
																			}
																		]
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nativeSrc": "5926:2:9",
																							"nodeType": "YulLiteral",
																							"src": "5926:2:9",
																							"type": "",
																							"value": "32"
																						},
																						{
																							"name": "returndata",
																							"nativeSrc": "5930:10:9",
																							"nodeType": "YulIdentifier",
																							"src": "5930:10:9"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nativeSrc": "5922:3:9",
																						"nodeType": "YulIdentifier",
																						"src": "5922:3:9"
																					},
																					"nativeSrc": "5922:19:9",
																					"nodeType": "YulFunctionCall",
																					"src": "5922:19:9"
																				},
																				{
																					"name": "returndata_size",
																					"nativeSrc": "5943:15:9",
																					"nodeType": "YulIdentifier",
																					"src": "5943:15:9"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "5915:6:9",
																				"nodeType": "YulIdentifier",
																				"src": "5915:6:9"
																			},
																			"nativeSrc": "5915:44:9",
																			"nodeType": "YulFunctionCall",
																			"src": "5915:44:9"
																		},
																		"nativeSrc": "5915:44:9",
																		"nodeType": "YulExpressionStatement",
																		"src": "5915:44:9"
																	}
																]
															},
															"evmVersion": "prague",
															"externalReferences": [
																{
																	"declaration": 1345,
																	"isOffset": false,
																	"isSlot": false,
																	"src": "5887:10:9",
																	"valueSize": 1
																},
																{
																	"declaration": 1345,
																	"isOffset": false,
																	"isSlot": false,
																	"src": "5930:10:9",
																	"valueSize": 1
																}
															],
															"flags": [
																"memory-safe"
															],
															"id": 1352,
															"nodeType": "InlineAssembly",
															"src": "5815:158:9"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 1343,
										"nodeType": "StructuredDocumentation",
										"src": "5451:103:9",
										"text": " @dev Reverts with returndata if present. Otherwise reverts with {Errors.FailedCall}."
									},
									"id": 1362,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_revert",
									"nameLocation": "5568:7:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1346,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1345,
												"mutability": "mutable",
												"name": "returndata",
												"nameLocation": "5589:10:9",
												"nodeType": "VariableDeclaration",
												"scope": 1362,
												"src": "5576:23:9",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1344,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5576:5:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5575:25:9"
									},
									"returnParameters": {
										"id": 1347,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5614:0:9"
									},
									"scope": 1363,
									"src": "5559:487:9",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "private"
								}
							],
							"scope": 1364,
							"src": "233:5815:9",
							"usedErrors": [
								1113
							],
							"usedEvents": []
						}
					],
					"src": "101:5948:9"
				},
				"id": 9
			},
			"@openzeppelin/contracts/utils/Errors.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/Errors.sol",
					"exportedSymbols": {
						"Errors": [
							1385
						]
					},
					"id": 1386,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1365,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "100:24:10"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "Errors",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 1366,
								"nodeType": "StructuredDocumentation",
								"src": "126:284:10",
								"text": " @dev Collection of common custom errors used in multiple contracts\n IMPORTANT: Backwards compatibility is not guaranteed in future versions of the library.\n It is recommended to avoid relying on the error API for critical functionality.\n _Available since v5.1._"
							},
							"fullyImplemented": true,
							"id": 1385,
							"linearizedBaseContracts": [
								1385
							],
							"name": "Errors",
							"nameLocation": "419:6:10",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 1367,
										"nodeType": "StructuredDocumentation",
										"src": "432:94:10",
										"text": " @dev The ETH balance of the account is not enough to perform the operation."
									},
									"errorSelector": "cf479181",
									"id": 1373,
									"name": "InsufficientBalance",
									"nameLocation": "537:19:10",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1372,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1369,
												"mutability": "mutable",
												"name": "balance",
												"nameLocation": "565:7:10",
												"nodeType": "VariableDeclaration",
												"scope": 1373,
												"src": "557:15:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1368,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "557:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1371,
												"mutability": "mutable",
												"name": "needed",
												"nameLocation": "582:6:10",
												"nodeType": "VariableDeclaration",
												"scope": 1373,
												"src": "574:14:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1370,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "574:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "556:33:10"
									},
									"src": "531:59:10"
								},
								{
									"documentation": {
										"id": 1374,
										"nodeType": "StructuredDocumentation",
										"src": "596:89:10",
										"text": " @dev A call to an address target failed. The target may have reverted."
									},
									"errorSelector": "d6bda275",
									"id": 1376,
									"name": "FailedCall",
									"nameLocation": "696:10:10",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1375,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "706:2:10"
									},
									"src": "690:19:10"
								},
								{
									"documentation": {
										"id": 1377,
										"nodeType": "StructuredDocumentation",
										"src": "715:46:10",
										"text": " @dev The deployment failed."
									},
									"errorSelector": "b06ebf3d",
									"id": 1379,
									"name": "FailedDeployment",
									"nameLocation": "772:16:10",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1378,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "788:2:10"
									},
									"src": "766:25:10"
								},
								{
									"documentation": {
										"id": 1380,
										"nodeType": "StructuredDocumentation",
										"src": "797:58:10",
										"text": " @dev A necessary precompile is missing."
									},
									"errorSelector": "42b01bce",
									"id": 1384,
									"name": "MissingPrecompile",
									"nameLocation": "866:17:10",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1383,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1382,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1384,
												"src": "884:7:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1381,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "884:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "883:9:10"
									},
									"src": "860:33:10"
								}
							],
							"scope": 1386,
							"src": "411:484:10",
							"usedErrors": [
								1373,
								1376,
								1379,
								1384
							],
							"usedEvents": []
						}
					],
					"src": "100:796:10"
				},
				"id": 10
			},
			"@openzeppelin/contracts/utils/StorageSlot.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/StorageSlot.sol",
					"exportedSymbols": {
						"StorageSlot": [
							1509
						]
					},
					"id": 1510,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1387,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "193:24:11"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "StorageSlot",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 1388,
								"nodeType": "StructuredDocumentation",
								"src": "219:1187:11",
								"text": " @dev Library for reading and writing primitive types to specific storage slots.\n Storage slots are often used to avoid storage conflict when dealing with upgradeable contracts.\n This library helps with reading and writing to such slots without the need for inline assembly.\n The functions in this library return Slot structs that contain a `value` member that can be used to read or write.\n Example usage to set ERC-1967 implementation slot:\n ```solidity\n contract ERC1967 {\n     // Define the slot. Alternatively, use the SlotDerivation library to derive the slot.\n     bytes32 internal constant _IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc;\n     function _getImplementation() internal view returns (address) {\n         return StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value;\n     }\n     function _setImplementation(address newImplementation) internal {\n         require(newImplementation.code.length > 0);\n         StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value = newImplementation;\n     }\n }\n ```\n TIP: Consider using this library along with {SlotDerivation}."
							},
							"fullyImplemented": true,
							"id": 1509,
							"linearizedBaseContracts": [
								1509
							],
							"name": "StorageSlot",
							"nameLocation": "1415:11:11",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"canonicalName": "StorageSlot.AddressSlot",
									"id": 1391,
									"members": [
										{
											"constant": false,
											"id": 1390,
											"mutability": "mutable",
											"name": "value",
											"nameLocation": "1470:5:11",
											"nodeType": "VariableDeclaration",
											"scope": 1391,
											"src": "1462:13:11",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 1389,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "1462:7:11",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "AddressSlot",
									"nameLocation": "1440:11:11",
									"nodeType": "StructDefinition",
									"scope": 1509,
									"src": "1433:49:11",
									"visibility": "public"
								},
								{
									"canonicalName": "StorageSlot.BooleanSlot",
									"id": 1394,
									"members": [
										{
											"constant": false,
											"id": 1393,
											"mutability": "mutable",
											"name": "value",
											"nameLocation": "1522:5:11",
											"nodeType": "VariableDeclaration",
											"scope": 1394,
											"src": "1517:10:11",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bool",
												"typeString": "bool"
											},
											"typeName": {
												"id": 1392,
												"name": "bool",
												"nodeType": "ElementaryTypeName",
												"src": "1517:4:11",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "BooleanSlot",
									"nameLocation": "1495:11:11",
									"nodeType": "StructDefinition",
									"scope": 1509,
									"src": "1488:46:11",
									"visibility": "public"
								},
								{
									"canonicalName": "StorageSlot.Bytes32Slot",
									"id": 1397,
									"members": [
										{
											"constant": false,
											"id": 1396,
											"mutability": "mutable",
											"name": "value",
											"nameLocation": "1577:5:11",
											"nodeType": "VariableDeclaration",
											"scope": 1397,
											"src": "1569:13:11",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bytes32",
												"typeString": "bytes32"
											},
											"typeName": {
												"id": 1395,
												"name": "bytes32",
												"nodeType": "ElementaryTypeName",
												"src": "1569:7:11",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "Bytes32Slot",
									"nameLocation": "1547:11:11",
									"nodeType": "StructDefinition",
									"scope": 1509,
									"src": "1540:49:11",
									"visibility": "public"
								},
								{
									"canonicalName": "StorageSlot.Uint256Slot",
									"id": 1400,
									"members": [
										{
											"constant": false,
											"id": 1399,
											"mutability": "mutable",
											"name": "value",
											"nameLocation": "1632:5:11",
											"nodeType": "VariableDeclaration",
											"scope": 1400,
											"src": "1624:13:11",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 1398,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "1624:7:11",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "Uint256Slot",
									"nameLocation": "1602:11:11",
									"nodeType": "StructDefinition",
									"scope": 1509,
									"src": "1595:49:11",
									"visibility": "public"
								},
								{
									"canonicalName": "StorageSlot.Int256Slot",
									"id": 1403,
									"members": [
										{
											"constant": false,
											"id": 1402,
											"mutability": "mutable",
											"name": "value",
											"nameLocation": "1685:5:11",
											"nodeType": "VariableDeclaration",
											"scope": 1403,
											"src": "1678:12:11",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_int256",
												"typeString": "int256"
											},
											"typeName": {
												"id": 1401,
												"name": "int256",
												"nodeType": "ElementaryTypeName",
												"src": "1678:6:11",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "Int256Slot",
									"nameLocation": "1657:10:11",
									"nodeType": "StructDefinition",
									"scope": 1509,
									"src": "1650:47:11",
									"visibility": "public"
								},
								{
									"canonicalName": "StorageSlot.StringSlot",
									"id": 1406,
									"members": [
										{
											"constant": false,
											"id": 1405,
											"mutability": "mutable",
											"name": "value",
											"nameLocation": "1738:5:11",
											"nodeType": "VariableDeclaration",
											"scope": 1406,
											"src": "1731:12:11",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_string_storage_ptr",
												"typeString": "string"
											},
											"typeName": {
												"id": 1404,
												"name": "string",
												"nodeType": "ElementaryTypeName",
												"src": "1731:6:11",
												"typeDescriptions": {
													"typeIdentifier": "t_string_storage_ptr",
													"typeString": "string"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "StringSlot",
									"nameLocation": "1710:10:11",
									"nodeType": "StructDefinition",
									"scope": 1509,
									"src": "1703:47:11",
									"visibility": "public"
								},
								{
									"canonicalName": "StorageSlot.BytesSlot",
									"id": 1409,
									"members": [
										{
											"constant": false,
											"id": 1408,
											"mutability": "mutable",
											"name": "value",
											"nameLocation": "1789:5:11",
											"nodeType": "VariableDeclaration",
											"scope": 1409,
											"src": "1783:11:11",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bytes_storage_ptr",
												"typeString": "bytes"
											},
											"typeName": {
												"id": 1407,
												"name": "bytes",
												"nodeType": "ElementaryTypeName",
												"src": "1783:5:11",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_storage_ptr",
													"typeString": "bytes"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "BytesSlot",
									"nameLocation": "1763:9:11",
									"nodeType": "StructDefinition",
									"scope": 1509,
									"src": "1756:45:11",
									"visibility": "public"
								},
								{
									"body": {
										"id": 1419,
										"nodeType": "Block",
										"src": "1983:79:11",
										"statements": [
											{
												"AST": {
													"nativeSrc": "2018:38:11",
													"nodeType": "YulBlock",
													"src": "2018:38:11",
													"statements": [
														{
															"nativeSrc": "2032:14:11",
															"nodeType": "YulAssignment",
															"src": "2032:14:11",
															"value": {
																"name": "slot",
																"nativeSrc": "2042:4:11",
																"nodeType": "YulIdentifier",
																"src": "2042:4:11"
															},
															"variableNames": [
																{
																	"name": "r.slot",
																	"nativeSrc": "2032:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "2032:6:11"
																}
															]
														}
													]
												},
												"evmVersion": "prague",
												"externalReferences": [
													{
														"declaration": 1416,
														"isOffset": false,
														"isSlot": true,
														"src": "2032:6:11",
														"suffix": "slot",
														"valueSize": 1
													},
													{
														"declaration": 1412,
														"isOffset": false,
														"isSlot": false,
														"src": "2042:4:11",
														"valueSize": 1
													}
												],
												"flags": [
													"memory-safe"
												],
												"id": 1418,
												"nodeType": "InlineAssembly",
												"src": "1993:63:11"
											}
										]
									},
									"documentation": {
										"id": 1410,
										"nodeType": "StructuredDocumentation",
										"src": "1807:87:11",
										"text": " @dev Returns an `AddressSlot` with member `value` located at `slot`."
									},
									"id": 1420,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getAddressSlot",
									"nameLocation": "1908:14:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1413,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1412,
												"mutability": "mutable",
												"name": "slot",
												"nameLocation": "1931:4:11",
												"nodeType": "VariableDeclaration",
												"scope": 1420,
												"src": "1923:12:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1411,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1923:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1922:14:11"
									},
									"returnParameters": {
										"id": 1417,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1416,
												"mutability": "mutable",
												"name": "r",
												"nameLocation": "1980:1:11",
												"nodeType": "VariableDeclaration",
												"scope": 1420,
												"src": "1960:21:11",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_AddressSlot_$1391_storage_ptr",
													"typeString": "struct StorageSlot.AddressSlot"
												},
												"typeName": {
													"id": 1415,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1414,
														"name": "AddressSlot",
														"nameLocations": [
															"1960:11:11"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1391,
														"src": "1960:11:11"
													},
													"referencedDeclaration": 1391,
													"src": "1960:11:11",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_AddressSlot_$1391_storage_ptr",
														"typeString": "struct StorageSlot.AddressSlot"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1959:23:11"
									},
									"scope": 1509,
									"src": "1899:163:11",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1430,
										"nodeType": "Block",
										"src": "2243:79:11",
										"statements": [
											{
												"AST": {
													"nativeSrc": "2278:38:11",
													"nodeType": "YulBlock",
													"src": "2278:38:11",
													"statements": [
														{
															"nativeSrc": "2292:14:11",
															"nodeType": "YulAssignment",
															"src": "2292:14:11",
															"value": {
																"name": "slot",
																"nativeSrc": "2302:4:11",
																"nodeType": "YulIdentifier",
																"src": "2302:4:11"
															},
															"variableNames": [
																{
																	"name": "r.slot",
																	"nativeSrc": "2292:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "2292:6:11"
																}
															]
														}
													]
												},
												"evmVersion": "prague",
												"externalReferences": [
													{
														"declaration": 1427,
														"isOffset": false,
														"isSlot": true,
														"src": "2292:6:11",
														"suffix": "slot",
														"valueSize": 1
													},
													{
														"declaration": 1423,
														"isOffset": false,
														"isSlot": false,
														"src": "2302:4:11",
														"valueSize": 1
													}
												],
												"flags": [
													"memory-safe"
												],
												"id": 1429,
												"nodeType": "InlineAssembly",
												"src": "2253:63:11"
											}
										]
									},
									"documentation": {
										"id": 1421,
										"nodeType": "StructuredDocumentation",
										"src": "2068:86:11",
										"text": " @dev Returns a `BooleanSlot` with member `value` located at `slot`."
									},
									"id": 1431,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getBooleanSlot",
									"nameLocation": "2168:14:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1424,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1423,
												"mutability": "mutable",
												"name": "slot",
												"nameLocation": "2191:4:11",
												"nodeType": "VariableDeclaration",
												"scope": 1431,
												"src": "2183:12:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1422,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2183:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2182:14:11"
									},
									"returnParameters": {
										"id": 1428,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1427,
												"mutability": "mutable",
												"name": "r",
												"nameLocation": "2240:1:11",
												"nodeType": "VariableDeclaration",
												"scope": 1431,
												"src": "2220:21:11",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_BooleanSlot_$1394_storage_ptr",
													"typeString": "struct StorageSlot.BooleanSlot"
												},
												"typeName": {
													"id": 1426,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1425,
														"name": "BooleanSlot",
														"nameLocations": [
															"2220:11:11"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1394,
														"src": "2220:11:11"
													},
													"referencedDeclaration": 1394,
													"src": "2220:11:11",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_BooleanSlot_$1394_storage_ptr",
														"typeString": "struct StorageSlot.BooleanSlot"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2219:23:11"
									},
									"scope": 1509,
									"src": "2159:163:11",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1441,
										"nodeType": "Block",
										"src": "2503:79:11",
										"statements": [
											{
												"AST": {
													"nativeSrc": "2538:38:11",
													"nodeType": "YulBlock",
													"src": "2538:38:11",
													"statements": [
														{
															"nativeSrc": "2552:14:11",
															"nodeType": "YulAssignment",
															"src": "2552:14:11",
															"value": {
																"name": "slot",
																"nativeSrc": "2562:4:11",
																"nodeType": "YulIdentifier",
																"src": "2562:4:11"
															},
															"variableNames": [
																{
																	"name": "r.slot",
																	"nativeSrc": "2552:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "2552:6:11"
																}
															]
														}
													]
												},
												"evmVersion": "prague",
												"externalReferences": [
													{
														"declaration": 1438,
														"isOffset": false,
														"isSlot": true,
														"src": "2552:6:11",
														"suffix": "slot",
														"valueSize": 1
													},
													{
														"declaration": 1434,
														"isOffset": false,
														"isSlot": false,
														"src": "2562:4:11",
														"valueSize": 1
													}
												],
												"flags": [
													"memory-safe"
												],
												"id": 1440,
												"nodeType": "InlineAssembly",
												"src": "2513:63:11"
											}
										]
									},
									"documentation": {
										"id": 1432,
										"nodeType": "StructuredDocumentation",
										"src": "2328:86:11",
										"text": " @dev Returns a `Bytes32Slot` with member `value` located at `slot`."
									},
									"id": 1442,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getBytes32Slot",
									"nameLocation": "2428:14:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1435,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1434,
												"mutability": "mutable",
												"name": "slot",
												"nameLocation": "2451:4:11",
												"nodeType": "VariableDeclaration",
												"scope": 1442,
												"src": "2443:12:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1433,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2443:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2442:14:11"
									},
									"returnParameters": {
										"id": 1439,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1438,
												"mutability": "mutable",
												"name": "r",
												"nameLocation": "2500:1:11",
												"nodeType": "VariableDeclaration",
												"scope": 1442,
												"src": "2480:21:11",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Bytes32Slot_$1397_storage_ptr",
													"typeString": "struct StorageSlot.Bytes32Slot"
												},
												"typeName": {
													"id": 1437,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1436,
														"name": "Bytes32Slot",
														"nameLocations": [
															"2480:11:11"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1397,
														"src": "2480:11:11"
													},
													"referencedDeclaration": 1397,
													"src": "2480:11:11",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Bytes32Slot_$1397_storage_ptr",
														"typeString": "struct StorageSlot.Bytes32Slot"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2479:23:11"
									},
									"scope": 1509,
									"src": "2419:163:11",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1452,
										"nodeType": "Block",
										"src": "2763:79:11",
										"statements": [
											{
												"AST": {
													"nativeSrc": "2798:38:11",
													"nodeType": "YulBlock",
													"src": "2798:38:11",
													"statements": [
														{
															"nativeSrc": "2812:14:11",
															"nodeType": "YulAssignment",
															"src": "2812:14:11",
															"value": {
																"name": "slot",
																"nativeSrc": "2822:4:11",
																"nodeType": "YulIdentifier",
																"src": "2822:4:11"
															},
															"variableNames": [
																{
																	"name": "r.slot",
																	"nativeSrc": "2812:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "2812:6:11"
																}
															]
														}
													]
												},
												"evmVersion": "prague",
												"externalReferences": [
													{
														"declaration": 1449,
														"isOffset": false,
														"isSlot": true,
														"src": "2812:6:11",
														"suffix": "slot",
														"valueSize": 1
													},
													{
														"declaration": 1445,
														"isOffset": false,
														"isSlot": false,
														"src": "2822:4:11",
														"valueSize": 1
													}
												],
												"flags": [
													"memory-safe"
												],
												"id": 1451,
												"nodeType": "InlineAssembly",
												"src": "2773:63:11"
											}
										]
									},
									"documentation": {
										"id": 1443,
										"nodeType": "StructuredDocumentation",
										"src": "2588:86:11",
										"text": " @dev Returns a `Uint256Slot` with member `value` located at `slot`."
									},
									"id": 1453,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getUint256Slot",
									"nameLocation": "2688:14:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1446,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1445,
												"mutability": "mutable",
												"name": "slot",
												"nameLocation": "2711:4:11",
												"nodeType": "VariableDeclaration",
												"scope": 1453,
												"src": "2703:12:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1444,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2703:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2702:14:11"
									},
									"returnParameters": {
										"id": 1450,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1449,
												"mutability": "mutable",
												"name": "r",
												"nameLocation": "2760:1:11",
												"nodeType": "VariableDeclaration",
												"scope": 1453,
												"src": "2740:21:11",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Uint256Slot_$1400_storage_ptr",
													"typeString": "struct StorageSlot.Uint256Slot"
												},
												"typeName": {
													"id": 1448,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1447,
														"name": "Uint256Slot",
														"nameLocations": [
															"2740:11:11"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1400,
														"src": "2740:11:11"
													},
													"referencedDeclaration": 1400,
													"src": "2740:11:11",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Uint256Slot_$1400_storage_ptr",
														"typeString": "struct StorageSlot.Uint256Slot"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2739:23:11"
									},
									"scope": 1509,
									"src": "2679:163:11",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1463,
										"nodeType": "Block",
										"src": "3020:79:11",
										"statements": [
											{
												"AST": {
													"nativeSrc": "3055:38:11",
													"nodeType": "YulBlock",
													"src": "3055:38:11",
													"statements": [
														{
															"nativeSrc": "3069:14:11",
															"nodeType": "YulAssignment",
															"src": "3069:14:11",
															"value": {
																"name": "slot",
																"nativeSrc": "3079:4:11",
																"nodeType": "YulIdentifier",
																"src": "3079:4:11"
															},
															"variableNames": [
																{
																	"name": "r.slot",
																	"nativeSrc": "3069:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "3069:6:11"
																}
															]
														}
													]
												},
												"evmVersion": "prague",
												"externalReferences": [
													{
														"declaration": 1460,
														"isOffset": false,
														"isSlot": true,
														"src": "3069:6:11",
														"suffix": "slot",
														"valueSize": 1
													},
													{
														"declaration": 1456,
														"isOffset": false,
														"isSlot": false,
														"src": "3079:4:11",
														"valueSize": 1
													}
												],
												"flags": [
													"memory-safe"
												],
												"id": 1462,
												"nodeType": "InlineAssembly",
												"src": "3030:63:11"
											}
										]
									},
									"documentation": {
										"id": 1454,
										"nodeType": "StructuredDocumentation",
										"src": "2848:85:11",
										"text": " @dev Returns a `Int256Slot` with member `value` located at `slot`."
									},
									"id": 1464,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getInt256Slot",
									"nameLocation": "2947:13:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1457,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1456,
												"mutability": "mutable",
												"name": "slot",
												"nameLocation": "2969:4:11",
												"nodeType": "VariableDeclaration",
												"scope": 1464,
												"src": "2961:12:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1455,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2961:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2960:14:11"
									},
									"returnParameters": {
										"id": 1461,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1460,
												"mutability": "mutable",
												"name": "r",
												"nameLocation": "3017:1:11",
												"nodeType": "VariableDeclaration",
												"scope": 1464,
												"src": "2998:20:11",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Int256Slot_$1403_storage_ptr",
													"typeString": "struct StorageSlot.Int256Slot"
												},
												"typeName": {
													"id": 1459,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1458,
														"name": "Int256Slot",
														"nameLocations": [
															"2998:10:11"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1403,
														"src": "2998:10:11"
													},
													"referencedDeclaration": 1403,
													"src": "2998:10:11",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Int256Slot_$1403_storage_ptr",
														"typeString": "struct StorageSlot.Int256Slot"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2997:22:11"
									},
									"scope": 1509,
									"src": "2938:161:11",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1474,
										"nodeType": "Block",
										"src": "3277:79:11",
										"statements": [
											{
												"AST": {
													"nativeSrc": "3312:38:11",
													"nodeType": "YulBlock",
													"src": "3312:38:11",
													"statements": [
														{
															"nativeSrc": "3326:14:11",
															"nodeType": "YulAssignment",
															"src": "3326:14:11",
															"value": {
																"name": "slot",
																"nativeSrc": "3336:4:11",
																"nodeType": "YulIdentifier",
																"src": "3336:4:11"
															},
															"variableNames": [
																{
																	"name": "r.slot",
																	"nativeSrc": "3326:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "3326:6:11"
																}
															]
														}
													]
												},
												"evmVersion": "prague",
												"externalReferences": [
													{
														"declaration": 1471,
														"isOffset": false,
														"isSlot": true,
														"src": "3326:6:11",
														"suffix": "slot",
														"valueSize": 1
													},
													{
														"declaration": 1467,
														"isOffset": false,
														"isSlot": false,
														"src": "3336:4:11",
														"valueSize": 1
													}
												],
												"flags": [
													"memory-safe"
												],
												"id": 1473,
												"nodeType": "InlineAssembly",
												"src": "3287:63:11"
											}
										]
									},
									"documentation": {
										"id": 1465,
										"nodeType": "StructuredDocumentation",
										"src": "3105:85:11",
										"text": " @dev Returns a `StringSlot` with member `value` located at `slot`."
									},
									"id": 1475,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getStringSlot",
									"nameLocation": "3204:13:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1468,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1467,
												"mutability": "mutable",
												"name": "slot",
												"nameLocation": "3226:4:11",
												"nodeType": "VariableDeclaration",
												"scope": 1475,
												"src": "3218:12:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1466,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "3218:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3217:14:11"
									},
									"returnParameters": {
										"id": 1472,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1471,
												"mutability": "mutable",
												"name": "r",
												"nameLocation": "3274:1:11",
												"nodeType": "VariableDeclaration",
												"scope": 1475,
												"src": "3255:20:11",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_StringSlot_$1406_storage_ptr",
													"typeString": "struct StorageSlot.StringSlot"
												},
												"typeName": {
													"id": 1470,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1469,
														"name": "StringSlot",
														"nameLocations": [
															"3255:10:11"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1406,
														"src": "3255:10:11"
													},
													"referencedDeclaration": 1406,
													"src": "3255:10:11",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_StringSlot_$1406_storage_ptr",
														"typeString": "struct StorageSlot.StringSlot"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3254:22:11"
									},
									"scope": 1509,
									"src": "3195:161:11",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1485,
										"nodeType": "Block",
										"src": "3558:85:11",
										"statements": [
											{
												"AST": {
													"nativeSrc": "3593:44:11",
													"nodeType": "YulBlock",
													"src": "3593:44:11",
													"statements": [
														{
															"nativeSrc": "3607:20:11",
															"nodeType": "YulAssignment",
															"src": "3607:20:11",
															"value": {
																"name": "store.slot",
																"nativeSrc": "3617:10:11",
																"nodeType": "YulIdentifier",
																"src": "3617:10:11"
															},
															"variableNames": [
																{
																	"name": "r.slot",
																	"nativeSrc": "3607:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "3607:6:11"
																}
															]
														}
													]
												},
												"evmVersion": "prague",
												"externalReferences": [
													{
														"declaration": 1482,
														"isOffset": false,
														"isSlot": true,
														"src": "3607:6:11",
														"suffix": "slot",
														"valueSize": 1
													},
													{
														"declaration": 1478,
														"isOffset": false,
														"isSlot": true,
														"src": "3617:10:11",
														"suffix": "slot",
														"valueSize": 1
													}
												],
												"flags": [
													"memory-safe"
												],
												"id": 1484,
												"nodeType": "InlineAssembly",
												"src": "3568:69:11"
											}
										]
									},
									"documentation": {
										"id": 1476,
										"nodeType": "StructuredDocumentation",
										"src": "3362:101:11",
										"text": " @dev Returns an `StringSlot` representation of the string storage pointer `store`."
									},
									"id": 1486,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getStringSlot",
									"nameLocation": "3477:13:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1479,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1478,
												"mutability": "mutable",
												"name": "store",
												"nameLocation": "3506:5:11",
												"nodeType": "VariableDeclaration",
												"scope": 1486,
												"src": "3491:20:11",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_string_storage_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1477,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "3491:6:11",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3490:22:11"
									},
									"returnParameters": {
										"id": 1483,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1482,
												"mutability": "mutable",
												"name": "r",
												"nameLocation": "3555:1:11",
												"nodeType": "VariableDeclaration",
												"scope": 1486,
												"src": "3536:20:11",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_StringSlot_$1406_storage_ptr",
													"typeString": "struct StorageSlot.StringSlot"
												},
												"typeName": {
													"id": 1481,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1480,
														"name": "StringSlot",
														"nameLocations": [
															"3536:10:11"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1406,
														"src": "3536:10:11"
													},
													"referencedDeclaration": 1406,
													"src": "3536:10:11",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_StringSlot_$1406_storage_ptr",
														"typeString": "struct StorageSlot.StringSlot"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3535:22:11"
									},
									"scope": 1509,
									"src": "3468:175:11",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1496,
										"nodeType": "Block",
										"src": "3818:79:11",
										"statements": [
											{
												"AST": {
													"nativeSrc": "3853:38:11",
													"nodeType": "YulBlock",
													"src": "3853:38:11",
													"statements": [
														{
															"nativeSrc": "3867:14:11",
															"nodeType": "YulAssignment",
															"src": "3867:14:11",
															"value": {
																"name": "slot",
																"nativeSrc": "3877:4:11",
																"nodeType": "YulIdentifier",
																"src": "3877:4:11"
															},
															"variableNames": [
																{
																	"name": "r.slot",
																	"nativeSrc": "3867:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "3867:6:11"
																}
															]
														}
													]
												},
												"evmVersion": "prague",
												"externalReferences": [
													{
														"declaration": 1493,
														"isOffset": false,
														"isSlot": true,
														"src": "3867:6:11",
														"suffix": "slot",
														"valueSize": 1
													},
													{
														"declaration": 1489,
														"isOffset": false,
														"isSlot": false,
														"src": "3877:4:11",
														"valueSize": 1
													}
												],
												"flags": [
													"memory-safe"
												],
												"id": 1495,
												"nodeType": "InlineAssembly",
												"src": "3828:63:11"
											}
										]
									},
									"documentation": {
										"id": 1487,
										"nodeType": "StructuredDocumentation",
										"src": "3649:84:11",
										"text": " @dev Returns a `BytesSlot` with member `value` located at `slot`."
									},
									"id": 1497,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getBytesSlot",
									"nameLocation": "3747:12:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1490,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1489,
												"mutability": "mutable",
												"name": "slot",
												"nameLocation": "3768:4:11",
												"nodeType": "VariableDeclaration",
												"scope": 1497,
												"src": "3760:12:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1488,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "3760:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3759:14:11"
									},
									"returnParameters": {
										"id": 1494,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1493,
												"mutability": "mutable",
												"name": "r",
												"nameLocation": "3815:1:11",
												"nodeType": "VariableDeclaration",
												"scope": 1497,
												"src": "3797:19:11",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_BytesSlot_$1409_storage_ptr",
													"typeString": "struct StorageSlot.BytesSlot"
												},
												"typeName": {
													"id": 1492,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1491,
														"name": "BytesSlot",
														"nameLocations": [
															"3797:9:11"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1409,
														"src": "3797:9:11"
													},
													"referencedDeclaration": 1409,
													"src": "3797:9:11",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_BytesSlot_$1409_storage_ptr",
														"typeString": "struct StorageSlot.BytesSlot"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3796:21:11"
									},
									"scope": 1509,
									"src": "3738:159:11",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1507,
										"nodeType": "Block",
										"src": "4094:85:11",
										"statements": [
											{
												"AST": {
													"nativeSrc": "4129:44:11",
													"nodeType": "YulBlock",
													"src": "4129:44:11",
													"statements": [
														{
															"nativeSrc": "4143:20:11",
															"nodeType": "YulAssignment",
															"src": "4143:20:11",
															"value": {
																"name": "store.slot",
																"nativeSrc": "4153:10:11",
																"nodeType": "YulIdentifier",
																"src": "4153:10:11"
															},
															"variableNames": [
																{
																	"name": "r.slot",
																	"nativeSrc": "4143:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "4143:6:11"
																}
															]
														}
													]
												},
												"evmVersion": "prague",
												"externalReferences": [
													{
														"declaration": 1504,
														"isOffset": false,
														"isSlot": true,
														"src": "4143:6:11",
														"suffix": "slot",
														"valueSize": 1
													},
													{
														"declaration": 1500,
														"isOffset": false,
														"isSlot": true,
														"src": "4153:10:11",
														"suffix": "slot",
														"valueSize": 1
													}
												],
												"flags": [
													"memory-safe"
												],
												"id": 1506,
												"nodeType": "InlineAssembly",
												"src": "4104:69:11"
											}
										]
									},
									"documentation": {
										"id": 1498,
										"nodeType": "StructuredDocumentation",
										"src": "3903:99:11",
										"text": " @dev Returns an `BytesSlot` representation of the bytes storage pointer `store`."
									},
									"id": 1508,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getBytesSlot",
									"nameLocation": "4016:12:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1501,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1500,
												"mutability": "mutable",
												"name": "store",
												"nameLocation": "4043:5:11",
												"nodeType": "VariableDeclaration",
												"scope": 1508,
												"src": "4029:19:11",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_storage_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1499,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4029:5:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4028:21:11"
									},
									"returnParameters": {
										"id": 1505,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1504,
												"mutability": "mutable",
												"name": "r",
												"nameLocation": "4091:1:11",
												"nodeType": "VariableDeclaration",
												"scope": 1508,
												"src": "4073:19:11",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_BytesSlot_$1409_storage_ptr",
													"typeString": "struct StorageSlot.BytesSlot"
												},
												"typeName": {
													"id": 1503,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1502,
														"name": "BytesSlot",
														"nameLocations": [
															"4073:9:11"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1409,
														"src": "4073:9:11"
													},
													"referencedDeclaration": 1409,
													"src": "4073:9:11",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_BytesSlot_$1409_storage_ptr",
														"typeString": "struct StorageSlot.BytesSlot"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4072:21:11"
									},
									"scope": 1509,
									"src": "4007:172:11",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 1510,
							"src": "1407:2774:11",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "193:3989:11"
				},
				"id": 11
			},
			"contracts/RewardManager.sol": {
				"ast": {
					"absolutePath": "contracts/RewardManager.sol",
					"exportedSymbols": {
						"ContextUpgradeable": [
							690
						],
						"ERC1967Utils": [
							1015
						],
						"IERC1822Proxiable": [
							721
						],
						"IERC20": [
							1103
						],
						"Initializable": [
							462
						],
						"OwnableUpgradeable": [
							194
						],
						"RewardManager": [
							1711
						],
						"UUPSUpgradeable": [
							644
						]
					},
					"id": 1712,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1511,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "33:24:12"
						},
						{
							"absolutePath": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol",
							"file": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol",
							"id": 1512,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1712,
							"sourceUnit": 645,
							"src": "61:77:12",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol",
							"file": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol",
							"id": 1513,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1712,
							"sourceUnit": 463,
							"src": "140:75:12",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol",
							"file": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol",
							"id": 1514,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1712,
							"sourceUnit": 195,
							"src": "217:75:12",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"file": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"id": 1515,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1712,
							"sourceUnit": 1104,
							"src": "294:56:12",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 1516,
										"name": "Initializable",
										"nameLocations": [
											"382:13:12"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 462,
										"src": "382:13:12"
									},
									"id": 1517,
									"nodeType": "InheritanceSpecifier",
									"src": "382:13:12"
								},
								{
									"baseName": {
										"id": 1518,
										"name": "OwnableUpgradeable",
										"nameLocations": [
											"397:18:12"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 194,
										"src": "397:18:12"
									},
									"id": 1519,
									"nodeType": "InheritanceSpecifier",
									"src": "397:18:12"
								}
							],
							"canonicalName": "RewardManager",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 1711,
							"linearizedBaseContracts": [
								1711,
								194,
								690,
								462
							],
							"name": "RewardManager",
							"nameLocation": "365:13:12",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"functionSelector": "26232a2e",
									"id": 1521,
									"mutability": "mutable",
									"name": "platformFee",
									"nameLocation": "438:11:12",
									"nodeType": "VariableDeclaration",
									"scope": 1711,
									"src": "423:26:12",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1520,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "423:7:12",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "49880782",
									"id": 1523,
									"mutability": "mutable",
									"name": "maxRewardPoints",
									"nameLocation": "471:15:12",
									"nodeType": "VariableDeclaration",
									"scope": 1711,
									"src": "456:30:12",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1522,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "456:7:12",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "f7c618c1",
									"id": 1526,
									"mutability": "mutable",
									"name": "rewardToken",
									"nameLocation": "507:11:12",
									"nodeType": "VariableDeclaration",
									"scope": 1711,
									"src": "493:25:12",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_contract$_IERC20_$1103",
										"typeString": "contract IERC20"
									},
									"typeName": {
										"id": 1525,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 1524,
											"name": "IERC20",
											"nameLocations": [
												"493:6:12"
											],
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 1103,
											"src": "493:6:12"
										},
										"referencedDeclaration": 1103,
										"src": "493:6:12",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IERC20_$1103",
											"typeString": "contract IERC20"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "b1a5232e",
									"id": 1528,
									"mutability": "mutable",
									"name": "ucpiContract",
									"nameLocation": "540:12:12",
									"nodeType": "VariableDeclaration",
									"scope": 1711,
									"src": "525:27:12",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 1527,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "525:7:12",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "public"
								},
								{
									"anonymous": false,
									"eventSelector": "e34918ff1c7084970068b53fd71ad6d8b04e9f15d3886cbf006443e6cdc52ea6",
									"id": 1534,
									"name": "RewardDistributed",
									"nameLocation": "567:17:12",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1533,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1530,
												"indexed": true,
												"mutability": "mutable",
												"name": "user",
												"nameLocation": "601:4:12",
												"nodeType": "VariableDeclaration",
												"scope": 1534,
												"src": "585:20:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1529,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "585:7:12",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1532,
												"indexed": false,
												"mutability": "mutable",
												"name": "points",
												"nameLocation": "615:6:12",
												"nodeType": "VariableDeclaration",
												"scope": 1534,
												"src": "607:14:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1531,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "607:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "584:38:12"
									},
									"src": "561:62:12"
								},
								{
									"body": {
										"id": 1556,
										"nodeType": "Block",
										"src": "704:113:12",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 1544,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "730:3:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1545,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "734:6:12",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "730:10:12",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 1543,
														"name": "__Ownable_init",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 54,
														"src": "715:14:12",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 1546,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "715:26:12",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1547,
												"nodeType": "ExpressionStatement",
												"src": "715:26:12"
											},
											{
												"expression": {
													"id": 1550,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1548,
														"name": "platformFee",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1521,
														"src": "752:11:12",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1549,
														"name": "_fee",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1536,
														"src": "766:4:12",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "752:18:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1551,
												"nodeType": "ExpressionStatement",
												"src": "752:18:12"
											},
											{
												"expression": {
													"id": 1554,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1552,
														"name": "maxRewardPoints",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1523,
														"src": "781:15:12",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1553,
														"name": "_maxPoints",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1538,
														"src": "799:10:12",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "781:28:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1555,
												"nodeType": "ExpressionStatement",
												"src": "781:28:12"
											}
										]
									},
									"functionSelector": "e4a30116",
									"id": 1557,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1541,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1540,
												"name": "initializer",
												"nameLocations": [
													"692:11:12"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 302,
												"src": "692:11:12"
											},
											"nodeType": "ModifierInvocation",
											"src": "692:11:12"
										}
									],
									"name": "initialize",
									"nameLocation": "640:10:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1539,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1536,
												"mutability": "mutable",
												"name": "_fee",
												"nameLocation": "659:4:12",
												"nodeType": "VariableDeclaration",
												"scope": 1557,
												"src": "651:12:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1535,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "651:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1538,
												"mutability": "mutable",
												"name": "_maxPoints",
												"nameLocation": "673:10:12",
												"nodeType": "VariableDeclaration",
												"scope": 1557,
												"src": "665:18:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1537,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "665:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "650:34:12"
									},
									"returnParameters": {
										"id": 1542,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "704:0:12"
									},
									"scope": 1711,
									"src": "631:186:12",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1568,
										"nodeType": "Block",
										"src": "884:39:12",
										"statements": [
											{
												"expression": {
													"id": 1566,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1564,
														"name": "ucpiContract",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1528,
														"src": "895:12:12",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1565,
														"name": "_ucpi",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1559,
														"src": "910:5:12",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "895:20:12",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 1567,
												"nodeType": "ExpressionStatement",
												"src": "895:20:12"
											}
										]
									},
									"functionSelector": "fe95fc1a",
									"id": 1569,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1562,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1561,
												"name": "onlyOwner",
												"nameLocations": [
													"874:9:12"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 89,
												"src": "874:9:12"
											},
											"nodeType": "ModifierInvocation",
											"src": "874:9:12"
										}
									],
									"name": "setUCPIContract",
									"nameLocation": "834:15:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1560,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1559,
												"mutability": "mutable",
												"name": "_ucpi",
												"nameLocation": "858:5:12",
												"nodeType": "VariableDeclaration",
												"scope": 1569,
												"src": "850:13:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1558,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "850:7:12",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "849:15:12"
									},
									"returnParameters": {
										"id": 1563,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "884:0:12"
									},
									"scope": 1711,
									"src": "825:98:12",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1582,
										"nodeType": "Block",
										"src": "990:47:12",
										"statements": [
											{
												"expression": {
													"id": 1580,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1576,
														"name": "rewardToken",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1526,
														"src": "1001:11:12",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IERC20_$1103",
															"typeString": "contract IERC20"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 1578,
																"name": "_token",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1571,
																"src": "1022:6:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"id": 1577,
															"name": "IERC20",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1103,
															"src": "1015:6:12",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_IERC20_$1103_$",
																"typeString": "type(contract IERC20)"
															}
														},
														"id": 1579,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1015:14:12",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IERC20_$1103",
															"typeString": "contract IERC20"
														}
													},
													"src": "1001:28:12",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$1103",
														"typeString": "contract IERC20"
													}
												},
												"id": 1581,
												"nodeType": "ExpressionStatement",
												"src": "1001:28:12"
											}
										]
									},
									"functionSelector": "8aee8127",
									"id": 1583,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1574,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1573,
												"name": "onlyOwner",
												"nameLocations": [
													"980:9:12"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 89,
												"src": "980:9:12"
											},
											"nodeType": "ModifierInvocation",
											"src": "980:9:12"
										}
									],
									"name": "setRewardToken",
									"nameLocation": "940:14:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1572,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1571,
												"mutability": "mutable",
												"name": "_token",
												"nameLocation": "963:6:12",
												"nodeType": "VariableDeclaration",
												"scope": 1583,
												"src": "955:14:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1570,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "955:7:12",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "954:16:12"
									},
									"returnParameters": {
										"id": 1575,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "990:0:12"
									},
									"scope": 1711,
									"src": "931:106:12",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1600,
										"nodeType": "Block",
										"src": "1072:109:12",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 1595,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																"id": 1590,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"expression": {
																		"id": 1586,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967281,
																		"src": "1091:3:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 1587,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "1095:6:12",
																	"memberName": "sender",
																	"nodeType": "MemberAccess",
																	"src": "1091:10:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "==",
																"rightExpression": {
																	"arguments": [],
																	"expression": {
																		"argumentTypes": [],
																		"id": 1588,
																		"name": "owner",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 105,
																		"src": "1105:5:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																			"typeString": "function () view returns (address)"
																		}
																	},
																	"id": 1589,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "1105:7:12",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"src": "1091:21:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "||",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																"id": 1594,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"expression": {
																		"id": 1591,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967281,
																		"src": "1116:3:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 1592,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "1120:6:12",
																	"memberName": "sender",
																	"nodeType": "MemberAccess",
																	"src": "1116:10:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "==",
																"rightExpression": {
																	"id": 1593,
																	"name": "ucpiContract",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1528,
																	"src": "1130:12:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"src": "1116:26:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "1091:51:12",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4e6f7420617574686f72697a6564",
															"id": 1596,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1144:16:12",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_fac3bac318c0d00994f57b0f2f4c643c313072b71db2302bf4b900309cc50b36",
																"typeString": "literal_string \"Not authorized\""
															},
															"value": "Not authorized"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_fac3bac318c0d00994f57b0f2f4c643c313072b71db2302bf4b900309cc50b36",
																"typeString": "literal_string \"Not authorized\""
															}
														],
														"id": 1585,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1083:7:12",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1597,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1083:78:12",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1598,
												"nodeType": "ExpressionStatement",
												"src": "1083:78:12"
											},
											{
												"id": 1599,
												"nodeType": "PlaceholderStatement",
												"src": "1172:1:12"
											}
										]
									},
									"id": 1601,
									"name": "onlyUCPIOrOwner",
									"nameLocation": "1054:15:12",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 1584,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1069:2:12"
									},
									"src": "1045:136:12",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1656,
										"nodeType": "Block",
										"src": "1288:351:12",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 1618,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1613,
																"name": "user",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1603,
																"src": "1307:4:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 1616,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1323:1:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 1615,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "1315:7:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 1614,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "1315:7:12",
																		"typeDescriptions": {}
																	}
																},
																"id": 1617,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1315:10:12",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "1307:18:12",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "43616e6e6f7420726577617264207a65726f2061646472657373",
															"id": 1619,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1327:28:12",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_2321cd843e90d2b7a10272ea91ea7fc0cce1a354f8fe8bd4066914e3f5ab40a2",
																"typeString": "literal_string \"Cannot reward zero address\""
															},
															"value": "Cannot reward zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_2321cd843e90d2b7a10272ea91ea7fc0cce1a354f8fe8bd4066914e3f5ab40a2",
																"typeString": "literal_string \"Cannot reward zero address\""
															}
														],
														"id": 1612,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1299:7:12",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1620,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1299:57:12",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1621,
												"nodeType": "ExpressionStatement",
												"src": "1299:57:12"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1625,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1623,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1605,
																"src": "1375:6:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1624,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1384:1:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "1375:10:12",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416d6f756e74206d757374206265203e2030",
															"id": 1626,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1387:20:12",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_01c242f1c806840acb94ec05d87d4647010419c53a053a581e0026b3f6467dbb",
																"typeString": "literal_string \"Amount must be > 0\""
															},
															"value": "Amount must be > 0"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_01c242f1c806840acb94ec05d87d4647010419c53a053a581e0026b3f6467dbb",
																"typeString": "literal_string \"Amount must be > 0\""
															}
														],
														"id": 1622,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1367:7:12",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1627,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1367:41:12",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1628,
												"nodeType": "ExpressionStatement",
												"src": "1367:41:12"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1638,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"id": 1634,
																				"name": "this",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967268,
																				"src": "1457:4:12",
																				"typeDescriptions": {
																					"typeIdentifier": "t_contract$_RewardManager_$1711",
																					"typeString": "contract RewardManager"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_contract$_RewardManager_$1711",
																					"typeString": "contract RewardManager"
																				}
																			],
																			"id": 1633,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "1449:7:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 1632,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "1449:7:12",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 1635,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "1449:13:12",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"expression": {
																		"id": 1630,
																		"name": "rewardToken",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1526,
																		"src": "1427:11:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC20_$1103",
																			"typeString": "contract IERC20"
																		}
																	},
																	"id": 1631,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "1439:9:12",
																	"memberName": "balanceOf",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1060,
																	"src": "1427:21:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
																		"typeString": "function (address) view external returns (uint256)"
																	}
																},
																"id": 1636,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1427:36:12",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 1637,
																"name": "reward",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1607,
																"src": "1467:6:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1427:46:12",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "496e73756666696369656e74207265776172642062616c616e6365",
															"id": 1639,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1475:29:12",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_574d622dc10d84c5717ad27f807ec76bf0ff5f3560e02149020a00f76077cde0",
																"typeString": "literal_string \"Insufficient reward balance\""
															},
															"value": "Insufficient reward balance"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_574d622dc10d84c5717ad27f807ec76bf0ff5f3560e02149020a00f76077cde0",
																"typeString": "literal_string \"Insufficient reward balance\""
															}
														],
														"id": 1629,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1419:7:12",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1640,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1419:86:12",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1641,
												"nodeType": "ExpressionStatement",
												"src": "1419:86:12"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 1645,
																	"name": "user",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1603,
																	"src": "1545:4:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 1646,
																	"name": "reward",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1607,
																	"src": "1551:6:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"id": 1643,
																	"name": "rewardToken",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1526,
																	"src": "1524:11:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC20_$1103",
																		"typeString": "contract IERC20"
																	}
																},
																"id": 1644,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "1536:8:12",
																"memberName": "transfer",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 1070,
																"src": "1524:20:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																	"typeString": "function (address,uint256) external returns (bool)"
																}
															},
															"id": 1647,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1524:34:12",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "546f6b656e207472616e73666572206661696c6564",
															"id": 1648,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1560:23:12",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_74c7d57a908ebeca4ca501d4682067d5006fafb2a418959e98aa45be0419cba4",
																"typeString": "literal_string \"Token transfer failed\""
															},
															"value": "Token transfer failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_74c7d57a908ebeca4ca501d4682067d5006fafb2a418959e98aa45be0419cba4",
																"typeString": "literal_string \"Token transfer failed\""
															}
														],
														"id": 1642,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1516:7:12",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1649,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1516:68:12",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1650,
												"nodeType": "ExpressionStatement",
												"src": "1516:68:12"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 1652,
															"name": "user",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1603,
															"src": "1618:4:12",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1653,
															"name": "reward",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1607,
															"src": "1624:6:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1651,
														"name": "RewardDistributed",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1534,
														"src": "1600:17:12",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 1654,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1600:31:12",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1655,
												"nodeType": "EmitStatement",
												"src": "1595:36:12"
											}
										]
									},
									"functionSelector": "de5b71f7",
									"id": 1657,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1610,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1609,
												"name": "onlyUCPIOrOwner",
												"nameLocations": [
													"1272:15:12"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1601,
												"src": "1272:15:12"
											},
											"nodeType": "ModifierInvocation",
											"src": "1272:15:12"
										}
									],
									"name": "distributeReward",
									"nameLocation": "1200:16:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1608,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1603,
												"mutability": "mutable",
												"name": "user",
												"nameLocation": "1225:4:12",
												"nodeType": "VariableDeclaration",
												"scope": 1657,
												"src": "1217:12:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1602,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1217:7:12",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1605,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "1239:6:12",
												"nodeType": "VariableDeclaration",
												"scope": 1657,
												"src": "1231:14:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1604,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1231:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1607,
												"mutability": "mutable",
												"name": "reward",
												"nameLocation": "1255:6:12",
												"nodeType": "VariableDeclaration",
												"scope": 1657,
												"src": "1247:14:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1606,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1247:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1216:46:12"
									},
									"returnParameters": {
										"id": 1611,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1288:0:12"
									},
									"scope": 1711,
									"src": "1191:448:12",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1709,
										"nodeType": "Block",
										"src": "1737:358:12",
										"statements": [
											{
												"assignments": [
													1667
												],
												"declarations": [
													{
														"constant": false,
														"id": 1667,
														"mutability": "mutable",
														"name": "baseReward",
														"nameLocation": "1756:10:12",
														"nodeType": "VariableDeclaration",
														"scope": 1709,
														"src": "1748:18:12",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1666,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "1748:7:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1673,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1672,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1670,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 1668,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1659,
															"src": "1769:6:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "*",
														"rightExpression": {
															"id": 1669,
															"name": "platformFee",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1521,
															"src": "1778:11:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "1769:20:12",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "/",
													"rightExpression": {
														"hexValue": "3130303030",
														"id": 1671,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1792:5:12",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_10000_by_1",
															"typeString": "int_const 10000"
														},
														"value": "10000"
													},
													"src": "1769:28:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1748:49:12"
											},
											{
												"assignments": [
													1675
												],
												"declarations": [
													{
														"constant": false,
														"id": 1675,
														"mutability": "mutable",
														"name": "bonus",
														"nameLocation": "1872:5:12",
														"nodeType": "VariableDeclaration",
														"scope": 1709,
														"src": "1864:13:12",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1674,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "1864:7:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1695,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1694,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"arguments": [
															{
																"arguments": [
																	{
																		"arguments": [
																			{
																				"id": 1681,
																				"name": "user",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1661,
																				"src": "1915:4:12",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			{
																				"expression": {
																					"id": 1682,
																					"name": "block",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 4294967292,
																					"src": "1921:5:12",
																					"typeDescriptions": {
																						"typeIdentifier": "t_magic_block",
																						"typeString": "block"
																					}
																				},
																				"id": 1683,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberLocation": "1927:9:12",
																				"memberName": "timestamp",
																				"nodeType": "MemberAccess",
																				"src": "1921:15:12",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			{
																				"id": 1684,
																				"name": "amount",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1659,
																				"src": "1938:6:12",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				},
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			],
																			"expression": {
																				"id": 1679,
																				"name": "abi",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967295,
																				"src": "1898:3:12",
																				"typeDescriptions": {
																					"typeIdentifier": "t_magic_abi",
																					"typeString": "abi"
																				}
																			},
																			"id": 1680,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"memberLocation": "1902:12:12",
																			"memberName": "encodePacked",
																			"nodeType": "MemberAccess",
																			"src": "1898:16:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
																				"typeString": "function () pure returns (bytes memory)"
																			}
																		},
																		"id": 1685,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "1898:47:12",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	],
																	"id": 1678,
																	"name": "keccak256",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967288,
																	"src": "1888:9:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
																		"typeString": "function (bytes memory) pure returns (bytes32)"
																	}
																},
																"id": 1686,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1888:58:12",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															],
															"id": 1677,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "1880:7:12",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_uint256_$",
																"typeString": "type(uint256)"
															},
															"typeName": {
																"id": 1676,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "1880:7:12",
																"typeDescriptions": {}
															}
														},
														"id": 1687,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1880:67:12",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "%",
													"rightExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1692,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1690,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1688,
																		"name": "baseReward",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1667,
																		"src": "1951:10:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "/",
																	"rightExpression": {
																		"hexValue": "313030",
																		"id": 1689,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1964:3:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_100_by_1",
																			"typeString": "int_const 100"
																		},
																		"value": "100"
																	},
																	"src": "1951:16:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "+",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 1691,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1970:1:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "1951:20:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 1693,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "1950:22:12",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1880:92:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1864:108:12"
											},
											{
												"assignments": [
													1697
												],
												"declarations": [
													{
														"constant": false,
														"id": 1697,
														"mutability": "mutable",
														"name": "reward",
														"nameLocation": "1991:6:12",
														"nodeType": "VariableDeclaration",
														"scope": 1709,
														"src": "1983:14:12",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1696,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "1983:7:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1701,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1700,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1698,
														"name": "baseReward",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1667,
														"src": "2000:10:12",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"id": 1699,
														"name": "bonus",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1675,
														"src": "2013:5:12",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2000:18:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1983:35:12"
											},
											{
												"expression": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1704,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 1702,
															"name": "reward",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1697,
															"src": "2036:6:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">",
														"rightExpression": {
															"id": 1703,
															"name": "maxRewardPoints",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1523,
															"src": "2045:15:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "2036:24:12",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"id": 1706,
														"name": "reward",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1697,
														"src": "2081:6:12",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1707,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "2036:51:12",
													"trueExpression": {
														"id": 1705,
														"name": "maxRewardPoints",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1523,
														"src": "2063:15:12",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1665,
												"id": 1708,
												"nodeType": "Return",
												"src": "2029:58:12"
											}
										]
									},
									"functionSelector": "a18f07a0",
									"id": 1710,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "calculateReward",
									"nameLocation": "1659:15:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1662,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1659,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "1683:6:12",
												"nodeType": "VariableDeclaration",
												"scope": 1710,
												"src": "1675:14:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1658,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1675:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1661,
												"mutability": "mutable",
												"name": "user",
												"nameLocation": "1699:4:12",
												"nodeType": "VariableDeclaration",
												"scope": 1710,
												"src": "1691:12:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1660,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1691:7:12",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1674:30:12"
									},
									"returnParameters": {
										"id": 1665,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1664,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1710,
												"src": "1728:7:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1663,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1728:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1727:9:12"
									},
									"scope": 1711,
									"src": "1650:445:12",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1712,
							"src": "356:1742:12",
							"usedErrors": [
								30,
								35,
								211,
								214
							],
							"usedEvents": [
								41,
								219,
								1534
							]
						}
					],
					"src": "33:2067:12"
				},
				"id": 12
			}
		}
	}
}